---- checked by AR till drive_V in the BNC order

concrete DictionaryFre of Dictionary = CatFre ** open 
  ParadigmsFre,
  (P = ParadigmsFre),
  (S = SyntaxFre),
  (L = LexiconFre),
  (I = IrregFre),
  (E = ExtraFre),
  (E = ExtraFre),
  (Ph = PhonoFre),
  (R = ResFre),
  (M = MakeStructuralFre),
  MorphoFre, 
  Prelude in {

oper
  mkInterj : Str -> Interj = \s -> lin Interj (ss s) ;
  mkConj : Str -> Conj = \s -> lin Conj {s1 = [] ; s2 = s ; n = Pl} ;
  mkDet = overload {
    mkDet : Str -> Det = \s -> lin Det {s,sp = \\_,c => prepCase c ++ s ; n = Sg ; s2 = [] ; isNeg = False} ;
    mkDet : Str -> Str -> Number -> Det = \m,f,n -> lin Det {
      s,sp = \\g,c => prepCase c ++ case g of {Masc => m ; Fem => f} ; n = n ; s2 = [] ; isNeg = False
      } ;
    } ;
  oper adjAdv : A -> Adv = \a -> S.mkAdv a ;

oper mkvVS : Str -> VS = \s -> mkVS (mkV s) ;
oper mkvVV : Str -> VV = \s -> mkVV (mkV s) ;

oper prepV2 : V -> Prep -> V2 = \v,p -> mkV2 v p ;
oper advV : V -> Adv -> V = \v,a -> mkV v a.s ;

lin a_priori_Adv = mkAdv "a_priori" ; -- UWN
lin aachen_PN = mkPN "Aix-la-Chapelle" ; -- status=guess src=geonames
lin aardvark_N = mkN "oryctérope" masculine ; -- tocheck
lin aardwolf_N = mkN "protèle" masculine ; -- tocheck
lin ab_initio_Adv = mkAdv "d'abord" | mkAdv "initialement" | mkAdv "originairement" ; -- UWN
lin abaca_N = mkN "abaca" masculine ; -- tocheck
lin abacus_N = mkN "abaque" masculine | mkN "abaque" feminine ; -- tocheck
lin abalone_N = mkN "ormeau" masculine ; -- tocheck
lin abandon_N = mkN "abandonner" ; -- UWN
lin abandon_V2 = mkV2 (mkV "abandonner") ; -- tocheck
lin abandonment_N = mkN "abandon" masculine ; -- tocheck
lin abase_V2 = mkV2 (mkV "baisser") ; -- tocheck
lin abasement_N = mkN "humiliation" feminine ; -- tocheck
lin abash_V2 = mkV2 (mkV I.confondre_V2) ; -- tocheck
lin abashment_N = mkN "embarras" ; -- UWN
lin abasia_N = mkN "abasie" ; -- tocheck
lin abate_V2 = mkV2 (mkV I.réduire_V2) | mkV2 (mkV "cesser") | mkV2 (mkV I.rabattre_V2) | mkV2 (mkV "amoindrir") | mkV2 (mkV I.déduire_V2) ; -- tocheck
lin abatement_N = mkN "réduction" feminine ; -- tocheck
lin abattoir_N = mkN "abattoir" masculine ; -- tocheck
lin abaxial_A = mkA "abaxial" ; -- UWN
lin abaya_N = mkN "Abaya" | mkN "abaya" ; -- UWN
lin abbacy_N = mkN "abbatiat" masculine ; -- tocheck
lin abbatial_A = mkA "abbatial" ; -- tocheck
lin abbess_N = mkN "abbesse" feminine ; -- tocheck
lin abbey_N = mkN "abbaye" feminine ; -- tocheck
lin abbot_N = mkN "abbé" masculine ; -- tocheck
lin abbreviate_V2 = mkV2 (mkV "abréger") ; -- tocheck
lin abbreviation_N = mkN "abréviation" feminine ; -- tocheck
lin abdicate_V = mkV "abdiquer" | mkV "abjurer" ; -- UWN
lin abdicate_V2 = mkV2 (mkV "abdiquer") ; -- tocheck
lin abdication_N = mkN "abdication" feminine ; -- tocheck
lin abdomen_N = mkN "abdomen" masculine ; -- tocheck
lin abdominal_A = mkA "abdominal" ; -- tocheck
lin abdominal_N = mkN "ab" | mkN "abdo" | mkN "abdominal" | mkN "mat" ; -- UWN
lin abdominocentesis_N = mkN "abdominocentèse" feminine ; -- tocheck
lin abdominous_A = mkA "ventru" ; -- tocheck
lin abduct_V2 = mkV2 (mkV "enlever") ; -- tocheck
lin abduction_N = mkN "abduction" feminine | mkN "enlèvement" masculine | mkN "rapt" masculine ; -- tocheck
lin abductor_N = mkN "abducteur" masculine ; -- tocheck
lin abelia_N = mkN "abelia" ; -- UWN
lin abelmosk_N = mkN "ambrette" feminine ; -- tocheck
lin abercarn_PN = mkPN "Abercarn" ; -- status=guess src=geonames
lin aberdare_PN = mkPN "Aberdare" ; -- status=guess src=geonames
lin aberdeen_PN = mkPN "Aberdeen" ; -- status=guess src=geonames
lin abergavenny_PN = mkPN "Abergavenny" ; -- status=guess src=geonames
lin abergele_PN = mkPN "Abergele" ; -- status=guess src=geonames
lin aberrance_N = mkN "aberrance" feminine ; -- tocheck
lin aberrant_A = mkA "aberrant" ; -- tocheck
lin aberrant_N = mkN "aberrant" ; -- UWN
lin aberration_N = mkN "aberration" ; -- tocheck
lin abertillery_PN = mkPN "Abertillery" ; -- status=guess src=geonames
lin aberystwyth_PN = mkPN "Aberystwyth" ; -- status=guess src=geonames
lin abet_V2 = mkV2 (mkV "encourager") ; -- tocheck
lin abetment_N = mkN "incitation" ; -- UWN
lin abettor_N = mkN "complice" ; -- tocheck
lin abeyance_N = mkN "vacance" feminine ; -- tocheck
lin abeyant_A = mkA "inactif" ; -- UWN
lin abhor_V2 = mkV2 (mkV "détester") ; -- tocheck
lin abhorrence_N = mkN "horreur" masculine ; -- tocheck
lin abhorrent_A = mkA "répugnant" ; -- tocheck
lin abide_V = mkV "accomplir" | mkV "atteindre" | mkV "continuer" | mkV "demeurer" | mkV "endurer" | mkV "observer" | mkV "porter" | mkV "prêter" | mkV "respecter" | mkV "rester" | mkV "souffrir" | mkV "soutenir" | mkV "subir" | mkV "supporter" | mkV "tolérer" ; -- UWN
lin abide_V2 = mkV2 (mkV "demeurer") | mkV2 (mkV "tolérer") ; -- tocheck
lin ability_N = mkN "habileté" feminine | mkN "capacité" feminine ; -- tocheck
lin abingdon_PN = mkPN "Abingdon" ; -- status=guess src=geonames
lin abiogenesis_N = mkN "abiogenèse" feminine ; -- tocheck
lin abject_A = mkA "abject" | mkA "misérable" ; -- tocheck
lin abjection_N = mkN "abaissement" | mkN "abjection" | mkN "dégradation" ; -- UWN
lin abjuration_N = mkN "abjuration" | mkN "abnégation" ; -- UWN
lin abjure_V2 = mkV2 (mkV "abjurer") ; -- tocheck
lin ablactation_N = mkN "sevrage" masculine ; -- tocheck
lin ablation_N = mkN "ablation" | mkN "extirpation" ; -- UWN
lin ablative_A = mkA "ablatif" ; -- tocheck
lin ablative_N = mkN "ablatif" masculine ; -- tocheck
lin ablaut_N = mkN "apophonie" feminine ; -- tocheck
lin ablaze_A = mkA "embrasé" ; -- tocheck
lin able_A = mkA "capable" ;
lin ablution_N = mkN "ablution" feminine ; -- tocheck
lin abnegation_N = mkN "abnégation" feminine ; -- tocheck
lin abnormal_A = mkA "inhabituel" | mkA "anormal" ; -- tocheck
lin abnormality_N = mkN "anomalie" feminine ; -- tocheck
lin aboard_Adv = mkAdv "en" | mkAdv "à_bord_de" ; -- UWN
lin abode_N = mkN "demeure" ; -- tocheck
lin abolish_V2 = mkV2 (mkV "abolir") | mkV2 (mkV I.détruire_V2) ; -- tocheck
lin abolition_N = mkN "abolition" feminine ; -- tocheck
lin abolitionism_N = mkN "abolitionnisme" masculine ; -- tocheck
lin abolitionist_N = mkN "abolitionniste" ; -- tocheck
lin abomasum_N = mkN "abomasum" | mkN "caillette" ; -- UWN
lin abominable_A = mkA "abominable" ; -- tocheck
lin abominate_V2 = mkV2 (mkV "détester") ; -- tocheck
lin abomination_N = mkN "abomination" feminine ; -- tocheck
lin aboriginal_A = mkA "indigène" ; -- tocheck
lin aborigine_N = mkN "aborigène" ; -- tocheck
lin abort_N = mkN "avorton" masculine ; -- tocheck
lin abort_V2 = mkV2 (mkV I.interrompre_V2) | mkV2 (mkV "avorter") ; -- tocheck
lin abortifacient_A = mkA "abortif" ; -- tocheck
lin abortifacient_N = mkN "abortif" masculine ; -- tocheck
lin abortion_N = mkN "avortement" masculine | mkN "avorton" masculine ; -- tocheck
lin abortionistFem_N = mkN "avorteur" ; -- UWN
lin abortionistMasc_N = mkN "avorteur" ; -- UWN
lin abortive_A = mkA "abortif" | mkA "infructueux" | mkA "mort-né" | mkA "prématuré" ; -- UWN
lin abound_V = mkV (mkV "foisonner") | mkV (mkV "abonder") ; -- tocheck
lin about_Adv = mkAdv "environ" ;
lin about_Prep = mkPrep "sur" ;
lin above_A = mkA "au-dessus" ; -- UWN
lin above_Adv = mkAdv "au-dessus" | mkAdv "pair" ; -- tocheck
lin above_Prep = S.above_Prep ;
lin above_mentioned_A = mkA "susmentionné" ; -- tocheck
lin abracadabra_N = mkN "abracadabra" | mkN "baragouin" ; -- UWN
lin abrade_V2 = mkV2 (mkV "abraser") ; -- tocheck
lin abrasion_N = mkN "abrasion" feminine ; -- tocheck
lin abrasive_A = mkA "abrasif" ; -- tocheck
lin abridge_V2 = mkV2 (mkV "abréger") ; -- tocheck
lin abridgement_N = mkN "abréviation" | mkN "capsule" | mkN "condensation" | mkN "raccourcissement" ; -- UWN -- tocheck
lin abroad_Adv = variants {} ; --
lin abrocome_N = mkN "abrocomidae" ; -- UWN
lin abrogation_N = mkN "abolition" | mkN "abrogation" | mkN "annulation" ; -- UWN
lin abrupt_A = mkA "brusque" | mkA "abrupt" ; -- tocheck
lin abscess_N = mkN "abcès" masculine ; -- tocheck
lin abscissa_N = mkN "abscisse" feminine ; -- tocheck
lin absence_N = mkN "absence" feminine | mkN "absence" ; -- tocheck
lin absent_A = mkA "absent" ; -- tocheck
lin absent_V2 = mkV2 (reflV (mkV "absenter")) P.genitive ; -- tocheck
lin absent_minded_A = mkA "distrait" ; -- tocheck
lin absentee_N = mkN "absent" masculine ; -- tocheck
lin absenteeism_N = mkN "absentéisme" ; -- UWN
lin absinthe_N = mkN "absinthe" masculine ; -- tocheck
lin absolute_A = mkA "absolu" ; -- tocheck
lin absolute_N = mkN "absolu" masculine ; -- tocheck
lin absolution_N = mkN "acquittement" | mkN "rémission" ; -- UWN
lin absolutism_N = mkN "absolutisme" ; -- tocheck
lin absolutist_A = mkA "absolutiste" ; -- UWN
lin absolve_V2 = mkV2 (mkV I.absoudre_V2) ; -- tocheck
lin absorb_V2 = mkV2 (mkV "absorber") ; -- tocheck
lin absorbency_N = mkN "absorbance" feminine ; -- tocheck
lin absorbent_A = mkA "absorbant" ; -- tocheck
lin absorbent_N = mkN "absorbant" masculine ; -- tocheck
lin absorber_N = mkN "absorbant" masculine ; -- tocheck
lin absorption_N = mkN "absorption" feminine ; -- tocheck
lin absorptivity_N = mkN "absorptivité" ; -- UWN
lin abstain_V = mkV (reflV (mkV I.abstenir_V)) ; -- tocheck
lin abstemious_A = mkA "tempérant" ; -- UWN
lin abstention_N = mkN "abstention" feminine ; -- tocheck
lin abstinence_N = mkN "abstinence" feminine ; -- tocheck
lin abstract_A = mkA "abstrait" ; -- tocheck
lin abstract_N = mkN "résumé" masculine ; -- tocheck
lin abstract_V2 = mkV2 (mkV I.abstraire_V2) ; -- tocheck
lin abstractedness_N = mkN "abstraction" ; -- UWN
lin abstraction_N = mkN "abstraction" feminine ; -- tocheck
lin abstractionism_N = mkN "abstractionnisme" ; -- tocheck
lin abstractionist_N = mkN "idéaliste" | mkN "abstractionniste" ; -- tocheck
lin abstruseness_N = mkN "obscurité" ; -- UWN
lin absurd_A = mkA "absurde" ; -- tocheck
lin abulia_N = mkN "aboulie" feminine ; -- tocheck
lin abundance_N = mkN "abondance" ; -- tocheck
lin abundant_A = mkA "abondant" ; -- tocheck
lin abuse_N = mkN "abus" masculine | mkN "viol" masculine ; -- tocheck
lin abuse_V2 = mkV2 (mkV "abuser") ; -- tocheck
lin abusive_A = mkA "abusif" ; -- UWN
lin abut_V = mkV (mkV "aboutir") ; -- tocheck
lin abutment_N = mkN "butée" ; -- tocheck
lin abysm_N = mkN "abime" | mkN "abyss" | mkN "abysse" | mkN "abîme" | mkN "gouffre" | mkN "gueule" | mkN "précipice" ; -- UWN
lin abysmal_A = mkA "abyssal" ; -- tocheck
lin abyss_N = mkN "précipice" masculine ; -- tocheck
lin acacia_N = mkN "acacia" masculine ; -- tocheck
lin academia_N = mkN "Académicien" | mkN "académicien" ; -- UWN
lin academic_A = mkA "académique" ; -- tocheck
lin academic_N = mkN "universitaire" masculine ; -- tocheck
lin academicianFem_N = mkN "académicienne" feminine ; -- tocheck
lin academicianMasc_N = mkN "académicien" masculine ; -- tocheck
lin academy_N = mkN "académie" feminine ; -- tocheck
lin acanthocephalan_N = mkN "acanthocéphale" ; -- UWN
lin acanthus_N = mkN "acanthe" | mkN "acanthus" ; -- UWN
lin acariasis_N = mkN "acariose" ; -- UWN
lin acaricide_N = mkN "acaricide" ; -- UWN
lin acarophobia_N = mkN "acarophobie" feminine ; -- tocheck
lin accelerate_V = variants {} ; -- mkV2 (mkV "accélérer") ; -- tocheck
lin accelerate_V2 = mkV2 (mkV "accélérer") ; -- tocheck
lin acceleration_N = mkN "accélération" feminine ; -- tocheck
lin accelerative_A = mkA "accélérateur" ; -- UWN
lin accelerator_N = mkN "accélérateur" masculine ; -- tocheck
lin accelerometer_N = mkN "accéléromètre" ; -- UWN
lin accent_N = mkN "accent" masculine ; -- tocheck
lin accent_V2 = mkV2 (mkV "accentuer") ; -- tocheck
lin accentor_N = mkN "accenteur" masculine ; -- tocheck
lin accentuate_V2 = mkV2 (mkV "accentuer") ; -- tocheck
lin accept_V = mkV "accepter" ;
lin accept_V2 = mkV2 (mkV "accepter") | mkV2 (mkV I.accueillir_V2) ;
lin accept_VS = mkVS (mkV "accepter") ;
lin acceptability_N = mkN "acceptabilité" ; -- UWN
lin acceptable_A = mkA "acceptable" ; -- tocheck
lin acceptance_N = mkN "acceptation" feminine ; -- tocheck
lin acceptor_N = mkN "accepteur" masculine ; -- tocheck
lin access_N = mkN "approche" | mkN "accès" masculine ; -- tocheck
lin access_V2 = mkV2 (mkV "accéder") ; -- tocheck
lin accessary_A = mkA "accessoire" | mkA "ancillaire" | mkA "auxiliaire" | mkA "secondaire" | mkA "subordonné" ; -- UWN
lin accessary_N = mkN "complice" | mkN "partenaire" ; -- UWN
lin accessibility_N = mkN "accessibilité" feminine ; -- tocheck
lin accessible_A = mkA "accessible" ; -- tocheck
lin accession_N = mkN "accession" feminine ; -- tocheck
lin accessory_A = mkA "accessoire" ; -- tocheck
lin accessory_N = mkN "accessoire" masculine ; -- tocheck
lin accidence_N = mkN "hasard" ; -- UWN
lin accident_N = mkN "accident" masculine ; -- tocheck
lin accidental_A = mkA "accidentel" ; -- tocheck
lin accidental_N = mkN "accidentel" ; -- UWN
lin acclaim_N = mkN "acclamation" | mkN "agrément" ; -- UWN
lin acclaim_V2 = mkV2 (mkV "acclamer") | mkV2 (mkV "déclamer") ; -- tocheck
lin acclamation_N = mkN "acclamation" ; -- tocheck
lin acclimate_V2 = mkV2 (mkV "acclimater") ; -- tocheck
lin acclimation_N = mkN "acclimatation" | mkN "acclimatement" ; -- UWN
lin acclimatization_N = mkN "acclimatation" feminine ; -- tocheck
lin acclimatize_V2 = mkV2 (mkV "acclimater") ; -- tocheck
lin acclivity_N = mkN "côte" | mkN "hausser" | mkN "lever" | mkN "monter" ; -- UWN
lin accolade_N = mkN "accolade" | mkN "distinction" | mkN "honneur" | mkN "honorer" | mkN "prix" ; -- UWN
lin accommodate_V = variants {} ; -- mkV2 (mkV "accommoder") ; -- tocheck
lin accommodate_V2 = mkV2 (mkV "accommoder") ; -- tocheck
lin accommodation_N = mkN "hébergement" | mkN "accommodation" ; -- tocheck
lin accompaniment_N = mkN "accompagnement" | mkN "accompagnement" masculine ; -- tocheck
lin accompanist_N = mkN "accompagnateur" | mkN "compagnon" ; -- UWN
lin accompany_V2 = mkV2 (mkV "accompagner") ; -- tocheck
lin accomplice_N = mkN "complice" ; -- tocheck
lin accomplish_V2 = mkV2 (mkV "accomplir") ; -- tocheck
lin accomplishable_A = mkA "faisable" | mkA "pinocumettable" | mkA "réussissable" ; -- UWN
lin accomplishment_N = mkN "accomplissement" masculine ; -- tocheck
lin accord_N = mkN "entente" feminine ; -- tocheck
lin accord_V = mkV "accorder" | mkV "allouer" | mkV "attribuer" | mkV "octroyer" ; -- UWN
lin accordance_N = mkN "accordance" feminine ; -- tocheck
lin according_to_Prep = mkPrep "selon" ;
lin accordingly_Adv = variants {} ; --
lin accordion_N = mkN "accordéon" masculine ; -- tocheck
lin accordionist_N = mkN "accordéoniste" ; -- tocheck
lin accost_V2 = mkV2 (mkV "aborder") ; -- tocheck
lin accouchement_N = mkN "accouchement" | mkN "naissance" | mkN "parturition" ; -- UWN
lin account_N = mkN "compte" masculine ;
lin account_V = variants {} ; --
lin account_V2 = variants {} ; --
lin account_for_V2 = prepV2 OP_account_V OP_for_Prep ; -- guess-p-verb
lin accountability_N = mkN "responsabilité" feminine ; -- tocheck
lin accountable_A = mkA "expliquable" | mkA "responsable" ; -- tocheck
lin accountancy_N = mkN "comptabilité" feminine ; -- tocheck
lin accountant_N = mkN "comptable" | mkN "expert-comptable" masculine ; -- tocheck
lin accounting_A = variants {} ; --
lin accounting_N = mkN "comptabilité" feminine ; -- tocheck
lin accra_PN = mkPN "Accra" ; -- status=guess src=geonames
lin accredit_V2 = mkV2 (mkV "accréditer") ; -- tocheck
lin accreditation_N = mkN "accréditation" ; -- tocheck
lin accretion_N = mkN "accrétion" ; -- tocheck
lin accrington_PN = mkPN "Accrington" ; -- status=guess src=geonames
lin accrue_V2 = mkV2 (mkV I.accroître_V2) ; -- tocheck
lin acculturation_N = mkN "enculturation" | mkN "socialisation" ; -- UWN
lin accumulate_V = variants {} ; -- mkV2 (mkV "accumuler") ; -- tocheck
lin accumulate_V2 = mkV2 (mkV "accumuler") ; -- tocheck
lin accumulation_N = variants {} ; --
lin accumulator_N = mkN "accumulateur" masculine ; -- tocheck
lin accuracy_N = mkN "exactitude" ; -- tocheck
lin accurate_A = mkA "précis" ; -- tocheck
lin accursed_A = mkA "maudit" ; -- tocheck
lin accusation_N = mkN "accusation" feminine ; -- tocheck
lin accusative_A = mkA "accusatif" ; -- tocheck
lin accusative_N = mkN "accusatif" masculine ; -- tocheck
lin accuse_V2 = mkV2 (mkV "accuser") ; -- tocheck
lin accused_A = variants {} ; --
lin accused_N = mkN "accusé" ; -- tocheck
lin accuserFem_N = mkN "accusateur" ; -- UWN
lin accuserMasc_N = mkN "accusateur" ; -- UWN
lin accustom_V2 = mkV2 (mkV "accoutumer") ; -- tocheck
lin ace_N = mkN "as" masculine | mkN "ace" masculine | mkN "iota" masculine ; -- tocheck
lin acephalous_A = mkA "acéphale" ; -- tocheck
lin acerb_A = mkA "acerbe" ; -- tocheck
lin acerbity_N = mkN "amertume" feminine | mkN "acerbité" feminine ; -- tocheck
lin acerola_N = mkN "acérola" masculine ; -- tocheck
lin acetabulum_N = mkN "acétabule" ; -- tocheck
lin acetal_N = mkN "acétal" masculine ; -- tocheck
lin acetaldehyde_N = mkN "acétaldéhyde" masculine ; -- tocheck
lin acetamide_N = mkN "acétamide" masculine ; -- tocheck
lin acetaminophen_N = mkN "paracétamol" ; -- tocheck
lin acetanilide_N = mkN "acétanilide" ; -- UWN
lin acetate_N = mkN "acétate" ; -- tocheck
lin acetic_A = mkA "acétique" ; -- UWN
lin acetone_N = mkN "acétone" feminine ; -- tocheck
lin acetophenetidin_N = mkN "phénacétine" ; -- UWN
lin acetose_A = mkA "acerbe" ; -- UWN
lin acetum_N = mkN "vinaigre" ; -- UWN
lin acetyl_N = mkN "acétyl" masculine ; -- tocheck
lin acetylation_N = mkN "acétylation" ; -- UWN
lin acetylcholine_N = mkN "acétylcholine" feminine ; -- tocheck
lin acetylene_N = mkN "acétylène" ; -- tocheck
lin acetylenic_A = mkA "acétylénique" ; -- UWN
lin ache_N = mkN "douleur" feminine ; -- tocheck
lin achene_N = mkN "akène" masculine ; -- tocheck
lin achievable_A = mkA "réussissable" ; -- tocheck
lin achieve_V2 = mkV2 (mkV "accomplir") ;
lin achievement_N = mkN "succès" masculine | mkN "réalisation" feminine ; -- tocheck
lin achiever_N = mkN "gagnant" | mkN "réussite" | mkN "succès" ; -- UWN
lin achillea_N = mkN "achillea" | mkN "achillée" ; -- UWN
lin achimenes_N = mkN "achimenes" ; -- UWN
lin achlorhydria_N = mkN "achlorhydrie" ; -- UWN
lin achondrite_N = mkN "Achondrite" | mkN "achondrite" ; -- UWN
lin achondroplasia_N = mkN "achondroplasie" feminine ; -- tocheck
lin achromatic_A = mkA "achromatique" ; -- UWN
lin achromic_A = mkA "achromique" ; -- UWN
lin acid_A = mkA "aigre" | mkA "acide" ; -- tocheck
lin acid_N = mkN "acide" masculine | mkN "acide" ; -- tocheck
lin acidic_A = mkA "acide" ; -- tocheck
lin acidification_N = mkN "acidification" feminine ; -- tocheck
lin acidify_V2 = mkV2 (mkV "acidifier") ; -- tocheck
lin acidimetry_N = mkN "acidimétrie" feminine ; -- tocheck
lin acidity_N = mkN "acidité" feminine ; -- tocheck
lin acidosis_N = mkN "acidose" ; -- tocheck
lin acidulous_A = mkA "acidulé" ; -- tocheck
lin ackee_N = mkN "aki" masculine | mkN "akée" ; -- UWN
lin acknowledge_V2 = mkV2 (mkV I.reconnaître_V2) | mkV2 (mkV "certifier") ; -- tocheck
lin acknowledge_VS = variants {} ; -- mkV2 (mkV I.reconnaître_V2) | mkV2 (mkV "certifier") ; -- tocheck
lin acknowledgement_N = mkN "reconnaissance" feminine | mkN "récompense" feminine | mkN "remerciement" masculine ; -- tocheck
lin acknowledgment_N = mkN "aveu" masculine ; -- tocheck
lin acne_N = mkN "acné" feminine ; -- tocheck
lin acolyte_N = mkN "acolyte" ; -- tocheck
lin aconite_N = mkN "aconit" masculine ; -- tocheck
lin acorn_N = mkN "gland" masculine ; -- tocheck
lin acoustic_A = mkA "acoustique" ; -- tocheck
lin acoustic_N = mkN "acoustique" ; -- UWN
lin acoustician_N = mkN "acousticien" ; -- UWN
lin acoustics_N = mkN "acoustique" feminine ; -- tocheck
lin acquaintance_N = mkN "relation" feminine | mkN "fréquentation" feminine ; -- tocheck
lin acquaintanceship_N = mkN "abord" | mkN "relation" ; -- UWN
lin acquiesce_V = mkV "admettre" | mkV "affirmer" | mkV "consentir" ; -- UWN
lin acquiescence_N = mkN "assentiment" | mkN "avis" ; -- UWN
lin acquiescent_A = mkA "bienveillant" | mkA "docile" ; -- tocheck
lin acquirable_A = mkA "acquérable" ; -- tocheck
lin acquire_V2 = mkV2 (mkV I.acquérir_V2) ; -- tocheck
lin acquirement_N = mkN "accomplissement" | mkN "aptitude" | mkN "connaissance" | mkN "habileté" | mkN "qualification" ; -- UWN
lin acquiring_N = mkN "obtention" ; -- UWN
lin acquisition_N = mkN "acquisition" feminine ; -- tocheck
lin acquisitive_A = mkA "acquisitif" | mkA "avide" ; -- UWN
lin acquittal_N = mkN "acquittement" masculine ; -- tocheck
lin acre_N = mkN "acre" feminine ; -- tocheck
lin acreage_N = mkN "acréage" masculine ; -- tocheck
lin acrid_A = mkA "âcre" ; -- tocheck
lin acridity_N = mkN "âcreté" ; -- UWN
lin acrimonious_A = mkA "acrimonieux" ; -- tocheck
lin acrimony_N = mkN "acrimonie" | mkN "acuité" | mkN "finesse" | mkN "ictère" | mkN "jaunisse" | mkN "âcreté" | mkN "âpreté" ; -- UWN
lin acrobatFem_N = mkN "acrobate" feminine ; -- tocheck
lin acrobatMasc_N = mkN "acrobate" masculine ; -- tocheck
lin acrobatic_A = mkA "acrobatique" ; -- tocheck
lin acrobatics_N = mkN "acrobatie" feminine ; -- tocheck
lin acrocyanosis_N = mkN "acrocyanose" ; -- tocheck
lin acromegalic_A = mkA "hypophyse" ; -- UWN
lin acromegaly_N = mkN "acromégalie" feminine ; -- tocheck
lin acromion_N = mkN "acromion" | mkN "processus_d'acromion" ; -- UWN
lin acronym_N = mkN "acronyme" masculine ; -- tocheck
lin acrophobia_N = mkN "acrophobie" feminine ; -- tocheck
lin acrophony_N = mkN "acrophonie" ; -- tocheck
lin acropolis_N = mkN "acropole" feminine ; -- tocheck
lin acrosome_N = mkN "acrosome" ; -- UWN
lin across_Adv = mkAdv "à travers" ; ----
lin across_Prep = mkPrep "à travers" P.genitive ; ----
lin acrostic_N = mkN "acrostiche" ; -- UWN
lin acrylamide_N = mkN "acrylamide" feminine ; -- tocheck
lin act_N = mkN "acte" masculine ;
lin act_V = mkV "agir" ;
lin act_V2 = mkV2 "agir" ; ---- subcat
lin act_on_V2 = prepV2 OP_act_V OP_on_Prep ; -- guess-p-verb
lin act_out_V2 = prepV2 OP_act_V OP_out_Prep ; -- guess-p-verb
lin act_up_V = advV OP_act_V OP_up_Adv ; -- guess-p-verb
lin act_upon_V2 = prepV2 OP_act_V OP_upon_Prep ; -- guess-p-verb
lin actin_N = mkN "Actine" | mkN "actine" ; -- UWN
lin actinia_N = mkN "actinia" | mkN "actinie" ; -- UWN
lin actinic_A = mkA "actinique" ; -- UWN
lin actinium_N = mkN "actinium" masculine ; -- tocheck
lin actinoid_N = mkN "Actinide" | mkN "actinide" | mkN "actinides" ; -- UWN
lin actinolite_N = mkN "actinote" ; -- UWN
lin actinometer_N = mkN "actinomètre" masculine ; -- tocheck
lin actinometry_N = mkN "actinométrie" ; -- UWN
lin actinomorphic_A = mkA "actinomorphe" ; -- tocheck
lin actinomyces_N = mkN "actinomyces" ; -- UWN
lin actinomycete_N = mkN "actinomycète" ; -- UWN
lin actinomycosis_N = mkN "actinomycose" ; -- UWN
lin action_N = mkN "action" feminine ;
lin activate_V2 = mkV2 (mkV "actionner") ; -- tocheck
lin activation_N = mkN "activation" feminine ; -- tocheck
lin active_A = mkA "actif" ; -- tocheck
lin activeness_N = mkN "activité" ; -- UWN
lin activism_N = mkN "activisme" masculine ; -- tocheck
lin activistFem_N = mkN "activiste" feminine ; -- tocheck
lin activistMasc_N = mkN "activiste" masculine ;
lin activist_A = mkA "activiste" ; -- UWN
lin activity_N = mkN "activité" feminine ;
lin actor_1_N = mkN "acteur" | mkN "agent" | mkN "comédien" | mkN "joueur" | mkN "musicien" | mkN "personnage" ; -- UWN
lin actor_2_N = mkN "acteur" | mkN "agent" | mkN "comédien" | mkN "joueur" | mkN "musicien" | mkN "personnage" ; -- UWN
lin actor_N = mkN "acteur" masculine | mkN "faiseur" masculine ; -- tocheck
lin actress_N = mkN "actrice" feminine ; -- tocheck
lin actual_A = mkA "réel" ; -- tocheck
lin actuality_N = mkN "réalité" ; -- UWN
lin actually_Adv = mkAdv "couramment" | adjAdv actual_A ; -- derived
lin actuarial_A = mkA "actuariel" ; -- tocheck
lin actuary_N = mkN "actuaire" ; -- tocheck
lin acuate_A = mkA "aigu" | mkA "incisif" | mkA "perçant" | mkA "pointu" | mkA "vif" ; -- UWN
lin acuity_N = mkN "acuité" feminine ; -- tocheck
lin acumen_N = mkN "sagacité" feminine ; -- tocheck
lin acupuncture_N = mkN "acupuncture" feminine ; -- tocheck
lin acute_A = mkA "aigu" ; -- tocheck
lin acyclic_A = mkA "acyclique" ; -- tocheck
lin acyl_N = mkN "acyle" masculine ; -- tocheck
lin acylation_N = mkN "acylation" ; -- UWN
lin ad_N = mkN "pub" feminine ; -- tocheck
lin ad_lib_Adv = mkAdv "impromptu" | mkAdv "spontanément" ; -- UWN
lin ad_lib_V = mkV (mkV "improviser") ; -- tocheck
lin ad_libitum_Adv = mkAdv "impromptu" | mkAdv "spontanément" ; -- UWN
lin ada_PN = mkPN "Ada" ; -- status=guess src=geonames
lin adamant_A = mkA "inflexible" ; -- tocheck
lin adamant_N = mkN "diamant" ; -- UWN
lin adapt_V = reflV (mkV "adapter") ;
lin adapt_V2 = mkV2 (mkV "adapter") ;
lin adaptability_N = mkN "adaptabilité" ; -- tocheck
lin adaptable_A = mkA "adaptable" ; -- tocheck
lin adaptation_N = mkN "adaptation" feminine ; -- tocheck
lin adapter_N = mkN "adaptateur" masculine ; -- tocheck
lin adaptive_A = mkA "adaptatif" ; -- tocheck
lin adaptor_N = mkN "adaptateur" masculine ; -- tocheck
lin adaxial_A = mkA "ventral" ; -- UWN
lin add_V = mkV "additionner" ;
lin add_V2 = mkV2 (mkV "ajouter") ;
lin add_V3 = L.add_V3 ;
lin add_VS = mkVS (mkV "ajouter") ;
lin add_in_V = advV OP_add_V OP_in_Adv ; -- guess-p-verb
lin add_on_V2 = prepV2 OP_add_V OP_on_Prep ; -- guess-p-verb
lin add_up_V = advV OP_add_V OP_up_Adv ; -- guess-p-verb
lin add_up_V2 = prepV2 OP_add_V OP_up_Prep ; -- guess-p-verb
lin add_up_to_V2 = prepV2 (advV OP_add_V OP_up_Adv ) OP_to_Prep ; -- guess-p-verb
lin addable_A = mkA "ajoutable" ; -- UWN
lin added_A = variants {} ; --
lin addend_N = mkN "cumulateur" masculine ; -- tocheck
lin addendum_N = mkN "addendum" | mkN "appendice" | mkN "complément" | mkN "post-scriptum" | mkN "supplément" ; -- UWN
lin adder_N = mkN "vipère" feminine ; -- tocheck
lin addict_N = mkN "dépendant" masculine ; -- tocheck
lin addiction_N = mkN "dépendance" feminine ; -- tocheck
lin addictive_A = mkA "addictif" ; -- tocheck
lin addis_ababa_PN = mkPN "Addis-Abeba" ; -- status=guess src=geonames
lin addition_N = mkN "addition" feminine ; -- tocheck
lin additional_A = mkA "additionnel" ; -- tocheck
lin additionally_Adv = adjAdv additional_A ; -- derived -- derived
lin additive_A = mkA "additif" ; -- UWN
lin additive_N = mkN "additif" feminine ; -- tocheck
lin address_N = mkN "discours" masculine | mkN "adresse" feminine ; -- tocheck
lin address_V2 = variants {} ; --
lin addressee_N = mkN "destinataire" ; -- UWN
lin adduction_N = mkN "adduction" ; -- UWN
lin adductor_N = mkN "adducteur" ; -- tocheck
lin adelaide_PN = mkPN "Adélaïde" ; -- status=guess src=geonames
lin adenine_N = mkN "adénine" feminine ; -- tocheck
lin adenitis_N = mkN "adénite" ; -- UWN
lin adenocarcinoma_N = mkN "adénocarcinome" ; -- UWN
lin adenoidectomy_N = mkN "adénoïdectomie" ; -- UWN
lin adenoma_N = mkN "adénome" ; -- UWN
lin adenopathy_N = mkN "adénopathie" ; -- UWN
lin adenosine_N = mkN "adénosine" ; -- UWN
lin adenovirus_N = mkN "adénovirus" masculine ; -- tocheck
lin adept_N = mkN "expert" masculine ; -- tocheck
lin adeptness_N = mkN "dispositif" | mkN "mécanisme" | mkN "équipement" ; -- UWN
lin adequate_A = mkA "adéquat" ; -- tocheck
lin adhere_V = mkV (mkV "adhérer") ; -- tocheck
lin adherence_N = mkN "adhésion" feminine ; -- tocheck
lin adherent_A = mkA "adhérent" ; -- tocheck
lin adherent_N = mkN "adhérent" ; -- tocheck
lin adhesion_N = mkN "adhésion" feminine ; -- tocheck
lin adhesive_A = mkA "adhésif" ; -- tocheck
lin adhesive_N = mkN "adhésif" | mkN "colle" ; -- UWN
lin adhesiveness_N = mkN "adhérence" | mkN "adhésion" | mkN "présentation" ; -- UWN
lin adiabatic_A = mkA "adiabatique" ; -- tocheck
lin adieu_N = mkN "adieu" ; -- tocheck
lin adipose_A = mkA "adipeux" ; -- UWN
lin adiposity_N = mkN "adiposité" feminine ; -- tocheck
lin adjacency_N = mkN "contiguïté" | mkN "contigüité" | mkN "voisinage" ; -- UWN
lin adjacent_A = mkA "adjacent" ; -- tocheck
lin adjectival_A = mkA "adjectival" ; -- tocheck
lin adjective_A = mkA "adjectif" ; -- tocheck
lin adjective_N = mkN "adjectif" masculine ; -- tocheck
lin adjoin_V = mkV "aboutir" ; -- UWN
lin adjoin_V2 = mkV2 (mkV I.adjoindre_V2) ; -- tocheck
lin adjourn_V = mkV "fermer" ; -- UWN
lin adjournment_N = mkN "ajournement" masculine ; -- tocheck
lin adjudicate_V = mkV "décider" | mkV "déterminer" | mkV "juger" | mkV "résoudre" ; -- UWN
lin adjudication_N = mkN "jugement" masculine ; -- tocheck
lin adjudicator_N = mkN "juge" ; -- tocheck
lin adjunct_N = mkN "complément" masculine ; -- tocheck
lin adjust_V = variants {} ; -- mkV2V (mkV "ajuster") ; -- tocheck
lin adjust_V2 = variants {} ; -- mkV2V (mkV "ajuster") ; -- tocheck
lin adjustable_A = mkA "ajustable" ; -- tocheck
lin adjustment_N = mkN "ajustement" masculine ; -- tocheck
lin adjutant_N = mkN "adjudant" | mkN "aide_de_camp" ; -- UWN
lin administer_V = variants {} ; --
lin administer_V2 = variants {} ; --
lin administrable_A = mkA "administrable" ; -- UWN
lin administration_N = variants {} ; --
lin administrative_A = mkA "administratif" ; -- tocheck
lin administratorFem_N = mkN "administrateur" | mkN "cadre" | mkN "directeur" | mkN "régisseur" ; -- UWN
lin administratorMasc_N = mkN "administrateur" ;
lin admirable_A = mkA "admirable" ; -- tocheck
lin admiral_N = mkN "amiral" masculine ; -- tocheck
lin admiralty_N = mkN "amirauté" ; -- tocheck
lin admiration_N = mkN "admiration" feminine ; -- tocheck
lin admire_V2 = mkV2 (mkV "admirer") ; -- tocheck
lin admirer_N = mkN "admirateur" masculine ; -- tocheck
lin admissibility_N = mkN "admissibilité" | mkN "recevabilité" ; -- UWN
lin admissible_A = mkA "admissible" ; -- tocheck
lin admission_N = mkN "abord" | mkN "accès" | mkN "admission" | mkN "admittance" | mkN "aveu" | mkN "entrée" ; -- UWN
lin admit_V = mkV "admettre" | mkV "confesser" | mkV "croire" | mkV "homologuer" | mkV "reconnaître" ; -- UWN
lin admit_V2 = mkV2 (mkV I.admettre_V2) ; -- tocheck
lin admit_VS = mkvVS "admettre" | mkvVS "confesser" | mkvVS "croire" | mkvVS "homologuer" | mkvVS "reconnaître" ; -- UWN
lin admittance_N = mkN "abord" | mkN "accès" | mkN "admission" | mkN "admittance" | mkN "aveu" | mkN "entrée" ; -- UWN
lin admittedly_Adv = mkAdv "certes" ; -- tocheck
lin admix_V = mkV "mélanger" ; -- UWN
lin admixture_N = mkN "mélange" ; -- tocheck
lin admonish_V2 = mkV2 (mkV "admonester") | mkV2 (mkV "réprimander") | mkV2 (mkV "avertir") ; -- tocheck
lin admonisher_N = mkN "contrôle" | mkN "moniteur" | mkN "suivi" | mkN "surveillance" ; -- UWN
lin admonition_N = mkN "avertissement" | mkN "mise_en_garde" ; -- UWN
lin adnate_A = mkA "adné" ; -- tocheck
lin adobe_N = mkN "adobe" masculine ; -- tocheck
lin adolescence_N = mkN "adolescence" feminine ; -- tocheck
lin adolescent_A = mkA "adolescent" ; -- tocheck
lin adolescent_N = mkN "adolescent" | mkN "adolescente" ; -- UWN
lin adopt_V2 = mkV2 (mkV "adopter") ; -- tocheck
lin adoptable_A = mkA "adoptable" ; -- UWN
lin adoptee_N = mkN "adopté" masculine ; -- tocheck
lin adoption_N = mkN "adoption" feminine ; -- tocheck
lin adoptive_A = mkA "adoptif" ; -- tocheck
lin adorable_A = mkA "adorable" ; -- tocheck
lin adoration_N = mkN "adoration" feminine ; -- tocheck
lin adore_V2 = mkV2 (mkV "adorer") ; -- tocheck
lin adorer_N = mkN "admirateur" | mkN "adorateur" ; -- UWN
lin adrenergic_A = mkA "sympathomimétique" ; -- UWN
lin adrian_PN = mkPN "Adrian" ; -- status=guess src=geonames
lin adroit_A = mkA "actif" | mkA "adroit" ; -- UWN
lin adroitness_N = mkN "dispositif" | mkN "mécanisme" | mkN "équipement" ; -- UWN
lin adsorption_N = mkN "adsorption" ; -- UWN
lin adulation_N = mkN "adulation" feminine ; -- tocheck
lin adult_A = mkA "adulte" ; -- tocheck
lin adult_N = mkN "adulte" ; -- tocheck
lin adulterer_N = mkN "adultère" ; -- tocheck
lin adulterous_A = mkA "adultère" ; -- tocheck
lin adultery_N = mkN "adultère" masculine ; -- tocheck
lin advance_N = mkN "avance" feminine | mkN "avancée" feminine ; -- tocheck
lin advance_V = variants {} ; -- mkV2 (mkV "avancer") ; -- tocheck
lin advance_V2 = mkV2 (mkV "avancer") ; -- tocheck
lin advanced_A = variants {} ; --
lin advancement_N = mkN "progrès" masculine ; -- tocheck
lin advantage_N = mkN "avantage" masculine ; -- tocheck
lin advantage_V2 = mkV2 (mkV "avantager") ; -- tocheck
lin advection_N = mkN "advection" feminine ; -- tocheck
lin advent_N = mkN "arrivée" feminine ; -- tocheck
lin adventistFem_N = variants {} ; ---- sense to be split
lin adventistMasc_N = variants {} ; ---- sense to be split
lin adventitious_A = mkA "acquis" | mkA "ectopique" ; -- tocheck
lin adventure_N = mkN "aventure" feminine ; -- tocheck
lin adventurer_N = mkN "aventurier" masculine ; -- tocheck
lin adventuresome_A = mkA "aventureux" | mkA "hasardeux" | mkA "périlleux" ; -- UWN
lin adventurism_N = mkN "aventurisme" masculine ; -- tocheck
lin adventurous_A = mkA "aventureux" | mkA "hasardeux" ; -- tocheck
lin adverb_N = mkN "adverbe" masculine ; -- tocheck
lin adverbial_A = mkA "adverbial" ; -- tocheck
lin adverbial_N = mkN "adverbial" ; -- UWN
lin adversary_N = mkN "adversaire" masculine ; -- tocheck
lin adverse_A = mkA "adverse" | mkA "défavorable" ; -- tocheck
lin adversity_N = mkN "adversité" feminine | mkN "malheur" masculine ; -- tocheck
lin advert_N = mkN "pub" feminine ; -- tocheck
lin advertence_N = mkN "attention" ; -- UWN
lin advertent_A = mkA "attentif" ; -- UWN
lin advertise_V = variants {} ; -- mkV2 (mkV "annoncer") | mkV2 (mkV "afficher") ; -- tocheck
lin advertise_V2 = mkV2 (mkV "annoncer") | mkV2 (mkV "afficher") ; -- tocheck
lin advertisement_N = mkN "publicité" feminine ; -- tocheck
lin advertiser_N = mkN "messager" ; -- tocheck
lin advertising_N = mkN "publicité" ; -- tocheck
lin advertorial_N = mkN "publirédactionnel" masculine ; -- tocheck
lin advice_N = mkN "conseil" masculine ; -- tocheck
lin advise_V = mkV "conseiller" | mkV "informer" | mkV "renseigner" ; -- UWN
lin advise_V2 = mkV2 (mkV "conseiller") ; -- tocheck
lin advise_VS = mkvVS "conseiller" | mkvVS "informer" | mkvVS "renseigner" ; -- UWN
lin adviserFem_N = mkN "conseiller" | mkN "conseilleur" | mkN "consultant" | mkN "consultante" ; -- UWN
lin adviserMasc_N = mkN "renseigneur" ; -- tocheck
lin advisory_A = mkA "consultatif" | mkA "facultatif" ; -- UWN
lin advisory_N = mkN "alerte" feminine ; -- tocheck
lin advocacy_N = mkN "mobilisation" ; -- tocheck
lin advocateFem_N = mkN "avocate" feminine | mkN "porte-parole" feminine ; -- tocheck
lin advocateMasc_N = mkN "avocat" masculine ;
lin advocate_V2 = mkV2 (mkV "plaider") | mkV2 (mkV "préconiser") ; -- tocheck
lin advocate_VS = mkvVS "défendre" | mkvVS "proposer" | mkvVS "préconiser" | mkvVS "prêcher" | mkvVS "recommander" ; -- UWN
lin adz_N = mkN "aissette" | mkN "herminette" ; -- UWN
lin adze_N = mkN "herminette" feminine ; -- tocheck
lin aegis_N = mkN "égide" feminine ; -- tocheck
lin aeon_N = mkN "éon" ; -- UWN
lin aerial_A = mkA "aérien" ; -- tocheck
lin aerial_N = mkN "antenne" feminine ; -- tocheck
lin aerides_N = mkN "aerides" ; -- UWN
lin aerie_N = mkN "aire" ; -- UWN
lin aeriform_A = mkA "aérien" | mkA "chimérique" | mkA "vaporeux" ; -- UWN
lin aerobatics_N = mkN "acrobatie" | mkN "patrouille_acrobatique" | mkN "patrouilles_acrobatiques" | mkN "voltige_aérienne" ; -- UWN
lin aerobic_A = mkA "aérobique" ; -- tocheck
lin aerobiosis_N = mkN "aérobiose" feminine ; -- tocheck
lin aerodrome_N = mkN "aérodrome" masculine ; -- tocheck
lin aerodynamics_N = mkN "aérodynamique" feminine ; -- tocheck
lin aerolite_N = mkN "aérolite" masculine ; -- tocheck
lin aerology_N = mkN "aérologie" ; -- tocheck
lin aeromechanics_N = mkN "aérodynamique" ; -- UWN
lin aeronautical_A = mkA "aeronautique" | mkA "aéronautique" ; -- UWN
lin aeronautics_N = mkN "aéronautique" feminine ; -- tocheck
lin aerophagia_N = mkN "aérophagie" ; -- UWN
lin aeroplane_N = mkN "avion" | mkN "aéroplane" ; -- UWN
lin aerosol_N = mkN "aérosol" masculine ; -- tocheck
lin aery_N = mkN "aire" ; -- UWN
lin aesculapian_A = mkA "médical" ; -- UWN
lin aestheteFem_N = mkN "esthète" feminine ; -- tocheck
lin aestheteMasc_N = mkN "esthète" masculine ; -- tocheck
lin aesthetic_A = mkA "esthétique" ; -- tocheck
lin aesthetic_N = mkN "esthétique" feminine ; -- tocheck
lin aesthetical_A = mkA "esthétique" ; -- UWN
lin aesthetics_N = mkN "esthétique" feminine ; -- tocheck
lin aestival_A = mkA "estival" ; -- tocheck
lin aether_N = mkN "éther" ; -- UWN
lin aetiology_N = mkN "étiologie" feminine ; -- tocheck
lin afar_Adv = mkAdv "loin" ; -- UWN
lin affability_N = mkN "amabilité" | mkN "aménité" | mkN "bonhomie" | mkN "obligeance" ; -- UWN
lin affair_N = mkN "aventure" feminine ; -- tocheck
lin affect_N = mkN "affect" ; -- UWN
lin affect_V2 = mkV2 (mkV "affecter") | mkV2 (mkV I.feindre_V2) ; -- tocheck
lin affectation_N = mkN "affectation" feminine ; -- tocheck
lin affected_A = variants {} ;
lin affectedness_N = mkN "affectation" | mkN "affèterie" | mkN "afféterie" | mkN "maniérisme" | mkN "minauderie" ; -- UWN
lin affection_N = mkN "Affection#G.C3.A9n.C3.A9ralit.C3.A9" | mkN "affection" | mkN "affection#g.c3.a9n.c3.a9ralit.c3.a9" | mkN "amour" | mkN "cur" | mkN "cœur" | mkN "tendance" | mkN "tendresse" ; -- UWN
lin affectional_A = mkA "affectif" | mkA "émotif" ; -- UWN
lin affectionate_A = mkA "affectueux" ; -- tocheck
lin affenpinscher_N = mkN "affenpinscher" ; -- UWN
lin affidavit_N = mkN "affidavit" ; -- tocheck
lin affiliation_N = mkN "affiliation" | mkN "appartenance" ; -- UWN
lin affinity_N = mkN "affinité" ; -- tocheck
lin affirmation_N = mkN "affirmation" feminine ; -- tocheck
lin affirmative_A = mkA "affirmatif" ; -- tocheck
lin affirmative_N = mkN "affirmatif" ; -- UWN
lin affix_N = mkN "affixe" feminine ; -- tocheck
lin affixal_A = mkA "affixal" ; -- UWN
lin affixation_N = mkN "affixation" feminine ; -- tocheck
lin affliction_N = mkN "affliction" feminine ; -- tocheck
lin affluence_N = mkN "abondance" | mkN "aisance" | mkN "richesse" ; -- UWN
lin affluent_A = mkA "riche" | mkA "abondant" | mkA "affluent" ; -- tocheck
lin affluent_N = mkN "richard" masculine ; -- tocheck
lin afford_V2 = variants {} ; -- mkV2V (reflV (mkV I.permettre_V2)) | mkV2V (mkV I.offrir_V2) ; -- tocheck
lin afford_V2V = mkV2V (reflV (mkV I.permettre_V2)) | mkV2V (mkV I.offrir_V2) ; -- tocheck
lin afforestation_N = mkN "boisement" ; -- UWN
lin affray_N = mkN "altercation" | mkN "bagarre" | mkN "orage" | mkN "querelle" | mkN "tempête" ; -- UWN
lin affricate_N = mkN "affriquée" feminine ; -- tocheck
lin affront_N = mkN "duel" masculine | mkN "défi" masculine ; -- tocheck
lin affront_V2 = mkV2 (mkV "défier") | mkV2 (reflV (mkV "confronter")) P.dative ; -- tocheck
lin afghanFem_N = variants {} ; ---- sense to be split
lin afghanMasc_N = variants {} ; ---- sense to be split
lin afghanistan_PN = mkPN "Afghanistan" ; -- status=guess src=geonames
lin afghanistaniFem_N = variants {} ; ---- sense to be split
lin afghanistaniMasc_N = variants {} ; ---- sense to be split
lin aflatoxin_N = mkN "aflatoxine" ; -- UWN
lin aflutter_A = mkA "nerveux" ; -- UWN
lin afraid_A = mkA "effrayé" ; -- tocheck
lin afresh_Adv = mkAdv "derechef" ; -- UWN
lin africanFem_N = variants {} ; ---- sense to be split
lin africanMasc_N = variants {} ; ---- sense to be split
lin afrikanerFem_N = variants {} ; ---- sense to be split
lin afrikanerMasc_N = variants {} ; ---- sense to be split
lin afro_americanFem_N = variants {} ; ---- sense to be split
lin afro_americanMasc_N = variants {} ; ---- sense to be split
lin after_Adv = mkAdv "après" ; -- tocheck
lin after_Prep = S.after_Prep ;
lin after_Subj = M.mkSubj ("après" ++ Ph.elisQue) ;
lin afterbirth_N = mkN "délivrance" feminine ; -- tocheck
lin afterburner_N = mkN "Postcombustion" | mkN "post-combustion" | mkN "postcombustion" ; -- UWN
lin afterlife_N = mkN "au-delà" masculine ; -- tocheck
lin aftermath_N = mkN "regain" masculine ; -- tocheck
lin afternoon_N = mkN "après-midi" ; -- tocheck
lin aftershock_N = mkN "réplique" feminine ; -- tocheck
lin aftertaste_N = mkN "arrière-gout" ; -- UWN
lin afterwards_Adv = mkAdv "après" ; -- tocheck
lin again_Adv = mkAdv "encore" ;
lin against_Prep = mkPrep "contre" ;
lin agalactia_N = mkN "agalactie" ; -- UWN
lin agama_N = mkN "agama" | mkN "agama_(reptile)" ; -- UWN
lin agapanthus_N = mkN "agapanthus" ; -- UWN
lin agape_N = mkN "agape" ; -- UWN
lin agaric_N = mkN "agaric" ; -- UWN
lin agate_N = mkN "agate" ; -- tocheck
lin age_N = mkN "âge" masculine | mkN "époque" feminine ; --- split -- | age of five -- | stone age
lin age_V = variants {} ; -- mkV2 (mkV "vieillir") ; -- tocheck
lin aged_Prep = variants {} ; --
lin agedness_N = mkN "sénescence" ; -- UWN
lin ageing_N = mkN "vieillissement" ; -- tocheck
lin ageism_N = mkN "âgisme" ; -- UWN
lin ageless_A = mkA "permanent" | mkA "perpétuel" | mkA "éternel" ; -- UWN
lin agency_N = mkN "agence" feminine ; -- tocheck
lin agenda_N = mkN "planning" masculine ; -- tocheck
lin agentFem_N = mkN "agent" feminine ; -- tocheck
lin agentMasc_N = mkN "agent" masculine ;
lin agent_provocateur_N = mkN "agent_provocateur" | mkN "provocateur" ; -- UWN
lin agglomeration_N = mkN "agglomération" feminine ; -- tocheck
lin agglutinative_A = mkA "agglutinant" ; -- tocheck
lin aggrandizement_N = mkN "accroissement" | mkN "élévation" ; -- UWN
lin aggravation_N = mkN "exacerbation" ; -- UWN
lin aggregate_A = mkA "agrégat" ; -- UWN
lin aggregate_N = mkN "agrégat" masculine | mkN "granulats" ; -- tocheck
lin aggregation_N = mkN "ar" masculine ; -- tocheck
lin aggression_N = mkN "aggression" feminine ; -- tocheck
lin aggressive_A = mkA "agressif" ; -- tocheck
lin aggressiveness_N = mkN "agressivité" feminine ; -- tocheck
lin aggressorFem_N = mkN "agresseuse" feminine ; -- tocheck
lin aggressorMasc_N = mkN "agresseur" masculine ; -- tocheck
lin aghast_A = mkA "effaré" ; -- tocheck
lin agile_A = mkA "agile" ; -- tocheck
lin agility_N = mkN "agilité" feminine ; -- tocheck
lin aging_N = mkN "sénescence" | mkN "vieillissement" ; -- UWN
lin agio_N = mkN "agiotage" | mkN "prix" ; -- UWN
lin agitate_V = mkV "débattre" | mkV "troubler" | mkV "émouvoir" ; -- UWN
lin agitator_N = mkN "agitateur" | mkN "meneur" | mkN "perturbateur" ; -- UWN
lin agitprop_N = mkN "agitprop" feminine ; -- tocheck
lin aglow_A = mkA "lumineux" ; -- UWN
lin agnate_A = mkA "paternel" ; -- UWN
lin agnosia_N = mkN "Agnosie" | mkN "agnosie" ; -- UWN
lin agnostic_A = mkA "agnostique" ; -- tocheck
lin agnosticism_N = mkN "agnosticisme" masculine ; -- tocheck
lin ago_Adv = mkAdv "il y a" ; ---- should be postpos in Eng
lin agog_A = mkA "écarquillé" ; -- tocheck
lin agonize_V = mkV "agoniser" ; -- UWN
lin agony_N = mkN "agonie" feminine ; -- tocheck
lin agoraphobia_N = mkN "agoraphobie" ; -- tocheck
lin agouti_N = mkN "agouti" ; -- tocheck
lin agra_PN = mkPN "Agra" ; -- status=guess src=geonames
lin agranulocytosis_N = mkN "agranulocytose" ; -- UWN
lin agrarian_A = mkA "agraire" | mkA "agricole" | mkA "rural" | mkA "rustique" ; -- UWN
lin agree_V = reflV (mkV "accorder") ; --- être d'accord ??
lin agree_VS = mkVS (reflV (mkV "accorder")) ; --- ??
lin agree_VV = deVV (reflV (mkV "accorder")) ; --- ??
lin agree_on_V = advV OP_agree_V OP_on_Adv ; -- guess-p-verb
lin agree_with_V2 = prepV2 OP_agree_V OP_with_Prep ; -- guess-p-verb
lin agreeable_A = mkA "agréable" ; -- tocheck
lin agreed_A = variants {} ; --
lin agreement_N = mkN "accord" masculine | mkN "contrat" masculine ; -- tocheck
lin agribusiness_N = mkN "agro-business" masculine ; -- tocheck
lin agricultural_A = mkA "agricole" ; -- tocheck
lin agriculture_N = mkN "agriculture" feminine ; -- tocheck
lin agriculturist_N = mkN "agriculteur" | mkN "cultivateur" | mkN "maraîcher" | mkN "oléiculteur" | mkN "produce" ; -- UWN
lin agrimonia_N = mkN "agrimonia" | mkN "aigremoine" | mkN "aigremoine_eupatoire" ; -- UWN
lin agrology_N = mkN "agrologie" ; -- UWN
lin agronomist_N = mkN "agronome" ; -- tocheck
lin agronomy_N = mkN "agronomie" feminine ; -- tocheck
lin agrypnia_N = mkN "agrypnie" ; -- UWN
lin ague_N = mkN "fièvre" feminine ; -- tocheck
lin ahead_Adv = variants {} ; --
lin ahimsa_N = mkN "ahimsa" ; -- UWN
lin ahistorical_A = mkA "anhistorique" ; -- tocheck
lin ahmedabad_PN = mkPN "Ahmedabad" ; -- status=guess src=geonames
lin aid_N = mkN "aide" feminine ; -- tocheck
lin aid_V = variants {} ; -- mkV2 (mkV "aider") ; -- tocheck
lin aid_V2 = mkV2 (mkV "aider") ; -- tocheck
lin aids_N = variants {} ; --
lin aikido_N = mkN "aikido" masculine ; -- tocheck
lin ail_V2 = mkV2 (mkV "manquer") ; -- tocheck
lin ailanthus_N = mkN "ailanthus" ; -- UWN
lin aileron_N = mkN "aileron" ; -- UWN
lin ailment_N = mkN "infirmité" | mkN "mal" | mkN "maladie" | mkN "malaise" ; -- UWN
lin aim_N = mkN "cible" feminine | mkN "objectif" masculine ; -- tocheck
lin aim_V = variants {} ; -- mkV2 (mkV "cibler") | mkV2 (mkV "viser") ; -- tocheck
lin aim_V2 = mkV2 (mkV "cibler") | mkV2 (mkV "viser") ; -- tocheck
lin aim_VV = variants {} ; -- mkV2 (mkV "cibler") | mkV2 (mkV "viser") ; -- tocheck
lin aim_at_V2 = prepV2 OP_aim_V OP_at_Prep ; -- guess-p-verb
lin aioli_N = mkN "aïoli" ; -- tocheck
lin air_N = mkN "air" masculine ;
lin air_V2 = mkV2 (mkV "aérer") ; -- tocheck
lin airborne_A = mkA "aéroporté" | mkA "aérotransporté" ; -- UWN
lin airbrush_N = mkN "aérographe" ; -- UWN
lin airbus_N = mkN "airbus" ; -- UWN
lin aircraft_N = mkN "aéronef" masculine ; -- tocheck
lin aircrew_N = mkN "groupe" ; -- UWN
lin airdock_N = mkN "han" | mkN "hangar" ; -- UWN
lin airdrie_PN = mkPN "Airdrie" ; -- status=guess src=geonames
lin airfield_N = mkN "aérodrome" | mkN "piste" | mkN "terrain" ; -- UWN
lin airfoil_N = mkN "profil" | mkN "profil_d'aile" | mkN "surface" ; -- UWN
lin airing_N = mkN "aération" | mkN "ventilation" ; -- UWN
lin airless_A = mkA "fermer" | mkA "étouffant" ; -- UWN
lin airlift_N = mkN "ascenseur" | mkN "pont" ; -- UWN
lin airline_N = mkN "compagnie_aérienne" ; -- UWN
lin airliner_N = mkN "avion_de_ligne" ; -- UWN
lin airlock_N = mkN "sas" masculine ; -- tocheck
lin airplane_N = L.airplane_N ;
lin airport_N = mkN "aéroport" masculine ; -- tocheck
lin airship_N = mkN "ballon_dirigeable" | mkN "dirigeable" ; -- UWN
lin air_sickness_N = mkN "mal de l'air" ; -- UWN
lin airspace_N = mkN "espace_aérien" ; -- UWN
lin airspeed_N = mkN "vitesses" ; -- UWN
lin airtight_A = mkA "hermétique" ; -- tocheck
lin airway_N = mkN "compagnie_aérienne" ; -- UWN
lin airwoman_N = mkN "aviatrice" feminine ; -- tocheck
lin airworthiness_N = mkN "navigabilité" ; -- UWN
lin airy_A = mkA "aérien" | mkA "chimérique" | mkA "vaporeux" ; -- UWN
lin aisle_N = mkN "rayon" masculine ; -- tocheck
lin aitch_N = mkN "âche" ; -- tocheck
lin ajar_A = mkA "entrebâillé" ; -- tocheck
lin akin_A = mkA "apparenté" | mkA "analogue" ; -- tocheck
lin akinesis_N = mkN "akinésie" ; -- UWN
lin akron_PN = mkPN "Akron" ; -- status=guess src=geonames
lin alabaster_N = mkN "albâtre" masculine ; -- tocheck
lin alacrity_N = mkN "empressement" masculine | mkN "rapidité" feminine ; -- tocheck
lin alanine_N = mkN "alanine" feminine ; -- tocheck
lin alarm_N = mkN "alarme" feminine | mkN "réveille-matin" masculine ; -- tocheck
lin alarm_V2 = mkV2 (mkV "alarmer") ; -- tocheck
lin alarmism_N = mkN "alarmisme" masculine ; -- tocheck
lin alarmist_N = mkN "alarmiste" ; -- tocheck
lin alas_Interj = mkInterj "hélas" ; -- tocheck
lin alb_N = mkN "aube" feminine ; -- tocheck
lin albania_PN = mkPN "Albanie" ; -- status=guess src=geonames
lin albatross_N = mkN "albatros" masculine ; -- tocheck
lin albedo_N = mkN "albédo" masculine ; -- tocheck
lin albeit_Subj = variants {} ; --
lin albert_PN = mkPN "Albert" ; -- status=guess src=geonames
lin albinism_N = mkN "albinisme" masculine ; -- tocheck
lin albino_N = mkN "albinos" ; -- tocheck
lin albite_N = mkN "albite" ; -- UWN
lin albizzia_N = mkN "albizia" ; -- UWN
lin album_N = mkN "album" masculine ; -- tocheck
lin albumen_N = mkN "glaire" ; -- tocheck
lin albumin_N = mkN "albumine" feminine ; -- tocheck
lin albuminous_A = mkA "albuminé" ; -- UWN
lin albuminuria_N = mkN "albuminurie" | mkN "protéinurie" ; -- UWN
lin alcazar_N = mkN "alcazar" ; -- UWN
lin alchemic_A = mkA "alchimique" ; -- UWN
lin alchemist_N = mkN "alchimiste" ; -- tocheck
lin alchemy_N = mkN "alchimie" feminine ; -- tocheck
lin alcohol_N = mkN "alcool" masculine ; -- tocheck
lin alcoholic_A = mkA "alcoolisé" | mkA "alcoolique" ; -- tocheck
lin alcoholic_N = mkN "alcoolique" ; -- tocheck
lin alcoholism_N = mkN "alcoolisme" masculine ; -- tocheck
lin alcove_N = mkN "alcôve" feminine ; -- tocheck
lin aldehyde_N = mkN "aldéhyde" masculine ; -- tocheck
lin alder_N = mkN "aulne" masculine ; -- tocheck
lin alderman_N = mkN "échevin" masculine ; -- tocheck
lin aldershot_PN = mkPN "Aldershot" ; -- status=guess src=geonames
lin aldohexose_N = mkN "aldohexose" ; -- UWN
lin aldol_N = mkN "Aldol" | mkN "aldol" ; -- UWN
lin aldose_N = mkN "aldose" | mkN "aldoses" ; -- UWN
lin aldosterone_N = mkN "aldostérone" ; -- UWN
lin aleatory_A = mkA "aléatoire" ; -- tocheck
lin alembic_N = mkN "alambic" ; -- tocheck
lin aleppo_PN = mkPN "Alep" ; -- status=guess src=geonames
lin alert_A = mkA "alerte" ; -- tocheck
lin alert_N = mkN "alarme" feminine ; -- tocheck
lin alert_V2 = variants {} ; --
lin alessandria_PN = mkPN "Alexandrie" ; -- status=guess src=geonames
lin aleurone_N = mkN "aleurone" ; -- UWN
lin alexander_PN = mkPN "Alexander" ; -- status=guess src=geonames
lin alexandra_PN = mkPN "Alexandra" ; -- status=guess src=geonames
lin alexandria_PN = mkPN ("Alexandria" | "Alexandrie") ;
lin alexandrite_N = mkN "alexandrite" ; -- UWN
lin alexia_N = mkN "alexie" feminine ; -- tocheck
lin alf_PN = mkPN "Alf" ; -- status=guess src=geonames
lin alfalfa_N = mkN "luzerne" feminine ; -- tocheck
lin alfred_PN = mkPN "Alfred" ; -- status=guess src=geonames
lin alfresco_Adv = mkAdv "dehors" ; -- UWN
lin alfreton_PN = mkPN "Alfreton" ; -- status=guess src=geonames
lin alga_N = mkN "algue" ; -- tocheck
lin algal_A = mkA "algal" ; -- tocheck
lin algebra_N = mkN "algèbre" feminine ; -- tocheck
lin algebraic_A = mkA "algébrique" ; -- tocheck
lin algebraical_A = mkA "algébrique" ; -- UWN
lin algebraist_N = mkN "algébriste" ; -- tocheck
lin algeria_PN = mkPN "Algérie" ; -- status=guess src=geonames
lin algidity_N = mkN "algidité" feminine ; -- tocheck
lin algin_N = mkN "algine" feminine ; -- tocheck
lin algoid_A = mkA "algoïde" ; -- UWN
lin algophobia_N = mkN "algophobie" ; -- UWN
lin algorithm_N = mkN "algorithme" masculine ; -- tocheck
lin algorithmic_A = mkA "algorithmique" ; -- tocheck
lin alias_N = mkN "pseudonyme" masculine ; -- tocheck
lin alibi_N = mkN "alibi" masculine ; -- tocheck
lin alicante_PN = mkPN "Alicante" ; -- status=guess src=geonames
lin alice_PN = mkPN "Alice" ; -- status=guess src=geonames
lin alienFem_N = variants {} ; ---- sense to be split
lin alienMasc_N = variants {} ; ---- sense to be split
lin alien_A = mkA "étranger" ; -- tocheck
lin alienate_V2 = mkV2 (mkV "aliéner") ; -- tocheck
lin alienation_N = mkN "aliénation" feminine ; -- tocheck
lin alienist_N = mkN "aliéniste" ; -- UWN
lin align_V2 = mkV2 (mkV "aligner") ; -- tocheck
lin alignment_N = mkN "alliance" feminine | mkN "alignement" masculine | mkN "conjonction" feminine | mkN "ajustage" masculine ; -- tocheck
lin alike_A = mkA "pareil" | mkA "semblable" | mkA "similaire" ; -- UWN
lin alike_Adv = variants {} ; --
lin alimentary_A = mkA "nutriment" ; -- UWN
lin aliphatic_A = mkA "aliphatique" ; -- tocheck
lin aliquot_A = mkA "aliquote" ; -- UWN
lin aliquot_N = mkN "aliquote" feminine ; -- tocheck
lin alive_A = mkA "vivant" ; -- tocheck
lin aliyah_N = mkN "Alya" ; -- tocheck
lin alizarin_N = mkN "alizarine" ; -- UWN
lin alkali_N = mkN "alcali" masculine ; -- tocheck
lin alkalimetry_N = mkN "alcalimétrie" feminine ; -- tocheck
lin alkaline_A = mkA "alcalin" ; -- tocheck
lin alkaloid_N = mkN "alcaloïde" masculine ; -- tocheck
lin alkaptonuria_N = mkN "alcaptonurie" ; -- UWN
lin alkene_N = mkN "alcène" masculine ; -- tocheck
lin alkyl_N = mkN "alcoyle" | mkN "alkyle" ; -- UWN
lin all_A = mkA "tout" ; -- UWN
lin all_Predet = S.all_Predet ;
lin allamanda_N = mkN "allamanda" ; -- UWN
lin allan_PN = mkPN "Allan" ; -- status=guess src=geonames
lin allantois_N = mkN "allantoïde" ; -- UWN
lin allegation_N = mkN "assertion" ; -- tocheck
lin allege_V2 = variants {} ; --
lin allege_VS = mkvVS "accuser" | mkvVS "affirmer" | mkvVS "alléguer" | mkvVS "dire" | mkvVS "déclarer" ; -- UWN
lin alleged_A = variants {} ; --
lin allegedly_AdV = mkAdV "prétendument" ; -- UWN
lin allegiance_N = mkN "fidélité" ; -- tocheck
lin allegoric_A = mkA "allégorique" ; -- tocheck
lin allegorical_A = mkA "allégorique" ; -- tocheck
lin allegory_N = mkN "allégorie" feminine ; -- tocheck
lin allele_N = mkN "allèle" ; -- tocheck
lin allemande_N = mkN "allemande" ; -- UWN
lin allen_PN = mkPN "Allen" ; -- status=guess src=geonames
lin allergen_N = mkN "allergène" masculine ; -- tocheck
lin allergenic_A = mkA "allergisant" ; -- UWN
lin allergic_A = mkA "allergique" ; -- tocheck
lin allergology_N = mkN "allergologie" ; -- UWN
lin allergy_N = mkN "allergie" feminine ; -- tocheck
lin alleviate_V2 = mkV2 (mkV "adoucir") ; -- tocheck
lin alleviation_N = mkN "allégement" masculine ; -- tocheck
lin alleviative_A = mkA "palliatif" ; -- UWN
lin alley_N = mkN "ruelle" feminine ; -- tocheck
lin alleyway_N = mkN "allée" | mkN "back_street" | mkN "ruelle" ; -- UWN
lin alliance_N = mkN "alliance" feminine ; -- tocheck
lin allied_A = variants {} ; --
lin alligator_N = mkN "alligator" masculine ; -- tocheck
lin alliteration_N = mkN "allitération" feminine ; -- tocheck
lin alloa_PN = mkPN "Alloa" ; -- status=guess src=geonames
lin allocate_V = variants {} ; -- mkV2 (mkV "allouer") ; -- tocheck
lin allocate_V2 = mkV2 (mkV "allouer") ; -- tocheck
lin allocation_N = mkN "allocation" feminine ; -- tocheck
lin allocator_N = mkN "concessionnaire" | mkN "distributeur" ; -- UWN
lin allogamy_N = mkN "allogamie" ; -- tocheck
lin allomorphic_A = mkA "polymorphe" ; -- UWN
lin allopatric_A = mkA "allopatrique" ; -- UWN
lin allopatry_N = mkN "allopatrie" ; -- UWN
lin allophone_N = mkN "allophone" masculine ; -- tocheck
lin allosaur_N = mkN "allosaure" | mkN "allosaurus" ; -- UWN
lin allotment_N = mkN "allocation" | mkN "découpage" | mkN "répartition" ; -- UWN
lin allotrope_N = mkN "allotrope" masculine ; -- tocheck
lin allotropic_A = mkA "allotrope" | mkA "allotropique" ; -- UWN
lin allotropy_N = mkN "Allotropie" | mkN "allotropie" ; -- UWN
lin allow_V2 = mkV2 (mkV "laisser") | I.permettre_V2 ;
lin allow_V2V = mkV2V (mkV "laisser") | mkV2V (mkV I.permettre_V2) ;
lin allow_for_V2 = prepV2 (lin V OP_allow_V2) OP_for_Prep ; -- guess-p-verb
lin allow_of_V2 = prepV2 (lin V OP_allow_V2) OP_of_Prep ; -- guess-p-verb
lin allowance_N = variants {} ; --
lin alloy_N = mkN "alliage" masculine ; -- tocheck
lin allspice_N = mkN "quatre-épices" ; -- tocheck
lin allure_N = mkN "attirance" feminine ; -- tocheck
lin alluring_A = mkA "séduisant" ; -- tocheck
lin allusion_N = mkN "allusion" ; -- UWN
lin allusive_A = mkA "allusif" ; -- tocheck
lin alluvial_A = mkA "alluvial" ; -- tocheck
lin alluvion_N = mkN "alluvion" | mkN "alluvions" ; -- UWN
lin ally_N = mkN "allié" masculine ; -- tocheck
lin ally_V2 = mkV2 (mkV "allier") ; -- tocheck
lin alma_mater_N = mkN "alma_mater" ; -- UWN
lin almanac_N = mkN "almanach" masculine ; -- tocheck
lin almandine_N = mkN "almandin" masculine ; -- tocheck
lin almandite_N = mkN "almandin" ; -- UWN
lin almeria_PN = mkPN "Almeria" ; -- status=guess src=geonames
lin almighty_A = mkA "tout-puissant" ; -- tocheck
lin almond_N = mkN "amande" feminine | mkN "amandier" masculine ; -- tocheck
lin almoner_N = mkN "aumônier" masculine ; -- tocheck
lin almost_AdA = S.almost_AdA ;
lin almost_AdN = S.almost_AdN ;
lin almost_Adv = mkAdv "quasiment" | mkAdv "presque" ;
lin alms_N = mkN "aumône" feminine ; -- tocheck
lin alnwick_PN = mkPN "Alnwick" ; -- status=guess src=geonames
lin alocasia_N = mkN "alocasia" ; -- UWN
lin aloe_N = mkN "aloès" masculine ; -- tocheck
lin alone_A = variants {} ; --
lin aloneness_N = mkN "solitude" ; -- UWN
lin along_Adv = mkAdv "accompagné" ; -- tocheck
lin along_Prep = variants {} ; --
lin alongside_Prep = variants {} ; --
lin aloof_A = mkA "distant" ; -- tocheck
lin aloof_Adv = mkAdv "dédaigneusement" ; -- tocheck
lin alopecia_N = mkN "alopécie" feminine ; -- tocheck
lin aloud_Adv = mkAdv "à_voix_haute" ; -- UWN
lin alpaca_N = mkN "alpaga" masculine ; -- tocheck
lin alpenstock_N = mkN "alpenstock" ; -- UWN
lin alpestrine_A = mkA "subalpin" ; -- UWN
lin alpha_N = mkN "alpha" masculine ; -- tocheck
lin alphabet_N = mkN "alphabet" masculine ; -- tocheck
lin alphabetic_A = mkA "alphabétique" ; -- tocheck
lin alphabetical_A = mkA "alphabétique" ; -- tocheck
lin alphanumeric_A = mkA "alpha-numérique" ; -- tocheck
lin alpinist_N = mkN "alpiniste" ; -- UWN
lin already_AdV = mkAdV "déjà" ; -- UWN
lin already_Adv = L.already_Adv ;
lin alright_A = variants {} ; --
lin alright_Adv = variants {} ; --
lin alsatianFem_N = variants {} ; ---- sense to be split
lin alsatianMasc_N = variants {} ; ---- sense to be split
lin also_AdV = mkAdV "aussi" | mkAdV "itou" | mkAdV "notamment" | mkAdV "pareillement" | mkAdV "trop" | mkAdV "également" ; -- UWN
lin also_Adv = mkAdv "aussi" ;
lin alstroemeria_N = mkN "alstroemeria" | mkN "alstrœmère" ; -- UWN
lin altar_N = mkN "autel" ; -- tocheck
lin altar_piece_N = mkN "retable" ; -- UWN
lin alter_V = variants {} ; --
lin alter_V2 = variants {} ; --
lin alteration_N = mkN "adaptation" | mkN "ajustement" | mkN "modification" ; -- UWN
lin altercation_N = mkN "altercation" feminine ; -- tocheck
lin alternate_A = mkA "alternatif" ; -- tocheck
lin alternate_V2 = mkV2 (mkV "alterner") ; -- tocheck
lin alternation_N = mkN "alternance" ; -- UWN
lin alternative_A = mkA "alternatif" ; -- tocheck
lin alternative_N = mkN "alternative" feminine ; -- tocheck
lin alternator_N = mkN "alternateur" masculine ; -- tocheck
lin althea_N = mkN "althaea" | mkN "guimauve_officinale" | mkN "rose_trémière" ; -- UWN
lin although_Subj = S.although_Subj ;
lin altimeter_N = mkN "altimètre" masculine ; -- tocheck
lin altitude_N = mkN "altitude" feminine | mkN "hauteur" feminine ; -- tocheck
lin alto_N = mkN "alto" masculine ; -- tocheck
lin altocumulus_N = mkN "altocumulus" ; -- UWN
lin altogether_Adv = mkAdv "complètement" ; -- tocheck
lin alton_PN = mkPN "Alton" ; -- status=guess src=geonames
lin altostratus_N = mkN "altostratus" ; -- UWN
lin altrincham_PN = mkPN "Altrincham" ; -- status=guess src=geonames
lin altruism_N = mkN "altruisme" masculine ; -- tocheck
lin altruist_N = mkN "altruiste" | mkN "philanthrope" ; -- UWN
lin altruistic_A = mkA "altruiste" ; -- tocheck
lin alum_N = mkN "alun" masculine ; -- tocheck
lin alumina_N = mkN "alumine" ; -- UWN
lin aluminium_N = mkN "aluminium" masculine ; -- tocheck
lin alumna_N = mkN "diplômée" feminine | mkN "étudiante" feminine ; -- tocheck
lin alumnus_N = mkN "diplômé" masculine | mkN "étudiant" masculine ; -- tocheck
lin alvechurch_PN = mkPN "Alvechurch" ; -- status=guess src=geonames
lin alveolar_N = mkN "alvéolaire" | mkN "consonne_alvéolaire" | mkN "consonne_dentale" | mkN "dentale" ; -- UWN
lin always_AdV = S.always_AdV ;
lin always_Adv = mkAdv "toujours" ;
lin amah_N = mkN "bonne" | mkN "domestique" ; -- UWN
lin amalgam_N = mkN "amalgame" masculine ; -- tocheck
lin amalgamate_V = mkV "mélanger" | mkV "mêler" ; -- UWN
lin amalgamation_N = mkN "amalgamation" ; -- tocheck
lin amanuensis_N = mkN "sténographe" | mkN "copieur" masculine ; -- tocheck
lin amaranth_N = mkN "amarante" feminine ; -- tocheck
lin amaretto_N = mkN "amaretto" masculine ; -- tocheck
lin amaryllis_N = mkN "amaryllis" feminine ; -- tocheck
lin amass_V2 = mkV2 (mkV "amasser") ; -- tocheck
lin amateurFem_N = mkN "amatrice" feminine ; -- tocheck
lin amateurMasc_N = mkN "amateur" masculine ;
lin amateur_A = mkA "amateur" | mkA "récréationnel" ; -- UWN
lin amateurish_A = mkA "amateur" | mkA "amateuriste" ; -- UWN
lin amateurism_N = mkN "amateurisme" ; -- UWN
lin amative_A = mkA "amoureux" ; -- UWN
lin amatory_A = mkA "amoureux" | mkA "romantique" ; -- UWN
lin amaze_V2V = mkV2V (mkV "stupéfier") ; -- tocheck
lin amazing_A = mkA "étonnant" ; -- tocheck
lin amazon_N = mkN "amazone" feminine ; -- tocheck
lin ambassador_N = mkN "ambassadeur" masculine ; -- tocheck
lin ambassadress_N = mkN "ambassadrice" feminine ; -- tocheck
lin amber_A = mkA "ambré" ; -- tocheck
lin amber_N = mkN "ambre" masculine ; -- tocheck
lin ambergris_N = mkN "ambre" | mkN "ambre_gris" ; -- UWN
lin amberjack_N = mkN "seriola" | mkN "sériole" ; -- UWN
lin ambiance_N = mkN "environnement" | mkN "milieu" ; -- UWN
lin ambidexterity_N = mkN "ambidextrie" feminine ; -- tocheck
lin ambidextrous_A = mkA "ambidextre" ; -- tocheck
lin ambience_N = mkN "environnement" | mkN "milieu" ; -- UWN
lin ambiguity_N = mkN "ambiguïté" feminine ; -- tocheck
lin ambiguous_A = mkA "ambigu" ; -- tocheck
lin ambition_N = mkN "ambition" feminine ; -- tocheck
lin ambitious_A = mkA "ambitieux" ; -- tocheck
lin ambivalence_N = mkN "ambivalence" ; -- UWN
lin ambivalent_A = mkA "ambivalent" ; -- tocheck
lin amble_N = mkN "flâner" | mkN "promenade" ; -- UWN
lin amble_V = mkV (mkV "déambuler") ; -- tocheck
lin amblygonite_N = mkN "amblygonite" ; -- UWN
lin amblyopia_N = mkN "amblyopie" feminine ; -- tocheck
lin ambrosia_N = mkN "ambroisie" feminine ; -- tocheck
lin ambulance_N = mkN "ambulance" feminine ; -- tocheck
lin ambulant_A = mkA "déambulatoire" ; -- UWN
lin ambulatory_A = mkA "ambulatoire" ; -- tocheck
lin ambulatory_N = mkN "déambulatoire" ; -- tocheck
lin ambuscade_N = mkN "embuscade" feminine ; -- tocheck
lin ambuscade_V2 = mkV2 (mkV "embusquer") ; -- tocheck
lin ambush_N = mkN "embuscade" feminine ; -- tocheck
lin amebiasis_N = mkN "Amabiase" | mkN "amabiase" | mkN "amibiase" ; -- UWN
lin ameer_N = mkN "émir" ; -- UWN
lin amelia_N = mkN "amélie" ; -- UWN
lin ameliorate_V = mkV "amender" | mkV "améliorer" | mkV "réformer" ; -- UWN
lin ameliorate_V2 = mkV2 (mkV "améliorer") ; -- tocheck
lin amelioration_N = mkN "amélioration" feminine ; -- tocheck
lin ameloblast_N = mkN "améloblaste" ; -- UWN
lin amelogenesis_N = mkN "amélogénèse" ; -- UWN
lin amenable_A = mkA "conciliant" ; -- tocheck
lin amend_V = variants {} ; -- mkV2V (mkV "amender") ; -- tocheck
lin amend_V2 = variants {} ; -- mkV2V (mkV "amender") ; -- tocheck
lin amend_V2V = mkV2V (mkV "amender") ; -- tocheck
lin amendment_N = mkN "amendement" masculine ; -- tocheck
lin amenity_N = mkN "aménité" feminine | mkN "commodité" feminine ; -- tocheck
lin amenorrhea_N = mkN "Aménorrhée" | mkN "aménorrhée" ; -- UWN
lin americanFem_N = variants {} ; ---- sense to be split
lin americanMasc_N = variants {} ; ---- sense to be split
lin americium_N = mkN "américium" masculine ; -- tocheck
lin amesbury_PN = mkPN "Amesbury" ; -- status=guess src=geonames
lin amethyst_A = mkA "améthyste" ; -- UWN
lin amethyst_N = mkN "améthyste" feminine ; -- tocheck
lin amiability_N = mkN "amabilité" | mkN "aménité" | mkN "bonhomie" | mkN "obligeance" ; -- UWN
lin amiable_A = mkA "aimable" ; -- tocheck
lin amid_Prep = variants {} ; --
lin amide_N = mkN "amidure" masculine | mkN "amide" masculine ; -- tocheck
lin amiens_PN = mkPN "Amiens" ; -- status=guess src=geonames
lin amine_N = mkN "amine" feminine ; -- tocheck
lin aminophylline_N = mkN "théophylline" ; -- UWN
lin amir_N = mkN "émir" ; -- UWN
lin amitosis_N = mkN "amitose" ; -- UWN
lin amity_N = mkN "amitié" feminine ; -- tocheck
lin ammanford_PN = mkPN "Ammanford" ; -- status=guess src=geonames
lin ammeter_N = mkN "ampèremètre" masculine ; -- tocheck
lin ammobium_N = mkN "ammobium" ; -- UWN
lin ammonia_N = mkN "ammoniaque" feminine ; -- tocheck
lin ammonite_N = mkN "Ammonite" | mkN "ammonite" | mkN "ammonites" | mkN "ammonoidea" ; -- UWN
lin ammonium_N = mkN "ammonium" ; -- UWN
lin ammunition_N = mkN "balle" ; -- tocheck
lin amnesia_N = mkN "amnésie" feminine ; -- tocheck
lin amnesty_N = mkN "amnestie" feminine ; -- tocheck
lin amniocentesis_N = mkN "amniocentèse" feminine ; -- tocheck
lin amnion_N = mkN "amnios" | mkN "sac_amniotique" ; -- UWN
lin amniote_N = mkN "amniota" | mkN "amniotes" ; -- UWN
lin amniotic_A = mkA "amniotique" ; -- UWN
lin amoeba_N = mkN "amibe" feminine | mkN "amibes" | mkN "amoeba" ; -- UWN
lin amoebic_A = mkA "amibien" ; -- UWN
lin among_Prep = mkPrep "parmi" ;
lin amongst_Prep = variants {} ; --
lin amora_N = mkN "Amoraïm" | mkN "amoraïm" ; -- UWN
lin amoralism_N = mkN "amoralisme" ; -- UWN
lin amoralist_N = mkN "amoraliste" ; -- UWN
lin amorous_A = mkA "amoureux" ; -- tocheck
lin amorousness_N = mkN "amativité" | mkN "érotisme" ; -- UWN
lin amorpha_N = mkN "amorpha" ; -- UWN
lin amorphous_A = mkA "amorphe" ; -- tocheck
lin amortization_N = mkN "amortissement" masculine ; -- tocheck
lin amount_N = mkN "montant" masculine | mkN "quantité" feminine ; -- tocheck
lin amount_V = mkV (mkV I.correspondre_V2) | mkV (mkV "monter") ; -- tocheck
lin amour_N = mkN "amant" | mkN "intimité" | mkN "liaison" ; -- UWN
lin amp_N = variants {} ; --
lin ampere_N = mkN "ampère" masculine ; -- tocheck
lin ampersand_N = mkN "esperluette" feminine ; -- tocheck
lin amphetamine_N = mkN "amphétamine" feminine ; -- tocheck
lin amphibia_N = mkN "amphibia" | mkN "amphibien" ; -- UWN
lin amphibian_N = mkN "amphibien" masculine ; -- tocheck
lin amphibious_A = mkA "amphibie" ; -- tocheck
lin amphibole_N = mkN "amphibole" feminine ; -- tocheck
lin amphibolite_N = mkN "amphibolite" ; -- UWN
lin amphibology_N = mkN "amphibologie" ; -- UWN
lin amphiprostylar_A = mkA "amphiprostyle" ; -- UWN
lin amphistylar_A = mkA "amphiprostyle" ; -- UWN
lin amphitheatre_N = mkN "amphithéâtre" masculine ; -- tocheck
lin amphiuma_N = mkN "amphiuma" ; -- UWN
lin amphora_N = mkN "amphore" feminine ; -- tocheck
lin amphoteric_A = mkA "amphotère" ; -- UWN
lin ample_A = mkA "ample" ; -- tocheck
lin amplifier_N = mkN "amplificateur" masculine ; -- tocheck
lin amplitude_N = mkN "amplitude" feminine ; -- tocheck
lin ampoule_N = mkN "ampoule" feminine ; -- tocheck
lin amputate_V2 = mkV2 (mkV "amputer") ; -- tocheck
lin amputation_N = mkN "amputation" feminine ; -- tocheck
lin amsterdam_PN = mkPN "Amsterdam" ; -- status=guess src=geonames
lin amulet_N = mkN "amulette" feminine ; -- tocheck
lin amuse_V2 = mkV2 (mkV "amuser") ; -- tocheck
lin amusement_N = mkN "amusement" masculine ; -- tocheck
lin amusing_A = mkA "amusant" ; -- tocheck
lin amygdala_N = mkN "amygdale" | mkN "amygdale_cérébrale" | mkN "complexe_amygdalien" ; -- UWN
lin amylase_N = mkN "amylase" ; -- tocheck
lin amyloidosis_N = mkN "amylose" ; -- UWN
lin anabolism_N = mkN "anabolisme" masculine ; -- tocheck
lin anachronism_N = mkN "anachronisme" masculine ; -- tocheck
lin anachronistic_A = mkA "anachronique" ; -- tocheck
lin anachronistically_Adv = mkAdv "anachroniquement" ; -- UWN
lin anaclitic_A = mkA "anaclitique" ; -- tocheck
lin anacoluthia_N = mkN "anacoluthe" ; -- UWN
lin anaconda_N = mkN "anaconda" masculine ; -- tocheck
lin anadiplosis_N = mkN "anadiplose" | mkN "réduplication" ; -- UWN
lin anadromous_A = mkA "anadrome" ; -- tocheck
lin anaesthesia_N = mkN "anesthésie" feminine ; -- tocheck
lin anaesthetist_N = mkN "anesthésiste" ; -- UWN
lin anagogic_A = mkA "anagogique" ; -- UWN
lin anagram_N = mkN "anagramme" feminine ; -- tocheck
lin anal_A = mkA "anal" ; -- tocheck
lin analects_N = mkN "analectes" | mkN "entretiens" | mkN "entretiens_de_confucius" ; -- UWN
lin analeptic_N = mkN "analeptique" ; -- UWN
lin analgesia_N = mkN "analgésie" feminine ; -- tocheck
lin analgesic_A = mkA "analgésique" ; -- UWN
lin analgesic_N = mkN "analgésique" masculine ; -- tocheck
lin analogical_A = mkA "analogique" ; -- tocheck
lin analogous_A = mkA "analogue" ; -- tocheck
lin analogue_A = mkA "analogique" | mkA "analogue" | mkA "linéaire" ; -- UWN
lin analogy_N = mkN "analogie" feminine ; -- tocheck
lin analyse_V2 = variants {} ; --
lin analysis_N = mkN "analyse" feminine ; -- tocheck
lin analyst_N = mkN "analyste" masculine ; -- tocheck
lin analytic_A = mkA "analytique" ; -- tocheck
lin analyzable_A = mkA "analysable" ; -- tocheck
lin analyze_V2 = mkV2 (mkV "analyser") ; -- tocheck
lin analyzer_N = mkN "analyseur" ; -- UWN
lin anapaest_N = mkN "anapeste" ; -- UWN
lin anapest_N = mkN "anapeste" masculine ; -- tocheck
lin anaphase_N = mkN "anaphase" ; -- UWN
lin anaphora_N = mkN "anaphore" feminine ; -- tocheck
lin anaphoric_A = mkA "anaphorique" ; -- tocheck
lin anaphylactic_A = mkA "anaphylactique" ; -- tocheck
lin anaphylaxis_N = mkN "anaphylaxie" feminine ; -- tocheck
lin anaplasmosis_N = mkN "anaplasmose" ; -- UWN
lin anapsid_N = mkN "Anapsides" | mkN "Chelonii" | mkN "Chéloniens" | mkN "anapsides" | mkN "cheloniens" | mkN "chelonii" | mkN "chéloniens" ; -- UWN
lin anarchic_A = mkA "anarchique" ; -- tocheck
lin anarchism_N = mkN "anarchisme" masculine ; -- tocheck
lin anarchistFem_N = mkN "anarchiste" | mkN "syndicaliste" ; -- UWN
lin anarchistMasc_N = mkN "anarchiste" | mkN "syndicaliste" ; -- UWN
lin anarchy_N = mkN "anarchie" feminine ; -- tocheck
lin anarthria_N = mkN "anarthrie" ; -- UWN
lin anastomosis_N = mkN "anastomose" ; -- UWN
lin anastylosis_N = mkN "anastylose" feminine ; -- tocheck
lin anathema_N = mkN "anathème" feminine ; -- tocheck
lin anatomical_A = mkA "anatomique" ; -- tocheck
lin anatomist_N = mkN "anatomiste" ; -- UWN
lin anatomy_N = mkN "anatomie" feminine ; -- tocheck
lin anatotitan_N = mkN "anatotitan" ; -- UWN
lin anatoxin_N = mkN "Anatoxine" | mkN "anatoxine" ; -- UWN
lin ancestor_N = mkN "ancêtre" ; -- tocheck
lin ancestral_A = mkA "ancestral" ; -- tocheck
lin ancestry_N = mkN "ascendance" feminine ; -- tocheck
lin anchor_N = mkN "ancre" feminine ; -- tocheck
lin anchor_V = mkV "ancre" | mkV "ancrer" ; -- UWN
lin anchor_V2 = mkV2 (mkV "ancrer") ; -- tocheck
lin anchorite_N = mkN "anachorète" masculine ; -- tocheck
lin anchorman_N = mkN "présentateur" ; -- tocheck
lin anchovy_N = mkN "anchois" masculine ; -- tocheck
lin anchusa_N = mkN "anchusa" ; -- UWN
lin ancient_A = mkA "antique" | mkA "ancien" ; -- tocheck
lin ancientness_N = mkN "Antiquité" | mkN "ancienneté" ; -- UWN
lin ancillary_A = mkA "subordonné" ; -- tocheck
lin ancona_PN = mkPN "Ancône" ; -- status=guess src=geonames
lin and_Conj = S.and_Conj ;
lin andesite_N = mkN "andésite" ; -- UWN
lin andiron_N = mkN "chien" ; -- UWN
lin andorra_PN = mkPN "Andorre" ; -- status=guess src=geonames
lin andover_PN = mkPN "Andover" ; -- status=guess src=geonames
lin andradite_N = mkN "andradite" ; -- UWN
lin andrena_N = mkN "andrena" ; -- UWN
lin androgen_N = mkN "androgène" masculine ; -- tocheck
lin androgynous_A = mkA "asexué" | mkA "androgyne" ; -- tocheck
lin androgyny_N = mkN "androgynie" feminine ; -- tocheck
lin android_N = mkN "androïde" masculine ; -- tocheck
lin androphobia_N = mkN "androphobie" feminine ; -- tocheck
lin androsterone_N = mkN "androstérone" ; -- UWN
lin anecdotal_A = mkA "anecdotique" ; -- tocheck
lin anecdote_N = mkN "anecdote" feminine ; -- tocheck
lin anecdotic_A = mkA "anecdotique" ; -- UWN
lin anecdotist_N = mkN "anecdotier" masculine ; -- tocheck
lin anemia_N = mkN "anémie" feminine ; -- tocheck
lin anemometer_N = mkN "anémomètre" ; -- UWN
lin anemone_N = mkN "anémone" feminine ; -- tocheck
lin anencephaly_N = mkN "anencéphalie" ; -- UWN
lin anesthesia_N = mkN "anesthésie" feminine ; -- tocheck
lin anesthesiologist_N = mkN "anesthésiste" ; -- tocheck
lin anesthesiology_N = mkN "anesthésiologie" ; -- UWN
lin anesthetic_N = mkN "anesthésie" feminine ; -- tocheck
lin anesthetist_N = mkN "anesthésiste" ; -- UWN
lin anesthetize_V2 = mkV2 (mkV "anesthésier") ; -- tocheck
lin anestrus_N = mkN "anoestrus" masculine ; -- tocheck
lin aneuploid_A = mkA "aneuploïde" ; -- UWN
lin aneuploidy_N = mkN "aneuploïdie" ; -- UWN
lin aneurysm_N = mkN "anévrisme" masculine ; -- tocheck
lin aneurysmal_A = mkA "anévrysmatique" ; -- UWN
lin anew_Adv = mkAdv "derechef" ; -- UWN
lin angel_N = mkN "ange" masculine ; -- tocheck
lin angelic_A = mkA "angélique" ; -- tocheck
lin angelica_N = mkN "angélique" feminine ; -- tocheck
lin angelology_N = mkN "angélologie" ; -- tocheck
lin anger_N = mkN "colère" feminine ; -- tocheck
lin anger_V2 = variants {} ; --
lin angers_PN = mkPN "Angers" ; -- status=guess src=geonames
lin angina_N = mkN "angine" | mkN "angine_de_poitrine" ; -- UWN
lin angiogram_N = mkN "angiographie" ; -- UWN
lin angiography_N = mkN "angiographie" ; -- UWN
lin angiology_N = mkN "angiologie" | mkN "angéiologie" ; -- UWN
lin angioma_N = mkN "angiome" masculine ; -- tocheck
lin angiosperm_N = mkN "Angiospermes" | mkN "Magnoliophyta" | mkN "angiosperme" | mkN "angiospermes" | mkN "fleur" | mkN "magnoliophyta" | mkN "plantes_à_fleurs" ; -- UWN
lin angle_N = mkN "angle" masculine ; -- tocheck
lin anglicism_N = mkN "anglicisme" ; -- tocheck
lin angling_N = mkN "pêche" | mkN "pêche_à_la_ligne" ; -- UWN
lin anglophilFem_N = variants {} ; ---- sense to be split
lin anglophilMasc_N = variants {} ; ---- sense to be split
lin anglophileFem_N = variants {} ; ---- sense to be split
lin anglophileMasc_N = variants {} ; ---- sense to be split
lin angola_PN = mkPN "Angola" ; -- status=guess src=geonames
lin angostura_N = mkN "angostura" ; -- UWN
lin angry_A = mkA "fâché" ; -- tocheck
lin angst_N = mkN "angoisse" ; -- UWN
lin angstrom_N = mkN "ångström" masculine | mkN "angstrom" masculine ; -- tocheck
lin anguilla_PN = mkPN "Anguilla" ; -- status=guess src=geonames
lin anguish_N = mkN "torture" | mkN "torturer" | mkN "tourmenter" ; -- UWN
lin angular_A = mkA "angulaire" | mkA "anguleux" ; -- tocheck
lin angus_PN = mkPN "Angus" ; -- status=guess src=geonames
lin anhedonia_N = mkN "anhédonie" feminine ; -- tocheck
lin anhidrosis_N = mkN "anhidrose" ; -- UWN
lin anhydride_N = mkN "anhydride" masculine ; -- tocheck
lin anhydrous_A = mkA "anhydre" ; -- tocheck
lin ani_N = mkN "ani" ; -- UWN
lin aniline_N = mkN "aniline" feminine ; -- tocheck
lin anima_N = mkN "anima" ; -- UWN
lin animadversion_N = mkN "reprobation" ; -- tocheck
lin animal_N = L.animal_N ;
lin animalcule_N = mkN "animalcule" masculine ; -- tocheck
lin animate_A = mkA "animer" ; -- UWN
lin animatedly_A = variants {} ;
lin animatedly_Adv = adjAdv animatedly_A ; -- derived
lin animation_N = mkN "animation" ; -- tocheck
lin animator_N = mkN "animateur" masculine ; -- tocheck
lin anime_N = mkN "animé" masculine ; -- tocheck
lin animism_N = mkN "animisme" masculine ; -- tocheck
lin animist_N = mkN "animiste" ; -- tocheck
lin animosity_N = mkN "animosité" feminine ; -- tocheck
lin animus_N = mkN "acharnement" | mkN "animosité" ; -- UWN
lin anion_N = mkN "anion" masculine ; -- tocheck
lin anise_N = mkN "anis" masculine ; -- tocheck
lin aniseed_N = mkN "anis" | mkN "anis_vert" | mkN "graine_d'anis" ; -- UWN
lin anisette_N = mkN "anisette" ; -- UWN
lin anisotropic_A = mkA "anisotrope" ; -- tocheck
lin anisotropy_N = mkN "anisotropie" feminine ; -- tocheck
lin anjou_N = mkN "anjou" ; -- UWN
lin ankara_PN = mkPN "Ankara" ; -- status=guess src=geonames
lin ankle_N = mkN "cheville" feminine ; -- tocheck
lin anklebone_N = mkN "talus" masculine ; -- tocheck
lin anklet_N = mkN "jambelet" masculine ; -- tocheck
lin ankylosaur_N = mkN "ankylosaure" | mkN "ankylosaurus" ; -- UWN
lin ankylosis_N = mkN "ankylose" ; -- UWN
lin anna_N = mkN "anne" ; -- UWN
lin annalist_N = mkN "annaliste" masculine ; -- tocheck
lin annan_PN = mkPN "Annan" ; -- status=guess src=geonames
lin annealing_N = mkN "recuit" masculine ; -- tocheck
lin annelid_N = mkN "annélidé" masculine ; -- tocheck
lin annex_N = mkN "annexe" ; -- tocheck
lin annex_V2 = mkV2 (mkV "annexer") ; -- tocheck
lin annexation_N = mkN "annexion" feminine ; -- tocheck
lin annexe_N = mkN "aile" | mkN "annexe" | mkN "annexion" ; -- UWN
lin annihilate_V2 = mkV2 (mkV "annihiler") ; -- tocheck
lin annihilation_N = mkN "annihilation" ; -- UWN
lin annihilator_N = mkN "annihilateur" ; -- UWN
lin anniversary_N = mkN "anniversaire" masculine ; -- tocheck
lin annotate_V2 = mkV2 (mkV "annoter") ; -- tocheck
lin annotation_N = mkN "annotation" feminine ; -- tocheck
lin announce_V2 = mkV2 (mkV "annoncer") ; -- tocheck
lin announce_VS = variants {} ; -- mkV2 (mkV "annoncer") ; -- tocheck
lin announcement_N = mkN "annonce" feminine ; -- tocheck
lin announcer_N = mkN "annonceur" masculine ; -- tocheck
lin annoy_V2 = mkV2 (mkV "gêner") ; -- tocheck
lin annoyance_N = mkN "irritation" feminine ; -- tocheck
lin annoying_A = mkA "agaçant" | mkA "embêtant" | mkA "ennuyeux" | mkA "gênant" | mkA "pénible" ; -- UWN
lin annual_A = mkA "annuel" ; -- tocheck
lin annual_N = mkN "annuel" ; -- UWN
lin annuity_N = mkN "rente" | mkN "retraite" | mkN "revenu" ; -- UWN
lin annul_V2 = mkV2 (mkV "annuler") ; -- tocheck
lin annular_A = mkA "annulaire" ; -- tocheck
lin annulment_N = mkN "annullation" ; -- tocheck
lin annulus_N = mkN "anneau" masculine ; -- tocheck
lin annunciate_V2 = mkV2 (mkV "annoncer") ; -- tocheck
lin annunciation_N = mkN "annonce" | mkN "annonciation" | mkN "déclaration" ; -- UWN
lin anoa_N = mkN "anoa" ; -- tocheck
lin anode_N = mkN "anode" feminine ; -- tocheck
lin anodyne_A = mkA "apaisant" ; -- tocheck
lin anodyne_N = mkN "analgésique" masculine | mkN "calmant" masculine ; -- tocheck
lin anoint_V2 = mkV2 (mkV I.oindre_V2) ; -- tocheck
lin anointing_N = mkN "onction" ; -- UWN
lin anointment_N = mkN "onction" ; -- UWN
lin anomaly_N = mkN "anomalie" feminine ; -- tocheck
lin anomie_N = mkN "anomie" feminine ; -- tocheck
lin anonymity_N = mkN "anonymat" ; -- tocheck
lin anonymous_A = mkA "anonyme" ; -- tocheck
lin anopheles_N = mkN "anophèle" masculine ; -- tocheck
lin anopia_N = mkN "manque_de_vision" ; -- UWN
lin anorak_N = mkN "anorak" masculine ; -- tocheck
lin anorexia_N = mkN "anorexie" feminine ; -- tocheck
lin anorexic_A = mkA "anorexique" ; -- UWN
lin anorexic_N = mkN "anorexique" ; -- UWN
lin anorthite_N = mkN "anorthite" ; -- UWN
lin anosmia_N = mkN "anosmie" feminine ; -- tocheck
lin anosmic_A = mkA "anosmique" ; -- tocheck
lin another_Det = mkDet "autre" ;
lin anoxia_N = mkN "anoxie" feminine ; -- tocheck
lin anshan_PN = mkPN "Anshan" ; -- status=guess src=geonames
lin answer_N = mkN "réponse" feminine | mkN "solution" ; -- tocheck
lin answer_V = variants {} ; -- mkV2 (mkV I.répondre_V2) ; -- tocheck
lin answer_V2 = mkV2 (mkV I.répondre_V2) ; -- tocheck
lin answer_V2S = L.answer_V2S ;
lin answer_back_V2 = mkV2 (advV OP_answer_V OP_back_Adv ) ; -- guess-p-verb
lin answer_for_V2 = prepV2 OP_answer_V OP_for_Prep ; -- guess-p-verb
lin ant_N = mkN "fourmi" feminine ; -- tocheck
lin antagonism_N = mkN "antagonisme" masculine ; -- tocheck
lin antagonistic_A = mkA "antagonique" ; -- tocheck
lin antbird_N = mkN "thamnophilidae" | mkN "thamnophilidés" ; -- UWN
lin ant_eater_N = mkN "fourmilier" masculine ; -- tocheck
lin antebellum_A = mkA "d'avant-guerre" ; -- tocheck
lin antecedence_N = mkN "priorité" ; -- UWN
lin antecedent_A = mkA "antécédent" | mkA "antérieur" | mkA "précédent" ; -- UWN
lin antecedent_N = mkN "antécédent" masculine | mkN "ascendant" masculine ; -- tocheck
lin antechamber_N = mkN "antichambre" feminine ; -- tocheck
lin antediluvian_A = mkA "antédiluvien" ; -- tocheck
lin antediluvian_N = mkN "antédiluvien" ; -- UWN
lin antelope_N = mkN "antilope" feminine ; -- tocheck
lin antenatal_A = mkA "anténatal" ; -- tocheck
lin antenna_N = mkN "antenne" feminine ; -- tocheck
lin antenuptial_A = mkA "prénuptial" ; -- tocheck
lin antepenultimate_A = mkA "antépénultième" ; -- tocheck
lin anterior_A = mkA "antérieur" ; -- tocheck
lin anterograde_A = mkA "antérograde" ; -- tocheck
lin anteroom_N = mkN "antichambre" | mkN "hall" | mkN "vestibule" ; -- UWN
lin anthem_N = mkN "hymne" masculine | mkN "hymne" feminine ; -- tocheck
lin anther_N = mkN "anthère" feminine ; -- tocheck
lin ant_hill_N = mkN "fourmilière" ; -- tocheck
lin anthologist_N = mkN "anthologiste" ; -- tocheck
lin anthology_N = mkN "anthologie" ; -- UWN
lin anthony_PN = mkPN "Anthony" ; -- status=guess src=geonames
lin anthophyllite_N = mkN "anthophyllite" ; -- UWN
lin anthracite_N = mkN "anthracite" masculine ; -- tocheck
lin anthracosis_N = mkN "silicose" ; -- UWN
lin anthrax_N = mkN "charbon" ; -- tocheck
lin anthropic_A = mkA "anthropique" ; -- UWN
lin anthropocentric_A = mkA "anthropocentrique" ; -- tocheck
lin anthropocentrism_N = mkN "anthropocentrisme" masculine ; -- tocheck
lin anthropoid_A = mkA "anthropoïde" ; -- UWN
lin anthropological_A = mkA "anthropologique" ; -- tocheck
lin anthropologistFem_N = mkN "anthropologue" feminine ; -- tocheck
lin anthropologistMasc_N = mkN "anthropologue" masculine ; -- tocheck
lin anthropology_N = mkN "anthropologie" feminine ; -- tocheck
lin anthropometric_A = mkA "anthropométrique" ; -- UWN
lin anthropometry_N = mkN "anthropométrie" ; -- UWN
lin anthropomorphic_A = mkA "anthropomorphique" ; -- UWN
lin anthropomorphism_N = mkN "anthropomorphisme" masculine ; -- tocheck
lin anthropophagy_N = mkN "anthropophagie" feminine ; -- tocheck
lin anthurium_N = mkN "anthurium" ; -- UWN
lin anti_aircraft_A = mkA "anti-aérien" ; -- tocheck
lin antialiasing_N = mkN "anticrènelage" ; -- UWN
lin antibacterial_A = mkA "antibactérien" ; -- tocheck
lin antibacterial_N = mkN "antibactérien" masculine ; -- tocheck
lin antibiotic_A = mkA "antibiotique" ; -- tocheck
lin antibiotic_N = mkN "antibiotique" masculine ; -- tocheck
lin antibody_N = mkN "anticorps" masculine ; -- tocheck
lin antic_A = mkA "fantastique" | mkA "grotesque" ; -- UWN
lin anticancer_A = mkA "anticancéreux" ; -- UWN
lin anticipate_V = variants {} ; -- mkV2 (mkV "anticiper") ; -- tocheck
lin anticipate_V2 = mkV2 (mkV "anticiper") ; -- tocheck
lin anticipate_VS = variants {} ; -- mkV2 (mkV "anticiper") ; -- tocheck
lin anticipate_VV = variants {} ; -- mkV2 (mkV "anticiper") ; -- tocheck
lin anticipation_N = mkN "anticipation" | mkN "prédiction" | mkN "prévision" ; -- UWN
lin anticlockwise_Adv = mkAdv "sens_antihoraire" ; -- UWN
lin anticoagulant_N = mkN "Anticoagulant" | mkN "anticoagulant" | mkN "anticoagulants" ; -- UWN
lin anticonvulsant_N = mkN "Antiépileptique" | mkN "anticomitiaux" | mkN "anticonvulsants" | mkN "anticonvulsivant" | mkN "antiépileptique" | mkN "antiépileptiques" ; -- UWN
lin anticyclone_N = mkN "anticyclone" masculine ; -- tocheck
lin anticyclonic_A = mkA "anticyclonique" ; -- tocheck
lin antidepressant_N = mkN "antidépresseur" masculine ; -- tocheck
lin antidote_N = mkN "alexipharmaque" masculine ; -- tocheck
lin antiemetic_N = mkN "antiémétique" ; -- UWN
lin antiferromagnetism_N = mkN "antiferromagnétisme" masculine ; -- tocheck
lin antifreeze_N = mkN "antigel" ; -- UWN
lin antifungal_N = mkN "antifongique" masculine ; -- tocheck
lin antigen_N = mkN "antigène" ; -- UWN
lin antigenic_A = mkA "antigénique" ; -- tocheck
lin antigua_PN = mkPN "Antigua" ; -- status=guess src=geonames
lin anti_hero_N = mkN "antihéros" ; -- tocheck
lin antihistamine_N = mkN "antihistaminique" masculine ; -- tocheck
lin antihypertensive_N = mkN "antihypertensif" masculine ; -- tocheck
lin antilepton_N = mkN "antilepton" masculine ; -- tocheck
lin antimacassar_N = mkN "têtière" ; -- tocheck
lin antimalarial_N = mkN "antipaludique" | mkN "antipaludéen" ; -- UWN
lin antimatter_N = mkN "antimatière" feminine ; -- tocheck
lin antimicrobial_A = mkA "antimicrobien" ; -- tocheck
lin antimony_N = mkN "antimoine" masculine ; -- tocheck
lin antimuon_N = mkN "antimuon" masculine ; -- tocheck
lin antineutrino_N = mkN "antineutrino" ; -- UWN
lin antineutron_N = mkN "antineutron" ; -- UWN
lin antinomy_N = mkN "antinomie" feminine ; -- tocheck
lin antioxidant_N = mkN "antioxydant" masculine ; -- tocheck
lin antiparticle_N = mkN "antiparticule" feminine ; -- tocheck
lin antipathetic_A = mkA "antagonique" ; -- UWN
lin anti_personnel_A = mkA "antipersonnel" ; -- UWN
lin antiperspirant_N = mkN "antisudorifique" masculine ; -- tocheck
lin antiphon_N = mkN "antienne" ; -- UWN
lin antiphonary_N = mkN "antiphonaire" ; -- UWN
lin antiphony_N = mkN "antienne" feminine ; -- tocheck
lin antiphrasis_N = mkN "antiphrase" ; -- UWN
lin antipode_N = mkN "antipode" ; -- UWN
lin antipollution_A = mkA "antipollution" ; -- UWN
lin antiproton_N = mkN "antiproton" masculine ; -- tocheck
lin antipyretic_A = mkA "antipyrétique" ; -- tocheck
lin antipyretic_N = mkN "antipyrétique" ; -- tocheck
lin antiquark_N = mkN "antiquark" masculine ; -- tocheck
lin antiquated_A = mkA "vieilli" ; -- tocheck
lin antique_N = mkN "antique" masculine ; -- tocheck
lin antiquity_N = mkN "Antiquité" feminine | mkN "antiquité" feminine ; -- tocheck
lin antiseptic_A = mkA "antiseptique" ; -- tocheck
lin antiseptic_N = mkN "antiseptique" ; -- tocheck
lin antisocial_A = mkA "asocial" ; -- UWN
lin antispasmodic_N = mkN "antispasmodique" | mkN "spasmolytique" ; -- UWN
lin antistrophe_N = mkN "antistrophe" ; -- UWN
lin antitauon_N = mkN "antitauon" masculine ; -- tocheck
lin antithesis_N = mkN "antithèse" feminine ; -- tocheck
lin antithetical_A = mkA "antithétique" ; -- tocheck
lin antithyroid_A = mkA "antithyroïdien" ; -- UWN
lin antitoxic_A = mkA "antitoxique" ; -- UWN
lin antitoxin_N = mkN "antitoxine" ; -- UWN
lin antitussive_N = mkN "antitussif" ; -- UWN
lin antiviral_A = mkA "antiviral" ; -- UWN
lin antiviral_N = mkN "antiviral" ; -- UWN
lin antler_N = mkN "bois" masculine ; -- tocheck
lin antony_PN = mkPN "Antony" ; -- status=guess src=geonames
lin antonym_N = mkN "antonyme" masculine ; -- tocheck
lin antonymy_N = mkN "antonymie" feminine ; -- tocheck
lin antrim_PN = mkPN "Antrim" ; -- status=guess src=geonames
lin antrum_N = mkN "antre" masculine ; -- tocheck
lin antsy_A = mkA "agité" ; -- tocheck
lin antwerp_PN = mkPN "Antwerp" ; -- status=guess src=geonames
lin anurous_A = mkA "anoure" ; -- tocheck
lin anus_N = mkN "anus" masculine ; -- tocheck
lin anvil_N = mkN "enclume" feminine ; -- tocheck
lin anxiety_N = mkN "anxiété" feminine ; -- tocheck
lin anxious_A = mkA "anxieux" | mkA "désireux" ; -- tocheck
lin anybody_NP = S.mkNP (mkPN "n'importe qui") ;
lin anymore_Adv = mkAdv "plus" ; -- UWN
lin anyone_NP = S.mkNP (mkPN "n'importe qui") ;
lin anything_NP = S.mkNP (mkPN "n'importe quoi") ;
lin anyway_Adv = mkAdv "en tout cas" ;
lin anywhere_Adv = mkAdv "n'importe où" ;
lin aorist_N = mkN "aoriste" masculine ; -- tocheck
lin aorta_N = mkN "aorte" feminine ; -- tocheck
lin aortal_A = mkA "aortique" ; -- tocheck
lin apace_Adv = mkAdv "rapidement" ; -- tocheck
lin apache_N = mkN "apache" | mkN "apaches" ; -- UWN
lin apadana_N = mkN "apadana" ; -- UWN
lin apanage_N = mkN "apanage" masculine ; -- tocheck
lin apart_Adv = mkAdv "séparé" ; -- tocheck
lin apartheid_N = mkN "apartheid" masculine ; -- tocheck
lin apartment_N = L.apartment_N ;
lin apathetic_A = mkA "indifférent" ; -- tocheck
lin apathy_N = mkN "apathie" feminine ; -- tocheck
lin apatite_N = mkN "apatite" ; -- tocheck
lin ape_N = mkN "singe" masculine ; -- tocheck
lin ape_V2 = mkV2 (mkV "singer") ; -- tocheck
lin apeldoorn_PN = mkPN "Apeldoorn" ; -- status=guess src=geonames
lin aperiodic_A = mkA "apériodique" ; -- UWN
lin aperitif_N = mkN "apéritif" ; -- UWN
lin aperture_N = mkN "ouverture" feminine ; -- tocheck
lin apery_N = mkN "mimétisme" ; -- UWN
lin apex_N = mkN "apex" masculine | mkN "apogée" feminine ; -- tocheck
lin aphaeresis_N = mkN "aphérèse" ; -- UWN
lin aphakia_N = mkN "aphakie" ; -- UWN
lin aphanite_N = mkN "aphanite" ; -- UWN
lin aphasia_N = mkN "aphasie" feminine ; -- tocheck
lin aphelion_N = mkN "aphélie" masculine ; -- tocheck
lin apheresis_N = mkN "aphérèse" feminine ; -- tocheck
lin aphesis_N = mkN "aphérèse" feminine ; -- tocheck
lin aphid_N = mkN "Aphidoidea" | mkN "aphidoidea" | mkN "puceron" ; -- UWN
lin aphonia_N = mkN "aphonie" ; -- UWN
lin aphorism_N = mkN "aphorisme" masculine ; -- tocheck
lin aphotic_A = mkA "aphotique" ; -- UWN
lin aphrodisiac_A = mkA "aphrodisiaque" ; -- tocheck
lin aphrodisiac_N = mkN "aphrodisiaque" masculine ; -- tocheck
lin apiarist_N = mkN "apiculteur" ; -- UWN
lin apiary_N = mkN "rucher" masculine ; -- tocheck
lin apiece_Adv = mkAdv "chacun" ; -- tocheck
lin aplasia_N = mkN "aplasie" ; -- UWN
lin aplite_N = mkN "Aplite" | mkN "aplite" ; -- UWN
lin aplomb_N = mkN "cool" ; -- UWN
lin apnea_N = mkN "apnée" ; -- tocheck
lin apoapsis_N = mkN "apoapse" ; -- tocheck
lin apocalypse_N = mkN "apocalypse" feminine ; -- tocheck
lin apocalyptic_A = mkA "apocalyptique" ; -- tocheck
lin apocope_N = mkN "apocope" feminine ; -- tocheck
lin apocrine_A = mkA "apocrine" ; -- UWN
lin apocryphal_A = mkA "apocryphe" ; -- tocheck
lin apodictic_A = mkA "apodictique" ; -- tocheck
lin apogee_N = mkN "apogée" masculine ; -- tocheck
lin apolitical_A = mkA "apolitique" ; -- tocheck
lin apologetic_A = mkA "apologique" ; -- UWN
lin apologetics_N = mkN "apologétique" ; -- UWN
lin apologize_V = mkV (reflV (mkV "excuser")) ; -- tocheck
lin apology_N = mkN "excuse" feminine | mkN "apologie" feminine ; -- tocheck
lin apomixis_N = mkN "apomixie" ; -- UWN
lin aponeurosis_N = mkN "aponévrose" feminine ; -- tocheck
lin apophasis_N = mkN "prétérition" ; -- UWN
lin apophatic_A = mkA "apophatique" ; -- UWN
lin apophthegm_N = mkN "aphorisme" | mkN "fr" ; -- UWN
lin apophysis_N = mkN "apophyse" feminine ; -- tocheck
lin apoplectic_A = mkA "apoplectique" ; -- UWN
lin apoptosis_N = mkN "apoptose" ; -- UWN
lin aposiopesis_N = mkN "aposiopèse" feminine ; -- tocheck
lin apostasy_N = mkN "apostasie" feminine ; -- tocheck
lin apostate_A = mkA "apostat" ; -- UWN
lin apostate_N = mkN "apostat" masculine ; -- tocheck
lin apostle_N = mkN "apôtre" masculine ; -- tocheck
lin apostolic_A = mkA "apostolique" ; -- tocheck
lin apostrophe_N = mkN "apostrophe" feminine ; -- tocheck
lin apostrophize_V2 = mkV2 (mkV "apostropher") ; -- tocheck
lin apothecium_N = mkN "apothécie" ; -- UWN
lin apothegm_N = mkN "apophthegme" masculine ; -- tocheck
lin apotheosis_N = mkN "apothéose" feminine ; -- tocheck
lin appalling_A = mkA "affreux" ; -- UWN
lin appanage_N = mkN "apanage" ; -- UWN
lin apparatchik_N = mkN "apparatchik" masculine ; -- tocheck
lin apparatus_N = mkN "appareil" masculine ; -- tocheck
lin apparel_N = mkN "vêtement" | mkN "vêtements" ; -- UWN
lin apparent_A = mkA "manifeste" | mkA "apparent" ; -- tocheck
lin apparition_N = mkN "apparition" ; -- UWN
lin apparitional_A = mkA "fantomatique" | mkA "spectral" ; -- UWN
lin appeal_N = mkN "appel" masculine | mkN "attrait" masculine ; -- tocheck
lin appeal_V = variants {} ; --
lin appeal_V2 = variants {} ; --
lin appealing_A = variants {} ;
lin appear_V = I.paraître_V ;
lin appear_VA = mkVA (mkV "sembler") ;
lin appear_VS = mkVS (mkV "sembler") ;
lin appear_VV = mkVV (mkV "sembler") ;
lin appearance_N = mkN "apparition" feminine | mkN "apparence" feminine | mkN "comparution" feminine ; -- tocheck
lin appease_V2 = mkV2 (mkV "apaiser") ; -- tocheck
lin appeasement_N = mkN "soulagement" ; -- UWN
lin appellant_N = mkN "appelant" masculine ; -- tocheck
lin appellation_N = mkN "appellation" | mkN "dénomination" | mkN "désignation" | mkN "nom" | mkN "titre" ; -- UWN
lin append_V2 = mkV2 (mkV I.appendre_V2) ; -- tocheck
lin appendectomy_N = mkN "appendicectomie" feminine ; -- tocheck
lin appendicitis_N = mkN "appendicite" ; -- tocheck
lin appendix_N = mkN "annexe" feminine | mkN "appendice" masculine ; -- tocheck
lin appertain_V = mkV (mkV I.appartenir_V2) ; -- tocheck
lin appetite_N = mkN "appétit" masculine ; -- tocheck
lin appetizer_N = mkN "amuse-gueules" ; -- tocheck
lin appetizing_A = mkA "appétissant" ; -- tocheck
lin applaud_V = mkV "applaudir" | mkV "saluer" ; -- UWN
lin applaud_V2 = mkV2 (mkV "applaudir") | mkV2 (mkV "louer") ; -- tocheck
lin applause_N = mkN "acclamer" ; -- tocheck
lin apple_N = L.apple_N ;
lin applesauce_N = mkN "balivernes" ; -- tocheck
lin applet_N = mkN "appliquette" ; -- tocheck
lin appliance_N = mkN "appareil" masculine ; -- tocheck
lin applicability_N = mkN "pertinence" ; -- UWN
lin applicable_A = variants {} ; --
lin applicant_N = mkN "demandeur" masculine ; -- tocheck
lin application_N = mkN "application" feminine | mkN "candidature" feminine ; -- tocheck
lin applicative_A = mkA "applicatif" ; -- tocheck
lin applied_A = variants {} ; --
lin apply_1_V2 = mkV2 (mkV "appliquer") ;
lin apply_2_V2 = mkV2 (mkV "appliquer") ; ----
lin apply_V = reflV (mkV "appliquer") ; ----
lin apply_V2 = mkV2 (mkV "appliquer") ;
lin apply_V2V = mkV2V (mkV "appliquer") ;
lin apply_VV = mkVV (mkV "appliquer") | mkVV (reflV (mkV I.inscrire_V2)) ;
lin apply_for_V2 = prepV2 OP_apply_V OP_for_Prep ; -- guess-p-verb
lin appoint_V2 = variants {} ; -- mkV3 (mkV "fixer") | mkV3 (mkV "désigner") ; -- tocheck
lin appoint_V2V = variants {} ; -- variants {} ; -- mkV3 (mkV "fixer") | mkV3 (mkV "désigner") ; -- tocheck
lin appoint_V3 = mkV3 (mkV "fixer") | mkV3 (mkV "désigner") ; -- tocheck
lin appointed_A = variants {} ; --
lin appointment_N = mkN "rendez-vous" | mkN "nomination" feminine ; -- tocheck
lin apportionment_N = mkN "allocation" | mkN "découpage" | mkN "répartition" ; -- UWN
lin apposite_A = mkA "convenable" | mkA "pertinent" | mkA "échéant" ; -- UWN
lin apposition_N = mkN "apposition" feminine ; -- tocheck
lin appraisal_N = mkN "estimation" feminine ; -- tocheck
lin appraise_V2 = mkV2 (mkV "estimer") ; -- tocheck
lin appreciable_A = mkA "appréciable" ; -- tocheck
lin appreciate_V = mkV "apprécier" | {-UWN-} mkV "aimer" | mkV "estimer" ; -- UWN
lin appreciate_V2 = mkV2 (mkV "apprécier") ;
lin appreciation_N = mkN "goût" | mkN "saveur" ; -- UWN
lin apprehend_V2 = mkV2 (mkV "appréhender") ; -- tocheck
lin apprehensible_A = mkA "comprenable" | mkA "compréhensible" ; -- UWN
lin apprehensive_A = mkA "soucieux" ; -- tocheck
lin apprentice_N = mkN "apprenti" masculine ; -- tocheck
lin apprenticeship_N = mkN "apprenti" | mkN "apprentissage" | mkN "apprentissage_professionnel" ; -- UWN
lin approach_N = mkN "approche" feminine ; -- tocheck
lin approach_V = variants {} ; -- mkV2 (mkV "approcher") ; -- tocheck
lin approach_V2 = mkV2 (mkV "approcher") ; -- tocheck
lin approachable_A = mkA "approchable" ; -- tocheck
lin approbation_N = mkN "approbation" feminine ; -- tocheck
lin appropriate_A = mkA "approprié" ; -- tocheck
lin appropriate_V2 = mkV2 (mkV "approprier") ; -- tocheck
lin appropriation_N = mkN "affectation" | mkN "appropriation" | mkN "dotation" ; -- UWN
lin approval_N = mkN "approbation" feminine | mkN "agrément" masculine ; -- tocheck
lin approve_V = mkV "approuver" ; -- UWN
lin approve_V2 = mkV2 (mkV "approuver") ; -- tocheck
lin approved_A = variants {} ; --
lin approvingly_Adv = mkAdv "approbativement" ; -- UWN
lin approximate_A = mkA "approximant" | mkA "approximatif" ; -- tocheck
lin approximate_V2 = mkV2 (mkV "approximer") ; -- tocheck
lin approximation_N = mkN "rapprochement" masculine | mkN "approximation" feminine ; -- tocheck
lin apraxia_N = mkN "apraxie" ; -- UWN
lin apricot_N = mkN "abricot" masculine | mkN "abricotier" masculine ; -- tocheck
lin apron_N = mkN "tablier" masculine ; -- tocheck
lin apropos_Adv = mkAdv "au_fait" | mkAdv "soit_dit_en_passant" | mkAdv "à_propos" ; -- UWN
lin apse_N = mkN "abside" feminine ; -- tocheck
lin apsidal_A = mkA "absidal" ; -- UWN
lin apt_A = mkA "convenable" | mkA "pertinent" | mkA "échéant" ; -- UWN
lin aptitude_N = mkN "adresse" | mkN "aptitude" | mkN "habileté" | mkN "intelligence" ; -- UWN
lin aquaculture_N = mkN "aquaculture" feminine ; -- tocheck
lin aquamarine_N = mkN "agoua" | mkN "aigue-marine" | mkN "aqua" | mkN "turquoise" ; -- UWN
lin aquaphobia_N = mkN "aquaphobie" feminine ; -- tocheck
lin aquarium_N = mkN "aquarium" masculine ; -- tocheck
lin aquatic_A = mkA "aquatique" ; -- tocheck
lin aquatic_N = mkN "aqueux" ; -- UWN
lin aquavit_N = mkN "aquavit" ; -- UWN
lin aqueduct_N = mkN "aqueduc" masculine ; -- tocheck
lin aqueous_A = mkA "aqueux" ; -- tocheck
lin aquifer_N = mkN "aquifère" masculine ; -- tocheck
lin aquiline_A = mkA "aquilin" ; -- tocheck
lin arabesque_N = mkN "arabesque" ; -- tocheck
lin arabianFem_N = variants {} ; ---- sense to be split
lin arabianMasc_N = variants {} ; ---- sense to be split
lin arable_A = mkA "cultivable" ; -- UWN
lin arachnid_N = mkN "arachnide" ; -- tocheck
lin arachnoid_N = mkN "arachnida" | mkN "arachnide" ; -- UWN
lin arachnophobia_N = mkN "arachnophobie" ; -- tocheck
lin aragonite_N = mkN "aragonite" ; -- UWN
lin aralia_N = mkN "aralia" | mkN "aralies" ; -- UWN
lin arame_N = mkN "aramé" ; -- UWN
lin araucaria_N = mkN "araucaria" ; -- UWN
lin arbiter_N = mkN "arbitre" masculine ; -- tocheck
lin arbitrage_N = mkN "arbitrage" ; -- UWN
lin arbitrament_N = mkN "arbitrage" ; -- UWN
lin arbitrary_A = mkA "arbitraire" | mkA "quelconque" ; -- tocheck
lin arbitration_N = mkN "arbitrage" masculine ; -- tocheck
lin arbitrator_N = mkN "arbitre" ; -- UWN
lin arbor_N = mkN "pergola" | mkN "tonnelle" ; -- UWN
lin arboraceous_A = mkA "boisé" | mkA "sylvestre" ; -- UWN
lin arboreal_A = mkA "arboricole" ; -- UWN
lin arboretum_N = mkN "jardin_botanique" ; -- UWN
lin arborical_A = mkA "arboricole" ; -- UWN
lin arboriculture_N = mkN "arboriculture" ; -- UWN
lin arbour_N = mkN "pergola" | mkN "tonnelle" ; -- UWN
lin arbovirus_N = mkN "arbovirus" ; -- UWN
lin arbroath_PN = mkPN "Arbroath" ; -- status=guess src=geonames
lin arbutus_N = mkN "arbousier" | mkN "arbutus" ; -- UWN
lin arc_N = mkN "arc" masculine ; -- tocheck
lin arcade_N = mkN "arcade" feminine ; -- tocheck
lin arcadian_A = mkA "arcadien" | mkA "arcadienne" | mkA "bucolique" ; -- UWN
lin arcane_A = mkA "arcane" ; -- tocheck
lin arced_A = mkA "arqué" ; -- UWN
lin arch_A = mkA "espiègle" ; -- UWN
lin arch_N = mkN "arche" feminine | mkN "arc" masculine ; -- tocheck
lin archaebacteria_N = mkN "archaebacteria" ; -- UWN
lin archaeological_A = mkA "archéologique" ; -- tocheck
lin archaeologist_N = mkN "archéologue" ; -- tocheck
lin archaeology_N = mkN "archéologie" feminine ; -- tocheck
lin archaic_A = mkA "archaïque" ; -- tocheck
lin archaism_N = mkN "archaïsme" masculine ; -- tocheck
lin archangel_N = mkN "archange" ; -- tocheck
lin archbishop_N = mkN "archevêque" masculine ; -- tocheck
lin archdeacon_N = mkN "archidiacre" ; -- UWN
lin archdiocese_N = mkN "archidiocèse" feminine ; -- tocheck
lin archduchess_N = mkN "archiduchesse" feminine ; -- tocheck
lin archduchy_N = mkN "archiduché" masculine ; -- tocheck
lin archduke_N = mkN "archiduc" masculine ; -- tocheck
lin archenteron_N = mkN "archentéron" ; -- UWN
lin archer_N = mkN "archer" masculine ; -- tocheck
lin archery_N = mkN "tir_à_l'arc" ; -- UWN
lin archetypal_A = mkA "archétypal" ; -- tocheck
lin archetype_N = mkN "archétype" ; -- tocheck
lin archiepiscopal_A = mkA "archiépiscopal" ; -- tocheck
lin archimandrite_N = mkN "archimandrite" masculine ; -- tocheck
lin archipallium_N = mkN "archipallium" ; -- UWN
lin archipelago_N = mkN "archipel" masculine ; -- tocheck
lin architectFem_N = mkN "architecte" feminine ; -- tocheck
lin architectMasc_N = mkN "architecte" masculine ;
lin architectonics_N = mkN "tectonique" ; -- UWN
lin architectural_A = mkA "architectonique" | mkA "architectural" ; -- UWN
lin architecture_N = mkN "architecture" feminine ; -- tocheck
lin archive_N = mkN "archives" ; -- tocheck
lin archives_N = mkN "archives" ; -- UWN
lin archivist_N = mkN "archiviste" ; -- UWN
lin archosaur_N = mkN "Archosauria" | mkN "archosauria" | mkN "archosauriens" ; -- UWN
lin archpriest_N = mkN "archiprêtre" masculine ; -- tocheck
lin archway_N = mkN "arcade" feminine ; -- tocheck
lin arctic_N = mkN "arctique" | mkN "caoutchouc" | mkN "claque" | mkN "galoche" ; -- UWN
lin ardent_A = mkA "ardent" ; -- tocheck
lin ardor_N = mkN "ardeur" | mkN "ardeur" feminine ; -- tocheck
lin ardrossan_PN = mkPN "Ardrossan" ; -- status=guess src=geonames
lin arduous_A = mkA "ardu" ; -- tocheck
lin are_N = mkN "are" masculine ; -- tocheck
lin area_1_N = mkN "région" feminine | mkN "surface" ; ----
lin area_2_N = mkN "région" feminine | mkN "surface" ; ----
lin area_3_N = mkN "région" feminine | mkN "surface" ; ----
lin area_4_N = mkN "région" feminine | mkN "surface" ; ----
lin area_5_N = mkN "région" feminine | mkN "surface" ; ----
lin area_6_N = mkN "région" feminine | mkN "surface" ; ----
lin area_N = mkN "région" feminine ;
lin areca_N = mkN "areca" ; -- UWN
lin arena_N = mkN "arène" ; -- tocheck
lin arenaceous_A = mkA "sableux" ; -- UWN
lin arenavirus_N = mkN "arenaviridae" ; -- UWN
lin arenicolous_A = mkA "arénicole" ; -- tocheck
lin areola_N = mkN "aréole" ; -- tocheck
lin arethusa_N = mkN "arethusa" | mkN "arethusa_bulbosa" | mkN "aréthuse" ; -- UWN
lin argent_A = mkA "argent" ; -- tocheck
lin argent_N = mkN "argent" masculine ; -- tocheck
lin argentic_A = mkA "argentique" ; -- tocheck
lin argentina_PN = mkPN "Argentine" ; -- status=guess src=geonames
lin argentine_N = mkN "argentine" masculine ; -- tocheck
lin argentine_PN = mkPN "Argentine" ; -- status=guess src=geonames
lin argentite_N = mkN "acanthite" ; -- UWN
lin argil_N = mkN "argile" ; -- UWN
lin arginine_N = mkN "arginine" ; -- tocheck
lin argon_N = mkN "argon" masculine ; -- tocheck
lin argonaut_N = mkN "argonaute" ; -- tocheck
lin argot_N = mkN "argot" masculine ; -- tocheck
lin arguable_A = mkA "discutable" ; -- tocheck
lin argue_V = variants {} ; -- mkV2 (mkV "affirmer") | mkV2 (mkV "arguer") ; -- tocheck
lin argue_V2 = mkV2 (mkV "affirmer") | mkV2 (mkV "arguer") ; -- tocheck
lin argue_VS = variants {} ; -- mkV2 (mkV "affirmer") | mkV2 (mkV "arguer") ; -- tocheck
lin argue_down_V2 = prepV2 OP_argue_V OP_down_Prep ; -- guess-p-verb
lin argue_out_V2 = prepV2 OP_argue_V OP_out_Prep ; -- guess-p-verb
lin argument_N = mkN "argument" masculine | mkN "argumentation" feminine | mkN "querelle" feminine ; -- tocheck
lin argumentation_N = mkN "argumentation" ; -- UWN
lin argumentative_A = mkA "acariâtre" ; -- UWN
lin argus_N = mkN "argus" ; -- UWN
lin aria_N = mkN "aria" feminine ; -- tocheck
lin arid_A = mkA "aride" ; -- tocheck
lin aright_Adv = mkAdv "correctement" | mkAdv "droit" | mkAdv "juste" | mkAdv "proprement" ; -- UWN
lin aril_N = mkN "arille" ; -- UWN
lin arioso_N = mkN "arioso" ; -- UWN
lin arise_V = mkV (mkV "surgir") ; -- tocheck
lin aristocracy_N = mkN "aristocratie" feminine ; -- tocheck
lin aristocrat_N = mkN "aristocrate" | mkN "noble" | mkN "sang_bleu" ; -- UWN
lin aristocratic_A = mkA "aristocratique" ; -- tocheck
lin arithmetic_N = mkN "arithmétique" feminine | mkN "d'arithmétique" ; -- tocheck
lin arithmetical_A = mkA "arithmétique" ; -- UWN
lin arity_N = mkN "arité" masculine ; -- tocheck
lin arizona_PN = mkPN "Arizona" ; -- status=guess src=geonames
lin ark_N = mkN "arche" feminine ; -- tocheck
lin arm_1_N = mkN "bras" masculine ;
lin arm_2_N = mkN "arme" feminine ;
lin arm_N = mkN "bras" masculine | mkN "arme" feminine ; -- tocheck
lin arm_V = variants {} ; -- mkV2 (mkV "armer") ; -- tocheck
lin arm_V2 = mkV2 (mkV "armer") ; -- tocheck
lin armadale_PN = mkPN "Armadale" ; -- status=guess src=geonames
lin armadillo_N = mkN "tatou" masculine ; -- tocheck
lin armagh_PN = mkPN "Armagh" ; -- status=guess src=geonames
lin armament_N = mkN "armement" masculine ; -- tocheck
lin armature_N = mkN "armature" ; -- UWN
lin armchair_N = mkN "fauteuil" ; -- tocheck
lin armed_A = variants {} ; --
lin armet_N = mkN "armet" masculine ; -- tocheck
lin armful_N = mkN "brassée" feminine ; -- tocheck
lin arm_hole_N = mkN "emmanchure" feminine ; -- tocheck
lin armistice_N = mkN "armistice" masculine ; -- tocheck
lin armoire_N = mkN "armoire" ; -- UWN
lin armor_N = mkN "armure" feminine | mkN "cuirasse" feminine ; -- tocheck
lin armory_N = mkN "armurier" | mkN "arsenal" ; -- UWN
lin armoury_N = mkN "armoiries" | mkN "armurerie" feminine ; -- tocheck
lin armpit_N = mkN "aisselle" feminine ; -- tocheck
lin armrest_N = mkN "accoudoir" masculine ; -- tocheck
lin army_N = mkN "armée" feminine ; -- tocheck
lin arnhem_PN = mkPN "Arnhem" ; -- status=guess src=geonames
lin arnica_N = mkN "arnica" feminine ; -- tocheck
lin arnold_PN = mkPN "Arnold" ; -- status=guess src=geonames
lin aroma_N = mkN "arôme" masculine ; -- tocheck
lin aromatic_A = mkA "aromatique" ; -- tocheck
lin around_Adv = mkAdv "en ronde" ; ----
lin around_Prep = mkPrep "environ" ; ---- split: autour de
lin arousal_N = mkN "excitation" | mkN "éveil" ; -- tocheck
lin arouse_V2 = variants {} ; -- mkV2V (mkV "émoustiller") ; -- tocheck
lin arouse_V2V = mkV2V (mkV "émoustiller") ; -- tocheck
lin arpeggio_N = mkN "arpège" ; -- UWN
lin arquebus_N = mkN "arquebuse" ; -- UWN
lin arrack_N = mkN "arack" | mkN "arak" | mkN "araq" ; -- UWN
lin arrange_V = variants {} ; -- mkV2 (mkV "arranger") ; -- tocheck
lin arrange_V2 = mkV2 (mkV "arranger") ; -- tocheck
lin arrangement_N = mkN "arrangement" masculine ; -- tocheck
lin arranger_N = mkN "adaptateur" | mkN "arrangeur" ; -- UWN
lin arrant_A = mkA "entier" | mkA "parfait" | mkA "pur" ; -- UWN
lin arras_N = mkN "arras" | mkN "tapisserie" ; -- UWN
lin array_N = mkN "tableau" masculine ; -- tocheck
lin arrears_N = mkN "arriéré" masculine ; -- tocheck
lin arrest_N = mkN "arrestation" feminine ; -- tocheck
lin arrest_V2 = mkV2 (mkV "arrêter") ; -- tocheck
lin arrester_N = mkN "crosse_d'arrêt" ; -- UWN
lin arrival_N = mkN "arrivée" feminine ; -- tocheck
lin arrive_V = mkV "arriver" ; -- UWN
lin arrogant_A = mkA "arrogant" ; -- tocheck
lin arrogate_V2 = mkV2 (reflV (mkV "arroger")) P.genitive ; -- tocheck
lin arrow_N = mkN "flèche" feminine ; -- tocheck
lin arrowhead_N = mkN "queue-d’aronde" | mkN "sagittaire" ; -- UWN
lin arrowsmith_N = mkN "arrowsmith" ; -- UWN
lin arroyo_N = mkN "abime" | mkN "abîme" | mkN "arroyo" ; -- UWN
lin arsehole_N = mkN "con" masculine ; -- tocheck
lin arsenal_N = mkN "arsenal" masculine ; -- tocheck
lin arsenate_N = mkN "arséniate" masculine ; -- tocheck
lin arsenic_N = mkN "arsenic" masculine ; -- tocheck
lin arsenical_A = mkA "arsenical" ; -- UWN
lin arsenide_N = mkN "arséniure" masculine ; -- tocheck
lin arsenious_A = mkA "arsénieux" ; -- UWN
lin arsenopyrite_N = mkN "arsénopyrite" ; -- UWN
lin arsine_N = mkN "arsine" ; -- UWN
lin arsonist_N = mkN "incendiaire" ; -- tocheck
lin art_N = L.art_N ;
lin artemisia_N = mkN "armoise" feminine ; -- tocheck
lin arterial_A = mkA "artériel" ; -- tocheck
lin arteriole_N = mkN "artériole" ; -- UWN
lin arteriosclerosis_N = mkN "artériosclérose" feminine ; -- tocheck
lin arteritis_N = mkN "artérite" ; -- UWN
lin artery_N = mkN "artère" feminine ; -- tocheck
lin artesian_A = mkA "artésien" ; -- UWN
lin artful_A = mkA "artificiel" | mkA "artificieux" | mkA "artistique" ; -- tocheck
lin arthralgia_N = mkN "arthralgie" ; -- UWN
lin arthritic_A = mkA "arthritique" ; -- UWN
lin arthritis_N = mkN "arthrose" feminine ; -- tocheck
lin arthromere_N = mkN "métamère" ; -- tocheck
lin arthropod_N = mkN "arthropode" masculine ; -- tocheck
lin arthroscopy_N = mkN "arthroscopie" ; -- UWN
lin arthur_PN = mkPN "Arthur" ; -- status=guess src=geonames
lin artichoke_N = mkN "artichaut" masculine ; -- tocheck
lin article_N = mkN "article" masculine ; -- tocheck
lin articulate_A = mkA "articulé" | mkA "éloquent" | mkA "clair" ; -- tocheck
lin articulate_V = variants {} ; -- mkV2 (mkV "articuler") ; -- tocheck
lin articulate_V2 = mkV2 (mkV "articuler") ; -- tocheck
lin articulatory_A = mkA "articulatoire" ; -- tocheck
lin artifact_N = mkN "artéfact" masculine | mkN "artefact" masculine ; -- tocheck
lin artifice_N = mkN "artifice" masculine ; -- tocheck
lin artificial_A = mkA "artificiel" ; -- tocheck
lin artillery_N = mkN "artillerie" | mkN "canon" | mkN "fusil" | mkN "munition" | mkN "pistolet" ; -- UWN
lin artilleryman_N = mkN "artilleur" masculine ; -- tocheck
lin artisan_N = mkN "artisan" masculine ; -- tocheck
lin artist_N = mkN "artiste" ; -- tocheck
lin artistic_A = mkA "artistique" ; -- tocheck
lin artistry_N = mkN "abattage" | mkN "art" | mkN "courage" | mkN "exploit" | mkN "prouesse" ; -- UWN
lin artwork_N = mkN "art" | mkN "graphique" | mkN "graphisme" | mkN "illustration" ; -- UWN
lin arum_N = mkN "arum" masculine ; -- tocheck
lin aryanFem_N = variants {} ; ---- sense to be split
lin aryanMasc_N = variants {} ; ---- sense to be split
lin arytenoid_N = mkN "cartilage_aryténoïde" ; -- UWN
lin as_CAdv = S.as_CAdv | lin CAdv (ss "autant") ;
lin as_Prep = mkPrep "comme" ;
lin as_Subj = M.mkSubj "comme" ;
lin asafetida_N = mkN "ase_fétide" ; -- UWN
lin asbestos_N = mkN "amiante" masculine ; -- tocheck
lin asbestosis_N = mkN "amiantose" | mkN "asbestose" ; -- UWN
lin ascariasis_N = mkN "ascaridiose" ; -- UWN
lin ascend_V2 = mkV2 (mkV "monter") ; -- tocheck
lin ascendancy_N = mkN "ascendant" feminine ; -- tocheck
lin ascendant_A = mkA "ascendant" ; -- tocheck
lin ascendant_N = mkN "ancêtre" | mkN "aïeul" ; -- UWN
lin ascendency_N = mkN "ascendance" | mkN "autorité" | mkN "contrôle" | mkN "domination" ; -- UWN
lin ascendent_N = mkN "ancêtre" | mkN "aïeul" ; -- UWN
lin ascender_N = mkN "hampe" ; -- tocheck
lin ascension_N = mkN "ascension" feminine ; -- tocheck
lin ascertain_V2 = mkV2 (mkV "constater") ; -- tocheck
lin ascetic_A = mkA "ascétique" ; -- tocheck
lin ascetic_N = mkN "ascète" masculine ; -- tocheck
lin asceticism_N = mkN "ascétisme" masculine ; -- tocheck
lin ascot_N = mkN "ascot" ; -- UWN
lin ascot_PN = mkPN "Ascot" ; -- status=guess src=geonames
lin ascribe_V2 = mkV2 (mkV "attribuer") | mkV2 (mkV "imputer") ; -- tocheck
lin ascription_N = mkN "attribution" feminine ; -- tocheck
lin ascus_N = mkN "asque" ; -- tocheck
lin asdic_N = mkN "Sonar" | mkN "sonar" ; -- UWN
lin asepsis_N = mkN "asepsie" ; -- tocheck
lin aseptic_A = mkA "stérile" ; -- UWN
lin asexual_A = mkA "asexué" | mkA "asexuel" ; -- tocheck
lin asexuality_N = mkN "asexualité" ; -- tocheck
lin ash_N = mkN "cendre" feminine | mkN "frêne" masculine ; -- tocheck
lin ashamed_A = mkA "honteux" ; -- tocheck
lin ashbourne_PN = mkPN "Ashbourne" ; -- status=guess src=geonames
lin ashby_PN = mkPN "Ashby" ; -- status=guess src=geonames
lin ashby_de_la_zouch_PN = mkPN "Ashby de la Zouch" ; -- status=guess src=geonames
lin ash_can_N = mkN "cendrier" masculine ; -- tocheck
lin ashen_A = mkA "cendré" ; -- tocheck
lin ashes_N = L.ashes_N ;
lin ashford_PN = mkPN "Ashford" ; -- status=guess src=geonames
lin ashington_PN = mkPN "Ashington" ; -- status=guess src=geonames
lin ashtray_N = mkN "cendrier" masculine ; -- tocheck
lin aside_Adv = variants {} ; --
lin asinine_A = mkA "asinin" ; -- tocheck
lin ask_V = mkV "demander" ;
lin ask_V2 = mkV2 "demander" ;
lin ask_V2Q = L.ask_V2Q ;
lin ask_V2V = mkV2V (mkV "demander") ;
lin ask_VQ = mkVQ (mkV "demander") ;
lin ask_about_V2 = prepV2 OP_ask_V OP_about_Prep ; -- guess-p-verb
lin ask_after_V2 = prepV2 OP_ask_V OP_after_Prep ; -- guess-p-verb
lin ask_around_V = advV OP_ask_V OP_around_Adv ; -- guess-p-verb
lin ask_around_V2 = prepV2 OP_ask_V OP_around_Prep ; -- guess-p-verb
lin ask_for_V2 = mkV2 (mkV "demander") ; -- tocheck --UNCHK
lin ask_for_V3 = mkV3 (mkV "demander") ; -- tocheck --UNCHK
lin ask_in_V2 = prepV2 OP_ask_V OP_in_Prep ; -- guess-p-verb
lin ask_out_V2 = prepV2 OP_ask_V OP_out_Prep ; -- guess-p-verb
lin ask_over_V2 = prepV2 OP_ask_V OP_over_Prep ; -- guess-p-verb
lin ask_round_V2 = prepV2 OP_ask_V OP_round_Prep ; -- guess-p-verb
lin askern_PN = mkPN "Askern" ; -- status=guess src=geonames
lin asking_N = mkN "demande" | mkN "requête" ; -- UWN
lin aslant_A = mkA "diagonale" ; -- UWN
lin aslant_Adv = mkAdv "obliquement" ; -- UWN
lin asleep_A = mkA "endormi" ; -- tocheck
lin asocial_A = mkA "asocial" ; -- tocheck
lin asparagine_N = mkN "asparagine" feminine ; -- tocheck
lin asparagus_N = mkN "asperge" feminine ; -- tocheck
lin aspartame_N = mkN "aspartame" ; -- UWN
lin aspect_N = mkN "aspect" masculine ; -- tocheck
lin aspen_N = mkN "tremble" masculine ; -- tocheck
lin asperity_N = mkN "aspérité" feminine ; -- tocheck
lin asperse_V2 = mkV2 (mkV "asperger") ; -- tocheck
lin asphalt_N = mkN "asphalte" masculine ; -- tocheck
lin asphodel_N = mkN "asphodèle" masculine ; -- tocheck
lin asphyxia_N = mkN "asphyxie" feminine ; -- tocheck
lin aspic_N = mkN "aspic" masculine ; -- tocheck
lin aspirant_A = mkA "désireux" ; -- UWN
lin aspirant_N = mkN "espoir" ; -- UWN
lin aspirate_V2 = mkV2 (mkV "aspirer") | mkV2 (mkV "inspirer") ; -- tocheck
lin aspiration_N = mkN "aspiration" ; -- tocheck
lin aspirator_N = mkN "aspirateur" masculine ; -- tocheck
lin aspire_V = mkV "aspirer" | mkV "briguer" ; -- UWN
lin aspire_VV = mkvVV "aspirer" | mkvVV "briguer" ; -- UWN
lin aspirin_N = mkN "aspirine" feminine ; -- tocheck
lin ass_N = mkN "âne" masculine | mkN "cul" masculine ; -- tocheck
lin assagai_N = mkN "sagaie" ; -- UWN
lin assail_V2 = mkV2 (mkV I.assaillir_V2) ; -- tocheck
lin assailable_A = mkA "ouvert" | mkA "ouvrir" ; -- UWN
lin assailant_N = mkN "agresseur" masculine ; -- tocheck
lin assassin_N = mkN "assassin" masculine ; -- tocheck
lin assassinate_V2 = mkV2 (mkV "assassiner") ; -- tocheck
lin assassination_N = mkN "assassinat" ; -- tocheck
lin assault_N = mkN "assaut" masculine ; -- tocheck
lin assault_V2 = mkV2 (mkV "attaquer") ; -- tocheck
lin assay_V2 = mkV2 (mkV "analyser") ; -- tocheck
lin assegai_N = mkN "sagaie" feminine ; -- tocheck
lin assemble_V = reflV (mkV "rassembler") ;
lin assemble_V2 = mkV2 (mkV "rassembler") | mkV2 (mkV "assembler") ; -- tocheck
lin assembly_N = mkN "réunion" feminine ;
lin assent_N = mkN "assentiment" masculine ; -- tocheck
lin assent_V = mkV (mkV "assentir") ; -- tocheck
lin assert_V = variants {} ; -- mkV2 (mkV I.asseoir_V2) ; -- tocheck
lin assert_V2 = mkV2 (mkV I.asseoir_V2) ; -- tocheck
lin assert_VS = variants {} ; -- mkV2 (mkV I.asseoir_V2) ; -- tocheck
lin assertion_N = mkN "affirmation" ; -- UWN
lin assertive_A = mkA "assuré" ; -- tocheck
lin assertiveness_N = mkN "assertivité" ; -- UWN
lin assess_V2 = mkV2 (mkV "estimer") ; -- tocheck
lin assessment_N = mkN "évaluation" feminine | mkN "estimation" feminine ; -- tocheck
lin assessor_N = mkN "assesseur" masculine | mkN "estimateur" masculine | mkN "évaluateur" masculine ; -- tocheck
lin asset_N = mkN "actif" masculine ; -- tocheck
lin assets_N = mkN "actif" masculine ; -- tocheck
lin asseveration_N = mkN "affirmation" ; -- UWN
lin asshole_N = mkN "anus" | mkN "con" | mkN "connard" | mkN "cul" | mkN "derrière" | mkN "enculé" | mkN "trou_du_cul" ; -- UWN
lin assiduity_N = mkN "assiduité" | mkN "concentration" ; -- UWN
lin assiduous_A = mkA "assidu" ; -- tocheck
lin assign_V2 = variants {} ; -- mkV2V (mkV "assigner") | mkV2V (mkV "attribuer") | mkV2V (mkV "designer") ; -- tocheck
lin assign_V2V = mkV2V (mkV "assigner") | mkV2V (mkV "attribuer") | mkV2V (mkV "designer") ; -- tocheck
lin assignable_A = mkA "assignable" | mkA "négociable" | mkA "transférable" ; -- UWN
lin assignation_N = mkN "allocation" | mkN "découpage" | mkN "répartition" ; -- UWN
lin assignment_N = mkN "affectation" feminine ; -- tocheck
lin assimilate_V2 = mkV2 (mkV "assimiler") ; -- tocheck
lin assist_V = variants {} ; -- mkV2 (mkV "assister") ; -- tocheck
lin assist_V2 = mkV2 (mkV "assister") ; -- tocheck
lin assistance_N = mkN "assistance" feminine ; -- tocheck
lin assistantFem_N = mkN "assistant" masculine ; -- tocheck ---- sense to be split
lin assistantMasc_N = mkN "assistant" masculine ; -- tocheck ---- sense to be split
lin assistant_A = variants {} ; --
lin assistant_N = mkN "assistant" masculine ; -- tocheck
lin associability_N = mkN "associabilité" ; -- UWN
lin associable_A = mkA "associable" ; -- UWN
lin associate_N = variants {} ; --
lin associate_V = variants {} ; -- mkV2 (mkV "associer") ; -- tocheck
lin associate_V2 = mkV2 (mkV "associer") ; -- tocheck
lin associated_A = variants {} ; --
lin association_N = mkN "association" | mkN "association" feminine ; -- tocheck
lin associative_A = mkA "associatif" ; -- tocheck
lin assonance_N = mkN "assonance" ; -- UWN
lin assorted_A = mkA "assorti" ; -- tocheck
lin assortment_N = mkN "assortiment" ; -- tocheck
lin assuage_V2 = mkV2 (mkV "assouvir") | mkV2 (mkV "apaiser") ; -- tocheck
lin assume_V2 = mkV2 (mkV "adopter") | mkV2 (mkV "supposer") | mkV2 (mkV "assumer") ; -- tocheck
lin assume_VS = mkvVS "présumer" | mkvVS "supposer" ; -- UWN
lin assumption_N = variants {} ; --
lin assurance_N = mkN "assurance" ; -- tocheck
lin assure_V2 = variants {} ; -- mkV2S (mkV "assurer") | mkV2S (mkV "rassurer") ; -- tocheck
lin assure_V2S = mkV2S (mkV "assurer") | mkV2S (mkV "rassurer") ; -- tocheck
lin assuredly_Adv = mkAdv "assurément" | mkAdv "certainement" ; -- UWN
lin assuredness_N = mkN "cool" ; -- UWN
lin astatine_N = mkN "astate" masculine ; -- tocheck
lin aster_N = mkN "aster" feminine ; -- tocheck
lin asterisk_N = mkN "astérisque" masculine ; -- tocheck
lin asterism_N = mkN "astérisme" masculine ; -- tocheck
lin asteroid_A = mkA "astéroïde" ; -- UWN
lin asteroid_N = mkN "astéroïde" masculine ; -- tocheck
lin asthenia_N = mkN "asthénie" feminine ; -- tocheck
lin asthenosphere_N = mkN "asthénosphère" feminine ; -- tocheck
lin asthma_N = mkN "asthme" ; -- tocheck
lin asthmatic_A = mkA "asthmatique" ; -- tocheck
lin asthmatic_N = mkN "asthmatique" ; -- tocheck
lin astigmatic_A = mkA "astigmate" ; -- tocheck
lin astigmatism_N = mkN "astigmatisme" masculine ; -- tocheck
lin astilbe_N = mkN "astilbe" ; -- UWN
lin astonish_V2 = mkV2 (mkV "étonner") ; -- tocheck
lin astonishing_A = variants {} ; --
lin astonishment_N = mkN "étonnement" masculine ; -- tocheck
lin astounding_A = mkA "impressionnante" ; -- tocheck
lin astral_A = mkA "astral" ; -- tocheck
lin astrantia_N = mkN "astrance" | mkN "astrances" | mkN "astrantia" | mkN "autruche" | mkN "benjoin_français" | mkN "impératoire" | mkN "ostruche" ; -- UWN
lin astride_Adv = mkAdv "à_califourchon" ; -- UWN
lin astringent_N = mkN "astringence" feminine ; -- tocheck
lin astrocyte_N = mkN "Astrocyte" | mkN "astrocyte" | mkN "astrocytes" ; -- UWN
lin astrodynamics_N = mkN "mécanique_spatiale" ; -- UWN
lin astrolabe_N = mkN "astrolabe" masculine ; -- tocheck
lin astrologer_N = mkN "astrologue" ; -- tocheck
lin astrological_A = mkA "astrologique" ; -- tocheck
lin astrology_N = mkN "astrologie" feminine ; -- tocheck
lin astrometry_N = mkN "astrométrie" ; -- tocheck
lin astronaut_N = mkN "astronaute" masculine ; -- tocheck
lin astronautics_N = mkN "astronautique" | mkN "aéronautique" ; -- UWN
lin astronomer_N = mkN "astronome" ; -- tocheck
lin astronomic_A = mkA "astronomique" | mkA "énorme" ; -- UWN
lin astronomical_A = mkA "astronomique" ; -- tocheck
lin astronomy_N = mkN "astronomie" feminine ; -- tocheck
lin astrophysical_A = mkA "astrophysique" ; -- tocheck
lin astrophysics_N = mkN "astrophysique" ; -- tocheck
lin astute_A = mkA "astucieux" ; -- tocheck
lin astuteness_N = mkN "profondeur" ; -- UWN
lin asylum_N = mkN "asile" masculine ; -- tocheck
lin asymmetric_A = mkA "asymétrique" ; -- UWN
lin asymmetrical_A = mkA "asymétrique" ; -- tocheck
lin asymmetry_N = mkN "asymétrie" ; -- UWN
lin asymptomatic_A = mkA "asymptomatique" ; -- tocheck
lin asymptote_N = mkN "asymptote" feminine ; -- tocheck
lin asymptotic_A = mkA "asymptotique" ; -- tocheck
lin asynchronous_A = mkA "asynchrone" ; -- tocheck
lin asystole_N = mkN "arrêt_cardio-circulatoire" | mkN "arrêt_cardio-respiratoire" | mkN "arrêt_ventilatoire" ; -- UWN
lin at_N = mkN "at" | mkN "en" | mkN "envers" | mkN "pour" | mkN "sur" | mkN "à" | mkN "к" ; -- UWN
lin at_Prep = ParadigmsFre.dative | mkPrep "chez" ; ---- split
lin at_least_AdN = S.at_least_AdN ;
lin at_most_AdN = S.at_most_AdN ;
lin ataractic_A = mkA "sédatif" ; -- UWN
lin ataraxia_N = mkN "ataraxie" feminine ; -- tocheck
lin atavism_N = mkN "atavisme" ; -- tocheck
lin atavistic_A = mkA "atavique" ; -- tocheck
lin ataxia_N = mkN "ataxie" feminine ; -- tocheck
lin ataxic_A = mkA "atactique" ; -- UWN
lin atelier_N = mkN "atelier" ; -- UWN
lin athanor_N = mkN "athanor" ; -- UWN
lin atheism_N = mkN "athéisme" masculine ; -- tocheck
lin atheist_A = mkA "athée" ; -- UWN
lin atheist_N = mkN "athée" ; -- tocheck
lin atheistic_A = mkA "athée" ; -- tocheck
lin athenianFem_N = variants {} ; ---- sense to be split
lin athenianMasc_N = variants {} ; ---- sense to be split
lin athens_1_PN = mkPN "Athènes" ; -- status=guess src=geonames
lin athens_2_PN = mkPN "Athènes" ; -- status=guess src=geonames
lin atheroma_N = mkN "athérome" masculine ; -- tocheck
lin atherosclerosis_N = mkN "athérosclérose" feminine ; -- tocheck
lin atherstone_PN = mkPN "Atherstone" ; -- status=guess src=geonames
lin athetosis_N = mkN "athétose" ; -- UWN
lin athlete_N = mkN "athlète" ; -- tocheck
lin athletic_A = mkA "athlétique" ; -- tocheck
lin athleticism_N = mkN "athlétisme" ; -- UWN
lin athlone_PN = mkPN "Athlone" ; -- status=guess src=geonames
lin atlanta_PN = mkPN "Atlanta" ; -- status=guess src=geonames
lin atlantic_PN = mkPN "Atlantic" ; -- status=guess src=geonames
lin atlas_N = mkN "atlas" masculine ; -- tocheck
lin atmometer_N = mkN "évaporomètre" ; -- UWN
lin atmosphere_N = mkN "atmosphère" masculine | mkN "ambiance" feminine ; -- tocheck
lin atmospheric_A = mkA "atmosphérique" ; -- tocheck
lin atmospherics_N = mkN "statique" ; -- UWN
lin atole_N = mkN "atole" ; -- UWN
lin atoll_N = mkN "atoll" masculine ; -- tocheck
lin atom_N = mkN "atome" masculine ; -- tocheck
lin atomic_A = mkA "atomique" ; -- tocheck
lin atomizer_N = mkN "atomiseur" masculine ; -- tocheck
lin atonal_A = mkA "atonal" ; -- tocheck
lin atonality_N = mkN "atonalité" feminine ; -- tocheck
lin atonement_N = mkN "expiation" feminine ; -- tocheck
lin atonicity_N = mkN "atonie" ; -- UWN
lin atrabilious_A = mkA "dyspepsique" | mkA "dyspeptique" ; -- UWN
lin atrazine_N = mkN "atrazine" ; -- UWN
lin atresia_N = mkN "atrésie" ; -- UWN
lin atrium_N = mkN "oreillette" feminine | mkN "atrium" masculine ; -- tocheck
lin atrocious_A = mkA "atroce" ; -- tocheck
lin atrocity_N = mkN "atrocité" feminine ; -- tocheck
lin atrophy_N = mkN "atrophie" feminine ; -- tocheck
lin atrophy_V2 = mkV2 (mkV "atrophier") ; -- tocheck
lin atropine_N = mkN "atropine" feminine ; -- tocheck
lin attach_V = variants {} ; -- mkV2 (mkV "attacher") ; -- tocheck
lin attach_V2 = mkV2 (mkV "attacher") ; -- tocheck
lin attachable_A = mkA "attachable" ; -- tocheck
lin attachment_N = variants {} ; --
lin attack_N = mkN "attaque" | mkN "attaque" feminine ; -- tocheck
lin attack_V2 = mkV2 (mkV "attaquer") ; -- tocheck
lin attacker_N = mkN "attaquant" ; -- tocheck
lin attain_V = mkV "aboutir" | mkV "arriver" | mkV "atteindre" | mkV "frapper" | mkV "parvenir" | mkV "remporter" ; -- UWN
lin attain_V2 = mkV2 (mkV I.atteindre_V2) ; -- tocheck
lin attainable_A = mkA "réalisable" ; -- tocheck
lin attainment_N = variants {} ; --
lin attempt_1_N = mkN "attentat" masculine | mkN "tentative" feminine ; -- tocheck ---- sense to be split
lin attempt_2_N = mkN "attentat" masculine | mkN "tentative" feminine ; -- tocheck ---- sense to be split
lin attempt_N = mkN "attentat" masculine | mkN "tentative" feminine ; -- tocheck
lin attempt_V2 = mkV2 (mkV "tenter") ; -- tocheck
lin attempt_VV = mkvVV "chercher" | mkvVV "efforcer" | mkvVV "essayer" | mkvVV "tenter" ; -- UWN
lin attempted_A = variants {} ; --
lin attend_V = variants {} ; -- mkV2 (mkV "assister") ; -- tocheck
lin attend_V2 = mkV2 (mkV "assister") ; -- tocheck
lin attendance_N = mkN "présence" feminine ; -- tocheck
lin attendant_N = mkN "attendant" masculine ; -- tocheck
lin attention_N = mkN "attention" | mkN "attention" feminine ; -- tocheck
lin attentive_A = mkA "attentif" ; -- tocheck
lin attenuation_N = mkN "atténuation" feminine ; -- tocheck
lin attenuator_N = mkN "atténuateur" ; -- UWN
lin attest_V2 = mkV2 (mkV "attester") ; -- tocheck
lin attestation_N = mkN "attestation" feminine ; -- tocheck
lin attic_N = mkN "grenier" masculine ; -- tocheck
lin attire_N = mkN "revêtir" | mkN "toilette" | mkN "vêtir" ; -- UWN
lin attitude_N = mkN "posture" ; -- tocheck
lin attitudinize_V = mkV "affecter" | mkV "feindre" | mkV "minauder" ; -- UWN
lin attorney_N = mkN "avocat" masculine ; -- tocheck
lin attosecond_N = mkN "attoseconde" ; -- UWN
lin attract_V2 = mkV2 (mkV "attirer") ; -- tocheck
lin attraction_N = mkN "attraction" feminine | mkN "attirance" feminine ; -- tocheck
lin attractive_A = mkA "attractif" | mkA "attrayant" ; -- tocheck
lin attractor_N = mkN "aimant" | mkN "attraction" ; -- UWN
lin attributable_A = mkA "attribuable" ; -- tocheck
lin attribute_N = mkN "attribut" masculine | mkN "épithète" ; -- tocheck
lin attribute_V2 = mkV2 (mkV "attribuer") ; -- tocheck
lin attributive_A = mkA "attributif" ; -- tocheck
lin attrition_N = mkN "usure" feminine ; -- tocheck
lin atypical_A = mkA "atypique" ; -- tocheck
lin au_pair_N = mkN "au_pair" | mkN "séjour_au_pair" ; -- UWN
lin aubergine_N = mkN "aubergine" ; -- UWN
lin auburn_A = mkA "roux" ; -- tocheck
lin auckland_PN = mkPN "Auckland" ; -- status=guess src=geonames
lin auction_N = mkN "enchères" ; -- tocheck
lin auctioneer_N = mkN "commissaire-priseur" masculine ; -- tocheck
lin audacity_N = mkN "audace" feminine ; -- tocheck
lin audible_A = mkA "audible" ; -- tocheck
lin audience_N = mkN "audience" | mkN "assistance" feminine | mkN "lectorat" ; -- tocheck
lin audiogram_N = mkN "audiogramme" ; -- UWN
lin audiology_N = mkN "audiologie" feminine ; -- tocheck
lin audiometer_N = mkN "sonomètre" ; -- UWN
lin audiovisual_A = mkA "audiovisuel" ; -- tocheck
lin audiovisual_N = mkN "audiovisuel" ; -- UWN
lin audit_N = mkN "audit" | mkN "inspection" feminine | mkN "audit" masculine ; -- tocheck
lin audition_N = mkN "audition" feminine ; -- tocheck
lin audition_V2 = mkV2 (mkV "auditionner") ; -- tocheck
lin auditor_N = mkN "auditeur" masculine ; -- tocheck
lin auditorium_N = mkN "auditorium" ; -- UWN
lin auditory_A = mkA "auditoire" ; -- tocheck
lin audley_PN = mkPN "Audley" ; -- status=guess src=geonames
lin augend_N = mkN "cumulande" masculine ; -- tocheck
lin auger_N = mkN "tarière" feminine ; -- tocheck
lin augite_N = mkN "augite" feminine ; -- tocheck
lin augment_V2 = mkV2 (mkV "augmenter") ;
lin augmentative_A = mkA "augmentatif" ; -- tocheck
lin augsburg_PN = mkPN "Augsbourg" ; -- status=guess src=geonames
lin augur_N = mkN "augure" masculine ; -- tocheck
lin augur_V2 = mkV2 (mkV "augurer") ; -- tocheck
lin augury_N = mkN "augure" masculine ; -- tocheck
lin auk_N = mkN "pingouin" masculine ; -- tocheck
lin aunt_N = mkN "tante" feminine ; -- tocheck
lin auntie_N = mkN "tantine" feminine ; -- tocheck
lin aunty_N = mkN "tante" | mkN "tantine" | mkN "tata" | mkN "tatie" ; -- UWN
lin aura_N = mkN "aura" ; -- tocheck
lin aural_A = mkA "auriculaire" | mkA "auditif" ; -- tocheck
lin aureate_A = mkA "doré" | mkA "or" ; -- UWN
lin aureole_N = mkN "auréole" feminine ; -- tocheck
lin auricle_N = mkN "oreille" | mkN "épi" ; -- UWN
lin auriferous_A = mkA "aurifère" ; -- tocheck
lin aurochs_N = mkN "aurochs" masculine ; -- tocheck
lin auscultation_N = mkN "auscultation" feminine ; -- tocheck
lin auspice_N = mkN "auspices" ; -- tocheck
lin auspices_N = mkN "protection" | mkN "égide" ; -- UWN
lin auspicious_A = mkA "propice" ; -- tocheck
lin austenite_N = mkN "austénite" ; -- UWN
lin austere_A = mkA "ascète" | mkA "ascétique" ; -- UWN
lin austerity_N = mkN "austérité" feminine ; -- tocheck
lin austral_A = mkA "austral" ; -- tocheck
lin austral_N = mkN "austral" ; -- tocheck
lin australia_PN = mkPN "Australie" ; -- status=guess src=geonames
lin australianFem_N = variants {} ; ---- sense to be split
lin australianMasc_N = variants {} ; ---- sense to be split
lin austria_PN = mkPN "Autriche" ; -- status=guess src=geonames
lin austrianFem_N = variants {} ; ---- sense to be split
lin austrianMasc_N = variants {} ; ---- sense to be split
lin autarchy_N = mkN "autarchie" feminine ; -- tocheck
lin autarky_N = mkN "autarcie" ; -- UWN
lin authentic_A = mkA "authentique" ; -- tocheck
lin authenticate_V2 = mkV2 (mkV "authentifier") ; -- tocheck
lin authentication_N = mkN "authentification" ; -- tocheck
lin authenticity_N = mkN "authenticité" feminine ; -- tocheck
lin author_N = mkN "auteur" masculine ; -- tocheck
lin authoritarian_A = mkA "autoritaire" ; -- tocheck
lin authoritarian_N = mkN "autoritaire" ; -- tocheck
lin authoritarianism_N = mkN "autoritarisme" masculine ; -- tocheck
lin authoritative_A = mkA "autorisé" ; -- UWN
lin authority_1_N = mkN "autorité" feminine ;
lin authority_2_N = mkN "autorité" feminine ;
lin authority_N = mkN "autorité" feminine ;
lin authorization_N = mkN "autorisation" ; -- tocheck
lin authorize_V2 = variants {} ; -- mkV2V (mkV "autoriser") ; -- tocheck
lin authorize_V2V = mkV2V (mkV "autoriser") ; -- tocheck
lin authorship_N = mkN "paternité" ; -- tocheck
lin autism_N = mkN "autisme" masculine ; -- tocheck
lin autistic_A = mkA "autiste" ; -- tocheck
lin auto_N = mkN "auto" | mkN "automobile" | mkN "voiture" ; -- UWN
lin autobahn_N = mkN "autoroute" ; -- UWN
lin autobiographer_N = mkN "autobiographe" ; -- UWN
lin autobiography_N = mkN "autobiographie" feminine ; -- tocheck
lin autocatalysis_N = mkN "réaction_autocatalytique" ; -- UWN
lin autocatalytic_A = mkA "autocatalytique" ; -- tocheck
lin autochthon_N = mkN "aborigène" | mkN "autochtone" ; -- UWN
lin autochthonal_A = mkA "aborigène" | mkA "autochtone" | mkA "congénital" | mkA "endémique" | mkA "indigène" | mkA "inné" ; -- UWN
lin autochthonous_A = mkA "autochtone" ; -- tocheck
lin autoclave_N = mkN "autoclave" masculine ; -- tocheck
lin autocracy_N = mkN "autocratie" feminine ; -- tocheck
lin autocrat_N = mkN "autocrate" masculine ; -- tocheck
lin autocratic_A = mkA "autocratique" ; -- tocheck
lin autodidact_N = mkN "autodidacte" masculine ; -- tocheck
lin autoerotic_A = mkA "autoérotique" ; -- tocheck
lin autofocus_N = mkN "autofocus" ; -- UWN
lin autogamy_N = mkN "autogamie" feminine ; -- tocheck
lin autogiro_N = mkN "autogire" | mkN "hélicoptère" ; -- UWN
lin autograft_N = mkN "autogreffe" ; -- UWN
lin autograph_N = mkN "autographe" masculine | mkN "signature" feminine ; -- tocheck
lin autograph_V2 = mkV2 (mkV "dédicacer") ; -- tocheck
lin autographic_A = mkA "autographe" ; -- UWN
lin autogyro_N = mkN "autogire" | mkN "hélicoptère" ; -- UWN
lin autoimmunity_N = mkN "maladie_auto-immune" | mkN "maladies_auto-immunes" ; -- UWN
lin autolysis_N = mkN "autolyse" feminine ; -- tocheck
lin automate_V2 = mkV2 (mkV "automatiser") ; -- tocheck
lin automatic_A = mkA "automatique" ; -- tocheck
lin automatic_N = mkN "semi-automatique" masculine ; -- tocheck
lin automation_N = mkN "automatisation" ; -- tocheck
lin automaton_N = mkN "automate" masculine ; -- tocheck
lin automobile_N = mkN "voiture" feminine ; -- tocheck
lin automotive_A = mkA "automobile" ; -- tocheck
lin autonomic_A = mkA "indépendant" ; -- UWN
lin autonomous_A = mkA "autonome" ; -- tocheck
lin autonomy_N = mkN "autonomie" feminine ; -- tocheck
lin autophyte_N = mkN "autotrophie" ; -- UWN
lin autoplasty_N = mkN "greffe" feminine ; -- tocheck
lin autopsy_N = mkN "autopsie" feminine ; -- tocheck
lin autoradiograph_N = mkN "autoradiographie" ; -- UWN
lin autoregulation_N = mkN "autorégulation" feminine ; -- tocheck
lin autotelic_A = mkA "autotélique" ; -- tocheck
lin autotomy_N = mkN "autotomie" ; -- tocheck
lin autumn_N = mkN "automne" masculine ; -- tocheck
lin autumnal_A = mkA "automnal" ; -- tocheck
lin auxetic_A = mkA "auxétique" ; -- UWN
lin auxiliary_A = mkA "auxiliaire" ; -- tocheck
lin auxin_N = mkN "auxine" ; -- UWN
lin avail_N = mkN "aide" | mkN "aider" | mkN "entraide" | mkN "secourir" ; -- UWN
lin avail_V2 = mkV2 (mkV "profiter") | mkV2 (mkV I.servir_V2) ; -- tocheck
lin availability_N = mkN "disponibilité" feminine ; -- tocheck
lin available_A = mkA "disponible" ;
lin avalanche_N = mkN "avalanche" feminine ; -- tocheck
lin avant_garde_N = mkN "avant-garde" feminine ; -- tocheck
lin avarice_N = mkN "avarice" ; -- tocheck
lin avaricious_A = mkA "avare" ; -- tocheck
lin avatar_N = mkN "avatar" masculine ; -- tocheck
lin aveley_PN = mkPN "Aveley" ; -- status=guess src=geonames
lin avenge_V2 = mkV2 (mkV "venger") ; -- tocheck
lin avenger_N = mkN "vengeur" masculine ; -- tocheck
lin avens_N = mkN "dryade" ; -- UWN
lin avenue_N = mkN "avenue" feminine ; -- tocheck
lin average_A = mkA "moyen" ; -- tocheck
lin average_N = mkN "moyenne" feminine ; -- tocheck
lin average_V2 = mkV2 (mkV "moyenner") ; -- tocheck
lin averse_A = mkA "antipathique" ; -- UWN
lin aversion_N = mkN "aversion" feminine ; -- tocheck
lin aversive_A = mkA "aversif" ; -- UWN
lin avian_A = mkA "aviaire" ; -- tocheck
lin aviary_N = mkN "volière" feminine ; -- tocheck
lin aviation_N = mkN "aviation" feminine ; -- tocheck
lin aviatorFem_N = mkN "aviatrice" feminine ; -- tocheck
lin aviatorMasc_N = mkN "aviateur" masculine ; -- tocheck
lin avidity_N = mkN "avidité" | mkN "faim" ; -- UWN
lin avignon_PN = mkPN "Avignon" ; -- status=guess src=geonames
lin avionics_N = mkN "Avionique" | mkN "avionique" ; -- UWN
lin avitaminosis_N = mkN "avitaminose" ; -- UWN
lin avocado_A = mkA "avocat" ; -- tocheck
lin avocado_N = mkN "avocat" masculine | mkN "avocatier" masculine ; -- tocheck
lin avocation_N = mkN "hobby" | mkN "passe-temps" | mkN "touche" | mkN "écart" ; -- UWN
lin avocet_N = mkN "avocette" feminine ; -- tocheck
lin avoid_V2 = mkV2 (mkV "éviter") ; -- tocheck
lin avoid_VV = variants {} ; -- mkV2 (mkV "éviter") ; -- tocheck
lin avoidable_A = mkA "évitable" ; -- UWN
lin avoidance_N = mkN "évitement" masculine ; -- tocheck
lin avon_PN = mkPN "Avon" ; -- status=guess src=geonames
lin avow_V2 = mkV2 (mkV "avouer") ; -- tocheck
lin avowal_N = mkN "affirmation" | mkN "aveu" ; -- UWN
lin avowedly_Adv = mkAdv "certes" | mkAdv "vrai" ; -- UWN
lin avuncular_A = mkA "avunculaire" ; -- tocheck
lin await_V2 = mkV2 (mkV I.attendre_V2) | mkV2 (mkV I.servir_V2) ; -- tocheck
lin awake_A = mkA "éveillé" ; -- tocheck
lin awake_V = reflV (mkV "réveiller") ;
lin awaken_V2 = mkV2 (mkV "réveiller") ;
lin award_N = mkN "prix" masculine ; -- tocheck
lin award_V2 = variants {} ; -- mkV3 (mkV "accorder") ; -- tocheck
lin award_V3 = mkV3 (mkV "accorder") ; -- tocheck
lin aware_A = mkA "conscient" ; -- tocheck
lin awareness_N = mkN "conscience" feminine | mkN "connaissance" feminine ; -- tocheck
lin away_1_Adv = mkAdv "loin" ; ----
lin away_2_Adv = mkAdv "loin" ; ----
lin away_A = mkA "loin" ; -- UWN
lin away_Adv = mkAdv "loin" ; ----
lin awe_N = mkN "admiration" feminine | mkN "crainte" feminine ; -- tocheck
lin awesome_A = mkA "magnifique" | mkA "impressionnant" ; -- tocheck
lin awful_A = mkA "terrible" ; -- tocheck
lin awkward_A = mkA "embarrassant" | mkA "maladroit" | mkA "inconvenant" ; -- tocheck
lin awkwardness_N = mkN "maladresse" feminine ; -- tocheck
lin awl_N = mkN "alêne" feminine ; -- tocheck
lin awning_N = mkN "marquise" feminine ; -- tocheck
lin ax_N = mkN "hache" ; -- UWN
lin axe_N = mkN "hache" feminine | mkN "gratte" | mkN "couperet" masculine ; -- tocheck
lin axial_A = mkA "axial" ; -- tocheck
lin axile_A = mkA "axial" ; -- UWN
lin axiological_A = mkA "axiologique" ; -- UWN
lin axiology_N = mkN "axiologie" ; -- UWN
lin axiom_N = mkN "axiome" masculine ; -- tocheck
lin axis_N = mkN "axe" masculine ; -- tocheck
lin axle_N = mkN "essieu" masculine ; -- tocheck
lin axletree_N = mkN "essieu" masculine ; -- tocheck
lin axolotl_N = mkN "axolotl" masculine ; -- tocheck
lin axon_N = mkN "axone" masculine ; -- tocheck
lin ayah_N = mkN "aya" | mkN "âya" ; -- UWN
lin ayatollah_N = mkN "ayatollah" masculine ; -- tocheck
lin aye_Interj = variants {} ; --
lin ayin_N = mkN "Ayin" | mkN "ayin" ; -- UWN
lin aylesbury_PN = mkPN "Aylesbury" ; -- status=guess src=geonames
lin aylesford_PN = mkPN "Aylesford" ; -- status=guess src=geonames
lin ayr_PN = mkPN "Ayr" ; -- status=guess src=geonames
lin azalea_N = mkN "azalée" feminine ; -- tocheck
lin azide_N = mkN "Azoture" | mkN "azoture" | mkN "azotures" ; -- UWN
lin azimuth_N = mkN "azimut" masculine ; -- tocheck
lin azote_N = mkN "azote" ; -- UWN
lin azure_A = mkA "azur" ; -- tocheck
lin azure_N = mkN "azur" masculine ; -- tocheck
lin baa_N = mkN "bêlement" masculine ; -- tocheck
lin baa_V = mkV (mkV "bêler") ; -- tocheck
lin baas_N = mkN "baas" ; -- UWN
lin baba_N = mkN "baba" ; -- UWN
lin babble_N = mkN "babillage" masculine | mkN "jargon" masculine | mkN "babil" masculine ; -- tocheck
lin babble_V2 = mkV2 (mkV "babiller") | mkV2 (mkV "bavarder") | mkV2 (mkV "marmonner") ; -- tocheck
lin babbler_N = mkN "babillard" ; -- tocheck
lin babe_N = mkN "chérie" feminine ; -- tocheck
lin babirusa_N = mkN "babiroussa" masculine ; -- tocheck
lin baboo_N = mkN "babu" ; -- UWN
lin baboon_N = mkN "babouin" masculine ; -- tocheck
lin babu_N = mkN "babu" ; -- UWN
lin baby_N = L.baby_N ;
lin babyish_A = mkA "bébête" ; -- UWN
lin babysitter_N = mkN "baby-sitter" feminine ; -- tocheck
lin baccalaureate_N = mkN "baccalauréat" ; -- UWN
lin baccarat_N = mkN "baccara" ; -- tocheck
lin baccy_N = mkN "tabac" ; -- UWN
lin bachelor_N = mkN "licence" | mkN "célibataire" masculine ; -- tocheck
lin bachelorhood_N = mkN "célibat" masculine ; -- tocheck
lin bacillus_N = mkN "bacille" masculine ; -- tocheck
lin bacitracin_N = mkN "bacitracine" ; -- UWN
lin back_A = variants {} ; --
lin back_Adv = mkAdv "en retour" ; ----
lin back_N = L.back_N ;
lin back_V = variants {} ; -- mkV2 (mkV I.soutenir_V2) ; -- tocheck
lin back_away_V = advV OP_back_V OP_away_Adv ; -- guess-p-verb
lin back_down_V = advV OP_back_V OP_down_Adv ; -- guess-p-verb
lin back_into_V3 = variants {} ; -- guess-p-verb
lin back_off_V = advV OP_back_V OP_off_Adv ; -- guess-p-verb
lin back_out_V = advV OP_back_V OP_out_Adv ; -- guess-p-verb
lin back_out_of_V2 = prepV2 (advV OP_back_V OP_out_Adv ) OP_of_Prep ; -- guess-p-verb
lin back_out_of_V3 = variants {} ; -- guess-p-verb
lin back_up_V = advV OP_back_V OP_up_Adv ; -- guess-p-verb
lin back_up_V2 = prepV2 OP_back_V OP_up_Prep ; -- guess-p-verb
lin backbencher_N = mkN "député_de_l'arrière-ban" | mkN "député_sans_portefeuille" | mkN "députée_sans_portefeuille" | mkN "simple_député" ; -- UWN
lin backbite_V2 = mkV2 (mkV "calomnier") ; -- tocheck
lin backbiter_N = mkN "diffamateur" | mkN "traducteur" ; -- UWN
lin backbone_N = mkN "colonne" | mkN "colonne_vertébrale" | mkN "épine" | mkN "épine_dorsale" ; -- UWN
lin backcloth_N = mkN "fond" ; -- UWN
lin backdrop_N = mkN "contexte" masculine | mkN "décor" masculine ; -- tocheck
lin backerFem_N = mkN "ange" | mkN "backer" ; -- UWN
lin backerMasc_N = mkN "ange" | mkN "backer" ; -- UWN
lin backgammon_N = mkN "backgammon" masculine ; -- tocheck
lin background_N = mkN "milieu" masculine | mkN "fond" masculine | mkN "arrière-plan" masculine | mkN "antécédents" ; -- tocheck
lin backhand_N = mkN "revers" masculine ; -- tocheck
lin backhoe_N = mkN "pelleteuse" | mkN "tractopelle" ; -- tocheck
lin backing_N = mkN "appui" | mkN "soutien" ; -- UWN
lin backlash_N = mkN "jeu" masculine ; -- tocheck
lin backlog_N = mkN "arriéré" ; -- UWN
lin backpack_N = mkN "havresac" | mkN "sac_à_dos" ; -- UWN
lin backroom_N = mkN "backroom" | mkN "coulisse" ; -- UWN
lin backsaw_N = mkN "Scie_à_onglet" | mkN "scie_à_onglet" ; -- UWN
lin backside_N = mkN "arrière" masculine ; -- tocheck
lin backstair_A = mkA "clandestin" ; -- UWN
lin backstay_N = mkN "pataras" ; -- UWN
lin backtalk_N = mkN "bouche" | mkN "embouchure" | mkN "lèvre" ; -- UWN
lin back_up_N = mkN "sauvegarde" feminine ; -- tocheck
lin backward_Adv = mkAdv "dos" ; -- UWN
lin backwards_Adv = mkAdv "arrière" | mkAdv "dos" | mkAdv "sens_devant_derrière" ; -- UWN
lin backwater_N = mkN "patelin" masculine ; -- tocheck
lin backwoods_N = mkN "sous-bois" ; -- tocheck
lin backworth_PN = mkPN "Backworth" ; -- status=guess src=geonames
lin backyard_N = mkN "arrière-cour" ; -- UWN
lin bacon_N = mkN "lardon" masculine ; -- tocheck
lin bacteremic_A = mkA "bactériémique" ; -- UWN
lin bacteria_N = mkN "bactéries" ; -- tocheck
lin bacterial_A = mkA "bactérien" ; -- tocheck
lin bactericidal_A = mkA "désinfectant" ; -- UWN
lin bacteriological_A = mkA "bactériologique" ; -- UWN
lin bacteriologist_N = mkN "bactériologiste" ; -- tocheck
lin bacteriology_N = mkN "bactériologie" feminine ; -- tocheck
lin bacteriophage_N = mkN "bactériophage" masculine ; -- tocheck
lin bacterium_N = mkN "bactérie" feminine ; -- tocheck
lin bacup_PN = mkPN "Bacup" ; -- status=guess src=geonames
lin bad_A = L.bad_A ;
lin bad_N = mkN "faute" feminine ; -- tocheck
lin badajoz_PN = mkPN "Badajoz" ; -- status=guess src=geonames
lin badalona_PN = mkPN "Badalona" ; -- status=guess src=geonames
lin badge_N = mkN "plaque" feminine | mkN "porte-nom" masculine ; -- tocheck
lin badger_N = mkN "blaireau" masculine ; -- tocheck
lin badgering_N = mkN "tourment" ; -- UWN
lin badminton_N = mkN "badminton" masculine ; -- tocheck
lin badness_N = mkN "méchanceté" ; -- UWN
lin baffle_V2 = mkV2 (mkV "déconcerter") ; -- tocheck
lin bag_N = mkN "sac" masculine ; -- tocheck
lin bag_V2 = mkV2 (mkV "ensacher") ; -- tocheck
lin bagasse_N = mkN "bagasse" ; -- UWN
lin bagel_N = mkN "bagel" ; -- tocheck
lin baggage_N = mkN "bagage" masculine ; -- tocheck
lin baghdad_PN = mkPN "Bagdad" ; -- status=guess src=geonames
lin bagpipe_N = mkN "cornemuse" | mkN "musette" ; -- UWN
lin baguet_N = mkN "baguette" | mkN "baguette_de_pain" | mkN "pain_français" ; -- UWN
lin bahamas_PN = mkPN "Bahamas" ; -- status=guess src=geonames
lin bahrain_PN = mkPN "Bahreïn" ; -- status=guess src=geonames
lin baht_N = mkN "baht" masculine ; -- tocheck
lin bail_N = mkN "caution" feminine | mkN "écope" feminine ; -- tocheck
lin bail_V2 = mkV2 (mkV "écoper") ; -- tocheck
lin bailee_N = mkN "commodataire" ; -- UWN
lin bailiff_N = mkN "bailli" masculine | mkN "huissier" masculine ; -- tocheck
lin bailiwick_N = mkN "bailliage" masculine ; -- tocheck
lin bailment_N = mkN "Bail" | mkN "bail" ; -- UWN
lin bairn_N = mkN "enfant" ; -- UWN
lin bait_N = mkN "appât" masculine ; -- tocheck
lin bait_V2 = mkV2 (mkV "appâter") ; -- tocheck
lin bake_V = variants {} ; --
lin bake_V2 = variants {} ; --
lin baker_N = mkN "boulanger" masculine ; -- tocheck
lin bakery_N = mkN "boulangerie" feminine ; -- tocheck
lin baking_N = mkN "cuisson" feminine ; -- tocheck
lin baklava_N = mkN "baklava" ; -- tocheck
lin baksheesh_N = mkN "bakchich" masculine ; -- tocheck
lin baku_PN = mkPN "Bakou" ; -- status=guess src=geonames
lin balaclava_N = mkN "passe-montagne" masculine ; -- tocheck
lin balagan_N = mkN "pétaudière" ; -- UWN
lin balalaika_N = mkN "balalaïka" feminine ; -- tocheck
lin balance_N = mkN "balance" feminine | mkN "équilibre" masculine | mkN "solde" masculine ; -- tocheck
lin balance_V = variants {} ; -- mkV2 (mkV "apurer") ; -- tocheck
lin balance_V2 = mkV2 (mkV "apurer") ; -- tocheck
lin balanced_A = variants {} ; --
lin balanitis_N = mkN "balanite" feminine ; -- tocheck
lin balbriggan_N = mkN "balbriggan" ; -- UWN
lin balcony_N = mkN "balcon" masculine ; -- tocheck
lin bald_A = mkA "chauve" | mkA "lisse" ; -- tocheck
lin baldachin_N = mkN "baldaquin" ; -- UWN
lin balderdash_N = mkN "bêtises" ; -- tocheck
lin baldness_N = mkN "calvitie" feminine ; -- tocheck
lin baldock_PN = mkPN "Baldock" ; -- status=guess src=geonames
lin baldric_N = mkN "baudrier" ; -- UWN
lin baleful_A = mkA "sinistre" ; -- tocheck
lin balk_N = mkN "regimber" ; -- UWN
lin balk_V2 = mkV2 (mkV "regimber") ; -- tocheck
lin ball_N = mkN "balle" feminine | mkN "bal" masculine | mkN "boule" feminine | mkN "pelote" feminine | mkN "couille" ; -- tocheck
lin ballad_N = mkN "ballade" feminine ; -- tocheck
lin ballade_N = mkN "ballade" ; -- UWN
lin ballast_N = mkN "lest" masculine | mkN "ballast" masculine ; -- tocheck
lin ballast_V2 = mkV2 (mkV "ballaster") ; -- tocheck
lin ballerina_N = mkN "ballerine" feminine ; -- tocheck
lin ballet_N = mkN "ballet" masculine ; -- tocheck
lin ballistics_N = mkN "balistique" feminine ; -- tocheck
lin ballistocardiograph_N = mkN "cardiographe" ; -- UWN
lin ballock_N = mkN "Testicule" | mkN "couille" | mkN "fou" | mkN "gosse" | mkN "testicule" | mkN "testicules" | mkN "œuf" ; -- UWN
lin balloon_N = mkN "ballon" masculine | mkN "montgolfière" feminine ; -- tocheck
lin ballot_N = mkN "scrutin" | mkN "voix" | mkN "votation" | mkN "vote" | mkN "voter" | mkN "élire" ; -- UWN
lin ballot_V = mkV (mkV "voter") ; -- tocheck
lin ballpark_N = mkN "jardin_public" | mkN "parc" | mkN "stationner" ; -- UWN
lin ballroom_N = mkN "dancing" | mkN "salle_de_danse" ; -- UWN
lin bally_A = variants {} ;
lin bally_Adv = adjAdv bally_A ; -- derived
lin ballyhoo_N = mkN "battage" masculine | mkN "aiguillette" feminine ; -- tocheck
lin balm_N = mkN "baume" | mkN "onction" | mkN "onguent" | mkN "pommade" ; -- UWN
lin balmy_A = mkA "embaumant" | mkA "doux" ; -- tocheck
lin balsam_N = mkN "baume" masculine | mkN "balsamine" feminine ; -- tocheck
lin baltimore_PN = mkPN "Baltimore" ; -- status=guess src=geonames
lin baluster_N = mkN "balustre" feminine ; -- tocheck
lin balustrade_N = mkN "balustrade" feminine ; -- tocheck
lin bamboo_N = mkN "bambou" masculine ; -- tocheck
lin bamboozle_V2 = mkV2 (mkV "embrouiller") ; -- tocheck
lin ban_N = mkN "interdiction" ; -- tocheck
lin ban_V2 = mkV2 (mkV I.interdire_V2) ; -- tocheck
lin banal_A = mkA "banal" ; -- tocheck
lin banality_N = mkN "banalisation" | mkN "banalité" | mkN "platitude" ; -- UWN
lin banana_N = mkN "banane" feminine | mkN "bananier" masculine ; -- tocheck
lin banbury_PN = mkPN "Banbury" ; -- status=guess src=geonames
lin band_N = mkN "groupe" feminine ; -- tocheck
lin band_V = mkV "baguer" ; -- UWN
lin bandage_N = mkN "bandage" masculine ; -- tocheck
lin bandanna_N = mkN "bandana" ; -- UWN
lin banderilla_N = mkN "banderille" feminine ; -- tocheck
lin banderillero_N = mkN "banderillero" masculine ; -- tocheck
lin bandicoot_N = mkN "bandicoot" masculine ; -- tocheck
lin bandit_N = mkN "voleur" masculine ; -- tocheck
lin banditry_N = mkN "banditisme" masculine ; -- tocheck
lin bandoleer_N = mkN "bandoulière" feminine ; -- tocheck
lin bandolier_N = mkN "bandoulière" ; -- UWN
lin band_saw_N = mkN "scie_à_ruban" | mkN "scieuse" ; -- UWN
lin bandstand_N = mkN "Kiosque" | mkN "kiosque" | mkN "être_debout" ; -- UWN
lin bandung_PN = mkPN "Bandung" ; -- status=guess src=geonames
lin bandwidth_N = mkN "débit" ; -- tocheck
lin baneful_A = mkA "funeste" ; -- tocheck
lin bang_Adv = mkAdv "gifle" ; -- UWN
lin bang_N = mkN "détonation" feminine ; -- tocheck
lin bang_V = variants {} ; -- mkV2 (mkV "cogner") | mkV2 (mkV "baiser") | mkV2 (mkV "claquer") ; -- tocheck
lin bang_V2 = mkV2 (mkV "cogner") | mkV2 (mkV "baiser") | mkV2 (mkV "claquer") ; -- tocheck
lin bangalore_PN = mkPN "Bangalore" ; -- status=guess src=geonames
lin banger_N = mkN "bagnole" feminine ; -- tocheck
lin banging_N = mkN "enfoncement" ; -- UWN
lin bangkok_PN = mkPN "Bangkok" ; -- status=guess src=geonames
lin bangladesh_PN = mkPN "Pakistan oriental" ; -- status=guess src=geonames
lin bangor_PN = mkPN "Bangor" ; -- status=guess src=geonames
lin banian_N = mkN "banian" ; -- UWN
lin banish_V2 = mkV2 (mkV "bannir") ; -- tocheck
lin banishment_N = mkN "bannissement" | mkN "défense" | mkN "interdiction" ; -- UWN
lin banister_N = mkN "rampe" | mkN "balustre" masculine ; -- tocheck
lin banjo_N = mkN "banjo" masculine ; -- tocheck
lin bank_N = L.bank_N ;
lin bankable_A = mkA "bancable" ; -- tocheck
lin banker_N = mkN "banquier" masculine ; -- tocheck
lin banking_N = variants {} ; --
lin bankroll_N = mkN "fonds" ; -- tocheck
lin bankrupt_A = mkA "failli" ; -- UWN
lin bankruptcy_N = mkN "faillite" feminine ; -- tocheck
lin banksia_N = mkN "banksia" ; -- UWN
lin banner_A = mkA "bannière" | mkA "drapeau" | mkA "étendard" ; -- UWN
lin banner_N = mkN "bannière" feminine | mkN "banderole" feminine | mkN "banière" feminine ; -- tocheck
lin bannister_N = mkN "rampe" feminine ; -- tocheck
lin bannock_N = mkN "banique" feminine ; -- tocheck
lin bannockburn_PN = mkPN "Bannockburn" ; -- status=guess src=geonames
lin banns_N = mkN "bans" ; -- tocheck
lin banquet_N = mkN "banquet" masculine ; -- tocheck
lin banshee_N = mkN "banshee" feminine ; -- tocheck
lin banter_N = mkN "plaisanterie" ; -- tocheck
lin banter_V2 = mkV2 (mkV "badiner") | mkV2 (mkV "taquiner") ; -- tocheck
lin bantry_PN = mkPN "Bantry" ; -- status=guess src=geonames
lin banyan_N = mkN "banian" masculine ; -- tocheck
lin baobab_N = mkN "baobab" masculine ; -- tocheck
lin baptism_N = mkN "baptême" masculine ; -- tocheck
lin baptismal_A = mkA "baptismal" ; -- tocheck
lin baptize_V2 = mkV2 (mkV "baptiser") ; -- tocheck
lin bar_1_N = mkN "bar" ;
lin bar_2_N = mkN "barre" ;
lin bar_N = mkN "barre" feminine | mkN "bar" masculine | mkN "comptoir" masculine | mkN "mesure" feminine ; -- tocheck
lin bar_V2 = mkV2 (mkV "barrer") | mkV2 (mkV "bloquer") | mkV2 (mkV I.interdire_V2) ; -- tocheck
lin barb_N = mkN "creuser" | mkN "simulacre" ; -- UWN
lin barbados_PN = mkPN "Barbade" ; -- status=guess src=geonames
lin barbara_PN = mkPN "Barbara" ; -- status=guess src=geonames
lin barbarian_A = mkA "barbare" ; -- tocheck
lin barbarian_N = mkN "barbare" ; -- tocheck
lin barbaric_A = mkA "barbare" ; -- tocheck
lin barbarism_N = mkN "barbarisme" masculine ; -- tocheck
lin barbarity_N = mkN "barbarie" feminine ; -- tocheck
lin barbarization_N = mkN "barbarisation" ; -- UWN
lin barbecue_N = mkN "barbecue" masculine ; -- tocheck
lin barbed_A = mkA "épineux" ; -- UWN
lin barbel_N = mkN "barbeau" masculine ; -- tocheck
lin barbell_N = mkN "haltère" masculine ; -- tocheck
lin barber_N = mkN "coiffeur" masculine ; -- tocheck
lin barberry_N = mkN "épine-vinette" feminine ; -- tocheck
lin barbican_N = mkN "barbacane" feminine ; -- tocheck
lin barbiturate_N = mkN "barbiturique" ; -- tocheck
lin barcelona_PN = mkPN ("Barcelona" | "Barcelone") ;
lin bard_N = mkN "barde" masculine ; -- tocheck
lin bardolatry_N = mkN "bardolâtrie" ; -- tocheck
lin bare_A = mkA "nu" ; -- tocheck
lin barefoot_Adv = mkAdv "pieds_nus" ; -- UWN
lin barefooted_Adv = mkAdv "pieds_nus" ; -- UWN
lin barely_Adv = adjAdv bare_A ; -- -- derived
lin bargain_N = mkN "accord" masculine ; -- tocheck
lin bargain_V = variants {} ; --
lin bargain_V2 = variants {} ; --
lin bargaining_N = mkN "chipotage" ; -- UWN
lin barge_N = mkN "chaland" masculine ; -- tocheck
lin bargello_N = mkN "bargello" | mkN "museo_nazionale_del_bargello" ; -- UWN
lin bargoed_PN = mkPN "Bargoed" ; -- status=guess src=geonames
lin bari_PN = mkPN "Bari" ; -- status=guess src=geonames
lin baritone_A = mkA "baryton" ; -- UWN
lin baritone_N = mkN "baryton" masculine ; -- tocheck
lin barium_N = mkN "baryum" masculine ; -- tocheck
lin bark_N = L.bark_N ;
lin bark_V2 = mkV2 (mkV "aboyer") ; -- tocheck
lin barking_PN = mkPN "Barking" ; -- status=guess src=geonames
lin barley_N = mkN "orge" feminine ; -- tocheck
lin barleycorn_N = mkN "orge" ; -- UWN
lin barm_N = mkN "levure" ; -- UWN
lin barmaid_N = mkN "barmaid" feminine ; -- tocheck
lin barman_N = mkN "Employé_de_bar" | mkN "barmaid" | mkN "barman" | mkN "employé_de_bar" ; -- UWN
lin barn_N = mkN "grange" feminine ; -- tocheck
lin barnacle_N = mkN "pouce-pied" masculine ; -- tocheck
lin barnet_PN = mkPN "Barnet" ; -- status=guess src=geonames
lin barnoldswick_PN = mkPN "Barnoldswick" ; -- status=guess src=geonames
lin barnsley_PN = mkPN "Barnsley" ; -- status=guess src=geonames
lin barnstaple_PN = mkPN "Barnstaple" ; -- status=guess src=geonames
lin barometer_N = mkN "baromètre" masculine ; -- tocheck
lin barometric_A = mkA "barométrique" ; -- tocheck
lin baron_N = mkN "baron" masculine ; -- tocheck
lin baronage_N = mkN "pairie" ; -- UWN
lin baroness_N = mkN "baronne" feminine ; -- tocheck
lin baroque_A = mkA "baroque" | mkA "churrigueresque" ; -- UWN
lin baroque_N = mkN "baroque" ; -- UWN
lin barosaur_N = mkN "barosaure" | mkN "barosaurus" ; -- UWN
lin barque_N = mkN "barque" feminine ; -- tocheck
lin barrack_N = mkN "caserne" feminine ; -- tocheck
lin barracuda_N = mkN "Sphyraena" | mkN "sphyraena" ; -- UWN
lin barrage_N = mkN "barrage" masculine ; -- tocheck
lin barranquilla_PN = mkPN "Barranquilla" ; -- status=guess src=geonames
lin barrel_N = mkN "tonneau" | mkN "canon" masculine | mkN "barillet" masculine | mkN "baril" masculine ; -- tocheck
lin barren_N = mkN "désert" | mkN "friche" | mkN "stérile" | mkN "wasteland" ; -- UWN
lin barrhead_PN = mkPN "Barrhead" ; -- status=guess src=geonames
lin barricade_N = mkN "barricade" feminine ; -- tocheck
lin barricade_V2 = mkV2 (mkV "barricader") ; -- tocheck
lin barrier_N = mkN "barrière" | mkN "limite" ; -- tocheck
lin barring_N = mkN "radiation" ; -- UWN
lin barrister_N = mkN "bâtonnier" masculine ; -- tocheck
lin barroom_N = mkN "bar" ; -- UWN
lin barrow_N = mkN "brouette" ; -- tocheck
lin barry_PN = mkPN "Barry" ; -- status=guess src=geonames
lin bart_PN = mkPN "Bart" ; -- status=guess src=geonames
lin bartender_N = mkN "barman" masculine ; -- tocheck
lin barter_N = mkN "troc" masculine ; -- tocheck
lin barter_V2 = mkV2 (mkV "troquer") ; -- tocheck
lin bartlett_N = mkN "bartlett" ; -- UWN
lin barycenter_N = mkN "barycentre" ; -- UWN
lin barye_N = mkN "barye" ; -- UWN
lin baryon_N = mkN "baryon" masculine ; -- tocheck
lin basalt_N = mkN "basalte" ; -- tocheck
lin base_A = mkA "bas" | mkA "indigne" ; -- tocheck
lin base_N = mkN "base" feminine | mkN "base" ; -- tocheck
lin base_V = mkV "fonder" ;
lin base_V2 = mkV2 (mkV "fonder") | mkV2 (mkV "baser") ;
lin baseball_N = mkN "baseball" masculine ; -- tocheck
lin baseboard_N = mkN "plinthe" ; -- UWN
lin basel_PN = mkPN "Bâle" ; -- status=guess src=geonames
lin baseless_A = mkA "gratuit" ; -- UWN
lin basement_N = mkN "sous-sol" masculine ; -- tocheck
lin basenji_N = mkN "basenji" ; -- UWN
lin bash_N = mkN "ceinture" ; -- UWN
lin bashful_A = mkA "timide" ; -- tocheck
lin basic_A = mkA "basique" ; -- tocheck
lin basically_Adv = mkAdv "foncièrement" ; -- tocheck
lin basics_N = mkN "abc" | mkN "bases_de_l'économie" ; -- UWN
lin basidium_N = mkN "baside" feminine ; -- tocheck
lin basil_N = mkN "basilic" masculine ; -- tocheck
lin basildon_PN = mkPN "Basildon" ; -- status=guess src=geonames
lin basileus_N = mkN "basileus" ; -- UWN
lin basilica_N = mkN "basilique" feminine ; -- tocheck
lin basilican_A = mkA "basilical" ; -- UWN
lin basilisk_N = mkN "basilic" masculine ; -- tocheck
lin basin_N = mkN "bassin" masculine | mkN "cuvette" feminine ; -- tocheck
lin basingstoke_PN = mkPN "Basingstoke" ; -- status=guess src=geonames
lin basis_N = mkN "base" feminine ; -- tocheck
lin basket_N = mkN "panier" masculine ; -- tocheck
lin basketball_N = mkN "basket-ball" masculine ; -- tocheck
lin basophil_N = mkN "basophile" masculine ; -- tocheck
lin basophilia_N = mkN "basophilie" ; -- UWN
lin basophilic_A = mkA "basophile" ; -- UWN
lin bass_A = mkA "bas" ; -- tocheck
lin bass_N = mkN "perche" masculine | mkN "basse" feminine ; -- tocheck
lin bassist_N = mkN "bassiste" ; -- UWN
lin bassoon_N = mkN "basson" masculine ; -- tocheck
lin bassoonist_N = mkN "basson" | mkN "bassoniste" ; -- UWN
lin bastard_N = mkN "bâtard" masculine | mkN "enculé" masculine ; -- tocheck
lin baste_V2 = mkV2 (mkV "bâtir") ; -- tocheck
lin bastille_N = mkN "bastille" ; -- tocheck
lin bat_N = mkN "chauve-souris" feminine | mkN "batte" feminine ; -- tocheck
lin batch_N = mkN "fournée" feminine | mkN "lot" masculine ; -- tocheck
lin bath_N = mkN "bain" masculine ; -- tocheck
lin bath_PN = mkPN "Bath" ; -- status=guess src=geonames
lin bathe_N = mkN "baignade" feminine ; -- tocheck
lin bathe_V2 = mkV2 (mkV "baigner") ; ---- | mkV2 (reflV (mkV "baigner")) ---- bathe_V
lin bather_N = mkN "baigneur" masculine ; -- tocheck
lin bathetic_A = mkA "affecté" | mkA "démonstratif" | mkA "histrionique" | mkA "hystérique" | mkA "larmoyant" | mkA "maniéré" | mkA "mièvre" | mkA "pleurnicheur" | mkA "sentimental" ; -- UWN
lin bathgate_PN = mkPN "Bathgate" ; -- status=guess src=geonames
lin bathhouse_N = mkN "bains" ; -- tocheck
lin bathing_N = mkN "baignade" feminine ; -- tocheck
lin batholith_N = mkN "batholite" | mkN "plutonique" | mkN "roche_plutonique" ; -- UWN
lin bathrobe_N = mkN "peignoir" masculine ; -- tocheck
lin bathroom_N = mkN "toilette" feminine ; -- tocheck
lin bathtub_N = mkN "baignoire" ; -- tocheck
lin bathymetric_A = mkA "bathymétrique" ; -- tocheck
lin bathymetry_N = mkN "bathymétrie" feminine ; -- tocheck
lin bathyscaphe_N = mkN "bathyscaphe" masculine ; -- tocheck
lin bathysphere_N = mkN "bathysphère" feminine ; -- tocheck
lin batik_N = mkN "batik" ; -- tocheck
lin batley_PN = mkPN "Batley" ; -- status=guess src=geonames
lin batman_N = mkN "ordonnance" ; -- tocheck
lin baton_N = mkN "canne" ; -- UWN
lin batrachomyomachia_N = mkN "batrachomyomachia" ; -- UWN
lin battalion_N = mkN "bataillon" masculine ; -- tocheck
lin batter_N = mkN "batteur" masculine ; -- tocheck
lin battering_N = mkN "enfoncement" ; -- UWN
lin battery_N = mkN "pile" feminine | mkN "batterie" feminine ; -- tocheck
lin batting_N = mkN "ouate" feminine ; -- tocheck
lin battle_N = mkN "lutte" feminine ; -- tocheck
lin battle_V = variants {} ; -- mkV2 (mkV "lutter") ; -- tocheck
lin battle_V2 = mkV2 (mkV "lutter") ; -- tocheck
lin battlefield_N = mkN "champ_de_bataille" ; -- UWN
lin battlefront_N = mkN "front" ; -- UWN
lin battleground_N = mkN "champ_de_bataille" ; -- UWN
lin battlement_N = mkN "rempart" masculine ; -- tocheck
lin battleship_N = mkN "cuirassé" masculine ; -- tocheck
lin battue_N = mkN "bain_de_sang" | mkN "bloodbath" | mkN "hécatombe" ; -- UWN
lin bauble_N = mkN "babiole" feminine ; -- tocheck
lin baud_N = mkN "baud" masculine ; -- tocheck
lin baulk_N = mkN "regimber" ; -- UWN
lin bauxite_N = mkN "bauxite" feminine ; -- tocheck
lin bawl_V2 = mkV2 (mkV "hurler") ; -- tocheck
lin bay_A = mkA "bai" ; -- tocheck
lin bay_N = mkN "laurier" masculine | mkN "baie" feminine | mkN "compartiment" masculine ; -- tocheck
lin bay_V = mkV (mkV "aboyer") ; -- tocheck
lin bayonet_N = mkN "baïonnette" feminine ; -- tocheck
lin bayou_N = mkN "bayou" ; -- UWN
lin bazaar_N = mkN "bazar" masculine ; -- tocheck
lin bazooka_N = mkN "bazooka" masculine ; -- tocheck
lin bdellium_N = mkN "bdellium" ; -- UWN
lin beach_N = mkN "plage" feminine ; -- tocheck
lin beacon_N = mkN "balise" | mkN "amer" masculine | mkN "phare" masculine ; -- tocheck
lin beaconsfield_PN = mkPN "Beaconsfield" ; -- status=guess src=geonames
lin bead_N = mkN "grain" masculine | mkN "perle" feminine | mkN "gouttelette" feminine ; -- tocheck
lin beadle_N = mkN "bedeau" masculine ; -- tocheck
lin beagle_N = mkN "briquet" masculine ; -- tocheck
lin beak_N = mkN "bec" masculine | mkN "éperon" masculine ; -- tocheck
lin beaker_N = mkN "bécher" masculine ; -- tocheck
lin beam_N = mkN "age" masculine | mkN "madrier" masculine | mkN "lien" masculine | mkN "limon" masculine | mkN "poutre" feminine | mkN "faisceau" masculine ; -- tocheck
lin beamy_A = mkA "radieux" ; -- UWN
lin bean_N = mkN "haricot" masculine ; -- tocheck
lin beanbag_N = mkN "fauteuil-sac" masculine ; -- tocheck
lin beano_N = mkN "Keno" | mkN "bingo" | mkN "keno" | mkN "scrabble" | mkN "ça_y_est" ; -- UWN
lin bear_N = mkN "ours" masculine | mkN "baissier" masculine ; -- tocheck
lin bear_V = mkV "porter" ; ----
lin bear_V2 = mkV2 (mkV "porter") | mkV2 (mkV "accoucher") | mkV2 (mkV "supporter") ; ---- split
lin bear_down_on_V2 = prepV2 (advV OP_bear_V OP_down_Adv ) OP_on_Prep ; -- guess-p-verb
lin bear_on_V2 = prepV2 OP_bear_V OP_on_Prep ; -- guess-p-verb
lin bear_out_V2 = prepV2 OP_bear_V OP_out_Prep ; -- guess-p-verb
lin bear_up_V = advV OP_bear_V OP_up_Adv ; -- guess-p-verb
lin bear_up_under_V2 = prepV2 (advV OP_bear_V OP_up_Adv ) OP_under_Prep ; -- guess-p-verb
lin bear_with_V2 = prepV2 OP_bear_V OP_with_Prep ; -- guess-p-verb
lin bearable_A = mkA "vivable" ; -- tocheck
lin bearberry_N = mkN "bearberry" ; -- tocheck
lin beard_N = mkN "barbe" feminine ; -- tocheck
lin bearer_N = mkN "porteur" | mkN "porteur" masculine ; -- tocheck
lin bearing_N = mkN "roulement" masculine | mkN "azimut" masculine ; -- tocheck
lin bearish_A = mkA "baissier" ; -- UWN
lin bearnaise_N = mkN "béarnaise" ; -- UWN
lin bearsden_PN = mkPN "Bearsden" ; -- status=guess src=geonames
lin bearskin_N = mkN "shako" ; -- UWN
lin beast_N = mkN "bête" feminine ; -- tocheck
lin beastly_A = variants {} ;
lin beastly_Adv = adjAdv beastly_A | {-UWN-} mkAdv "bestialement" ; -- UWN -- derived -- derived
lin beat_N = variants {} ; --
lin beat_V = variants {} ; -- mkV2 (mkV I.battre_V2) | mkV2 (mkV I.vaincre_V2) ; -- tocheck
lin beat_V2 = mkV2 (mkV I.battre_V2) | mkV2 (mkV I.vaincre_V2) ; -- tocheck
lin beat_back_V = mkV "aller" | mkV "conduire" | mkV "repousser" ; -- UWN
lin beat_down_V = advV OP_beat_V OP_down_Adv ; -- guess-p-verb
lin beat_down_V2 = prepV2 OP_beat_V OP_down_Prep ; -- guess-p-verb
lin beat_out_V2 = prepV2 OP_beat_V OP_out_Prep ; -- guess-p-verb
lin beat_up_V2 = prepV2 OP_beat_V OP_up_Prep ; -- guess-p-verb
lin beater_N = mkN "bazou" | mkN "batteur" masculine ; -- tocheck
lin beatific_A = mkA "angélique" | mkA "sacré" | mkA "saint" ; -- UWN
lin beatify_V2 = mkV2 (mkV "béatifier") ; -- tocheck
lin beating_N = mkN "battage" masculine | mkN "battement" masculine ; -- tocheck
lin beatnik_N = mkN "beatnik" masculine ; -- tocheck
lin beatrice_PN = mkPN "Beatrice" ; -- status=guess src=geonames
lin beau_N = mkN "sigisbée" masculine ; -- tocheck
lin beaumaris_PN = mkPN "Beaumaris" ; -- status=guess src=geonames
lin beautician_N = mkN "esthéticien" masculine ; -- tocheck
lin beautification_N = mkN "embellissement" ; -- UWN
lin beautiful_A = L.beautiful_A ;
lin beauty_N = mkN "beauté" feminine ; -- tocheck
lin beaver_N = mkN "castor" masculine | mkN "chatte" feminine ; -- tocheck
lin bebington_PN = mkPN "Bebington" ; -- status=guess src=geonames
lin becalmed_A = mkA "accalminé" | mkA "encalminé" ; -- UWN
lin because_Subj = S.because_Subj | M.mkSubj ("puis" + Ph.elisQue) ;
lin beccles_PN = mkPN "Beccles" ; -- status=guess src=geonames
lin beck_N = mkN "beck" | mkN "beck_hansen" | mkN "bek_david_campbell" ; -- UWN
lin become_V = I.devenir_V ; ----
lin become_V2 = mkV2 (mkV I.devenir_V) ;
lin become_VA = L.become_VA ;
lin bed_N = mkN "lit" masculine ;
lin beddau_PN = mkPN "Beddau" ; -- status=guess src=geonames
lin bedding_N = mkN "litière" feminine ; -- tocheck
lin bedevilment_N = mkN "tourment" ; -- UWN
lin bedfast_A = mkA "alité" | mkA "grabataire" ; -- UWN
lin bedford_PN = mkPN "Bedford" ; -- status=guess src=geonames
lin bedlington_PN = mkPN "Bedlington" ; -- status=guess src=geonames
lin bedouin_N = mkN "Bédouin" masculine ; -- tocheck
lin bedridden_A = mkA "alité" ; -- tocheck
lin bedrock_N = mkN "abc" | mkN "bases_de_l'économie" ; -- UWN
lin bedroom_N = mkN "chambre" feminine ; -- tocheck
lin bedsore_N = mkN "escarre" feminine ; -- tocheck
lin bedspread_N = mkN "jeté" masculine ; -- tocheck
lin bedstead_N = mkN "châlit" ; -- tocheck
lin bedtime_N = mkN "heure_du_coucher" ; -- UWN
lin bedwas_PN = mkPN "Bedwas" ; -- status=guess src=geonames
lin bedwetter_N = mkN "pisse-au-lit" ; -- tocheck
lin bee_N = mkN "abeille" feminine ; -- tocheck
lin beebread_N = mkN "ambroisie" ; -- UWN
lin beech_N = mkN "hêtre" masculine ; -- tocheck
lin beechnut_N = mkN "faine" feminine ; -- tocheck
lin beef_N = mkN "boeuf" masculine ; -- tocheck
lin beefcake_N = mkN "bellâtre" masculine ; -- tocheck
lin beefeater_N = mkN "yeoman" ; -- UWN
lin beefsteak_N = mkN "bifteck" masculine ; -- tocheck
lin beehive_N = mkN "ruche" feminine | mkN "ruchée" feminine ; -- tocheck
lin beekeeper_N = mkN "apiculteur" ; -- tocheck
lin beekeeping_N = mkN "apiculture" feminine ; -- tocheck
lin beep_N = mkN "bip" ; -- tocheck
lin beeper_N = mkN "bip" | mkN "radiomessagerie" ; -- UWN
lin beer_N = L.beer_N ;
lin beeswax_N = mkN "cire_d'abeille" ; -- UWN
lin beet_N = mkN "betterave" ; -- tocheck
lin beetle_A = mkA "scarabée" ; -- UWN
lin beetle_N = mkN "scarabée" masculine ; -- tocheck
lin beetle_browed_A = mkA "sourcilleux" ; -- tocheck
lin beetroot_N = mkN "betterave" feminine ; -- tocheck
lin before_Adv = mkAdv "avant" ; -- tocheck
lin before_Prep = S.before_Prep ;
lin before_Subj = M.mkSubjSubj ("avant" ++ Ph.elisQue) ; ---- ne in the subord clause
lin beforehand_Adv = mkAdv "préalablement" ; -- tocheck
lin befoulment_N = mkN "nuisance" | mkN "polluant" | mkN "pollution" ; -- UWN
lin beg_V = variants {} ; -- mkV2 (mkV "mendier") | mkV2 (mkV "implorer") ; -- tocheck
lin beg_V2 = mkV2 (mkV "mendier") | mkV2 (mkV "implorer") ; -- tocheck
lin beg_V2V = L.beg_V2V ;
lin beget_V2 = mkV2 (mkV "engendrer") | mkV2 (mkV "procréer") ; -- tocheck
lin begetter_N = mkN "géniteur" ; -- tocheck
lin beggar_N = mkN "mendiant" masculine ; -- tocheck
lin begin_V = mkV "commencer" ;
lin begin_V2 = mkV2 (mkV "commencer") ;
lin beginner_N = mkN "débutant" masculine ; -- tocheck
lin beginning_N = mkN "début" masculine ; -- tocheck
lin begonia_N = mkN "bégonia" masculine ; -- tocheck
lin begrimed_A = mkA "grunge" ; -- UWN
lin beguile_V2 = mkV2 (mkV "duper") | mkV2 (mkV "exalter") ; -- tocheck
lin beguilement_N = mkN "divertissement" | mkN "récréation" ; -- UWN
lin beguiling_A = mkA "séduisant" ; -- tocheck
lin begum_N = mkN "bégum" ; -- UWN
lin behalf_N = variants {} ; --
lin behave_V = mkV (reflV (mkV I.conduire_V2)) ; -- tocheck
lin behavior_N = mkN "comportement" | mkN "comportement" masculine ; -- tocheck
lin behavioral_A = mkA "comportemental" ; -- tocheck
lin behaviorism_N = mkN "béhaviorisme" masculine ; -- tocheck
lin behaviour_N = mkN "comportement" masculine | mkN "comportement" ; -- tocheck
lin behaviourism_N = mkN "béhaviorisme" | mkN "béhavioriste" ; -- UWN
lin behead_V2 = mkV2 (mkV "décapiter") ; -- tocheck
lin behest_N = mkN "demande" feminine ; -- tocheck
lin behind_Adv = variants {} ; -- S.behind_Prep ;
lin behind_N = mkN "derrière" masculine | mkN "revers" masculine ; -- tocheck
lin behind_Prep = S.behind_Prep ;
lin behold_V2 = mkV2 (mkV "regarder") ; -- tocheck
lin beholden_A = mkA "redevable" ; -- tocheck
lin beholder_N = mkN "regardeur" masculine ; -- tocheck
lin beige_A = mkA "beige" ; -- tocheck
lin beige_N = mkN "beige" ; -- tocheck
lin being_N = mkN "créature" feminine | mkN "existence" ; -- tocheck
lin beirut_PN = mkPN "Beyrouth" ; -- status=guess src=geonames
lin beith_PN = mkPN "Beith" ; -- status=guess src=geonames
lin belay_V2 = mkV2 (mkV "assurer") ; -- tocheck
lin belch_N = mkN "rot" masculine ; -- tocheck
lin belch_V2 = mkV2 (mkV "roter") ; -- tocheck
lin beleaguer_V2 = mkV2 (mkV "investir") ; -- tocheck
lin belfast_PN = mkPN "Belfast" ; -- status=guess src=geonames
lin belfry_N = mkN "beffroi" masculine ; -- tocheck
lin belgium_PN = mkPN "Belgique" ; -- status=guess src=geonames
lin belgrade_PN = mkPN "Belgrade" ; -- status=guess src=geonames
lin belie_V2 = mkV2 (mkV I.démentir_V2) ; -- tocheck
lin belief_N = mkN "croyance" feminine | mkN "foi" feminine | mkN "conviction" feminine ; -- tocheck
lin believable_A = mkA "croyable" | mkA "crédible" | mkA "vraisemblable" ; -- UWN
lin believe_V = mkV I.croire_V2 ;
lin believe_V2 = I.croire_V2 ;
lin believe_VS = subjVS (mkV I.croire_V2) ; ---- ind/subj
lin believer_N = mkN "croyant" masculine ; -- tocheck
lin belike_Adv = mkAdv "apparemment" | mkAdv "peut-être" | mkAdv "probable" | mkAdv "probablement" | mkAdv "sans_doute" | mkAdv "vraisemblable" | mkAdv "vraisemblablement" ; -- UWN
lin belittle_V2 = mkV2 (mkV "déprécier") ; -- tocheck
lin bell_N = mkN "cloche" feminine ; -- tocheck
lin bella_PN = mkPN "Bella" ; -- status=guess src=geonames
lin belladonna_N = mkN "belladone" ; -- UWN
lin bellboy_N = mkN "chasseur" ; -- tocheck
lin belle_N = mkN "belle" ; -- UWN
lin belle_PN = mkPN "Belle" ; -- status=guess src=geonames
lin bellhop_N = mkN "chasseur" ; -- UWN
lin bellicose_A = mkA "béliqueux" ; -- tocheck
lin belligerence_N = mkN "agressivité" | mkN "pugnacité" ; -- UWN
lin belligerent_A = mkA "belligérant" ; -- tocheck
lin belligerent_N = mkN "belligérant" masculine ; -- tocheck
lin bellow_V2 = mkV2 (mkV "mugir") ; -- tocheck
lin bellows_N = mkN "soufflet" masculine ; -- tocheck
lin bellshill_PN = mkPN "Bellshill" ; -- status=guess src=geonames
lin belly_N = L.belly_N ;
lin belly_V = mkV "ventre" ; -- UWN
lin belo_horizonte_PN = mkPN "Belo Horizonte" ; -- status=guess src=geonames
lin belonging_N = mkN "possesion" feminine | mkN "appartenance" feminine ; -- tocheck
lin beloved_A = mkA "bien-aimé" ; -- tocheck
lin beloved_N = mkN "amant" masculine ; -- tocheck
lin below_Adv = mkAdv "ci-dessous" ; -- tocheck
lin below_Prep = variants {} ; --
lin belper_PN = mkPN "Belper" ; -- status=guess src=geonames
lin belt_N = mkN "ceinture" feminine | mkN "courroie" feminine | mkN "région" feminine ; -- tocheck
lin belting_N = mkN "ceinturage" ; -- UWN
lin beltway_N = mkN "périphérique" | mkN "ring" ; -- UWN
lin beluga_N = mkN "béluga" masculine ; -- tocheck
lin bemoan_V2 = mkV2 (mkV "déplorer") ; -- tocheck
lin bemused_A = mkA "abasourdi" | mkA "désorienter" ; -- UWN
lin ben_N = mkN "ben" ; -- UWN
lin bench_N = mkN "banc" masculine ; -- tocheck
lin benchmark_N = mkN "critère" masculine ; -- tocheck
lin bend_N = mkN "courbe" | mkN "courber" | mkN "ployer" ; -- UWN
lin bend_V = mkV "déformer" | mkV "tordre" ; -- UWN
lin bend_V2 = mkV2 (mkV "courber") ; -- tocheck
lin bend_down_V = advV OP_bend_V OP_down_Adv ; -- guess-p-verb
lin bend_over_V = advV OP_bend_V OP_over_Adv ; -- guess-p-verb
lin bend_over_backwards_V = variants {} ; -- guess-p-verb
lin bender_N = mkN "tarlouze" feminine ; -- tocheck
lin beneath_Adv = mkAdv "dessous" ; -- tocheck
lin beneath_Prep = variants {} ; --
lin benedick_N = mkN "benoît" ; -- UWN
lin benedictine_N = mkN "bénédictin" | mkN "bénédictine" ; -- UWN
lin benediction_N = mkN "bénédiction" feminine ; -- tocheck
lin benefactor_N = mkN "bienfaiteur" masculine ; -- tocheck
lin beneficent_A = mkA "miséricordieux" ; -- tocheck
lin beneficial_A = mkA "bienfaisante" ; -- tocheck
lin beneficiary_A = mkA "bénéficiaire" ; -- UWN
lin beneficiary_N = mkN "bénéficiaire" masculine ; -- tocheck
lin benefit_N = mkN "avantage" masculine | mkN "subvention" feminine ; -- tocheck
lin benefit_V = mkV "bénéficier" | mkV "profiter" ; -- UWN
lin benefit_V2 = variants {} ; --
lin benevolence_N = mkN "bienveillance" feminine ; -- tocheck
lin benevolent_A = mkA "bienveillant" ; -- tocheck
lin benighted_A = mkA "obscur" | mkA "sombre" ; -- UWN
lin benign_A = mkA "bienveillant" | mkA "bénin" ; -- tocheck
lin benignity_N = mkN "amabilité" ; -- UWN
lin benin_PN = mkPN "Bénin" ; -- status=guess src=geonames
lin benjamin_PN = mkPN "Benjamin" ; -- status=guess src=geonames
lin bent_A = mkA "courbé" ; -- tocheck
lin bent_N = mkN "aptitude" | mkN "knack" | mkN "talent" ; -- UWN
lin bentonite_N = mkN "bentonite" ; -- UWN
lin benzene_N = mkN "benzène" masculine ; -- tocheck
lin benzine_N = mkN "benzine" | mkN "benzène" ; -- UWN
lin benzodiazepine_N = mkN "benzodiazépine" masculine ; -- tocheck
lin benzofuran_N = mkN "benzofurane" | mkN "coumarone" ; -- UWN
lin benzoic_A = mkA "benzoïque" ; -- tocheck
lin benzoin_N = mkN "benjoin" masculine ; -- tocheck
lin benzol_N = mkN "benzine" | mkN "benzène" ; -- UWN
lin bequeath_V2 = mkV2 (mkV "léguer") | mkV2 (mkV "donner") | mkV2 (mkV I.transmettre_V2) ; -- tocheck
lin bequest_N = mkN "testament" masculine ; -- tocheck
lin berate_V2 = mkV2 (mkV "réprimander") ; -- tocheck
lin berating_N = mkN "abattage" | mkN "gonflage" ; -- UWN
lin bereavement_N = mkN "privation" feminine ; -- tocheck
lin bereft_A = mkA "deuil" ; -- UWN
lin beret_N = mkN "béret" masculine ; -- tocheck
lin berg_N = mkN "berg" | mkN "iceberg" ; -- UWN
lin bergamo_PN = mkPN "Bergame" ; -- status=guess src=geonames
lin bergamot_N = mkN "bergamote" ; -- tocheck
lin bergen_PN = mkPN "Bergen" ; -- status=guess src=geonames
lin bergenia_N = mkN "bergenia" ; -- UWN
lin beri_beri_N = mkN "béribéri" masculine ; -- tocheck
lin berkelium_N = mkN "berkélium" masculine ; -- tocheck
lin berkhamsted_PN = mkPN "Berkhamsted" ; -- status=guess src=geonames
lin berlin_N = mkN "berlin" ; -- UWN
lin berlin_PN = mkPN "Berlin" ; -- status=guess src=geonames
lin bermuda_PN = mkPN "Bermudes" ; -- status=guess src=geonames
lin bern_PN = mkPN "Berne" ; -- status=guess src=geonames
lin bernie_PN = mkPN "Bernie" ; -- status=guess src=geonames
lin beroe_N = mkN "beroe" ; -- UWN
lin berry_N = mkN "baie" feminine ; -- tocheck
lin berserker_N = mkN "Berserk" | mkN "berserk" ; -- UWN
lin berth_N = mkN "couchette" ; -- tocheck
lin beryl_N = mkN "béryl" masculine ; -- tocheck
lin beryllium_N = mkN "béryllium" masculine ; -- tocheck
lin beseech_V2 = mkV2 (mkV "prier") ; -- tocheck
lin beside_Prep = variants {} ; --
lin besides_Adv = mkAdv "sinon" ; -- tocheck
lin besides_Prep = variants {} ; --
lin besiege_V2 = mkV2 (mkV "assiéger") ; -- tocheck
lin besmirch_V2 = mkV2 (mkV "salir") ; -- tocheck
lin besom_N = mkN "genêt" ; -- UWN
lin besotted_A = mkA "bourré" | mkA "empégué" | mkA "gris" | mkA "grise" | mkA "mouillé" | mkA "pompette" | mkA "rigide" | mkA "schlass" | mkA "trempé" | mkA "émeché" | mkA "éméché" | mkA "éméchée" ; -- UWN
lin bespoke_A = mkA "personnalisé" ; -- UWN
lin best_Adv = variants {} ; --
lin best_N = mkN "mieux" masculine | mkN "élite" ; -- tocheck
lin best_V2 = mkV2 (mkV I.battre_V2) ; -- tocheck
lin bestiality_N = mkN "bestialité" feminine | mkN "zoophilie" feminine ; -- tocheck
lin bestow_V2 = mkV2 (mkV "accorder") ; -- tocheck
lin bet_N = mkN "pari" ; -- tocheck
lin bet_V = variants {} ; -- mkV2 (mkV "parier") ; -- tocheck
lin bet_V2 = mkV2 (mkV "parier") ; -- tocheck
lin bet_VS = mkvVS "calculer" | mkvVS "compter" | mkvVS "dépendre" | mkvVS "paraître" | mkvVS "sembler" ; -- UWN
lin beta_N = mkN "bêta" masculine ; -- tocheck
lin betel_N = mkN "bétel" masculine ; -- tocheck
lin bethel_N = mkN "béthel" ; -- UWN
lin betimes_Adv = mkAdv "tôt" ; -- UWN
lin betray_V2 = mkV2 (mkV "trahir") ; -- tocheck
lin betrayer_N = mkN "dénonciateur" ; -- tocheck
lin betrothal_N = mkN "accordailles" ; -- tocheck
lin betrothedFem_N = mkN "fiancé" masculine ; -- tocheck ---- sense to be split
lin betrothedMasc_N = mkN "fiancé" masculine ; -- tocheck ---- sense to be split
lin betrothed_N = mkN "fiancé" masculine ; -- tocheck
lin better_A = mkA "meilleur" ; -- tocheck
lin better_Adv = mkAdv "mieux" ; -- tocheck
lin bettong_N = mkN "bettongia" ; -- UWN
lin bettor_N = mkN "meilleur" ; -- UWN
lin between_Adv = mkAdv "entre" ; -- UWN
lin between_Prep = S.between_Prep ;
lin bevel_V2 = mkV2 (mkV "aiguiser") ; -- tocheck
lin beverage_N = mkN "boisson" feminine ; -- tocheck
lin beverley_PN = mkPN "Beverley" ; -- status=guess src=geonames
lin bewail_V2 = mkV2 (mkV "pleurer") ; -- tocheck
lin bewdley_PN = mkPN "Bewdley" ; -- status=guess src=geonames
lin bewilder_V2 = mkV2 (mkV "déconcerter") ; -- tocheck
lin bewilderment_N = mkN "ahurissement" masculine ; -- tocheck
lin bewitch_V2 = mkV2 (mkV "ensorceler") ; -- tocheck
lin bewitchery_N = mkN "magnétisme_animal" ; -- UWN
lin bewitching_A = mkA "délicieux" | mkA "enchanteresse" | mkA "enchanteur" | mkA "ensorcelant" | mkA "entraînant" | mkA "ravissant" ; -- UWN
lin bexley_PN = mkPN "Bexley" ; -- status=guess src=geonames
lin bey_N = mkN "bey" masculine ; -- tocheck
lin beyond_Adv = variants {} ; --
lin beyond_Prep = variants {} ; --
lin bezant_N = mkN "besant" masculine ; -- tocheck
lin bezel_N = mkN "chaton" masculine | mkN "monture" feminine ; -- tocheck
lin bezique_N = mkN "bésigue" ; -- UWN
lin bhakti_N = mkN "bhakti" ; -- UWN
lin bhutan_PN = mkPN "Bhutan" ; -- status=guess src=geonames
lin bias_N = mkN "préjugé" ; -- tocheck
lin bib_N = mkN "bavoir" masculine ; -- tocheck
lin bible_N = mkN "Bible" feminine ; -- tocheck
lin biblical_A = mkA "biblique" ; -- tocheck
lin bibliographic_A = mkA "bibliographique" ; -- tocheck
lin bibliography_N = mkN "bibliographie" feminine | mkN "habbo" ; -- tocheck
lin bibliophile_N = mkN "bibliophile" ; -- tocheck
lin bibliophilic_A = mkA "bibliophilique" ; -- UWN
lin bicameral_A = mkA "bicaméral" ; -- tocheck
lin bicarbonate_N = mkN "bicarbonate" masculine ; -- tocheck
lin bicephalous_A = mkA "bicéphale" ; -- tocheck
lin biceps_N = mkN "biceps" masculine ; -- tocheck
lin bicester_PN = mkPN "Bicester" ; -- status=guess src=geonames
lin bicker_V = mkV (reflV (mkV "chamailler")) ; -- tocheck
lin bicolor_A = mkA "bicolore" ; -- UWN
lin biconvex_A = mkA "lenticulaire" ; -- UWN
lin bicorn_N = mkN "bicorne" ; -- UWN
lin bicycle_N = mkN "vélo" masculine ; -- tocheck
lin bid_N = mkN "enchère" feminine ; -- tocheck
lin bid_V = mkV "offre" | mkV "offrir" ; -- UWN
lin bid_V2 = variants {} ; --
lin biddable_A = mkA "obéissant" ; -- UWN
lin bidder_N = mkN "enchérisseur" masculine ; -- tocheck
lin biddulph_PN = mkPN "Biddulph" ; -- status=guess src=geonames
lin bideford_PN = mkPN "Bideford" ; -- status=guess src=geonames
lin bidet_N = mkN "bidet" masculine ; -- tocheck
lin bidirectional_A = mkA "bidirectionnel" ; -- tocheck
lin bielefeld_PN = mkPN "Bielefeld" ; -- status=guess src=geonames
lin biennial_A = mkA "bisannuel" ; -- tocheck
lin biennial_N = mkN "biennal" ; -- UWN
lin bier_N = mkN "civière" | mkN "catafalque" ; -- tocheck
lin biff_N = mkN "coup" ; -- UWN
lin bifid_A = mkA "bifide" ; -- UWN
lin bifurcation_N = mkN "bifurcation" ; -- tocheck
lin big_A = L.big_A ;
lin bigamist_N = mkN "bigame" masculine ; -- tocheck
lin bigamy_N = mkN "bigamie" feminine ; -- tocheck
lin biggleswade_PN = mkPN "Biggleswade" ; -- status=guess src=geonames
lin bigmouthed_A = mkA "bavard" ; -- UWN
lin bigos_N = mkN "bigos" ; -- UWN
lin bigot_N = mkN "bigot" ; -- UWN
lin bigotry_N = mkN "bigoterie" feminine ; -- tocheck
lin bigwig_N = mkN "gros_bonnet" | mkN "grosse_légume" | mkN "huile" | mkN "personnage" ; -- UWN
lin bike_N = L.bike_N ;
lin bikini_N = mkN "bikini" masculine ; -- tocheck
lin bilateral_A = mkA "bilatéral" ; -- tocheck
lin bilbao_PN = mkPN "Bilbao" ; -- status=guess src=geonames
lin bile_N = mkN "bile" feminine ; -- tocheck
lin bilharzia_N = mkN "bilharziose" | mkN "schistosomiase" ; -- UWN
lin bilinear_A = mkA "bilinéaire" ; -- tocheck
lin bilingual_A = mkA "bilingue" ; -- tocheck
lin bilingual_N = mkN "bilingue" ; -- UWN
lin bilingualism_N = mkN "bilinguisme" masculine ; -- tocheck
lin bilious_A = mkA "bilieux" | mkA "atrabilaire" ; -- tocheck
lin bilirubin_N = mkN "bilirubine" feminine ; -- tocheck
lin bill_N = mkN "tract" masculine | mkN "facture" feminine | mkN "bec" masculine | mkN "hallebarde" feminine | mkN "greffe" masculine | mkN "note" feminine | mkN "hallebardier" masculine ; -- tocheck
lin billboard_N = mkN "accaparement" | mkN "collectionnisme" | mkN "panneau" | mkN "panneau_d'affichage" | mkN "thésaurisation" ; -- UWN
lin billericay_PN = mkPN "Billericay" ; -- status=guess src=geonames
lin billfold_N = mkN "porte-monnaie" | mkN "portefeuille" | mkN "sacoche" ; -- UWN
lin billhook_N = mkN "serpette" feminine ; -- tocheck
lin billiards_N = mkN "billards" ; -- tocheck
lin billington_PN = mkPN "Billington" ; -- status=guess src=geonames
lin billion_N = mkN "billion" | mkN "milliard" masculine | mkN "milliards" ; -- tocheck
lin billionaire_N = mkN "milliardaire" ; -- tocheck
lin billionth_N = mkN "milliardième" ; -- UWN
lin billow_N = mkN "flot" masculine ; -- tocheck
lin billow_V = mkV (mkV "ondoyer") ; -- tocheck
lin billy_N = mkN "bouc" ; -- UWN
lin bilocation_N = mkN "bilocation" feminine ; -- tocheck
lin biltong_N = mkN "biltong" ; -- UWN
lin bimbo_N = mkN "idiot" masculine ; -- tocheck
lin bimetallism_N = mkN "bimétallisme" masculine ; -- tocheck
lin bimonthly_Adv = mkAdv "bimestriel" | mkAdv "bimensuel" ; -- tocheck
lin bin_N = mkN "boîte" feminine | mkN "poubelle" feminine ; -- tocheck
lin binary_A = mkA "binaire" ; -- tocheck
lin binary_N = mkN "binarité" feminine ; -- tocheck
lin bind_V = variants {} ; -- mkV2 (mkV "lier") | mkV2 (mkV "relier") ; -- tocheck
lin bind_V2 = mkV2 (mkV "lier") | mkV2 (mkV "relier") ; -- tocheck
lin binder_N = mkN "relieur" masculine | mkN "reliure" feminine | mkN "dossier" masculine ; -- tocheck
lin binding_A = variants {} ; --
lin binding_N = mkN "reliure" feminine ; -- tocheck
lin bindweed_N = mkN "liseron" masculine ; -- tocheck
lin binge_N = mkN "orgie" ; -- UWN
lin bingley_PN = mkPN "Bingley" ; -- status=guess src=geonames
lin bingo_N = mkN "bingo" masculine | mkN "scrabble" masculine ; -- tocheck
lin binoculars_N = mkN "jumelles" ; -- tocheck
lin binomial_N = mkN "binôme" masculine ; -- tocheck
lin biocatalyst_N = mkN "biocatalyseur" masculine ; -- tocheck
lin biocatalytic_A = mkA "biocatalytique" ; -- tocheck
lin biochemical_A = mkA "biochimique" ; -- tocheck
lin biochemist_N = mkN "biochimiste" masculine ; -- tocheck
lin biochemistry_N = mkN "biochimie" feminine ; -- tocheck
lin biochip_N = mkN "biopuce" | mkN "puce_à_ADN" | mkN "puce_à_gènes" ; -- UWN
lin bioclimatic_A = mkA "bioclimatique" ; -- UWN
lin bioclimatology_N = mkN "bioclimatologie" ; -- tocheck
lin biodegradable_A = mkA "biodégradable" ; -- tocheck
lin biodiversity_N = mkN "biodiversité" feminine ; -- tocheck
lin bioelectricity_N = mkN "bioélectricité" feminine ; -- tocheck
lin bioethics_N = mkN "bioéthique" ; -- UWN
lin biofeedback_N = mkN "biorétroaction" ; -- UWN
lin biogenetic_A = mkA "biogénétique" ; -- UWN
lin biogeography_N = mkN "biogéographie" feminine ; -- tocheck
lin biographer_N = mkN "biographe" ; -- tocheck
lin biographic_A = mkA "biographique" ; -- UWN
lin biographical_A = mkA "biographique" ; -- tocheck
lin biography_N = mkN "biographie" feminine ; -- tocheck
lin biological_A = mkA "biologique" ; -- tocheck
lin biologist_N = mkN "biologiste" ; -- tocheck
lin biology_N = mkN "biologie" feminine ; -- tocheck
lin bioluminescence_N = mkN "bioluminescence" feminine ; -- tocheck
lin biomass_N = mkN "biomasse" feminine ; -- tocheck
lin biome_N = mkN "biome" ; -- UWN
lin biomedical_A = mkA "biomédical" ; -- tocheck
lin biometrics_N = mkN "biométrie" feminine ; -- tocheck
lin bionics_N = mkN "bionique" ; -- UWN
lin biophysicist_N = mkN "biophysicien" ; -- UWN
lin biophysics_N = mkN "biophysique" ; -- UWN
lin biopsy_N = mkN "biopsie" ; -- UWN
lin biosafety_N = mkN "sûreté_biologique" ; -- UWN
lin biosphere_N = mkN "biosphère" feminine ; -- tocheck
lin biosynthesis_N = mkN "biosynthèse" ; -- UWN
lin biota_N = mkN "biologie" | mkN "faune_et_flore" ; -- UWN
lin biotechnology_N = mkN "biotechnologie" feminine ; -- tocheck
lin bioterrorism_N = mkN "bioterrorisme" ; -- UWN
lin biotic_A = mkA "biotique" ; -- tocheck
lin biotin_N = mkN "biotine" | mkN "vitamine_b8" ; -- UWN
lin biotite_N = mkN "biotite" feminine ; -- tocheck
lin biotype_N = mkN "biotype" ; -- UWN
lin bioweapon_N = mkN "arme_biologique" ; -- UWN
lin bipartisan_A = mkA "bipartisan" ; -- UWN
lin bipartite_A = mkA "biparti" ; -- tocheck
lin bipedal_A = mkA "bipède" ; -- UWN
lin bipedalism_N = mkN "bipédie" ; -- UWN
lin bipolar_A = mkA "bipolaire" ; -- tocheck
lin biracial_A = mkA "biracial" ; -- UWN
lin birch_A = mkA "bouleau" ; -- UWN
lin birch_N = mkN "bouleau" masculine | mkN "badine" feminine ; -- tocheck
lin birch_V2 = mkV2 (mkV "verger") ; -- tocheck
lin bird_N = L.bird_N ;
lin birdcage_N = mkN "panier" masculine ; -- tocheck
lin birdcall_N = mkN "appeau" masculine ; -- tocheck
lin birdhouse_N = mkN "nichoir" masculine ; -- tocheck
lin birdie_N = mkN "oiselet" masculine ; -- tocheck
lin birdlime_N = mkN "glu" masculine ; -- tocheck
lin birefringent_A = mkA "biréfringent" ; -- UWN
lin birkenhead_PN = mkPN "Birkenhead" ; -- status=guess src=geonames
lin birth_N = mkN "naissance" feminine ; -- tocheck
lin birthday_N = mkN "anniversaire" masculine ; -- tocheck
lin birthmark_N = mkN "grain_de_beauté" | mkN "nævus" | mkN "nævus_bénin" | mkN "tache_de_naissance" | mkN "tache_de_vin" ; -- UWN
lin birthrate_N = mkN "taux_de_natalité" ; -- UWN
lin birthwort_N = mkN "aristoloche" feminine ; -- tocheck
lin birtley_PN = mkPN "Birtley" ; -- status=guess src=geonames
lin biryani_N = mkN "biryani" masculine ; -- tocheck
lin biscuit_N = mkN "biscuit" ; -- tocheck
lin bise_N = mkN "bise" ; -- UWN
lin bisexual_A = mkA "bisexuel" | mkA "bisexué" ; -- tocheck
lin bisexual_N = mkN "bisexuel" masculine ; -- tocheck
lin bisexuality_N = mkN "bisexualité" feminine ; -- tocheck
lin bishop_N = mkN "évêque" masculine | mkN "fou" masculine ; -- tocheck
lin bishopbriggs_PN = mkPN "Bishopbriggs" ; -- status=guess src=geonames
lin bishopric_N = mkN "évêché" masculine | mkN "épiscopat" masculine ; -- tocheck
lin bismuth_N = mkN "bismuth" masculine ; -- tocheck
lin bison_N = mkN "bison" masculine | mkN "bison" ; -- tocheck
lin bister_N = mkN "bistre" ; -- UWN
lin bistro_N = mkN "bistro" masculine ; -- tocheck
lin bit_N = mkN "morceau" masculine | mkN "bit" masculine ; --- split
lin bitch_N = mkN "chienne" | mkN "saleté" feminine | mkN "garce" feminine ; -- tocheck
lin bitch_V = mkV (mkV "chialer") ; -- tocheck
lin bite_N = mkN "morsure" feminine | mkN "bouchée" feminine | mkN "piqûre" feminine ; -- tocheck
lin bite_V = mkV "mordre" ; -- UWN
lin bite_V2 = L.bite_V2 ;
lin bitter_A = mkA "amer" | mkA "dur" | mkA "haineux" ; -- tocheck
lin bittercress_N = mkN "cardamine" | mkN "dentaire" ; -- UWN
lin bittern_N = mkN "butor" masculine ; -- tocheck
lin bitterness_N = mkN "amertume" feminine ; -- tocheck
lin bitters_N = mkN "amer" ; -- UWN
lin bitter_sweet_A = mkA "doux-amer" ; -- tocheck
lin bitumen_N = mkN "bitume" masculine ; -- tocheck
lin bivalent_A = mkA "double" ; -- UWN
lin bivalve_N = mkN "bivalve" masculine ; -- tocheck
lin bivouac_N = mkN "camp" | mkN "camper" ; -- UWN
lin bivouac_V = mkV "camper" ; -- UWN
lin biweekly_N = mkN "bimensuel" masculine ; -- tocheck
lin biz_N = mkN "gibier" | mkN "jeu" | mkN "match" | mkN "partie" ; -- UWN
lin bizarre_A = mkA "bizarre" ; -- tocheck
lin blabbermouth_N = mkN "cafteur" ; -- UWN
lin black_A = L.black_A ;
lin black_N = mkN "noir" | mkN "Noir" masculine ; -- tocheck
lin black_out_V = mkV "distribuer" ; -- UWN
lin blackberry_N = mkN "ronce" feminine ; -- tocheck
lin blackbird_N = mkN "merle" masculine ; -- tocheck
lin blackboard_N = mkN "tableau" masculine ; -- tocheck
lin blackburn_PN = mkPN "Blackburn" ; -- status=guess src=geonames
lin blackcurrant_N = mkN "cassis" masculine | mkN "cassissier" masculine ; -- tocheck
lin blacken_V = mkV "noir" | mkV "noircir" ; -- UWN
lin blacken_V2 = mkV2 (mkV "noircir") | mkV2 (mkV "souiller") ; -- tocheck
lin blackfly_N = mkN "simulie" ; -- UWN
lin blackguard_N = mkN "achille" | mkN "chien" | mkN "quignon" | mkN "talon" ; -- UWN
lin blackhead_N = mkN "comédon" | mkN "point_noir" ; -- UWN
lin blacking_N = mkN "cirage" ; -- UWN
lin blackish_A = mkA "noirâtre" ; -- UWN
lin blackjack_N = mkN "vingt-et-un" masculine ; -- tocheck
lin blackleg_N = mkN "briseur_de_grève" | mkN "charbon_symptomatique" | mkN "rat" ; -- UWN
lin blacklist_N = mkN "liste_noire" ; -- UWN
lin blacklist_V2 = mkV2 (mkV "blacklister") ; -- tocheck
lin blackmail_N = mkN "chantage" masculine ; -- tocheck
lin blackmailer_N = mkN "maître-chanteur" masculine ; -- tocheck
lin blackness_N = mkN "galeux" | mkN "noir" ; -- UWN
lin blackout_N = mkN "blackout" masculine ; -- tocheck
lin blackpool_PN = mkPN "Blackpool" ; -- status=guess src=geonames
lin blacksmith_N = mkN "forgeron" masculine | mkN "maréchal-ferrant" masculine ; -- tocheck
lin blackthorn_N = mkN "prunellier" masculine ; -- tocheck
lin blackwater_N = mkN "blackwater" ; -- UWN
lin blackwood_PN = mkPN "Blackwood" ; -- status=guess src=geonames
lin bladder_N = mkN "vésicule" feminine | mkN "cubi" ; -- tocheck
lin bladderwort_N = mkN "utriculaire" feminine ; -- tocheck
lin blade_N = mkN "lame" feminine ; -- tocheck
lin blaenavon_PN = mkPN "Blaenavon" ; -- status=guess src=geonames
lin blah_N = mkN "bla-bla" masculine ; -- tocheck
lin blain_N = mkN "blain" ; -- UWN
lin blairgowrie_PN = mkPN "Blairgowrie" ; -- status=guess src=geonames
lin blame_N = mkN "coupabilité" feminine ; -- tocheck
lin blame_V = variants {} ; -- mkV2 (mkV "reprocher") ; -- tocheck
lin blame_V2 = mkV2 (mkV "reprocher") ; -- tocheck
lin blameworthiness_N = mkN "culpabilité" ; -- UWN
lin blameworthy_A = mkA "coupable" ; -- UWN
lin blanch_V2 = mkV2 (mkV "blanchir") ; -- tocheck
lin blancmange_N = mkN "blanc-manger" masculine ; -- tocheck
lin bland_A = mkA "doux" | mkA "fade" ; -- tocheck
lin blank_A = mkA "blanc" ; -- tocheck
lin blank_N = mkN "préforme" | mkN "espace" ; -- tocheck
lin blanket_N = mkN "couverture" feminine ; -- tocheck
lin blantyre_PN = mkPN "Blantyre" ; -- status=guess src=geonames
lin blare_N = mkN "éclat" masculine ; -- tocheck
lin blaspheme_V2 = mkV2 (mkV "blasphémer") ; -- tocheck
lin blasphemer_N = mkN "blasphémateur" masculine ; -- tocheck
lin blasphemous_A = mkA "blasphématoire" ; -- tocheck
lin blasphemy_N = mkN "blasphème" masculine ; -- tocheck
lin blast_N = mkN "rafale" feminine | mkN "bourrasque" ; -- tocheck
lin blast_V = variants {} ; --
lin blast_V2 = variants {} ; --
lin blastocoel_N = mkN "blastocèle" ; -- UWN
lin blastocyst_N = mkN "blastocyste" | mkN "blastula" ; -- UWN
lin blastocyte_N = mkN "blastocyte" ; -- UWN
lin blastoma_N = mkN "blastome" masculine ; -- tocheck
lin blastopore_N = mkN "blastopore" ; -- UWN
lin blatant_A = mkA "flagrant" ; -- tocheck
lin blather_V = mkV (mkV "déblatérer") | mkV "papoter" ; -- UWN
lin blaxploitation_N = mkN "blaxploitation" feminine ; -- tocheck
lin blaze_N = mkN "feu" masculine ; -- tocheck
lin blaze_V2 = mkV2 (mkV "brûler") | mkV2 (mkV "baliser") | mkV2 (mkV "briller") ; -- tocheck
lin blazer_N = mkN "blazer" feminine ; -- tocheck
lin blazon_N = mkN "blason" ; -- tocheck
lin blazon_V2 = mkV2 (mkV "blasonner") ; -- tocheck
lin blazonry_N = mkN "armes" | mkN "armoiries" | mkN "blason" | mkN "blasonnement" | mkN "écu" ; -- UWN
lin bleach_V2 = mkV2 (mkV "blanchir") ; -- tocheck
lin bleak_A = variants {} ; --
lin bleat_V = mkV "bêler" ; -- UWN
lin bleat_V2 = mkV2 (mkV "rouspéter") ; -- tocheck
lin bleed_V = variants {} ; -- mkV2 (mkV "saigner") ; -- tocheck
lin bleed_V2 = mkV2 (mkV "saigner") ; -- tocheck
lin bleed_VS = variants {} ; -- mkV2 (mkV "saigner") ; -- tocheck
lin bleeding_N = mkN "saignement" ; -- tocheck
lin bleep_N = mkN "bip" ; -- tocheck
lin blemish_N = mkN "defauts" | mkN "défaut" ; -- UWN
lin blend_N = mkN "mélange" masculine ; -- tocheck
lin blend_V2 = mkV2 (mkV "mélanger") ; -- tocheck
lin blender_N = mkN "mixeur" masculine ; -- tocheck
lin blenny_N = mkN "blenniidae" | mkN "blennioidei" ; -- UWN
lin blepharitis_N = mkN "blépharite" feminine ; -- tocheck
lin bless_V2 = mkV2 (mkV "bénir") ; -- tocheck
lin blessedness_N = mkN "béatification" ; -- UWN
lin blessing_N = mkN "bénédiction" feminine | mkN "troupeau" masculine ; -- tocheck
lin bletchley_PN = mkPN "Bletchley" ; -- status=guess src=geonames
lin blether_N = mkN "bavarder" ; -- UWN
lin bletia_N = mkN "bletia" ; -- UWN
lin bleu_N = mkN "bleu" | mkN "uebl" ; -- UWN
lin blidworth_PN = mkPN "Blidworth" ; -- status=guess src=geonames
lin blight_N = mkN "fléau" | mkN "rouille" feminine ; -- tocheck
lin blight_V2 = mkV2 (mkV "abîmer") ; -- tocheck
lin blimp_N = mkN "andouille" | mkN "ballon_dirigeable" | mkN "blimp" | mkN "dirigeable" | mkN "saucisse" | mkN "saucisson" ; -- UWN
lin blind_A = mkA "aveugle" ; -- tocheck
lin blind_N = mkN "store" masculine | mkN "blind" masculine ; -- tocheck
lin blind_V2 = mkV2 (mkV "aveugler") ; -- tocheck
lin blindfold_N = mkN "bandeau" | mkN "bandeau" masculine ; -- tocheck
lin blindness_N = mkN "cécité" feminine ; -- tocheck
lin blink_N = mkN "ciller" ; -- UWN
lin blink_V = mkV "ciller" ; -- UWN
lin blink_V2 = mkV2 (mkV "ciller") | mkV2 (mkV "clignoter") ; -- tocheck
lin blinker_N = mkN "oeillère" feminine ; -- tocheck
lin blintz_N = mkN "Blini" | mkN "blin" | mkN "blini" | mkN "blintz" ; -- UWN
lin bliss_N = mkN "béatitude" feminine ; -- tocheck
lin blissful_A = mkA "euphorique" ; -- tocheck
lin blister_N = mkN "cloque" feminine | mkN "ampoule" feminine ; -- tocheck
lin blister_V2 = mkV2 (mkV "cloquer") | mkV2 (mkV "critiquer") ; -- tocheck
lin blithe_A = mkA "joyeux" | mkA "indifférent" ; -- tocheck
lin blithesome_A = mkA "gai" | mkA "joyeux" ; -- UWN
lin blizzard_N = mkN "blizzard" masculine ; -- tocheck
lin bloated_A = mkA "gonflé" | mkA "gigantesque" ; -- tocheck
lin bloc_N = mkN "axe" | mkN "axis" ; -- UWN
lin block_N = mkN "bloc" masculine | mkN "billot" masculine | mkN "rue" feminine | mkN "immeuble" masculine | mkN "tête" | mkN "blocage" masculine ; -- tocheck
lin block_V2 = mkV2 (mkV "boucher") | mkV2 (mkV "contrer") | mkV2 (mkV "bloquer") ; -- tocheck
lin block_in_V2 = prepV2 (lin V OP_block_V2) OP_in_Prep ; -- guess-p-verb
lin block_off_V2 = prepV2 (lin V OP_block_V2) OP_off_Prep ; -- guess-p-verb
lin block_out_V2 = prepV2 (lin V OP_block_V2) OP_out_Prep ; -- guess-p-verb
lin block_up_V2 = prepV2 (lin V OP_block_V2) OP_up_Prep ; -- guess-p-verb
lin blockade_N = mkN "blocus" masculine ; -- tocheck
lin blockbuster_N = mkN "blockbuster" masculine ; -- tocheck
lin blockhead_N = mkN "imbécile" ; -- tocheck
lin blockheaded_A = mkA "gros" ; -- UWN
lin blockhouse_N = mkN "casemate" feminine ; -- tocheck
lin blocking_N = mkN "blocage" | mkN "ingérence" ; -- UWN
lin blogger_N = mkN "blogueur" masculine ; -- tocheck
lin bloke_N = mkN "gars" masculine ; -- tocheck
lin blond_A = mkA "blond" | mkA "blonde" ; -- UWN
lin blonde_A = mkA "blond" | mkA "blonde" ; -- UWN
lin blood_N = L.blood_N ;
lin blood_bath_N = mkN "massacre" masculine ; -- tocheck
lin bloodcurdling_A = mkA "cauchemardesque" ; -- UWN
lin bloodhound_N = mkN "limier" masculine ; -- tocheck
lin blood_letting_N = mkN "saignée" feminine ; -- tocheck
lin bloodlust_N = mkN "soif_de_sang" ; -- UWN
lin bloodroot_N = mkN "sanguinaire" ; -- tocheck
lin bloodshed_N = mkN "carnage" masculine ; -- tocheck
lin bloodshot_A = mkA "injecté" ; -- tocheck
lin bloodstained_A = mkA "sanglant" ; -- UWN
lin bloodstone_N = mkN "héliotrope" ; -- UWN
lin bloodstream_N = mkN "afflux_sanguin" ; -- UWN
lin bloodsucker_N = mkN "sangsue" ; -- tocheck
lin bloodthirsty_A = mkA "sanguinaire" ; -- tocheck
lin bloody_A = mkA "sanglant" | mkA "foutu" ; -- tocheck
lin bloody_Adv = variants {} ; --
lin bloom_N = mkN "pruine" feminine | mkN "fleur" feminine | mkN "floraison" feminine | mkN "voile" masculine ; -- tocheck
lin bloom_V = mkV "fleurir" ; -- UWN
lin blooming_N = mkN "fleur" ; -- UWN
lin blossom_N = mkN "fleur" feminine | mkN "floraison" feminine ; -- tocheck
lin blossom_V = mkV (reflV (mkV "épanouir")) | mkV (mkV "fleurir") ; -- tocheck
lin blot_N = mkN "souillure" ; -- tocheck
lin blot_V2 = mkV2 (mkV "tacher") ; -- tocheck
lin blot_out_V = mkV "cacher" ; -- UWN
lin blotch_N = mkN "tache" ; -- UWN
lin blotto_A = mkA "bourré" | mkA "empégué" | mkA "gris" | mkA "grise" | mkA "mouillé" | mkA "pompette" | mkA "rigide" | mkA "schlass" | mkA "trempé" | mkA "émeché" | mkA "éméché" | mkA "éméchée" ; -- UWN
lin blouse_N = mkN "chemisier" ; -- tocheck
lin blow_N = mkN "coup" masculine ; -- tocheck
lin blow_V = L.blow_V ;
lin blow_V2 = mkV2 (mkV "souffler") ;
lin blow_away_V = advV OP_blow_V OP_away_Adv ; -- guess-p-verb
lin blow_away_V2 = mkV2 (advV OP_blow_V OP_away_Adv ) ; -- guess-p-verb
lin blow_down_V2 = prepV2 OP_blow_V OP_down_Prep ; -- guess-p-verb
lin blow_dry_V2 = variants {} ; -- guess-p-verb
lin blow_in_V = advV OP_blow_V OP_in_Adv ; -- guess-p-verb
lin blow_off_V = advV OP_blow_V OP_off_Adv ; -- guess-p-verb
lin blow_off_V2 = prepV2 OP_blow_V OP_off_Prep ; -- guess-p-verb
lin blow_out_V2 = prepV2 OP_blow_V OP_out_Prep ; -- guess-p-verb
lin blow_over_V = advV OP_blow_V OP_over_Adv ; -- guess-p-verb
lin blow_up_V = mkV "agrandir" | mkV "augmenter" | mkV "étendre" ; -- UWN
lin blow_up_V2 = prepV2 OP_blow_V OP_up_Prep ; -- guess-p-verb
lin blower_N = mkN "ventilateur" masculine ; -- tocheck
lin blowgun_N = mkN "sarbacane" feminine ; -- tocheck
lin blowhole_N = mkN "évent" masculine ; -- tocheck
lin blowing_N = mkN "souffle" ; -- UWN
lin blowlamp_N = mkN "chalumeau" | mkN "lampe_de_poche" | mkN "torche" ; -- UWN
lin blowtorch_N = mkN "chalumeau" ; -- tocheck
lin blowy_A = mkA "venteux" ; -- UWN
lin bludgeon_N = mkN "matraque" feminine ; -- tocheck
lin bludgeon_V2 = mkV2 (mkV "matraquer") | mkV2 (mkV "soutirer") ; -- tocheck
lin blue_A = L.blue_A ;
lin blue_N = mkN "bleu" masculine ; -- tocheck
lin blue_V2 = mkV2 (mkV "bleuter") | mkV2 (mkV "bleuir") ; -- tocheck
lin blueberry_N = mkN "myrtille" feminine ; -- tocheck
lin bluefish_N = mkN "tassergal" masculine ; -- tocheck
lin blue_jacket_N = mkN "marin" | mkN "matelot" ; -- UWN
lin blueprint_N = mkN "blueprint" masculine | mkN "modèle" masculine ; -- tocheck
lin blues_N = mkN "blues" masculine ; -- tocheck
lin bluestocking_N = mkN "bas-bleu" ; -- UWN
lin bluff_A = mkA "bluff" ; -- UWN
lin bluish_A = mkA "bleuâtre" ; -- tocheck
lin blunder_N = mkN "Bêtisier" | mkN "blooper" | mkN "bobo" | mkN "bousiller" | mkN "bévue" | mkN "bêtisier" | mkN "gâcher" | mkN "perle" | mkN "trique" ; -- UWN
lin blunderbuss_N = mkN "tromblon" masculine ; -- tocheck
lin blunderer_N = mkN "boucher" ; -- UWN
lin blunt_A = mkA "abrupt" | mkA "émoussé" | mkA "sot" ; -- tocheck
lin blunt_V2 = mkV2 (mkV "émousser") | mkV2 (mkV "réprimer") ; -- tocheck
lin blur_N = mkN "tache" feminine | mkN "flou" masculine ; -- tocheck
lin blur_V2 = mkV2 (mkV "estomper") ;
lin blurt_V2 = mkV2 (mkV "lâcher") ; -- tocheck
lin blush_N = mkN "rougeur" feminine | mkN "fard" masculine ; -- tocheck
lin blush_V = mkV (mkV "rougir") ; -- tocheck
lin blustery_A = mkA "bruyant" ; -- tocheck
lin blyth_PN = mkPN "Blyth" ; -- status=guess src=geonames
lin bo'sun_N = mkN "bosco" ; -- UWN
lin boa_N = mkN "boa" masculine ; -- tocheck
lin boar_N = mkN "verrat" masculine ; -- tocheck
lin board_1_N = mkN "tableau" masculine | mkN "planche" feminine ;
lin board_2_N = mkN "comité" feminine ; ----
lin board_N = mkN "tableau" masculine | mkN "planche" feminine ;
lin board_V2 = mkV2 (mkV "aborder") ; -- tocheck
lin boarding_N = mkN "abordage" masculine | mkN "embarquement" masculine ; -- tocheck
lin boast_N = mkN "vantardise" feminine ; -- tocheck
lin boast_V = reflV (mkV "vanter") ;
lin boast_V2 = mkV2 (reflV (mkV "vanter")) P.genitive ; -- tocheck
lin boast_VS = mkVS (reflV (mkV "vanter")) | {-UWN-} mkvVS "caractériser" | mkvVS "figurer" ; -- UWN -- tocheck
lin boaster_N = mkN "console" | mkN "vantard" ; -- UWN
lin boastful_A = mkA "vantard" ; -- tocheck
lin boastfulness_N = mkN "orgueil" ; -- UWN
lin boat_N = L.boat_N ;
lin boater_N = mkN "canoteur" masculine | mkN "canotier" masculine ; -- tocheck
lin boating_N = mkN "yachting" ; -- UWN
lin boatload_N = mkN "wagonnée" ; -- UWN
lin boatman_N = mkN "canotier" | mkN "waterman" ; -- UWN
lin boatswain_N = mkN "bosco" masculine ; -- tocheck
lin bob_V2 = mkV2 (mkV "ballotter") ; -- tocheck
lin bobbin_N = mkN "bobine" feminine ; -- tocheck
lin bobble_N = mkN "pompon" masculine ; -- tocheck
lin bobby_N = mkN "bobby" masculine ; -- tocheck
lin bobsleigh_N = mkN "bobsleigh" masculine ; -- tocheck
lin bobtail_N = mkN "darse" ; -- UWN
lin bobwhite_N = mkN "colin_de_virginie" | mkN "perdrix" ; -- UWN
lin bocce_N = mkN "bocce" ; -- tocheck
lin bochum_PN = mkPN "Bochum" ; -- status=guess src=geonames
lin bodacious_A = mkA "hardi" | mkA "impudent" | mkA "insolent" ; -- UWN
lin bodice_N = mkN "corsage" masculine ; -- tocheck
lin bodily_A = mkA "corporel" ; -- tocheck
lin bodily_Adv = adjAdv bodily_A | {-UWN-} mkAdv "corporel" ; -- UWN -- derived
lin bodmin_PN = mkPN "Bodmin" ; -- status=guess src=geonames
lin body_N = mkN "corps" masculine ;
lin bodybuilder_N = mkN "culturiste" ; -- tocheck
lin bodybuilding_N = mkN "culturisme" masculine | mkN "carrosserie" feminine ; -- tocheck
lin bodyguard_N = mkN "garde_du_corps" ; -- UWN
lin bodywork_N = mkN "carrosserie" feminine ; -- tocheck
lin bog_N = mkN "tourbière" feminine | mkN "chiottes" ; -- tocheck
lin bogey_N = mkN "boggie" masculine ; -- tocheck
lin bogeyman_N = mkN "croque-mitaine" masculine ; -- tocheck
lin boggle_V = mkV (mkV "troubler") ; -- tocheck
lin boggy_A = mkA "marécageux" ; -- tocheck
lin bogota_PN = mkPN "Bogota" ; -- status=guess src=geonames
lin bogus_A = mkA "faux" ; -- tocheck
lin bohrium_N = mkN "bohrium" masculine ; -- tocheck
lin boil_N = mkN "furoncle" masculine ; -- tocheck
lin boil_V = variants {} ; -- mkV2 (mkV I.bouillir_V2) ; -- tocheck
lin boil_V2 = mkV2 (mkV I.bouillir_V2) ; -- tocheck
lin boiler_N = mkN "chaudière" feminine ; -- tocheck
lin boilersuit_N = mkN "combinaison" ; -- UWN
lin boiling_Adv = mkAdv "ébullition" ; -- UWN
lin boiling_N = mkN "ébullition" feminine ; -- tocheck
lin boisterous_A = mkA "bruyant" | mkA "turbulent" ; -- tocheck
lin bold_A = mkA "hardi" | mkA "gras" ; -- tocheck
lin boldness_N = mkN "audace" feminine ; -- tocheck
lin bolete_N = mkN "bolet" masculine ; -- tocheck
lin bolide_N = mkN "bolide" ; -- UWN
lin bolivia_PN = mkPN "Bolivie" ; -- status=guess src=geonames
lin boll_N = mkN "graine" ; -- tocheck
lin bollard_N = mkN "bollard" | mkN "borne" feminine ; -- tocheck
lin bollington_PN = mkPN "Bollington" ; -- status=guess src=geonames
lin bollock_N = mkN "couille" ; -- tocheck
lin bologna_PN = mkPN "Bologne" ; -- status=guess src=geonames
lin bolometer_N = mkN "bolomètre" ; -- UWN
lin bolsover_PN = mkPN "Bolsover" ; -- status=guess src=geonames
lin bolster_N = mkN "traversin" masculine ; -- tocheck
lin bolt_N = mkN "boulon" masculine | mkN "carreau" masculine | mkN "verrou" masculine ; -- tocheck
lin bolt_V2 = mkV2 (mkV "boulonner") ; -- tocheck
lin bolton_PN = mkPN "Bolton" ; -- status=guess src=geonames
lin bolus_N = mkN "bol" masculine ; -- tocheck
lin bolzano_PN = mkPN "Bolzano" ; -- status=guess src=geonames
lin bomb_N = mkN "bombe" feminine ; -- tocheck
lin bomb_V = variants {} ; -- mkV2 (mkV "bombarder") ; -- tocheck
lin bomb_V2 = mkV2 (mkV "bombarder") ; -- tocheck
lin bombard_V2 = mkV2 (mkV "bombarder") ; -- tocheck
lin bombardment_N = mkN "bombardement" masculine | mkN "bombardement" ; -- tocheck
lin bombardon_N = mkN "bombarder" ; -- UWN
lin bombastic_A = mkA "ampoulé" | mkA "verbeux" ; -- tocheck
lin bomber_N = mkN "bombardier" masculine | mkN "artilleur" masculine ; -- tocheck
lin bombing_N = mkN "bombardement" masculine ; -- tocheck
lin bombshell_N = mkN "bombe" feminine | mkN "bombe" | mkN "surprise" feminine ; -- tocheck
lin bona_fide_A = mkA "authentique" | mkA "indiscutable" ; -- UWN
lin bonbon_N = mkN "bonbon" ; -- UWN
lin bond_N = mkN "alliance" feminine | mkN "obligation" feminine | mkN "liaison" | mkN "lien" | mkN "appareil" masculine | mkN "lien" masculine ; -- tocheck
lin bond_V2 = mkV2 (mkV "lier") | mkV2 (mkV "appareiller") ; -- tocheck
lin bondage_N = mkN "bondage" masculine | mkN "esclavage" masculine ; -- tocheck
lin bonding_N = mkN "brasage" | mkN "connexion" | mkN "soudage" ; -- UWN
lin bone_A = mkA "désosser" | mkA "os" ; -- UWN
lin bone_N = L.bone_N ;
lin bone_V2 = mkV2 (mkV "fourrer") | mkV2 (mkV "désosser") ; -- tocheck
lin boner_N = mkN "trique" feminine ; -- tocheck
lin bong_N = mkN "bang" masculine ; -- tocheck
lin bongo_N = mkN "bongo" masculine ; -- tocheck
lin bonhomie_N = mkN "bonhomie" feminine ; -- tocheck
lin bonito_N = mkN "bonite" | mkN "sarda" ; -- UWN
lin bonn_PN = mkPN "Bonn" ; -- status=guess src=geonames
lin bonnet_N = mkN "capot" masculine ; -- tocheck
lin bonny_A = mkA "avenant" ; -- UWN
lin bonnybridge_PN = mkPN "Bonnybridge" ; -- status=guess src=geonames
lin bonnyrigg_PN = mkPN "Bonnyrigg" ; -- status=guess src=geonames
lin bonsai_N = mkN "bonsaï" masculine ; -- tocheck
lin bonus_N = mkN "boni" masculine ; -- tocheck
lin bony_A = mkA "osseux" ; -- tocheck
lin boo_V = mkV "siffler" ; -- UWN
lin boo_V2 = mkV2 (mkV "huer") ; -- tocheck
lin boob_N = mkN "nichon" masculine ; -- tocheck
lin booby_N = mkN "nichon" masculine ; -- tocheck
lin booger_N = mkN "crotte_de_nez" ; -- UWN
lin book_N = L.book_N ;
lin book_V2 = mkV2 (mkV "réserver") ; -- tocheck
lin bookbinder_N = mkN "relieur" masculine ; -- tocheck
lin bookbinding_N = mkN "reliure" ; -- UWN
lin bookcase_N = mkN "bibliothèque" feminine ; -- tocheck
lin book_end_N = mkN "serre-livre" masculine ; -- tocheck
lin bookie_N = mkN "bookmaker" ; -- UWN
lin booking_N = mkN "réservation" feminine | mkN "réserve" feminine ; -- tocheck
lin bookish_A = mkA "scolaire" ; -- tocheck
lin book_keeper_N = mkN "comptable" ; -- UWN
lin bookkeeping_N = mkN "comptabilité" | mkN "comptable" ; -- UWN
lin booklet_N = mkN "livret" masculine ; -- tocheck
lin bookmaker_N = mkN "bookmaker" masculine ; -- tocheck
lin bookmark_N = mkN "marque-page" masculine | mkN "favori" masculine ; -- tocheck
lin bookmarker_N = mkN "favori" | mkN "marque-page" | mkN "signet" ; -- UWN
lin bookmobile_N = mkN "bibliobus" ; -- tocheck
lin bookplate_N = mkN "Ex-libris" | mkN "ex-libris" | mkN "gravure" | mkN "livres" ; -- UWN
lin bookseller_N = mkN "libraire" ; -- tocheck
lin bookshelf_N = mkN "bibliothèque" feminine ; -- tocheck
lin bookshop_N = mkN "librairie" feminine ; -- tocheck
lin bookstall_N = mkN "librairie" ; -- UWN
lin boom_N = mkN "boum" | mkN "mat" masculine | mkN "boom" masculine | mkN "bôme" feminine ; -- tocheck
lin boom_V2 = mkV2 (mkV "prospérer") ; -- tocheck
lin boomerang_N = mkN "boomerang" masculine ; -- tocheck
lin boon_N = mkN "aubaine" feminine ; -- tocheck
lin boor_N = mkN "mufle" masculine | mkN "rustre" ; -- tocheck
lin boorish_A = mkA "grossier" ; -- tocheck
lin boost_N = mkN "encouragement" ; -- UWN
lin boost_V2 = variants {} ; --
lin booster_N = mkN "rappel" masculine ; -- tocheck
lin boot_N = L.boot_N ;
lin boot_V2 = mkV2 (mkV "déconnecter") | mkV2 (mkV "expulser") | mkV2 (mkV "botter") | mkV2 (mkV "démarrer") | mkV2 (mkV "vomir") ; -- tocheck
lin bootee_N = mkN "bottillon" masculine ; -- tocheck
lin booth_N = mkN "cabine" feminine | mkN "stand" masculine ; -- tocheck
lin bootle_PN = mkPN "Bootle" ; -- status=guess src=geonames
lin bootleg_A = mkA "non-officiel" ; -- tocheck
lin bootlegger_N = mkN "bootlegger" ; -- tocheck
lin bootmaker_N = mkN "bottier" masculine ; -- tocheck
lin bootstrap_N = mkN "languette" | mkN "amorçage" ; -- tocheck
lin booty_N = mkN "dépouille" feminine | mkN "fesses" ; -- tocheck
lin boracic_A = mkA "fauché" ; -- tocheck
lin borate_N = mkN "borate" masculine ; -- tocheck
lin borax_N = mkN "borax" masculine ; -- tocheck
lin bordeaux_PN = mkPN "Bordeaux" ; -- status=guess src=geonames
lin border_N = mkN "bordure" | mkN "bord" masculine | mkN "frontière" feminine ; -- tocheck
lin border_V2 = mkV2 (mkV "border") ; -- tocheck
lin borderline_A = mkA "limite" ; -- tocheck
lin borderline_N = mkN "frontière" | mkN "limite" ; -- UWN
lin bordon_PN = mkPN "Bordon" ; -- status=guess src=geonames
lin bore_N = mkN "mascaret" masculine ; -- tocheck
lin bore_V2 = mkV2 (mkV "percer") | mkV2 (mkV "ennuyer") ; -- tocheck
lin boreal_A = mkA "boréal" ; -- tocheck
lin bored_A = variants {} ; --
lin boredom_N = mkN "ennui" masculine ; -- tocheck
lin boric_A = mkA "borique" ; -- tocheck
lin boring_A = mkA "ennuyeux" ; -- tocheck
lin boring_N = mkN "ennuyeux" | mkN "forage" ; -- UWN
lin bornite_N = mkN "bornite" ; -- UWN
lin boron_N = mkN "bore" masculine ; -- tocheck
lin borough_N = mkN "arrondissement" masculine ; -- tocheck
lin borrelia_N = mkN "borrelia" | mkN "borrélie" | mkN "borrélies" ; -- UWN
lin borrow_V = variants {} ; -- mkV2 (mkV "emprunter") | mkV2 (mkV I.retenir_V2) ; -- tocheck
lin borrow_V2 = mkV2 (mkV "emprunter") | mkV2 (mkV I.retenir_V2) ; -- tocheck
lin borrow_VV = variants {} ; -- mkV2 (mkV "emprunter") | mkV2 (mkV I.retenir_V2) ; -- tocheck
lin borrower_N = mkN "emprunteur" masculine ; -- tocheck
lin borrowing_N = mkN "adoption" | mkN "approbation" ; -- UWN
lin borsch_N = mkN "borsch" | mkN "bortch" | mkN "bortsch" ; -- UWN
lin borzoi_N = mkN "barzoï" masculine ; -- tocheck
lin bosc_N = mkN "bosc" ; -- UWN
lin bosom_N = mkN "sein" masculine ; -- tocheck
lin boson_N = mkN "boson" masculine ; -- tocheck
lin boss_N = L.boss_N ;
lin bossy_A = mkA "autocratique" | mkA "péremptoire" ; -- UWN
lin boston_PN = mkPN "Boston" ; -- status=guess src=geonames
lin bot_N = mkN "bot" | mkN "robogiciel" ; -- UWN
lin botanic_A = mkA "botanique" ; -- UWN
lin botanical_A = mkA "botanique" ; -- tocheck
lin botanist_N = mkN "botaniste" ; -- UWN
lin botany_N = mkN "botanique" feminine ; -- tocheck
lin botch_V2 = mkV2 (mkV "saccager") | mkV2 (mkV "bâcler") ; -- tocheck
lin botcher_N = mkN "boucher" ; -- UWN
lin botfly_N = mkN "oestre" masculine ; -- tocheck
lin both7and_DConj = S.both7and_DConj ;
lin both_Adv = mkAdv "tous les deux" ; --- why Adv
lin both_Det = mkDet "tous les deux" "toutes les deux" plural ;
lin bother_N = mkN "casse-pied" | mkN "douleur" | mkN "emmerdeur" | mkN "enkikineur" | mkN "enquiquineur" | mkN "inconvénient" ; -- UWN
lin bother_V = variants {} ; -- mkV2V (mkV "embêter") | mkV2V (mkV "bâdrer") ; -- tocheck
lin bother_V2 = variants {} ; -- mkV2V (mkV "embêter") | mkV2V (mkV "bâdrer") ; -- tocheck
lin bother_V2V = mkV2V (mkV "embêter") | mkV2V (mkV "bâdrer") ; -- tocheck
lin bother_VV = variants {} ; -- mkV2V (mkV "embêter") | mkV2V (mkV "bâdrer") ; -- tocheck
lin bothersome_A = mkA "agaçant" | mkA "embêtant" | mkA "ennuyeux" | mkA "gênant" | mkA "pénible" ; -- UWN
lin botswana_PN = mkPN "Botswana" ; -- status=guess src=geonames
lin bottle_N = mkN "bouteille" feminine | mkN "biberon" masculine | mkN "culot" masculine ; -- tocheck
lin bottle_V2 = mkV2 (mkV "embouteiller") ; -- tocheck
lin bottlebrush_N = mkN "callistemon" ; -- UWN
lin bottleneck_N = mkN "goulot" masculine ; -- tocheck
lin bottom_A = variants {} ; --
lin bottom_N = mkN "fond" masculine | mkN "passif" | mkN "arrière-train" masculine ; -- tocheck
lin bottomland_N = mkN "ascendant" | mkN "derrière" ; -- UWN
lin bottrop_PN = mkPN "Bottrop" ; -- status=guess src=geonames
lin botulism_N = mkN "botulisme" masculine ; -- tocheck
lin boudoir_N = mkN "boudoir" ; -- UWN
lin bougainvillea_N = mkN "bougainvillier" feminine ; -- tocheck
lin bough_N = mkN "branche" feminine ; -- tocheck
lin bouillabaisse_N = mkN "bouillabaisse" feminine ; -- tocheck
lin bouillon_N = mkN "bouillon" masculine ; -- tocheck
lin boulder_N = mkN "rocher" masculine ; -- tocheck
lin boulevard_N = mkN "boulevard" masculine ; -- tocheck
lin bounce_N = mkN "rebond" ; -- tocheck
lin bounce_V = variants {} ; -- mkV2 (mkV "rebondir") ; -- tocheck
lin bounce_V2 = mkV2 (mkV "rebondir") ; -- tocheck
lin bouncer_N = mkN "videur" masculine ; -- tocheck
lin bound_N = mkN "frontière" feminine | mkN "limite" | mkN "bond" feminine ; -- tocheck
lin bound_V2V = mkV2V (mkV "bondir") | mkV2V (mkV "délimiter") ; -- tocheck
lin boundary_N = mkN "frontière" feminine ; -- tocheck
lin boundless_A = mkA "illimité" ; -- tocheck
lin bounteous_A = mkA "beau" | mkA "grand" | mkA "généreux" ; -- UWN
lin bounty_N = mkN "prime" feminine | mkN "don" masculine ; -- tocheck
lin bouquet_N = mkN "bouquet" | mkN "bouquet" masculine ; -- tocheck
lin bourbon_N = mkN "bourbon" masculine ; -- tocheck
lin bourgeois_A = mkA "bourgeois" ; -- tocheck
lin bourgeoisie_N = mkN "bourgeoisie" feminine ; -- tocheck
lin bourne_PN = mkPN "Bourne" ; -- status=guess src=geonames
lin bournemouth_PN = mkPN "Bornemouth" ; -- status=guess src=geonames
lin boutique_N = mkN "boutique" feminine ; -- tocheck
lin bovine_A = mkA "bovin" ; -- tocheck
lin bovine_N = mkN "bovin" masculine ; -- tocheck
lin bow_N = mkN "étrave" | mkN "arc" masculine | mkN "révérence" feminine | mkN "archet" masculine ; -- tocheck
lin bow_V = reflV (mkV "incliner") | mkV "fléchir" | mkV "courber" ; -- tocheck
lin bow_V2 = mkV2 (mkV "incliner") | mkV2 (mkV "fléchir") | mkV2 (mkV "courber") ; -- tocheck
lin bowdlerize_V2 = mkV2 (mkV "censurer") ; -- tocheck
lin bowel_N = variants {} ; --
lin bower_N = mkN "boudoir" masculine ; -- tocheck
lin bowerbird_N = mkN "oiseaux_jardiniers" | mkN "ptilonorhynchidae" | mkN "ptilonorhynchidés" ; -- UWN
lin bowl_N = mkN "bol" masculine ; -- tocheck
lin bowl_V = variants {} ; --
lin bowl_V2 = variants {} ; --
lin bowleg_N = mkN "courbé" ; -- tocheck
lin bowler_N = mkN "chapeau_melon" | mkN "derby" | mkN "melon" | mkN "orage" | mkN "tempête" ; -- UWN
lin bowline_N = mkN "bouline" feminine ; -- tocheck
lin bowling_N = mkN "bowling" masculine ; -- tocheck
lin bowls_N = mkN "boulingrin" masculine ; -- tocheck
lin bowman_N = mkN "archer" | mkN "bowman" ; -- UWN
lin bowsprit_N = mkN "arbre_de_beaupré" | mkN "beaupré" | mkN "liaison_de_type_beaupré" | mkN "mât_de_beaupré" ; -- UWN
lin bowstring_N = mkN "corde" feminine ; -- tocheck
lin box_N = mkN "buis" masculine | mkN "boîte" feminine | mkN "case" feminine | mkN "coquille" feminine | mkN "encadré" masculine | mkN "téloche" feminine | mkN "guérite" feminine ; -- tocheck
lin box_V2 = mkV2 (mkV "boxer") | mkV2 (mkV "emboîter") ; -- tocheck
lin boxcar_N = mkN "Wagon_couvert" | mkN "wagon_couvert" ; -- UWN
lin boxer_N = mkN "boxeur" masculine | mkN "boxer" masculine ; -- tocheck
lin boxfish_N = mkN "Ostraciidae" | mkN "ostraciidae" | mkN "poisson-coffre" ; -- UWN
lin boxful_N = mkN "boîte" feminine ; -- tocheck
lin boxing_N = mkN "boxe" feminine ; -- tocheck
lin boxwood_N = mkN "buis" masculine ; -- tocheck
lin boy_N = L.boy_N ;
lin boycott_N = mkN "boycott" masculine ; -- tocheck
lin boycott_V2 = mkV2 (mkV "boycotter") ; -- tocheck
lin boyfriend_N = mkN "chum" | mkN "ami" masculine ; -- tocheck
lin bra_N = mkN "soutien-gorge" masculine ; -- tocheck
lin brace_N = mkN "toise" feminine | mkN "accolade" feminine | mkN "fiche" feminine | mkN "doublé" masculine ; -- tocheck
lin brace_V2 = mkV2 (mkV "brasser") ; -- tocheck
lin bracelet_N = mkN "bracelet" masculine ; -- tocheck
lin brachial_A = mkA "brachial" ; -- tocheck
lin brachiopod_N = mkN "brachiopodes" ; -- UWN
lin bracken_N = mkN "ptéridium" masculine ; -- tocheck
lin bracket_N = mkN "parenthèse" feminine | mkN "crochet" masculine ; -- tocheck
lin brackish_A = mkA "saumâtre" ; -- tocheck
lin bracknell_PN = mkPN "Bracknell" ; -- status=guess src=geonames
lin bract_N = mkN "bractée" feminine ; -- tocheck
lin bradawl_N = mkN "alène" ; -- UWN
lin bradford_PN = mkPN "Bradford" ; -- status=guess src=geonames
lin bradycardia_N = mkN "bradycardie" feminine ; -- tocheck
lin brae_N = mkN "côte" ; -- UWN
lin brag_N = mkN "brag" masculine ; -- tocheck
lin brag_V = mkV (mkV "fanfaronner") ; -- tocheck
lin braggadocio_N = mkN "rodomontade" ; -- UWN
lin braggart_N = mkN "vantard" masculine ; -- tocheck
lin bragger_N = mkN "vantard" masculine ; -- tocheck
lin bragging_N = mkN "corbeau" | mkN "corneille" ; -- UWN
lin brahman_N = mkN "brahmane" masculine ; -- tocheck
lin braid_N = mkN "tresse" feminine ; -- tocheck
lin braid_V2 = mkV2 (mkV "tresser") ; -- tocheck
lin braille_N = mkN "braille" masculine ; -- tocheck
lin brain_N = mkN "cerveau" masculine ; -- tocheck
lin brain_teaser_N = mkN "casse-tête" masculine ; -- tocheck
lin brainchild_N = mkN "création" feminine ; -- tocheck
lin brainstem_N = mkN "tronc_cérébral" ; -- UWN
lin braintree_PN = mkPN "Braintree" ; -- status=guess src=geonames
lin brainwash_V2 = mkV2 (mkV "décerveler") ; -- tocheck
lin brainwashing_N = mkN "décervelage" | mkN "lavage_de_cerveau" ; -- UWN
lin braise_V2 = mkV2 (mkV "braiser") ; -- tocheck
lin brake_N = mkN "frein" masculine ; -- tocheck
lin brake_V2 = mkV2 (mkV "freiner") ; -- tocheck
lin bramble_N = mkN "ronce" feminine | mkN "roncier" masculine ; -- tocheck
lin bran_N = mkN "son" masculine ; -- tocheck
lin branch_N = mkN "branche" feminine | mkN "filiale" feminine ; -- tocheck
lin branch_V = mkV (mkV "brancher") ; -- tocheck
lin branchial_A = mkA "branchial" ; -- tocheck
lin branching_N = mkN "enfourchure" | mkN "fourchette" | mkN "ramification" ; -- UWN
lin brand_N = mkN "marque" feminine | mkN "tison" | mkN "style" masculine ; -- tocheck
lin brand_V2 = mkV2 (mkV "flétrir") | mkV2 (mkV "graver") | mkV2 (mkV "marquer") | mkV2 (mkV "cataloguer") ; -- tocheck
lin brandish_V2 = mkV2 (mkV "brandir") ; -- tocheck
lin brandy_N = mkN "cognac" masculine ; -- tocheck
lin brant_N = mkN "bernache_cravant" | mkN "brant_goose" ; -- UWN
lin brash_A = mkA "irréfléchi" | mkA "agressif" ; -- tocheck
lin brashness_N = mkN "toupet" masculine ; -- tocheck
lin brass_N = mkN "laiton" masculine | mkN "cuivres" | mkN "galonnés" | mkN "douille" feminine ; -- tocheck
lin brassavola_N = mkN "brassavola" ; -- UWN
lin brasserie_N = mkN "brasserie" ; -- UWN
lin brassiere_N = variants {} ;
lin brat_N = mkN "peste" feminine ; -- tocheck
lin bratislava_PN = mkPN "Bratislava" ; -- status=guess src=geonames
lin braunschweig_PN = mkPN "Brunswick" ; -- status=guess src=geonames
lin braunton_PN = mkPN "Braunton" ; -- status=guess src=geonames
lin bravado_N = mkN "bravade" ; -- UWN
lin brave_A = mkA "courageux" ; -- tocheck
lin bravery_N = mkN "courage" masculine ; -- tocheck
lin bravo_N = mkN "Berthe" ; -- tocheck
lin brawl_N = mkN "bagarre" feminine ; -- tocheck
lin brawl_V = mkV (reflV (mkV "bagarrer")) ; -- tocheck
lin brawny_A = mkA "balèze" ; -- tocheck
lin bray_N = mkN "braiment" masculine ; -- tocheck
lin bray_V2 = mkV2 (mkV I.braire_V) ; -- tocheck
lin brazen_A = mkA "grossier" | mkA "cuivreux" | mkA "aigu" ; -- tocheck
lin brazen_faced_A = mkA "impudent" ; -- tocheck
lin brazier_N = mkN "braséro" | mkN "brazier" ; -- UWN
lin brazil_PN = mkPN "Brésil" ; -- status=guess src=geonames
lin brazilwood_N = mkN "pernambouc" masculine ; -- tocheck
lin breach_N = mkN "brouille" feminine | mkN "infraction" feminine | mkN "brèche" feminine ; -- tocheck
lin bread_N = L.bread_N ;
lin breadcrumb_N = mkN "miette" ; -- tocheck
lin breadfruit_N = mkN "arbre_à_pain" ; -- UWN
lin breadstick_N = mkN "gressin" masculine ; -- tocheck
lin breadth_N = mkN "ampleur" | mkN "largeur" ; -- UWN
lin breadwinner_N = mkN "gagne-pain" masculine ; -- tocheck
lin break_N = mkN "espace" masculine | mkN "pause" feminine ; -- tocheck
lin break_V = mkV L.break_V2 ;
lin break_V2 = L.break_V2 ;
lin break_apart_V = advV OP_break_V OP_apart_Adv ; -- guess-p-verb
lin break_away_V = advV OP_break_V OP_away_Adv ; -- guess-p-verb
lin break_down_V = advV OP_break_V OP_down_Adv ; -- guess-p-verb
lin break_down_V2 = prepV2 OP_break_V OP_down_Prep ; -- guess-p-verb
lin break_in_N = mkN "effraction" feminine ; -- tocheck
lin break_in_V = advV OP_break_V OP_in_Adv ; -- guess-p-verb
lin break_in_V2 = prepV2 OP_break_V OP_in_Prep ; -- guess-p-verb
lin break_in_on_V2 = prepV2 (advV OP_break_V OP_in_Adv ) OP_on_Prep ; -- guess-p-verb
lin break_into_V2 = prepV2 OP_break_V OP_into_Prep ; -- guess-p-verb
lin break_off_V2 = prepV2 OP_break_V OP_off_Prep ; -- guess-p-verb
lin break_out_V = advV OP_break_V OP_out_Adv ; -- guess-p-verb
lin break_out_V2 = prepV2 OP_break_V OP_out_Prep ; -- guess-p-verb
lin break_out_in_V2 = prepV2 (advV OP_break_V OP_out_Adv ) OP_in_Prep ; -- guess-p-verb
lin break_out_of_V2 = prepV2 (advV OP_break_V OP_out_Adv ) OP_of_Prep ; -- guess-p-verb
lin break_through_V2 = prepV2 OP_break_V OP_through_Prep ; -- guess-p-verb
lin break_up_V = advV OP_break_V OP_up_Adv ; -- guess-p-verb
lin break_up_V2 = prepV2 OP_break_V OP_up_Prep ; -- guess-p-verb
lin breakage_N = mkN "cassure" ; -- UWN
lin breakaway_A = mkA "séparatiste" ; -- tocheck
lin breakaway_N = mkN "sécessionniste" | mkN "séparatiste" ; -- UWN
lin breakdown_N = mkN "panne" | mkN "dégradation" feminine | mkN "collapse" masculine | mkN "détail" masculine ; -- tocheck
lin breaker_N = mkN "casseur" masculine | mkN "concasseuse" feminine | mkN "lame" feminine ; -- tocheck
lin breakfast_N = mkN "déjeuner" | mkN "petit-déjeuner" | mkN "petit_déjeuner" ; -- UWN
lin breakthrough_N = mkN "percée" feminine | mkN "trouée" feminine ; -- tocheck
lin breakwater_N = mkN "brise-lames" masculine ; -- tocheck
lin bream_N = mkN "brème" feminine | mkN "pageot" masculine ; -- tocheck
lin breast_N = L.breast_N ;
lin breastfeed_V2 = mkV2 (mkV "allaiter") ; -- tocheck
lin breast_plate_N = mkN "égide" ; -- UWN
lin breaststroke_N = mkN "brasse" feminine ; -- tocheck
lin breaststroker_N = mkN "brasseur" ; -- UWN
lin breastwork_N = mkN "parapet" ; -- UWN
lin breath_N = mkN "haleine" feminine | mkN "souffle" masculine | mkN "respiration" feminine ; -- tocheck
lin breathalyser_N = mkN "éthylotest" ; -- UWN
lin breathalyzer_N = mkN "éthylotest" ; -- UWN
lin breathe_V = L.breathe_V ;
lin breathe_V2 = mkV2 (mkV "respirer") ; -- tocheck
lin breather_N = mkN "schnorchel" ; -- UWN
lin breathing_N = mkN "respiration" ; -- UWN
lin breathtaking_A = mkA "époustouflant" ; -- tocheck
lin breccia_N = mkN "brèche" ; -- UWN
lin breda_PN = mkPN ("Bréda" | "Breda di Piave") ;
lin breech_N = mkN "culotte" feminine ; -- tocheck
lin breechcloth_N = mkN "pagne" | mkN "string" ; -- UWN
lin breeches_N = mkN "culotte" feminine ; -- tocheck
lin breed_N = mkN "race" feminine ; -- tocheck
lin breed_V = reflV (mkV I.reproduire_V2) | {-UWN-} mkV "multiplier" | mkV "reproduire" ; -- UWN -- tocheck
lin breed_V2 = mkV2 (mkV I.reproduire_V2) ; -- tocheck
lin breeder_N = mkN "éleveur" ; -- UWN
lin breeding_N = mkN "procréation" | mkN "reproduction" ; -- UWN
lin breeze_N = mkN "gâteau" masculine | mkN "brise" feminine ; -- tocheck
lin breezy_A = mkA "aéré" ; -- tocheck
lin bremen_PN = mkPN "Brême" ; -- status=guess src=geonames
lin bremerhaven_PN = mkPN "Bremerhaven" ; -- status=guess src=geonames
lin brent_PN = mkPN "Brent" ; -- status=guess src=geonames
lin brentwood_PN = mkPN "Brentwood" ; -- status=guess src=geonames
lin brescia_PN = mkPN "Brescia" ; -- status=guess src=geonames
lin brest_PN = mkPN "Brest" ; -- status=guess src=geonames
lin brethren_N = mkN "confrères" ; -- tocheck
lin breve_N = mkN "brève" ; -- UWN
lin breviary_N = mkN "bréviaire" masculine ; -- tocheck
lin brevity_N = mkN "concision" feminine ; -- tocheck
lin brew_V = mkV "brasser" ; -- UWN
lin brew_V2 = mkV2 (mkV "brasser") ; -- tocheck
lin brewer_N = mkN "brasseur" masculine ; -- tocheck
lin brewery_N = mkN "brasserie" feminine ; -- tocheck
lin briar_N = mkN "églantier" masculine | mkN "bruyère" feminine ; -- tocheck
lin bribable_A = mkA "corruptible" | mkA "malhonnête" | mkA "vénal" ; -- UWN
lin bribe_N = mkN "pot-de-vin" masculine ; -- tocheck
lin bribery_N = mkN "corruption" feminine ; -- tocheck
lin brick_N = mkN "brique" ; -- tocheck
lin bricklayer_N = mkN "maçon" masculine ; -- tocheck
lin brickyard_N = mkN "briqueterie" ; -- tocheck
lin bride_N = variants {} ; --
lin bridecake_N = mkN "gâteau_de_mariage" ; -- UWN
lin bridge_N = mkN "pont" masculine | mkN "bridge" masculine | mkN "pont" | mkN "passerelle" feminine | mkN "chevalet" masculine ; -- tocheck
lin bridgend_PN = mkPN "Bridgend" ; -- status=guess src=geonames
lin bridgnorth_PN = mkPN "Bridgnorth" ; -- status=guess src=geonames
lin bridgwater_PN = mkPN "Bridgwater" ; -- status=guess src=geonames
lin bridle_N = mkN "bride" ; -- tocheck
lin bridle_V2 = mkV2 (mkV "brider") ; -- tocheck
lin bridlington_PN = mkPN "Bridlington" ; -- status=guess src=geonames
lin bridport_PN = mkPN "Bridport" ; -- status=guess src=geonames
lin brief_A = mkA "bref" ; -- tocheck
lin brief_N = mkN "bref" | mkN "brève" ; -- UWN
lin briefcase_N = mkN "portefeuille" masculine ; -- tocheck
lin briefing_N = mkN "revue" ; -- tocheck
lin briefness_N = mkN "brièveté" | mkN "concision" | mkN "finitude" ; -- UWN
lin brier_N = mkN "bruyère" feminine ; -- tocheck
lin brig_N = mkN "cachot" masculine | mkN "brigantin" masculine ; -- tocheck
lin brig_PN = mkPN "Brigue-Glis" ; -- status=guess src=geonames
lin brigade_N = mkN "brigade" | mkN "pompier" ; -- UWN
lin brigadier_N = mkN "brigadier" masculine ; -- tocheck
lin brigand_N = mkN "brigand" masculine ; -- tocheck
lin brigandine_N = mkN "Brigandine" | mkN "brigandine" ; -- UWN
lin brigantine_N = mkN "brigantine" ; -- UWN
lin brighouse_PN = mkPN "Brighouse" ; -- status=guess src=geonames
lin bright_A = mkA "brillant" | mkA "heureux" | mkA "intelligent" | mkA "vivide" ; -- tocheck
lin brighten_V = mkV "alléger" ; -- UWN
lin brightlingsea_PN = mkPN "Brightlingsea" ; -- status=guess src=geonames
lin brightness_N = mkN "intelligence" | mkN "luminosité" feminine | mkN "brillance" ; -- tocheck
lin brighton_PN = mkPN "Brighton" ; -- status=guess src=geonames
lin brill_N = mkN "barbue" feminine ; -- tocheck
lin brilliance_N = mkN "pompe" | mkN "splendeur" ; -- UWN
lin brilliant_A = mkA "brillant" ; -- tocheck
lin brimstone_N = mkN "soufre" masculine ; -- tocheck
lin brine_N = mkN "saumure" feminine ; -- tocheck
lin bring_V2 = mkV2 "apporter" ;
lin bring_V3 = mkV3 (mkV "apporter") ;
lin bring_about_V2 = prepV2 (lin V OP_bring_V2) OP_about_Prep ; -- guess-p-verb
lin bring_along_V2 = prepV2 (lin V OP_bring_V2) OP_along_Prep ; -- guess-p-verb
lin bring_around_V2 = prepV2 (lin V OP_bring_V2) OP_around_Prep ; -- guess-p-verb
lin bring_away_V2 = mkV2 (advV (lin V OP_bring_V2) OP_away_Adv ) ; -- guess-p-verb
lin bring_back_V2 = mkV2 (advV (lin V OP_bring_V2) OP_back_Adv ) ; -- guess-p-verb
lin bring_down_V2 = prepV2 (lin V OP_bring_V2) OP_down_Prep ; -- guess-p-verb
lin bring_forth_V = advV (lin V OP_bring_V2) OP_forth_Adv ; -- guess-p-verb
lin bring_forth_V2 = mkV2 (advV (lin V OP_bring_V2) OP_forth_Adv ) ; -- guess-p-verb
lin bring_forward_V2 = mkV2 (advV (lin V OP_bring_V2) OP_forward_Adv ) ; -- guess-p-verb
lin bring_in_V2 = prepV2 (lin V OP_bring_V2) OP_in_Prep ; -- guess-p-verb
lin bring_off_V2 = prepV2 (lin V OP_bring_V2) OP_off_Prep ; -- guess-p-verb
lin bring_on_V2 = prepV2 (lin V OP_bring_V2) OP_on_Prep ; -- guess-p-verb
lin bring_out_V2 = prepV2 (lin V OP_bring_V2) OP_out_Prep ; -- guess-p-verb
lin bring_out_in_V3 = variants {} ; -- guess-p-verb
lin bring_over_V2 = prepV2 (lin V OP_bring_V2) OP_over_Prep ; -- guess-p-verb
lin bring_round_V2 = prepV2 (lin V OP_bring_V2) OP_round_Prep ; -- guess-p-verb
lin bring_to_V2 = prepV2 (lin V OP_bring_V2) OP_to_Prep ; -- guess-p-verb
lin bring_up_V2 = prepV2 (lin V OP_bring_V2) OP_up_Prep ; -- guess-p-verb
lin brininess_N = mkN "salinité" ; -- UWN
lin brink_N = mkN "bord" masculine ; -- tocheck
lin briny_A = mkA "saumâtre" ; -- UWN
lin brioche_N = mkN "brioche" feminine ; -- tocheck
lin briquet_N = mkN "briquette" feminine | mkN "briquet" masculine ; -- tocheck
lin briquette_N = mkN "brique" | mkN "briquet" | mkN "briquette" ; -- UWN
lin brisance_N = mkN "brisance" feminine ; -- tocheck
lin brisbane_PN = mkPN "Brisbane" ; -- status=guess src=geonames
lin brisk_A = mkA "animé" | mkA "vif" | mkA "stimulant" ; -- tocheck
lin brisket_N = mkN "poitrine" feminine ; -- tocheck
lin bristly_A = mkA "épineux" ; -- UWN
lin bristol_PN = mkPN "Bristol" ; -- status=guess src=geonames
lin brittle_A = mkA "fragile" ; -- tocheck
lin brittle_N = mkN "croquant" masculine ; -- tocheck
lin brittleness_N = mkN "Fragilité" | mkN "fragile" | mkN "fragilité" ; -- UWN
lin brixham_PN = mkPN "Brixham" ; -- status=guess src=geonames
lin brno_PN = mkPN "Brno" ; -- status=guess src=geonames
lin broach_V = mkV "aborder" ; -- UWN
lin broach_V2 = mkV2 (mkV "perforer") ; -- tocheck
lin broad_A = L.broad_A ;
lin broad_N = mkN "gonzesse" feminine ; -- tocheck
lin broadcast_N = mkN "émission" feminine ; -- tocheck
lin broadcast_V = mkV "adresser" | mkV "diffuser" | mkV "programmer" | mkV "répandre" | mkV "transmettre" | mkV "transporter" ; -- UWN
lin broadcast_V2 = mkV2 (mkV "diffuser") ; -- tocheck
lin broadcasting_N = mkN "radiodiffusion" feminine ; -- tocheck
lin broaden_V2 = mkV2 (mkV "élargir") ; -- tocheck
lin broadsword_N = mkN "estramaçon" masculine ; -- tocheck
lin brocade_N = mkN "brocart" masculine ; -- tocheck
lin broccoli_N = mkN "brocoli" masculine ; -- tocheck
lin brochure_N = mkN "brochure" feminine ; -- tocheck
lin brocket_N = mkN "daguet" masculine ; -- tocheck
lin brodiaea_N = mkN "brodiaea" ; -- UWN
lin broke_A = mkA "fauché" ; -- tocheck
lin broken_A = variants {} ; --
lin broker_N = mkN "courtier" masculine ; -- tocheck
lin brome_N = mkN "brome" ; -- UWN
lin bromide_N = mkN "bromure" masculine ; -- tocheck
lin bromine_N = mkN "brome" masculine ; -- tocheck
lin bromley_PN = mkPN "Bromley" ; -- status=guess src=geonames
lin bromoform_N = mkN "bromoforme" masculine ; -- tocheck
lin bromsgrove_PN = mkPN "Bromsgrove" ; -- status=guess src=geonames
lin bronchitis_N = mkN "bronchite" feminine ; -- tocheck
lin bronchus_N = mkN "bronche" ; -- tocheck
lin bronze_A = mkA "hâlé" ; -- tocheck
lin bronze_N = mkN "bronze" masculine | mkN "bronze" ; -- tocheck
lin brooch_N = mkN "broche" feminine ; -- tocheck
lin brood_N = mkN "couvée" feminine ; -- tocheck
lin brood_V = mkV (reflV (mkV I.morfondre_V)) | mkV (mkV "couver") ; -- tocheck
lin broody_A = mkA "pensif" | mkA "recueilli" ; -- UWN
lin brook_N = mkN "ruisseau" masculine ; -- tocheck
lin brooklet_N = mkN "ruisselet" masculine ; -- tocheck
lin broom_N = mkN "balai" masculine | mkN "genêt" masculine ; -- tocheck
lin broth_N = mkN "bouillon" masculine ; -- tocheck
lin brothel_N = mkN "bordel" masculine ; -- tocheck
lin brother_N = mkN "frère" masculine | mkN "pair" masculine ; -- tocheck
lin brother_N2 = L.brother_N2 ;
lin brother_in_law_N = mkN "beau-frère" masculine ; -- tocheck
lin brotherhood_N = mkN "confrérie" feminine | mkN "fraternité" feminine ; -- tocheck
lin brotherly_A = mkA "fraternel" ; -- UWN
lin brotherly_Adv = adjAdv brotherly_A | {-UWN-} mkAdv "fraternel" ; -- UWN -- derived -- derived
lin broughton_PN = mkPN "Broughton" ; -- status=guess src=geonames
lin brouhaha_N = mkN "brouhaha" masculine ; -- tocheck
lin brow_N = mkN "front" | mkN "sourcil" ; -- tocheck
lin browbeat_V2 = mkV2 (mkV "intimider") ; -- tocheck
lin brown_A = L.brown_A ;
lin brown_N = mkN "marron" ; -- tocheck
lin brown_V2 = mkV2 (mkV "brunir") ; -- tocheck
lin brownish_A = mkA "brunâtre" ; -- tocheck
lin browse_V = mkV (mkV "brouter") | mkV (mkV "naviguer") | mkV (mkV "feuilleter") ; -- tocheck
lin broxburn_PN = mkPN "Broxburn" ; -- status=guess src=geonames
lin bruce_PN = mkPN "Bruce" ; -- status=guess src=geonames
lin brucellosis_N = mkN "brucellose" feminine ; -- tocheck
lin brucine_N = mkN "brucine" ; -- UWN
lin bruges_PN = mkPN "Bruges" ; -- status=guess src=geonames
lin bruise_N = mkN "bleu" masculine ; -- tocheck
lin bruise_V2 = mkV2 (mkV "contusionner") | mkV2 (mkV "taler") ;
lin brumal_A = mkA "hivernal" ; -- UWN
lin brumous_A = mkA "brumeux" ; -- UWN
lin brunch_N = mkN "brunch" masculine ; -- tocheck
lin brunei_PN = mkPN "Brunéi Darussalam" ; -- status=guess src=geonames
lin brunet_A = mkA "brune" ; -- UWN
lin brunetteFem_N = mkN "brune" feminine ; -- tocheck
lin brunetteMasc_N = mkN "brune" masculine ; -- tocheck
lin brunswick_PN = mkPN "Brunswick" ; -- status=guess src=geonames
lin brush_N = mkN "brossage" masculine | mkN "brosse" feminine | mkN "accrochage" masculine ; -- tocheck
lin brush_V = variants {} ; -- mkV2 (mkV I.peindre_V2) | mkV2 (mkV "brosser") ; -- tocheck
lin brush_V2 = mkV2 (mkV I.peindre_V2) | mkV2 (mkV "brosser") ; -- tocheck
lin brushwood_N = mkN "brindilles" ; -- tocheck
lin brusque_A = mkA "brusque" ; -- tocheck
lin brussels_PN = mkPN "Bruxelles" ; -- status=guess src=geonames
lin brutal_A = mkA "brutal" ; -- tocheck
lin brutality_N = mkN "brutalité" feminine ; -- tocheck
lin brute_N = mkN "brute" feminine ; -- tocheck
lin bruxism_N = mkN "bruxisme" masculine ; -- tocheck
lin bryan_PN = mkPN "Bryan" ; -- status=guess src=geonames
lin bryony_N = mkN "bryonia" ; -- UWN
lin bryophyte_N = mkN "bryophyte" masculine ; -- tocheck
lin bubble_N = mkN "bulle" feminine | mkN "trou" masculine ; -- tocheck
lin bubble_V = mkV (mkV "bouillonner") ; -- tocheck
lin bubbly_N = mkN "champagne" ; -- UWN
lin bubonic_A = mkA "bubonique" ; -- tocheck
lin buccaneer_N = mkN "boucanier" masculine ; -- tocheck
lin buck_N = mkN "bouc" | mkN "piasse" | mkN "bélier" ; -- tocheck
lin buck_V2 = mkV2 (mkV "ruer") ; -- tocheck
lin bucket_N = mkN "panier" | mkN "seau" masculine | mkN "tacot" masculine ; -- tocheck
lin buckhaven_PN = mkPN "Buckhaven" ; -- status=guess src=geonames
lin buckie_PN = mkPN "Buckie" ; -- status=guess src=geonames
lin buckingham_PN = mkPN "Buckingham" ; -- status=guess src=geonames
lin buckle_N = mkN "boucle" feminine ; -- tocheck
lin buckle_V2 = mkV2 (mkV "boucler") ; -- tocheck
lin buckler_N = mkN "bouclier" masculine ; -- tocheck
lin buckley_PN = mkPN "Buckley" ; -- status=guess src=geonames
lin buckshot_N = mkN "chevrotine" feminine ; -- tocheck
lin buckthorn_N = mkN "nerprun" ; -- tocheck
lin buckwheat_N = mkN "blé_noir" | mkN "sarrasin" ; -- UWN
lin bucolic_A = mkA "bucolique" | mkA "pastoral" ; -- tocheck
lin bud_N = mkN "bourgeon" masculine | mkN "pote" | mkN "beu" feminine ; -- tocheck
lin bud_V = mkV (mkV "bourgeonner") ; -- tocheck
lin budapest_PN = mkPN "Budapest" ; -- status=guess src=geonames
lin buddhistFem_N = variants {} ; ---- sense to be split
lin buddhistMasc_N = variants {} ; ---- sense to be split
lin buddy_N = mkN "compagnon" masculine | mkN "camarade" masculine | mkN "copain" masculine ; -- tocheck
lin budget_N = mkN "budget" masculine ; -- tocheck
lin budgetary_A = mkA "budgétaire" ; -- tocheck
lin buff_A = mkA "chamois" ; -- tocheck
lin buff_N = mkN "chamois" | mkN "mordu" ; -- tocheck
lin buffalo_N = mkN "buffle" masculine | mkN "bison" masculine ; -- tocheck
lin buffalo_PN = mkPN "Buffalo" ; -- status=guess src=geonames
lin buffer_N = mkN "tampon" masculine ; -- tocheck
lin buffet_N = mkN "bar" | mkN "comptoire" ; -- UWN
lin buffoon_N = mkN "bouffon" masculine ; -- tocheck
lin buffoonish_A = mkA "clownesque" ; -- UWN
lin bufo_N = mkN "bufo" | mkN "crapauds" ; -- UWN
lin bug_N = mkN "insecte" masculine | mkN "mouchard" masculine | mkN "virus" masculine | mkN "logo" masculine | mkN "microbe" masculine | mkN "bogue" masculine ; -- tocheck
lin bug_V2 = mkV2 (mkV "ennuyer") ; -- tocheck
lin bug_out_V = mkV "bomber" ; -- UWN
lin bugger_N = mkN "puanteur" | mkN "pédé" | mkN "sodomiste" | mkN "sodomite" | mkN "truie" ; -- UWN
lin bugger_V2 = mkV2 (mkV "empaffer") ; -- tocheck
lin buggery_N = mkN "sodomie" ; -- UWN
lin bugle_N = mkN "clairon" masculine ; -- tocheck
lin bugler_N = mkN "clairon" masculine ; -- tocheck
lin bugleweed_N = mkN "clairon" ; -- UWN
lin build_N = mkN "carrure" feminine ; -- tocheck
lin build_V = mkV "bâtir" | mkV I.construire_V2 ;
lin build_V2 = mkV2 (mkV I.construire_V2) ;
lin build_up_V2 = prepV2 OP_build_V OP_up_Prep ; -- guess-p-verb
lin builder_N = mkN "constructeur" masculine ; -- tocheck
lin building_N = mkN "bâtiment" ;
lin built_in_A = mkA "constitutionnel" | mkA "essentiel" | mkA "intégrale" | mkA "intégré" ; -- UWN
lin bulb_N = mkN "bulbe" masculine ; -- tocheck
lin bulbar_A = mkA "bulbaire" ; -- UWN
lin bulbul_N = mkN "bulbuls" | mkN "pycnonotidae" | mkN "pycnonotidés" ; -- UWN
lin bulgaria_PN = mkPN "Bulgarie" ; -- status=guess src=geonames
lin bulgarianFem_N = mkN "bulgare" feminine ;
lin bulgarianMasc_N = mkN "bulgare" masculine ;
lin bulgarian_A = mkA "bulgarien" ;
lin bulge_N = mkN "protubérance" feminine ; -- tocheck
lin bulge_V = mkV "bomber" ; -- UWN
lin bulge_V2 = mkV2 (mkV "bomber") ; -- tocheck
lin bulgur_N = mkN "boulghour" | mkN "boulgour" ; -- UWN
lin bulimia_N = mkN "boulimie" feminine ; -- tocheck
lin bulimic_A = mkA "boulimique" ; -- tocheck
lin bulimic_N = mkN "boulimique" ; -- tocheck
lin bulk_N = mkN "masse" | mkN "vrac" masculine ; -- tocheck
lin bulk_V = mkV "bomber" ; -- UWN
lin bulkhead_N = mkN "cloison" feminine ; -- tocheck
lin bulkington_PN = mkPN "Bulkington" ; -- status=guess src=geonames
lin bulky_A = mkA "gros" ; -- tocheck
lin bull_N = mkN "mâle" masculine | mkN "taureau" masculine | mkN "bulle" feminine | mkN "bêtises" | mkN "sceau" masculine | mkN "vaches" ; -- tocheck
lin bulldog_N = mkN "bouledogue" masculine ; -- tocheck
lin bulldozer_N = mkN "bulldozer" masculine ; -- tocheck
lin bullet_N = mkN "balle" feminine | mkN "puce" masculine ; -- tocheck
lin bulletin_N = mkN "bulletin" masculine ; -- tocheck
lin bulletproof_A = mkA "pare-balle" ; -- tocheck
lin bullfight_N = mkN "corrida" feminine ; -- tocheck
lin bullfighter_N = mkN "torero" masculine ; -- tocheck
lin bullfighting_N = mkN "tauromachie" feminine ; -- tocheck
lin bullfinch_N = mkN "bouvreuil" masculine ; -- tocheck
lin bullfrog_N = mkN "grenouille-taureau" ; -- tocheck
lin bullhorn_N = mkN "mégaphone" masculine ; -- tocheck
lin bullion_N = mkN "lingot" masculine ; -- tocheck
lin bullish_A = mkA "haussier" ; -- UWN
lin bullpen_N = mkN "toril" masculine ; -- tocheck
lin bullring_N = mkN "arène" feminine ; -- tocheck
lin bullshit_N = mkN "conneries" ; -- tocheck
lin bull_terrier_N = mkN "bull_terrier" ; -- UWN
lin bully_N = mkN "tyran" masculine ; -- tocheck
lin bully_V2 = mkV2 (mkV "tourmenter") ; -- tocheck
lin bullying_N = mkN "harcèlement" masculine ; -- tocheck
lin bulwark_N = mkN "jetée" feminine | mkN "rempart" masculine | mkN "bastingage" ; -- tocheck
lin bum_N = mkN "cul" masculine | mkN "fesses" | mkN "tocard" masculine ; -- tocheck
lin bumblebee_N = mkN "bourdon" masculine ; -- tocheck
lin bumbling_A = mkA "gaucher" ; -- UWN
lin bump_N = mkN "bosse" feminine | mkN "bourrade" feminine | mkN "boum" masculine | mkN "ballon" masculine ; -- tocheck
lin bump_V = variants {} ; --
lin bump_V2 = variants {} ; --
lin bumper_N = mkN "pare-choc" masculine | mkN "heurtoir" masculine | mkN "bande" feminine ; -- tocheck
lin bumpkin_N = mkN "plouc" masculine ; -- tocheck
lin bumpkinly_A = mkA "plouc" ; -- UWN
lin bumpy_A = mkA "accidenté" ; -- tocheck
lin bun_N = mkN "biture" | mkN "chignon" masculine | mkN "friand" ; -- tocheck
lin bunch_N = mkN "groupe" masculine | mkN "javelle" feminine | mkN "bande" feminine | mkN "poupée" feminine | mkN "poche" feminine | mkN "réserve" feminine ; -- tocheck
lin bunch_V2 = mkV2 (mkV "grouper") ; -- tocheck
lin bundle_N = variants {} ; --
lin bungee_N = mkN "tendeur" masculine ; -- tocheck
lin bungle_V2 = mkV2 (mkV "foirer") ; -- tocheck
lin bungler_N = mkN "bousilleur" masculine ; -- tocheck
lin bunion_N = mkN "oignon" ; -- tocheck
lin bunny_N = mkN "lapereau" masculine ; -- tocheck
lin bunsen_N = mkN "bec_bunsen" ; -- UWN
lin bunt_N = mkN "amorti" masculine ; -- tocheck
lin bunting_N = mkN "bruant" ; -- UWN
lin buoy_N = mkN "bouée" ; -- tocheck
lin buoyant_A = mkA "flottant" ; -- tocheck
lin burbot_N = mkN "lote" feminine ; -- tocheck
lin burden_N = mkN "charge" feminine | mkN "fardeau" masculine ; -- tocheck
lin burdensome_A = mkA "pénible" ; -- tocheck
lin burdock_N = mkN "bardane" ; -- tocheck
lin bureau_N = mkN "agence" feminine | mkN "chiffonnier" masculine | mkN "secrétaire" masculine ; -- tocheck
lin bureaucracy_N = mkN "bureaucratie" feminine ; -- tocheck
lin bureaucrat_N = mkN "bureaucrate" masculine ; -- tocheck
lin bureaucratic_A = mkA "bureaucratique" ; -- UWN
lin burette_N = mkN "burette" feminine ; -- tocheck
lin burg_N = mkN "burg" ; -- UWN
lin burgeon_V = mkV (mkV "fleurir") ; -- tocheck
lin burgh_N = mkN "burgh" ; -- UWN
lin burgher_N = mkN "bourgeois" masculine ; -- tocheck
lin burglar_N = mkN "cambrioleur" masculine ; -- tocheck
lin burglary_N = mkN "cambriolage" masculine ; -- tocheck
lin burgle_V = mkV "cambrioler" ; -- UWN
lin burgle_V2 = mkV2 (mkV "cambrioler") ; -- tocheck
lin burgomaster_N = mkN "bourgmestre" masculine ; -- tocheck
lin burgos_PN = mkPN "Burgos" ; -- status=guess src=geonames
lin burgundy_N = mkN "bordeaux" ; -- tocheck
lin burial_N = mkN "enterrement" ; -- tocheck
lin burin_N = mkN "burin" ; -- UWN
lin burl_N = mkN "loupe" feminine ; -- tocheck
lin burlap_N = mkN "Jute#Toile_de_jute" | mkN "jute#toile_de_jute" ; -- UWN
lin burlesque_A = mkA "burlesque" ; -- tocheck
lin burlesque_N = mkN "parodie" ; -- tocheck
lin burley_PN = mkPN "Burley" ; -- status=guess src=geonames
lin burly_A = mkA "fort" ; -- tocheck
lin burn_N = mkN "brûlure" feminine ; -- tocheck
lin burn_V = L.burn_V ;
lin burn_V2 = mkV2 (mkV "brûler") | mkV2 (mkV "graver") ; -- tocheck
lin burn_down_V = advV OP_burn_V OP_down_Adv ; -- guess-p-verb
lin burn_down_V2 = prepV2 OP_burn_V OP_down_Prep ; -- guess-p-verb
lin burn_off_V2 = prepV2 OP_burn_V OP_off_Prep ; -- guess-p-verb
lin burn_out_V = advV OP_burn_V OP_out_Adv ; -- guess-p-verb
lin burn_up_V = advV OP_burn_V OP_up_Adv ; -- guess-p-verb
lin burn_up_V2 = prepV2 OP_burn_V OP_up_Prep ; -- guess-p-verb
lin burnable_A = mkA "inflammable" ; -- UWN
lin burner_N = mkN "brûleur" masculine | mkN "graveur" masculine ; -- tocheck
lin burning_A = variants {} ; --
lin burnley_PN = mkPN "Burnley" ; -- status=guess src=geonames
lin burnous_N = mkN "Burnous" | mkN "burnous" ; -- UWN
lin burnouse_N = mkN "Burnous" | mkN "burnous" ; -- UWN
lin burntisland_PN = mkPN "Burntisland" ; -- status=guess src=geonames
lin burntwood_PN = mkPN "Burntwood" ; -- status=guess src=geonames
lin burp_N = mkN "rot" masculine ; -- tocheck
lin burp_V2 = mkV2 (mkV "roter") ; -- tocheck
lin burqa_N = mkN "bourka" | mkN "burqa" ; -- UWN
lin burr_N = mkN "barbe" feminine | mkN "bardane" feminine ; -- tocheck
lin burro_N = mkN "baudet" | mkN "âne" ; -- UWN
lin burrow_N = mkN "terrier" masculine ; -- tocheck
lin bursa_N = mkN "bursa" ; -- UWN
lin bursiform_A = mkA "bursiforme" ; -- tocheck
lin bursitis_N = mkN "bursite" feminine ; -- tocheck
lin burst_N = variants {} ; --
lin burst_V = mkV "exploser" ; -- UWN
lin burst_V2 = mkV2 (mkV "éclater") ; -- tocheck
lin burst_into_V2 = prepV2 OP_burst_V OP_into_Prep ; -- guess-p-verb
lin burundi_PN = mkPN "Burundi" ; -- status=guess src=geonames
lin bury_PN = mkPN "Bury" ; -- status=guess src=geonames
lin bury_V = mkV "oublier" ; -- UWN
lin bury_V2 = mkV2 (mkV "enterrer") ; -- tocheck
lin burying_N = mkN "enfouissement" | mkN "enterrement" ; -- UWN
lin bus_N = mkN "autobus" masculine ; -- tocheck
lin busbar_N = mkN "autobus" | mkN "bus" ; -- UWN
lin busboy_N = mkN "chasseur" ; -- UWN
lin busby_N = mkN "shako" ; -- UWN
lin bush_N = mkN "buisson" masculine | mkN "touffe" feminine | mkN "maquis" masculine ; -- tocheck
lin bushel_N = mkN "boisseau" masculine ; -- tocheck
lin bushtit_N = mkN "mésange_buissonnière" | mkN "psaltriparus_minimus" ; -- UWN
lin business_N = mkN "entreprise" feminine | mkN "affaire" feminine ;
lin businessman_N = mkN "businessman" | mkN "commerçant" | mkN "homme_d'affaires" | mkN "marchand" ; -- UWN
lin businessperson_N = mkN "bourgeois" | mkN "commerçant" ; -- UWN
lin businesswoman_N = mkN "businesswoman" | mkN "femme_d'affaires" ; -- UWN
lin bust_N = mkN "buste" masculine | mkN "arrestation" feminine | mkN "fiasco" masculine ; -- tocheck
lin bust_V = mkV "éclater" ; -- UWN
lin bust_V2 = mkV2 (mkV "éclater") | mkV2 (mkV "attraper") | mkV2 (mkV "pincer") | mkV2 (mkV "bouziller") ; -- tocheck
lin bustard_N = mkN "outarde" feminine ; -- tocheck
lin bustle_N = mkN "tournure" feminine | mkN "affairement" masculine ; -- tocheck
lin bustle_V2 = mkV2 (mkV "affairer") | mkV2 (mkV "activer") ; -- tocheck
lin busy_A = mkA "occupé" ; -- tocheck
lin busy_V2 = mkV2 (reflV (mkV "livrer")) ; -- tocheck
lin busybody_N = mkN "fouineur" masculine ; -- tocheck
lin but_Adv = mkAdv "cependant" | mkAdv "mais" | mkAdv "que" | mkAdv "sauf" | mkAdv "seulement" | mkAdv "simplement" | mkAdv "uniquement" ; -- UWN
lin but_Conj = mkConj "mais" ;
lin but_PConj = S.but_PConj ;
lin butane_N = mkN "butane" masculine ; -- tocheck
lin butanone_N = mkN "butanone" ; -- tocheck
lin butch_A = mkA "hommasse" ; -- tocheck
lin butch_N = mkN "gouine" feminine ; -- tocheck
lin butcher_N = mkN "boucher" masculine ; -- tocheck
lin butcher_V2 = mkV2 (mkV I.abattre_V2) | mkV2 (mkV "charcuter") ; -- tocheck
lin butcherbird_N = mkN "cassican" masculine ; -- tocheck
lin butler_N = mkN "sommelier" masculine | mkN "majordome" masculine ; -- tocheck
lin butt_N = mkN "cul" masculine | mkN "mégot" masculine ; -- tocheck
lin butter_N = L.butter_N ;
lin butter_V2 = mkV2 (mkV "beurrer") ; -- tocheck
lin buttercup_N = mkN "bouton-d'or" masculine ; -- tocheck
lin butterfly_N = mkN "papillon" masculine ; -- tocheck
lin buttermilk_N = mkN "babeurre" masculine ; -- tocheck
lin butterwort_N = mkN "grassette" feminine ; -- tocheck
lin buttock_N = mkN "fesse" feminine ; -- tocheck
lin button_N = mkN "badge" masculine | mkN "bouton" masculine | mkN "clou" masculine ; -- tocheck
lin button_V2 = mkV2 (mkV "boutonner") ; -- tocheck
lin buttonhole_N = mkN "boutonnière" feminine ; -- tocheck
lin buttress_N = mkN "appui" | mkN "arc-boutant" ; -- tocheck
lin buttress_V2 = mkV2 (mkV "corroborer") | mkV2 (mkV "arc-bouter") ; -- tocheck
lin butylene_N = mkN "butylène" masculine ; -- tocheck
lin butyric_A = mkA "butyrique" ; -- UWN
lin buxton_PN = mkPN "Buxton" ; -- status=guess src=geonames
lin buy_N = mkN "accord" | mkN "achat" | mkN "acheter" | mkN "dupe" | mkN "voler" ; -- UWN
lin buy_V = mkV L.buy_V2 ;
lin buy_V2 = L.buy_V2 ;
lin buy_back_V2 = mkV2 (advV OP_buy_V OP_back_Adv ) ; -- guess-p-verb
lin buy_in_V2 = prepV2 OP_buy_V OP_in_Prep ; -- guess-p-verb
lin buy_into_V2 = prepV2 OP_buy_V OP_into_Prep ; -- guess-p-verb
lin buy_off_V2 = prepV2 OP_buy_V OP_off_Prep ; -- guess-p-verb
lin buy_out_V2 = prepV2 OP_buy_V OP_out_Prep ; -- guess-p-verb
lin buy_up_V2 = prepV2 OP_buy_V OP_up_Prep ; -- guess-p-verb
lin buyerFem_N = mkN "acheteuse" feminine ; -- tocheck
lin buyerMasc_N = mkN "acheteur" masculine ;
lin buying_N = mkN "achat" ; -- UWN
lin buyout_N = mkN "rachat" | mkN "rédemption" ; -- UWN
lin buzz_V2 = mkV2 (mkV "bourdonner") ; -- tocheck
lin buzzard_N = mkN "buse" feminine ; -- tocheck
lin buzzer_N = mkN "bipeur" masculine ; -- tocheck
lin buzzword_N = mkN "argot" | mkN "buzzword" | mkN "mot_en_vogue" | mkN "mot_à_la_mode" ; -- UWN
lin by8agent_Prep = S.by8agent_Prep ;
lin by8means_Prep = S.by8means_Prep ;
lin by_Adv = mkAdv "loin" ; -- UWN
lin by_Prep = mkPrep "par" ;
lin bye_Interj = mkInterj "salut" ; -- tocheck
lin bypass_N = mkN "contournement" masculine | mkN "pontage" masculine | mkN "déviation" feminine ; -- tocheck
lin bypass_V2 = mkV2 (mkV "contourner") ; -- tocheck
lin byproduct_N = mkN "sous-produit" masculine ; -- tocheck
lin byssus_N = mkN "barbe" | mkN "byssus" ; -- UWN
lin bystander_N = mkN "spectateur" ; -- UWN
lin byte_N = mkN "octet" masculine ; -- tocheck
lin byword_N = mkN "proverbe" masculine ; -- tocheck
lin cab_N = mkN "fiacre" | mkN "taxi" ; -- UWN
lin cabal_N = mkN "cabale" | mkN "conspiration" ; -- UWN
lin cabalistic_A = mkA "cabalistique" ; -- tocheck
lin cabana_N = mkN "cabanas" ; -- UWN
lin cabaret_N = mkN "cabaret" masculine ; -- tocheck
lin cabbage_N = mkN "chou" masculine ; -- tocheck
lin cabin_N = mkN "cabine" feminine | mkN "cabane" feminine ; -- tocheck
lin cabinet_N = mkN "cabinet" masculine | mkN "armoire" feminine ; -- tocheck
lin cabinetmaking_N = mkN "menuiserie" ; -- UWN
lin cable_N = mkN "câble" masculine ; -- tocheck
lin cablegram_N = mkN "câble" ; -- UWN
lin cabochon_N = mkN "cabochon" ; -- UWN
lin caboodle_N = mkN "bande" | mkN "ensemble" | mkN "groupe" | mkN "lot" ; -- UWN
lin cacao_N = mkN "cacaoyer" masculine ; -- tocheck
lin cachexia_N = mkN "cachexia" | mkN "cachexie" ; -- UWN
lin cachou_N = mkN "cachou" ; -- UWN
lin cackle_N = mkN "caquet" masculine | mkN "ricanement" masculine ; -- tocheck
lin cackle_V = mkV (mkV "caqueter") ; -- tocheck
lin cacodemon_N = mkN "cacodémon" ; -- UWN
lin cacophonous_A = mkA "cacophonique" ; -- UWN
lin cacophony_N = mkN "cacophonie" feminine ; -- tocheck
lin cactus_N = mkN "cactus" masculine ; -- tocheck
lin cacuminal_A = mkA "rétroflexe" ; -- UWN
lin cadaster_N = mkN "cadastre" ; -- UWN
lin cadaver_N = mkN "cadavre" masculine ; -- tocheck
lin cadaverine_N = mkN "cadavérine" ; -- UWN
lin caddie_N = mkN "caddie" masculine ; -- tocheck
lin caddy_N = mkN "caddy" ; -- UWN
lin cadence_N = mkN "cadence" ; -- tocheck
lin cadenza_N = mkN "cadence" feminine ; -- tocheck
lin cadet_N = mkN "cadet" masculine ; -- tocheck
lin cadiz_PN = mkPN "Cadix" ; -- status=guess src=geonames
lin cadmium_N = mkN "cadmium" masculine ; -- tocheck
lin cadre_N = mkN "cadre" ; -- UWN
lin caduceus_N = mkN "caducée" ; -- UWN
lin caen_PN = mkPN "Caen" ; -- status=guess src=geonames
lin caerleon_PN = mkPN "Caerleon" ; -- status=guess src=geonames
lin caernarfon_PN = mkPN "Caernarfon" ; -- status=guess src=geonames
lin caerphilly_PN = mkPN "Caerphilly" ; -- status=guess src=geonames
lin caespitose_A = mkA "cespiteux" ; -- UWN
lin caesura_N = mkN "césure" feminine ; -- tocheck
lin cafe_N = variants {} ; --
lin cafeteria_N = mkN "caféteria" feminine | mkN "cafétéria" feminine ; -- tocheck
lin caffeine_N = mkN "caféine" feminine ; -- tocheck
lin caffeinism_N = mkN "caféisme" ; -- UWN
lin cage_N = mkN "cage" feminine ; -- tocheck
lin cage_V2 = mkV2 (mkV "encager") ; -- tocheck
lin cagliari_PN = mkPN "Cagliari" ; -- status=guess src=geonames
lin caiman_N = mkN "caïman" masculine ; -- tocheck
lin cairn_N = mkN "cairn_terrier" ; -- UWN
lin cairngorm_N = mkN "quartz_fumé" ; -- UWN
lin cairo_PN = mkPN "Le Caire" ; -- status=guess src=geonames
lin caisson_N = mkN "batardeau" ; -- UWN
lin cake_N = mkN "gâteau" ; -- tocheck
lin calabash_N = mkN "calebasse" feminine ; -- tocheck
lin caladenia_N = mkN "caladenia" ; -- UWN
lin calamitous_A = mkA "calamiteux" ; -- tocheck
lin calamity_N = mkN "calamité" feminine ; -- tocheck
lin calamus_N = mkN "plume" | mkN "tu" ; -- UWN
lin calanthe_N = mkN "calanthe" ; -- UWN
lin calcareous_A = mkA "calcaire" ; -- tocheck
lin calceolaria_N = mkN "calceolaria" | mkN "calcéolaire" | mkN "calcéolaires" ; -- UWN
lin calciferous_A = mkA "calcarifère" ; -- tocheck
lin calcify_V2 = mkV2 (reflV (mkV "calcifier")) | mkV2 (mkV "calcifier") ; -- tocheck
lin calcination_N = mkN "calcination" ; -- tocheck
lin calcine_V = mkV "calciner" ; -- UWN
lin calcine_V2 = mkV2 (mkV "calciner") ; -- tocheck
lin calcite_N = mkN "calcite" feminine ; -- tocheck
lin calcitonin_N = mkN "calcitonine" ; -- UWN
lin calcium_N = mkN "calcium" masculine ; -- tocheck
lin calculate_V = variants {} ; -- mkV2 (mkV "calculer") ; -- tocheck
lin calculate_V2 = mkV2 (mkV "calculer") ; -- tocheck
lin calculate_VS = variants {} ; -- mkV2 (mkV "calculer") ; -- tocheck
lin calculation_N = mkN "calcul" ; -- UWN
lin calculator_N = mkN "calculatrice" feminine | mkN "tables" ; -- tocheck
lin calculus_N = mkN "calcul" masculine ; -- tocheck
lin calcutta_PN = mkPN "Calcutta" ; -- status=guess src=geonames
lin caldera_N = mkN "caldera" feminine ; -- tocheck
lin caldicot_PN = mkPN "Caldicot" ; -- status=guess src=geonames
lin calefacient_A = mkA "réchauffement" ; -- UWN
lin calefaction_N = mkN "caléfaction" ; -- UWN
lin calefactory_A = mkA "chauffage" ; -- UWN
lin calendar_N = mkN "agenda" masculine | mkN "calendrier" | mkN "calendrier" masculine ; -- tocheck
lin calender_N = mkN "calendre" | mkN "calender" ; -- tocheck
lin calendric_A = mkA "calendaire" ; -- tocheck
lin calendula_N = mkN "calendula" | mkN "soucis" ; -- UWN
lin calf_N = mkN "mollet" masculine | mkN "veau" masculine | mkN "éléphanteau" masculine ; -- tocheck
lin cali_PN = mkPN "Cali" ; -- status=guess src=geonames
lin calibrate_V2 = mkV2 (mkV "étalonner") ; -- tocheck
lin calibration_N = mkN "étalonnage" masculine ; -- tocheck
lin calibre_N = mkN "calibre" masculine ; -- tocheck
lin calico_N = mkN "calicot" masculine ; -- tocheck
lin calif_N = mkN "califat" | mkN "calife" ; -- UWN
lin california_PN = mkPN "California" ; -- status=guess src=geonames
lin californium_N = mkN "californium" masculine ; -- tocheck
lin caliper_N = mkN "étrier" masculine ; -- tocheck
lin caliph_N = mkN "calife" masculine ; -- tocheck
lin caliphate_N = mkN "califat" masculine ; -- tocheck
lin call_N = mkN "appel" | mkN "chant" masculine | mkN "appel" masculine | mkN "visite" feminine ; -- tocheck
lin call_V = mkV "appeler" ;
lin call_V2 = mkV2 "appeler" ;
lin call_after_V2 = prepV2 OP_call_V OP_after_Prep ; -- guess-p-verb
lin call_around_V = advV OP_call_V OP_around_Adv ; -- guess-p-verb
lin call_back_V2 = mkV2 (advV OP_call_V OP_back_Adv ) ; -- guess-p-verb
lin call_for_V2V = variants {} ; -- guess-p-verb
lin call_forth_V2 = mkV2 (advV OP_call_V OP_forth_Adv ) ; -- guess-p-verb
lin call_in_V = advV OP_call_V OP_in_Adv ; -- guess-p-verb
lin call_in_V2 = prepV2 OP_call_V OP_in_Prep ; -- guess-p-verb
lin call_off_V2 = prepV2 OP_call_V OP_off_Prep ; -- guess-p-verb
lin call_on_V = mkV "visiter" ; -- UWN
lin call_on_V2 = prepV2 OP_call_V OP_on_Prep ; -- guess-p-verb
lin call_out_V2 = prepV2 OP_call_V OP_out_Prep ; -- guess-p-verb
lin call_over_V = advV OP_call_V OP_over_Adv ; -- guess-p-verb
lin call_round_V = advV OP_call_V OP_round_Adv ; -- guess-p-verb
lin call_up_V2 = prepV2 OP_call_V OP_up_Prep ; -- guess-p-verb
lin calliandra_N = mkN "calliandra" ; -- UWN
lin calligrapher_N = mkN "calligraphe" masculine ; -- tocheck
lin calligraphic_A = mkA "calligraphique" ; -- tocheck
lin calligraphy_N = mkN "calligraphie" feminine ; -- tocheck
lin calling_N = mkN "carrière" | mkN "profession" | mkN "vocation" ; -- UWN
lin callipygian_A = mkA "callipyge" ; -- tocheck
lin callithump_N = mkN "charivari" ; -- UWN
lin callosity_N = mkN "callosité" | mkN "dureté" ; -- UWN
lin callous_A = mkA "endurci" ; -- tocheck
lin callousness_N = mkN "callosité" | mkN "dureté" ; -- UWN
lin callow_A = mkA "chauve" ; -- tocheck
lin callus_N = mkN "calus" masculine ; -- tocheck
lin calm_A = variants {} ; --
lin calm_N = mkN "bilan" | mkN "repos" | mkN "équanimité" ; -- UWN
lin calm_V = variants {} ; --
lin calm_V2 = variants {} ; --
lin calmness_N = mkN "calme" masculine ; -- tocheck
lin calne_PN = mkPN "Calne" ; -- status=guess src=geonames
lin calorie_N = mkN "calorie" feminine ; -- tocheck
lin calorimeter_N = mkN "calorimètre" feminine ; -- tocheck
lin calorimetric_A = mkA "calorimétrique" ; -- tocheck
lin calorimetry_N = mkN "calorimétrie" feminine ; -- tocheck
lin calosoma_N = mkN "calosoma" ; -- UWN
lin calque_N = mkN "calque" masculine ; -- tocheck
lin caltrop_N = mkN "chausse-trape" ; -- tocheck
lin calumet_N = mkN "calumet" ; -- UWN
lin calumniate_V2 = mkV2 (mkV "calomnier") ; -- tocheck
lin calumniatory_A = mkA "calomnieux" | mkA "diffamant" | mkA "diffamatoire" ; -- UWN
lin calumny_N = mkN "calomnie" ; -- tocheck
lin calvaria_N = mkN "scutellaire" ; -- UWN
lin calvary_N = mkN "golgotha" ; -- UWN
lin calverton_PN = mkPN "Calverton" ; -- status=guess src=geonames
lin calving_N = mkN "vêlage" ; -- UWN
lin calyptra_N = mkN "calyptra" ; -- UWN
lin calyx_N = mkN "calice" ; -- UWN
lin cam_N = mkN "came" | mkN "nocken" ; -- UWN
lin camail_N = mkN "camail" ; -- UWN
lin camaraderie_N = mkN "camaraderie" feminine ; -- tocheck
lin cambodia_PN = mkPN "Cambodge" ; -- status=guess src=geonames
lin cambric_N = mkN "batiste" ; -- UWN
lin cambridge_PN = mkPN "Cambridge" ; -- status=guess src=geonames
lin camcorder_N = mkN "caméscope" masculine ; -- tocheck
lin camden_PN = mkPN "Camden" ; -- status=guess src=geonames
lin camel_N = mkN "chameau" masculine ; -- tocheck
lin camellia_N = mkN "camélia" masculine ; -- tocheck
lin camembert_N = mkN "camembert" masculine ; -- tocheck
lin cameo_N = mkN "camaïeu" masculine ; -- tocheck
lin camera_N = L.camera_N ;
lin cameraman_N = mkN "caméraman" masculine ; -- tocheck
lin cameroon_PN = mkPN "Cameroun" ; -- status=guess src=geonames
lin camomile_N = mkN "camomille" feminine ; -- tocheck
lin camouflage_N = mkN "camouflage" masculine | mkN "camouflage" | mkN "déguisement" masculine ; -- tocheck
lin camouflage_V2 = mkV2 (mkV "camoufler") ; -- tocheck
lin camp_A = mkA "camp" | mkA "camper" ; -- UWN
lin camp_N = mkN "camp" masculine ; -- tocheck
lin camp_V2 = mkV2 (mkV "camper") ; -- tocheck
lin camp_out_V = mkV "camper" ; -- UWN
lin campaign_N = mkN "campagne" feminine ; -- tocheck
lin campaign_V = variants {} ; --
lin campaigner_N = mkN "candidat" | mkN "nominé" ; -- UWN
lin campanile_N = mkN "campanile" ; -- UWN
lin campanula_N = mkN "campanula" | mkN "campanule" | mkN "campanules" ; -- UWN
lin campbeltown_PN = mkPN "Campbeltown" ; -- status=guess src=geonames
lin camp_fire_N = mkN "Feu_de_camp" | mkN "feu_de_camp" ; -- UWN
lin camphor_N = mkN "camphre" masculine ; -- tocheck
lin camping_N = mkN "camping" ; -- tocheck
lin campion_N = mkN "silene" | mkN "silène" ; -- UWN
lin campsite_N = mkN "camping" masculine ; -- tocheck
lin campus_N = mkN "campus" masculine ; -- tocheck
lin camshaft_N = mkN "arbre_à_cames" ; -- UWN
lin can_1_VV = S.can_VV ;
lin can_2_VV = S.can8know_VV ;
lin can_N = mkN "arrosoir" masculine | mkN "bidon" masculine | mkN "WC" masculine ; -- tocheck
lin can_V2 = mkV2 (mkV I.pouvoir_V) | mkV2 (mkV "jeter") | mkV2 (mkV "conserver") | mkV2 (reflV (mkV I.taire_V2)) ; -- tocheck
lin canada_PN = mkPN "Canada" ; -- status=guess src=geonames
lin canal_N = mkN "canal" masculine ; -- tocheck
lin canard_N = mkN "avion-canard" masculine | mkN "aileron" masculine ; -- tocheck
lin canary_A = mkA "canari" ; -- UWN
lin canary_N = mkN "canari" masculine ; -- tocheck
lin canasta_N = mkN "canasta" feminine ; -- tocheck
lin canavanine_N = mkN "canavanine" | mkN "l-canavanine" ; -- UWN
lin canberra_PN = mkPN "Canberra" ; -- status=guess src=geonames
lin cancan_N = mkN "cancan" masculine ; -- tocheck
lin cancel_V = mkV "annuler" | mkV "supprimer" ; -- UWN
lin cancel_V2 = mkV2 (mkV "annuler") | mkV2 (mkV "neutraliser") | mkV2 (mkV "éliminer") ; -- tocheck
lin cancellation_N = mkN "annulation" feminine ; -- tocheck
lin cancer_N = mkN "cancer" masculine ; -- tocheck
lin cancerous_A = mkA "cancéreux" ; -- tocheck
lin candelabrum_N = mkN "candélabre" masculine ; -- tocheck
lin candid_A = mkA "candide" ; -- tocheck
lin candida_N = mkN "candida" ; -- UWN
lin candidacy_N = mkN "candidature" feminine ; -- tocheck
lin candidateFem_N = mkN "candidat" | mkN "nominé" ; -- UWN
lin candidateMasc_N = mkN "candidat" ;
lin candle_N = mkN "bougie" feminine ; -- tocheck
lin candlelight_N = mkN "bougie" | mkN "chandelle" ; -- UWN
lin candle_power_N = mkN "bougie" feminine ; -- tocheck
lin candlestick_N = mkN "chandelier" masculine ; -- tocheck
lin candlewick_N = mkN "mèche" feminine ; -- tocheck
lin candor_N = mkN "candeur" feminine ; -- tocheck
lin candour_N = mkN "candeur" | mkN "franchise" ; -- UWN
lin candy_N = mkN "bonbon" masculine ; -- tocheck
lin candy_V2 = mkV2 (mkV "candir") ; -- tocheck
lin cane_N = mkN "canne" feminine | mkN "canne" | mkN "bastonnade" ; -- tocheck
lin cane_V2 = mkV2 (mkV "bâtonner") ; -- tocheck
lin canella_N = mkN "canella" ; -- UWN
lin canine_A = mkA "canin" | mkA "canine" ; -- UWN
lin canine_N = mkN "canin" | mkN "canine" ; -- UWN
lin canister_N = mkN "étain" ; -- UWN
lin cankerous_A = mkA "ulcéreux" ; -- UWN
lin canna_N = mkN "canna" ; -- UWN
lin cannabis_N = mkN "cannabis" masculine ; -- tocheck
lin cannelloni_N = mkN "cannelloni" | mkN "cannellonis" | mkN "manicotti" ; -- UWN
lin cannery_N = mkN "conserverie" ; -- UWN
lin cannes_PN = mkPN "Cannes" ; -- status=guess src=geonames
lin cannibal_N = mkN "cannibale" ; -- tocheck
lin cannibalism_N = mkN "cannibalisme" masculine ; -- tocheck
lin cannibalistic_A = mkA "cannibale" ; -- tocheck
lin cannock_PN = mkPN "Cannock" ; -- status=guess src=geonames
lin cannon_1_N = mkN "canon" masculine ; -- tocheck
lin cannon_2_N = mkN "canon" masculine ; -- tocheck
lin cannonade_N = mkN "canonnade" feminine ; -- tocheck
lin cannonball_N = mkN "boulet" | mkN "boulet_de_canon" ; -- UWN
lin cannula_N = mkN "cannula" | mkN "canule" ; -- UWN
lin cannulation_N = mkN "intubation" | mkN "intubation_trachéale" ; -- UWN
lin canny_A = mkA "prudent" ; -- tocheck
lin canoe_N = mkN "canoë" masculine ; -- tocheck
lin canoeist_N = mkN "canoéiste" ; -- tocheck
lin canon_N = mkN "canon" masculine | mkN "chanoine" masculine ; -- tocheck
lin canonization_N = mkN "canonisation" feminine ; -- tocheck
lin canopy_N = mkN "canopée" feminine | mkN "dais" masculine | mkN "marquise" feminine ; -- tocheck
lin cant_N = mkN "argot" masculine | mkN "lamentation" feminine ; -- tocheck
lin cantaloupe_N = mkN "cantaloup" ; -- tocheck
lin cantankerous_A = mkA "irritable" ; -- tocheck
lin cantata_N = mkN "cantate" | mkN "oratorio" ; -- UWN
lin canteen_N = mkN "cantine" feminine ; -- tocheck
lin canterbury_PN = mkPN "Cantorbéry" ; -- status=guess src=geonames
lin canticle_N = mkN "cantique" ; -- UWN
lin cantillation_N = mkN "cantillation" ; -- UWN
lin cantle_N = mkN "troussequin" masculine ; -- tocheck
lin canton_N = mkN "canton" masculine ; -- tocheck
lin canton_PN = mkPN "Canton" ; -- status=guess src=geonames
lin cantonment_N = mkN "camp" | mkN "camper" ; -- UWN
lin canvas_N = mkN "toile" feminine ; -- tocheck
lin canvass_N = mkN "toile" ; -- UWN
lin canyon_N = mkN "canyon" masculine ; -- tocheck
lin cap_N = L.cap_N ;
lin capability_N = variants {} ; --
lin capable_A = mkA "capable" ; -- tocheck
lin capacious_A = mkA "spacieux" ; -- tocheck
lin capaciousness_N = mkN "espace" | mkN "spatialité" ; -- UWN
lin capacitance_N = mkN "Capacité_électrique" | mkN "capacité" | mkN "capacité_électrique" | mkN "condensateur" ; -- UWN
lin capacitor_N = mkN "condensateur" masculine ; -- tocheck
lin capacity_N = mkN "capacité" ; -- tocheck
lin caparison_N = mkN "accoutrement" | mkN "piégeage" | mkN "trappage" ; -- UWN
lin cape_N = mkN "cape" feminine | mkN "cap" masculine ; -- tocheck
lin capelin_N = mkN "capelan" masculine ; -- tocheck
lin capillarity_N = mkN "capillarité" ; -- UWN
lin capillary_N = mkN "capillaire" masculine ; -- tocheck
lin capital_1_N = variants {} ; --
lin capital_2_N = variants {} ; --
lin capital_3_N = variants {} ; --
lin capital_A = mkA "excellent" | mkA "capital" | mkA "majuscule" ; -- tocheck
lin capital_N = mkN "capital" masculine | mkN "majuscule" feminine | mkN "chapiteau" ; -- tocheck
lin capitalism_N = mkN "capitalisme" masculine ; -- tocheck
lin capitalist_A = mkA "capitaliste" ; -- tocheck
lin capitalist_N = mkN "capitaliste" ; -- tocheck
lin capitalistic_A = mkA "capitaliste" ; -- tocheck
lin capitate_N = mkN "os_capitatum" ; -- UWN
lin capitulation_N = mkN "capitulation" feminine ; -- tocheck
lin capitulum_N = mkN "corolle" ; -- UWN
lin capo_N = mkN "capodastre" ; -- UWN
lin capon_N = mkN "chapon" masculine ; -- tocheck
lin cappuccino_N = mkN "cappuccino" masculine ; -- tocheck
lin caprice_N = mkN "caprice" masculine ; -- tocheck
lin capsaicin_N = mkN "capsaïcine" ; -- UWN
lin capsicum_N = mkN "piment" ; -- tocheck
lin capsize_V2 = mkV2 (mkV "chavirer") ; -- tocheck
lin capsizing_N = mkN "chavirage" masculine ; -- tocheck
lin capstan_N = mkN "cabestan" ; -- tocheck
lin capstone_N = mkN "civière" ; -- UWN
lin capsule_N = mkN "capsule" feminine ; -- tocheck
lin captain_N = mkN "capitaine" ; -- tocheck
lin captainship_N = mkN "capitainerie_générale_;_capitainerie" ; -- UWN
lin caption_N = mkN "légende" feminine | mkN "sous-titre" masculine | mkN "légende" masculine ; -- tocheck
lin captivate_V2 = mkV2 (mkV "captiver") ; -- tocheck
lin captivation_N = mkN "enchantement" | mkN "fascination" ; -- UWN
lin captiveFem_N = mkN "captif" masculine ; -- tocheck ---- sense to be split
lin captiveMasc_N = mkN "captif" masculine ; -- tocheck ---- sense to be split
lin captive_A = mkA "captif" ; -- tocheck
lin captive_N = mkN "captif" masculine ; -- tocheck
lin captivity_N = mkN "captivité" feminine ; -- tocheck
lin capture_N = mkN "confiscation" | mkN "prise" | mkN "saisie" ; -- UWN
lin capture_V2 = variants {} ; --
lin caput_N = mkN "tête" ; -- UWN
lin car_N = L.car_N ;
lin car_V = variants {} ; --
lin carabiner_N = mkN "mousqueton" masculine ; -- tocheck
lin caracara_N = mkN "caracara" ; -- UWN
lin caracas_PN = mkPN "Caracas" ; -- status=guess src=geonames
lin carafe_N = mkN "carafe" feminine ; -- tocheck
lin carambola_N = mkN "carambole" | mkN "carambolier" ; -- UWN
lin caramel_A = mkA "caramel" ; -- UWN
lin caramel_N = mkN "caramel" masculine ; -- tocheck
lin carapace_N = mkN "carapace" feminine ; -- tocheck
lin carat_N = mkN "carat" masculine ; -- tocheck
lin caravan_N = mkN "caravane" feminine ; -- tocheck
lin caravanserai_N = mkN "caravansérail" masculine ; -- tocheck
lin caraway_N = mkN "carvi" masculine ; -- tocheck
lin carbamate_N = mkN "carbamate" | mkN "uréthane" ; -- UWN
lin carbide_N = mkN "Carbure" | mkN "carbure" ; -- UWN
lin carbine_N = mkN "carabine" feminine ; -- tocheck
lin carbohydrate_N = mkN "glucide" masculine ; -- tocheck
lin carbon_N = mkN "carbone" masculine | mkN "charbon" masculine ; -- tocheck
lin carbonaceous_A = mkA "carbonique" ; -- UWN
lin carbonara_N = mkN "carbonara" feminine ; -- tocheck
lin carbonate_N = mkN "carbonate" masculine ; -- tocheck
lin carbonated_A = mkA "gazeux" ; -- tocheck
lin carbonation_N = mkN "Boisson_gazeuse" | mkN "boisson_gazeuse" | mkN "boissons_gazeuses" ; -- UWN
lin carbonic_A = mkA "carbonique" ; -- tocheck
lin carboniferous_A = mkA "carbonique" ; -- UWN
lin carboxyl_A = mkA "carboxylique" ; -- UWN
lin carboy_N = mkN "dame-jeanne" ; -- UWN
lin carbuncle_N = mkN "escarboucle" ; -- UWN
lin carburetor_N = mkN "carburateur" masculine ; -- tocheck
lin carburettor_N = mkN "carburateur" ; -- UWN
lin carcass_N = mkN "carcasse" masculine ; -- tocheck
lin carcinogen_N = mkN "cancérogène" masculine ; -- tocheck
lin carcinogenic_A = mkA "cancérigène" ; -- tocheck
lin carcinoma_N = mkN "Caranome" | mkN "caranome" | mkN "carcinome" ; -- UWN
lin card_N = mkN "carte" feminine | mkN "carde" feminine ; -- tocheck
lin card_V2 = mkV2 (mkV "carder") ; -- tocheck
lin cardamom_N = mkN "cardamome" ; -- tocheck
lin cardboard_A = mkA "carton" ; -- UWN
lin cardboard_N = mkN "carton" masculine ; -- tocheck
lin cardenden_PN = mkPN "Cardenden" ; -- status=guess src=geonames
lin cardia_N = mkN "cardia" | mkN "orifice_de_l'estomac" ; -- UWN
lin cardiac_A = mkA "cardiaque" ; -- tocheck
lin cardiff_PN = mkPN "Cardiff" ; -- status=guess src=geonames
lin cardigan_N = mkN "cardigan" masculine ; -- tocheck
lin cardigan_PN = mkPN "Aberteifi" ; -- status=guess src=geonames
lin cardinal_A = mkA "cardinal" ; -- tocheck
lin cardinal_N = mkN "cardinal" masculine | mkN "cardinal" ; -- tocheck
lin cardinality_N = mkN "cardinalité" feminine ; -- tocheck
lin cardiograph_N = mkN "cardiographe" ; -- UWN
lin cardioid_N = mkN "cardioïde" feminine ; -- tocheck
lin cardiologistFem_N = mkN "cardiologue" ; -- tocheck
lin cardiologistMasc_N = mkN "cardiologue" ; -- tocheck
lin cardiology_N = mkN "cardiologie" feminine ; -- tocheck
lin cardiomyopathy_N = mkN "cardiomyopathie" ; -- UWN
lin cardiopulmonary_A = mkA "cardiopulmonaire" ; -- tocheck
lin cardiovascular_A = mkA "cardiovasculaire" ; -- tocheck
lin carditis_N = mkN "cardite" feminine ; -- tocheck
lin cardoon_N = mkN "cardon" ; -- UWN
lin care_N = mkN "souci" masculine | mkN "soin" masculine ;
lin care_V = mkV (reflV (mkV "soucier")) | mkV (mkV "soigner") ; -- tocheck
lin care_for_V2 = prepV2 OP_care_V OP_for_Prep ; -- guess-p-verb
lin careen_V2 = mkV2 (mkV "caréner") ; -- tocheck
lin career_N = mkN "carrière" feminine ; -- tocheck
lin career_V = mkV "carrière" ; -- UWN
lin careerism_N = mkN "carriérisme" masculine ; -- tocheck
lin careerist_N = mkN "carriériste" ; -- tocheck
lin carefree_A = mkA "insouciant" ; -- tocheck
lin careful_A = mkA "prudent" | mkA "soigneux" ; -- tocheck
lin careless_A = mkA "négligent" ; -- tocheck
lin carelessness_N = mkN "négligence" ; -- tocheck
lin carer_N = variants {} ; --
lin caress_N = mkN "caresser" ; -- UWN
lin caress_V2 = mkV2 (mkV "caresser") ; -- tocheck
lin caressing_N = mkN "baisement" | mkN "pelotage" ; -- UWN
lin caretaker_N = mkN "gardien" masculine | mkN "concierge" ; -- tocheck
lin cargo_N = mkN "cargaison" feminine ; -- tocheck
lin caribou_N = mkN "caribou" masculine ; -- tocheck
lin caricature_N = mkN "caricature" | mkN "caricature" feminine ; -- tocheck
lin caricaturist_N = mkN "caricaturiste" ; -- tocheck
lin caries_N = mkN "carie" feminine ; -- tocheck
lin carina_N = mkN "carène" ; -- UWN
lin carissa_N = mkN "carissa" ; -- UWN
lin carjacking_N = mkN "car_jacking" ; -- UWN
lin carlisle_PN = mkPN "Carlisle" ; -- status=guess src=geonames
lin carload_N = mkN "wagonnée" ; -- UWN
lin carlow_PN = mkPN "Carlow" ; -- status=guess src=geonames
lin carluke_PN = mkPN "Carluke" ; -- status=guess src=geonames
lin carmarthen_PN = mkPN "Carmarthen" ; -- status=guess src=geonames
lin carmine_A = mkA "carmin" ; -- tocheck
lin carmine_N = mkN "carmin" ; -- tocheck
lin carnage_N = mkN "carnage" ; -- tocheck
lin carnal_A = mkA "charnel" ; -- tocheck
lin carnation_A = mkA "œillet" ; -- UWN
lin carnation_N = mkN "carnation" | mkN "oeillet" masculine | mkN "oeillet" ; -- tocheck
lin carnauba_N = mkN "carnauba" feminine ; -- tocheck
lin carnelian_N = mkN "cornaline" feminine ; -- tocheck
lin carnforth_PN = mkPN "Carnforth" ; -- status=guess src=geonames
lin carnival_N = mkN "carnaval" masculine ; -- tocheck
lin carnivore_N = mkN "carnivore" masculine ; -- tocheck
lin carnivorous_A = mkA "carnivore" ; -- tocheck
lin carnotite_N = mkN "carnotite" ; -- UWN
lin carnoustie_PN = mkPN "Carnoustie" ; -- status=guess src=geonames
lin carob_N = mkN "caroube" feminine | mkN "caroubier" masculine ; -- tocheck
lin carol_N = mkN "carole" feminine | mkN "choeur" masculine ; -- tocheck
lin carolina_PN = mkPN "Carolina" ; -- status=guess src=geonames
lin carom_N = mkN "canon" ; -- UWN
lin carotenoid_N = mkN "caroténoïde" ; -- tocheck
lin carousel_N = mkN "carrefour_giratoire" | mkN "carrousel" | mkN "manège" ; -- UWN
lin carp_N = mkN "carpe" feminine ; -- tocheck
lin carp_V2 = mkV2 (mkV "maugréer") ; -- tocheck
lin carpal_N = mkN "carpien" ; -- tocheck
lin carpel_N = mkN "carpelle" masculine ; -- tocheck
lin carpenter_N = mkN "menuisier" masculine ; -- tocheck
lin carpentry_N = mkN "charpenterie" feminine ; -- tocheck
lin carpet_N = L.carpet_N ;
lin carpet_V2 = mkV2 (mkV "tapisser") ; -- tocheck
lin carpophagous_A = mkA "carpophage" ; -- UWN
lin carpophore_N = mkN "carpophore" ; -- UWN
lin carrack_N = mkN "caraque" | mkN "nef" ; -- UWN
lin carrageenin_N = mkN "carraghénane" ; -- UWN
lin carrel_N = mkN "carrel" ; -- UWN
lin carriage_N = mkN "wagon" masculine | mkN "carrosse" ; -- tocheck
lin carriageway_N = mkN "chaussée" feminine ; -- tocheck
lin carrier_N = variants {} ; --
lin carrion_N = mkN "charogne" feminine ; -- tocheck
lin carrot_N = mkN "carotte" feminine ; -- tocheck
lin carry_V = mkV "porter" ;
lin carry_V2 = mkV2 (mkV "porter") ;
lin carry_forward_V2 = mkV2 (advV OP_carry_V OP_forward_Adv ) ; -- guess-p-verb
lin carry_off_V2 = prepV2 OP_carry_V OP_off_Prep ; -- guess-p-verb
lin carry_on_V = advV OP_carry_V OP_on_Adv ; -- guess-p-verb
lin carry_on_V2 = prepV2 OP_carry_V OP_on_Prep ; -- guess-p-verb
lin carry_on_about_V2 = prepV2 (advV OP_carry_V OP_on_Adv ) OP_about_Prep ; -- guess-p-verb
lin carry_on_with_V2 = prepV2 (advV OP_carry_V OP_on_Adv ) OP_with_Prep ; -- guess-p-verb
lin carry_out_V = mkV "appliquer" | mkV "implémenter" | mkV "réaliser" | mkV "rédiger" | mkV "réviser" ; -- UWN
lin carry_out_V2 = prepV2 OP_carry_V OP_out_Prep ; -- guess-p-verb
lin carry_over_V2 = prepV2 OP_carry_V OP_over_Prep ; -- guess-p-verb
lin carry_through_V2 = prepV2 OP_carry_V OP_through_Prep ; -- guess-p-verb
lin carryall_N = mkN "fourre-tout" ; -- UWN
lin cart_N = mkN "chariot" masculine ; -- tocheck
lin cartagena_PN = mkPN ("Carthagène" | "Carthagène des Indes") ;
lin cartel_N = mkN "cartel" masculine ; -- tocheck
lin carter_N = mkN "charretier" masculine ; -- tocheck
lin cartilage_N = mkN "cartilage" masculine ; -- tocheck
lin cartilaginous_A = mkA "cartilagineux" ; -- tocheck
lin cartload_N = mkN "tombereau" ; -- UWN
lin cartographer_N = mkN "cartographe" ; -- tocheck
lin cartographic_A = mkA "cartographique" ; -- tocheck
lin cartography_N = mkN "cartographie" feminine ; -- tocheck
lin carton_N = mkN "carton" masculine ; -- tocheck
lin cartoon_N = mkN "caricature" | mkN "dessin_animé" ; -- UWN
lin cartoonistFem_N = mkN "cartooniste" | mkN "dessinateur" ; -- UWN
lin cartoonistMasc_N = mkN "cartooniste" | mkN "dessinateur" ; -- UWN
lin cartouche_N = mkN "cartouche" masculine ; -- tocheck
lin cartridge_N = mkN "cartouche" feminine ; -- tocheck
lin cartwheel_N = mkN "roue" feminine ; -- tocheck
lin cartwright_N = mkN "charron" ; -- UWN
lin caruncle_N = mkN "caroncule" feminine ; -- tocheck
lin carve_V = mkV "tailler" ; -- UWN
lin carve_V2 = variants {} ; --
lin carving_N = mkN "gravure" feminine ; -- tocheck
lin caryatid_N = mkN "cariatide" ; -- tocheck
lin casablanca_PN = mkPN "Casablanca" ; -- status=guess src=geonames
lin cascade_N = mkN "douche" ; -- UWN
lin case_N = mkN "cas" masculine | mkN "caisse" feminine | mkN "vitrine" feminine | mkN "écrin" masculine ; --- split
lin casein_N = mkN "caséine" feminine ; -- tocheck
lin casern_N = mkN "caserne" ; -- UWN
lin cash_N = mkN "espèces" ; -- tocheck
lin cash_V2 = mkV2 (mkV "encaisser") ; -- tocheck
lin cashbox_N = mkN "caisse" ; -- UWN
lin cashew_N = mkN "cajou" masculine ; -- tocheck
lin cashier_N = mkN "caissier" masculine ; -- tocheck
lin cashier_V2 = mkV2 (mkV "caissier") ; -- tocheck
lin cashmere_N = mkN "cachemire" ; -- UWN
lin casing_N = mkN "cadre" | mkN "cas" | mkN "cuvelage" ; -- UWN
lin casino_N = mkN "casino" masculine ; -- tocheck
lin cask_N = mkN "tonneau" masculine ; -- tocheck
lin casket_N = mkN "coffret" masculine ; -- tocheck
lin caspase_N = mkN "caspase" | mkN "caspases" ; -- UWN
lin casque_N = mkN "casque" ; -- UWN
lin cassava_N = mkN "manioc" ; -- tocheck
lin casserole_N = mkN "timbale" feminine | mkN "cocotte" feminine ; -- tocheck
lin cassette_N = mkN "cassette" feminine ; -- tocheck
lin cassiterite_N = mkN "cassitérite" ; -- UWN
lin cassock_N = mkN "soutane" feminine ; -- tocheck
lin cassowary_N = mkN "casoar" masculine ; -- tocheck
lin cast_N = mkN "plâtre" ; -- tocheck
lin cast_V = variants {} ; -- mkV2 (mkV "jeter") | mkV2 (mkV "sonder") | mkV2 (mkV "couler") ; -- tocheck
lin cast_V2 = mkV2 (mkV "jeter") | mkV2 (mkV "sonder") | mkV2 (mkV "couler") ; -- tocheck
lin cast_about_for_V2 = prepV2 (advV OP_cast_V OP_about_Adv ) OP_for_Prep ; -- guess-p-verb
lin cast_around_V = mkV "chercher" ; -- UWN
lin cast_around_for_V2 = prepV2 (advV OP_cast_V OP_around_Adv ) OP_for_Prep ; -- guess-p-verb
lin cast_aside_V2 = mkV2 (advV OP_cast_V OP_aside_Adv ) ; -- guess-p-verb
lin cast_off_V = advV OP_cast_V OP_off_Adv ; -- guess-p-verb
lin cast_off_V2 = prepV2 OP_cast_V OP_off_Prep ; -- guess-p-verb
lin cast_out_V2 = prepV2 OP_cast_V OP_out_Prep ; -- guess-p-verb
lin cast_round_for_V2 = prepV2 (advV OP_cast_V OP_round_Adv ) OP_for_Prep ; -- guess-p-verb
lin cast_up_V2 = prepV2 OP_cast_V OP_up_Prep ; -- guess-p-verb
lin castaway_N = mkN "naufragé" ; -- tocheck
lin caste_N = mkN "caste" feminine ; -- tocheck
lin caster_N = mkN "roulette" feminine ; -- tocheck
lin castigate_V2 = mkV2 (mkV "châtier") | mkV2 (mkV "réviser") ; -- tocheck
lin casting_N = mkN "moulage" | mkN "audition" ; -- tocheck
lin castle_N = mkN "château" masculine ; -- tocheck
lin castle_V = mkV (mkV "roquer") ; -- tocheck
lin castleford_PN = mkPN "Castleford" ; -- status=guess src=geonames
lin castor_oil_N = mkN "huile_de_ricin" ; -- UWN
lin castrate_V2 = mkV2 (mkV "châtrer") ; -- tocheck
lin castration_N = mkN "castration" feminine ; -- tocheck
lin castrato_N = mkN "castrat" masculine ; -- tocheck
lin casual_A = mkA "occasionnel" ; -- tocheck
lin casualness_N = mkN "abord" ; -- UWN
lin casualty_N = mkN "victime" ; -- tocheck
lin casuarina_N = mkN "casuarina" ; -- UWN
lin casuistic_A = mkA "casuistique" ; -- tocheck
lin casuistry_N = mkN "casuistique" feminine ; -- tocheck
lin casus_belli_N = mkN "casus_belli" ; -- UWN
lin cat_N = L.cat_N ;
lin catabolism_N = mkN "catabolisme" masculine ; -- tocheck
lin catachresis_N = mkN "catachrèse" ; -- UWN
lin cataclysm_N = mkN "cataclysme" masculine ; -- tocheck
lin cataclysmal_A = mkA "cataclysmique" ; -- UWN
lin cataclysmic_A = mkA "cataclysmique" ; -- UWN
lin catacomb_N = mkN "catacombe" ; -- tocheck
lin catadromous_A = mkA "catadrome" ; -- tocheck
lin catafalque_N = mkN "catafalque" masculine ; -- tocheck
lin catalanFem_N = variants {} ; ---- sense to be split
lin catalanMasc_N = variants {} ; ---- sense to be split
lin catalase_N = mkN "Catalase" | mkN "catalase" ; -- UWN
lin catalepsy_N = mkN "catalepsie" ; -- UWN
lin catalexis_N = mkN "catalexis" ; -- UWN
lin catalogue_N = mkN "catalogue" masculine ; -- tocheck
lin catalogue_V2 = mkV2 (mkV "cataloguer") ; -- tocheck
lin catalysis_N = mkN "catalyse" feminine ; -- tocheck
lin catalyst_N = mkN "catalyseur" masculine | mkN "catalyseur" ; -- tocheck
lin catalytic_A = mkA "catalytique" ; -- tocheck
lin catamaran_N = mkN "catamaran" masculine ; -- tocheck
lin catananche_N = mkN "catananche" ; -- UWN
lin catania_PN = mkPN "Catane" ; -- status=guess src=geonames
lin cataphatic_A = mkA "cataphatique" ; -- UWN
lin catapult_N = mkN "catapulte" feminine ; -- tocheck
lin catapult_V2 = mkV2 (mkV "catapulter") ; -- tocheck
lin cataract_N = mkN "cataracte" feminine ; -- tocheck
lin catarrh_N = mkN "catarrhe" masculine ; -- tocheck
lin catastrophe_N = mkN "catastrophe" feminine ; -- tocheck
lin catastrophic_A = mkA "catastrophique" ; -- tocheck
lin catatonia_N = mkN "catatonie" feminine ; -- tocheck
lin catatonic_A = mkA "catatonique" ; -- tocheck
lin catboat_N = mkN "Catboat" | mkN "catboat" ; -- UWN
lin catch_N = mkN "hic" masculine ; -- tocheck
lin catch_V2 = mkV2 (mkV "attraper") ; -- tocheck
lin catch_at_V2 = prepV2 (lin V OP_catch_V2) OP_at_Prep ; -- guess-p-verb
lin catch_on_V = advV (lin V OP_catch_V2) OP_on_Adv ; -- guess-p-verb
lin catch_out_V2 = prepV2 (lin V OP_catch_V2) OP_out_Prep ; -- guess-p-verb
lin catch_up_V = advV (lin V OP_catch_V2) OP_up_Adv ; -- guess-p-verb
lin catch_up_V2 = prepV2 (lin V OP_catch_V2) OP_up_Prep ; -- guess-p-verb
lin catch_up_in_V2 = prepV2 (advV (lin V OP_catch_V2) OP_up_Adv ) OP_in_Prep ; -- guess-p-verb
lin catch_up_on_V2 = prepV2 (advV (lin V OP_catch_V2) OP_up_Adv ) OP_on_Prep ; -- guess-p-verb
lin catch_up_with_V2 = prepV2 (advV (lin V OP_catch_V2) OP_up_Adv ) OP_with_Prep ; -- guess-p-verb
lin catcher_N = mkN "receveur" masculine | mkN "attrapeur" masculine ; -- tocheck
lin catching_N = mkN "adjudicateur" | mkN "signataire" ; -- UWN
lin catchment_N = mkN "bassin" ; -- UWN
lin catchphrase_N = mkN "phrase_fétiche" ; -- UWN
lin catechesis_N = mkN "catéchèse" feminine ; -- tocheck
lin catechetical_A = mkA "cathéchétique" ; -- tocheck
lin catechism_N = mkN "catéchisme" masculine ; -- tocheck
lin catecholamine_N = mkN "catécholamine" feminine ; -- tocheck
lin catechumen_N = mkN "catéchumène" masculine ; -- tocheck
lin categorical_A = mkA "catégorique" | mkA "catégoriel" ; -- tocheck
lin categorize_V2 = mkV2 (mkV "classer") ; -- tocheck
lin category_N = mkN "catégorie" feminine ; -- tocheck
lin catena_N = mkN "catena" ; -- UWN
lin catenary_N = mkN "chaînette" feminine ; -- tocheck
lin cater_V = variants {} ; --
lin caterer_N = mkN "traiteur" ; -- UWN
lin catering_N = mkN "restauration" feminine ; -- tocheck
lin caterpillar_N = mkN "chenille" feminine ; -- tocheck
lin caterwaul_V = mkV (mkV "miauler") ; -- tocheck
lin catfish_N = mkN "poisson-chat" masculine ; -- tocheck
lin catgut_N = mkN "catgut" | mkN "intestin" ; -- UWN
lin catharsis_N = mkN "défoulement" masculine | mkN "catharsis" feminine ; -- tocheck
lin cathedra_N = mkN "cathèdre" ; -- UWN
lin cathedral_A = mkA "cathédrale" ; -- UWN
lin cathedral_N = mkN "cathédrale" feminine ; -- tocheck
lin catheter_N = mkN "cathéter" masculine ; -- tocheck
lin cathode_N = mkN "cathode" feminine ; -- tocheck
lin catholicFem_N = variants {} ; ---- sense to be split
lin catholicMasc_N = variants {} ; ---- sense to be split
lin catholicity_N = mkN "universalité" ; -- UWN
lin cation_N = mkN "cation" masculine ; -- tocheck
lin catkin_N = mkN "chaton" ; -- tocheck
lin catsup_N = mkN "ketchup" ; -- UWN
lin cattalo_N = mkN "beefalo" ; -- UWN
lin cattle_N = mkN "bovin" masculine | mkN "bétail" masculine | mkN "bétail" ; -- tocheck
lin catty_A = mkA "rosse" ; -- tocheck
lin catwalk_N = mkN "passerelle" feminine ; -- tocheck
lin caucasianFem_N = variants {} ; ---- sense to be split
lin caucasianMasc_N = variants {} ; ---- sense to be split
lin caudal_A = mkA "caudal" ; -- tocheck
lin caul_N = mkN "coiffe" feminine ; -- tocheck
lin cauldron_N = mkN "chaudron" masculine ; -- tocheck
lin cauliflower_N = mkN "chou-fleur" masculine ; -- tocheck
lin caulk_V2 = mkV2 (mkV "calfeutrer") ; -- tocheck
lin causal_A = mkA "causal" ; -- tocheck
lin causality_N = mkN "causalité" ; -- tocheck
lin causation_N = mkN "causation" feminine ; -- tocheck
lin causative_A = mkA "causatif" ; -- UWN
lin cause_N = mkN "cause" feminine ; -- tocheck
lin cause_V2 = mkV2 (mkV "causer") ;
lin cause_V2V = mkV2V (mkV "causer") ;
lin causeless_A = mkA "fortuit" ; -- UWN
lin causeway_N = mkN "chaussée" feminine ; -- tocheck
lin causing_N = mkN "causation" ; -- UWN
lin caustic_A = mkA "corrosif" ; -- UWN
lin cauterize_V2 = mkV2 (mkV "cautériser") ; -- tocheck
lin cautery_N = mkN "cautère" masculine | mkN "cautérisation" feminine ; -- tocheck
lin caution_N = mkN "admonition" ; -- tocheck
lin caution_V = mkV "avertir" ; -- UWN
lin caution_V2V = mkV2V (mkV "avertir") ; -- tocheck
lin caution_VS = mkvVS "avertir" ; -- UWN
lin cautious_A = mkA "prudent" ; -- tocheck
lin cavalcade_N = mkN "cavalcade" feminine ; -- tocheck
lin cavalier_A = mkA "cavalier" ; -- tocheck
lin cavalier_N = mkN "chevalier" masculine | mkN "cavalier" masculine ; -- tocheck
lin cavalry_N = mkN "cavalerie" feminine ; -- tocheck
lin cavalryman_N = mkN "cavalier" masculine ; -- tocheck
lin cavan_PN = mkPN "Cavan" ; -- status=guess src=geonames
lin cave_N = mkN "caverne" feminine | mkN "éboulement" masculine | mkN "antre" masculine | mkN "cave" feminine ; -- tocheck
lin cave_in_V = mkV "s'effondrer" | mkV "s'écrouler" ; -- UWN
lin caveat_N = mkN "avertissement" masculine ; -- tocheck
lin caveman_N = mkN "homme_des_cavernes" | mkN "homo_erectus" | mkN "troglodyte" ; -- UWN
lin caviar_N = mkN "caviar" masculine ; -- tocheck
lin cavity_N = mkN "carie" feminine ; -- tocheck
lin cavort_V = mkV (mkV "cabrioler") ; -- tocheck
lin caw_N = mkN "croassement" masculine ; -- tocheck
lin caw_V = mkV "croasser" ; -- UWN
lin caw_V2 = mkV2 (mkV "croasser") ; -- tocheck
lin cayman_N = mkN "caïman" ; -- UWN
lin cc_N = mkN "centimètre_cube" | mkN "millilitre" | mkN "ml" ; -- UWN
lin cease_V = mkV "achever" | mkV "arrêter" | mkV "finir" | mkV "terminer" ; -- UWN
lin cease_V2 = variants {} ; -- mkV2V (mkV "cesser") ; -- tocheck
lin cecal_A = mkA "cæcal" ; -- UWN
lin cecilia_PN = mkPN "Cecilia" ; -- status=guess src=geonames
lin cecum_N = mkN "cæcum" | mkN "cœcum" ; -- UWN
lin cedar_N = mkN "cèdre" | mkN "cèdre" masculine ; -- tocheck
lin cede_V2 = mkV2 (mkV "céder") ; -- tocheck
lin cedilla_N = mkN "cédille" feminine ; -- tocheck
lin ceiling_N = L.ceiling_N ;
lin celebrate_V2 = mkV2 (mkV "fêter") | mkV2 (mkV "célébrer") ; -- tocheck
lin celebrated_A = mkA "célèbre" ; -- tocheck
lin celebration_N = mkN "célébration" feminine ; -- tocheck
lin celebrity_N = mkN "célébrité" feminine ; -- tocheck
lin celeriac_N = mkN "céleri-rave" ; -- tocheck
lin celerity_N = mkN "célérité" feminine ; -- tocheck
lin celery_N = mkN "céleri" masculine ; -- tocheck
lin celesta_N = mkN "célesta" masculine ; -- tocheck
lin celestial_A = mkA "céleste" ; -- tocheck
lin celiac_A = mkA "cœliaque" ; -- UWN
lin celibacy_N = mkN "célibat" masculine ; -- tocheck
lin celibate_A = mkA "continent" ; -- UWN
lin cell_N = mkN "cellule" feminine | mkN "cellule" | mkN "portable" masculine | mkN "pile" feminine ; -- tocheck
lin cellar_N = mkN "cellier" masculine ; -- tocheck
lin cellblock_N = mkN "quartier" | mkN "salle" ; -- UWN
lin cellistFem_N = mkN "celliste" feminine ; -- tocheck
lin cellistMasc_N = mkN "celliste" masculine ; -- tocheck
lin cello_N = mkN "violoncelle" masculine ; -- tocheck
lin cellophane_N = mkN "cellophane" feminine ; -- tocheck
lin cellular_A = mkA "cellulaire" ; -- tocheck
lin cellulite_N = mkN "cellulite" | mkN "lipodystrophie_superficielle" ; -- UWN
lin cellulitis_N = mkN "cellulite" ; -- UWN
lin celluloid_A = mkA "synthétique" ; -- UWN
lin celluloid_N = mkN "ducinéma" masculine | mkN "celluloïd" masculine ; -- tocheck
lin cellulose_N = mkN "cellulose" feminine ; -- tocheck
lin celom_N = mkN "cœlome" ; -- UWN
lin cement_N = mkN "colle" feminine | mkN "ciment" | mkN "ciment" masculine ; -- tocheck
lin cement_V2 = mkV2 (mkV "cimenter") ; -- tocheck
lin cementite_N = mkN "cémentite" ; -- UWN
lin cementum_N = mkN "ciment" | mkN "cément" ; -- UWN
lin cemetery_N = variants {} ; --
lin cenobite_N = mkN "cénobite" masculine ; -- tocheck
lin cenotaph_N = mkN "cénotaphe" masculine ; -- tocheck
lin censer_N = mkN "encensoir" ; -- tocheck
lin censor_N = mkN "censeur" masculine ; -- tocheck
lin censor_V2 = mkV2 (mkV "censurer") ; -- tocheck
lin censorship_N = mkN "censure" feminine ; -- tocheck
lin censure_V2 = mkV2 (mkV "décrier") ; -- tocheck
lin census_N = mkN "recensement" masculine ; -- tocheck
lin cent_N = mkN "centime" masculine | mkN "cent" masculine ; -- tocheck
lin centaur_N = mkN "Centaure" | mkN "centaure" masculine ; -- tocheck
lin centaury_N = mkN "centaurée" feminine ; -- tocheck
lin centenarian_N = mkN "centenaire" ; -- tocheck
lin centenary_A = mkA "centenaire" ; -- tocheck
lin center_A = mkA "central" ; -- tocheck
lin centerboard_N = mkN "Dérive" | mkN "dérive" ; -- UWN
lin centerfold_N = mkN "pin-up" ; -- tocheck
lin centime_N = mkN "centime" masculine ; -- tocheck
lin centimetre_N = mkN "centimètre" masculine ; -- tocheck
lin centipede_N = mkN "centipède" masculine ; -- tocheck
lin central_A = mkA "central" ;
lin central_N = mkN "autocommutateur" | mkN "bourse" | mkN "central" | mkN "centre" | mkN "commutateur_téléphonique" | mkN "échange" ; -- UWN
lin centralism_N = mkN "centralisme" masculine ; -- tocheck
lin centralize_V = mkV "concentrer" ; -- UWN
lin centre_N = mkN "centre" masculine ;
lin centre_V = variants {} ; --
lin centre_V2 = variants {} ; --
lin centrifugal_A = mkA "centrifuge" ; -- tocheck
lin centrifugation_N = mkN "centrifugation" ; -- UWN
lin centrifuge_N = mkN "centrifugeuse" feminine ; -- tocheck
lin centriole_N = mkN "centriole" ; -- UWN
lin centripetal_A = mkA "centripète" ; -- tocheck
lin centrism_N = mkN "centrisme" masculine ; -- tocheck
lin centrist_N = mkN "modérateur" | mkN "modération" ; -- UWN
lin centroid_N = mkN "barycentre" ; -- UWN
lin centromere_N = mkN "centromère" masculine ; -- tocheck
lin centrosome_N = mkN "centrosome" ; -- UWN
lin centurion_N = mkN "centurion" masculine ; -- tocheck
lin century_N = mkN "siècle" masculine ;
lin cephalic_A = mkA "céphalique" ; -- tocheck
lin cephalopod_N = mkN "céphalopode" masculine ; -- tocheck
lin ceramic_A = mkA "céramique" ; -- tocheck
lin ceramic_N = mkN "céramique" feminine ; -- tocheck
lin cerate_N = mkN "cérat" | mkN "cérate" ; -- UWN
lin ceratosaur_N = mkN "ceratosaurus" ; -- UWN
lin ceratozamia_N = mkN "ceratozamia" ; -- UWN
lin cereal_A = mkA "céréale" ; -- UWN
lin cereal_N = mkN "céréale" feminine ; -- tocheck
lin cerebellum_N = mkN "cervelet" masculine ; -- tocheck
lin cerebral_A = mkA "cérébral" ; -- tocheck
lin cerebration_N = mkN "cérébration" | mkN "pensée" | mkN "raisonnement" ; -- UWN
lin cerebrospinal_A = mkA "cérébrospinal" ; -- tocheck
lin cerebrum_N = mkN "telencéphale" masculine ; -- tocheck
lin ceremonial_A = mkA "cérémonial" ; -- tocheck
lin ceremonial_N = mkN "cérémonial" masculine ; -- tocheck
lin ceremony_N = mkN "cérémonie" feminine | mkN "cérémonie" ; -- tocheck
lin cerise_N = mkN "cerise" ; -- tocheck
lin cerium_N = mkN "cérium" masculine ; -- tocheck
lin certain_1_A = mkA "certain" ;
lin certain_2_A = mkA "certain" ;
lin certain_A = mkA "certain" ; -- tocheck
lin certainty_N = mkN "certitude" feminine ; -- tocheck
lin certificate_N = mkN "document" ; -- tocheck
lin certification_N = mkN "certification" feminine ; -- tocheck
lin certify_V = mkV "assurer" | mkV "attester" | mkV "démontrer" | mkV "exprimer" | mkV "indiquer" | mkV "montrer" | mkV "prouver" | mkV "témoigner" ; -- UWN
lin certify_V2 = mkV2 (mkV "certifier") ; -- tocheck
lin certitude_N = mkN "certitude" feminine ; -- tocheck
lin cerulean_A = mkA "céruléen" ; -- tocheck
lin cerumen_N = mkN "cire_de_l'oreille" | mkN "cérumen" ; -- UWN
lin cerussite_N = mkN "cérusite" feminine ; -- tocheck
lin cervical_A = mkA "cervical" ; -- tocheck
lin cervicitis_N = mkN "cervicite" ; -- UWN
lin cervix_N = mkN "gorge" | mkN "luette" | mkN "suppositoire" ; -- UWN
lin cessation_N = mkN "sursis" ; -- UWN
lin cession_N = mkN "abandon" | mkN "cession" ; -- UWN
lin cesspit_N = mkN "aisance" | mkN "fosse" | mkN "fosse_d'aisance" | mkN "évier" ; -- UWN
lin cesspool_N = mkN "cloaque" feminine ; -- tocheck
lin cetacean_A = mkA "cétacé" ; -- UWN
lin cetacean_N = mkN "cétacé" masculine ; -- tocheck
lin chabazite_N = mkN "chabazite" ; -- UWN
lin chachalaca_N = mkN "chachalaca" | mkN "ortalide" | mkN "ortalides" ; -- UWN
lin chad_PN = mkPN "Tchad" ; -- status=guess src=geonames
lin chador_N = mkN "tchador" masculine ; -- tocheck
lin chaenactis_N = mkN "chaenactis" ; -- UWN
lin chaetodon_N = mkN "chaetodon" ; -- UWN
lin chafe_N = mkN "inflammation" feminine | mkN "énervement" ; -- tocheck
lin chafe_V2 = mkV2 (mkV "irriter") ; -- tocheck
lin chaff_N = mkN "balle" feminine ; -- tocheck
lin chaffinch_N = mkN "pinson" masculine ; -- tocheck
lin chagrin_N = mkN "chagrin" masculine ; -- tocheck
lin chain_N = mkN "chaîne" feminine ; -- tocheck
lin chain_V2 = mkV2 (mkV "chaîner") | mkV2 (mkV "enchaîner") ; -- tocheck
lin chair_N = L.chair_N ;
lin chair_V2 = mkV2 (mkV "présider") ; -- tocheck
lin chair_lift_N = mkN "Télésiège" | mkN "télésiège" ; -- UWN
lin chairman_N = variants {} ; --
lin chalcedony_N = mkN "calcédoine" ; -- tocheck
lin chalcocite_N = mkN "chalcocite" | mkN "chalcosine" ; -- UWN
lin chalcopyrite_N = mkN "chalcopyrite" ; -- UWN
lin chalet_N = mkN "chalet" masculine ; -- tocheck
lin chalfont_PN = mkPN "Chalfont" ; -- status=guess src=geonames
lin chalice_N = mkN "calice" masculine ; -- tocheck
lin chalk_N = mkN "craie" feminine | mkN "magnésie" feminine ; -- tocheck
lin chalky_A = mkA "calcaire" ; -- UWN
lin challah_N = mkN "Bar'hes" | mkN "Barkis" | mkN "Bergis" | mkN "Hallah" | mkN "Halle" | mkN "Tresses" | mkN "bar'hes" | mkN "barkis" | mkN "bergis" | mkN "hallah" | mkN "halle" | mkN "tresses" ; -- UWN
lin challenge_N = mkN "défi" | mkN "défi" masculine ; -- tocheck
lin challenge_V = variants {} ; -- mkV2 (mkV "défier") ; -- tocheck
lin challenge_V2 = mkV2 (mkV "défier") ; -- tocheck
lin challenger_N = mkN "challengeur" masculine ; -- tocheck
lin chamber_N = mkN "chambre" feminine ; -- tocheck
lin chamberlain_N = mkN "chambellan" masculine ; -- tocheck
lin chambray_N = mkN "chambray" ; -- UWN
lin chameleon_N = mkN "caméléon" masculine ; -- tocheck
lin chamois_N = mkN "chamois" masculine ; -- tocheck
lin champ_N = mkN "champion" ; -- UWN
lin champagne_N = mkN "champagne" masculine ; -- tocheck
lin champion_N = mkN "champion" masculine ; -- tocheck
lin champion_V2 = mkV2 (mkV "championner") ; -- tocheck
lin championship_N = mkN "championnat" masculine | mkN "champion" masculine ; -- tocheck
lin champleve_A = mkA "cloisonné" ; -- UWN
lin chance_N = mkN "raccroc" masculine | mkN "chance" feminine ; -- tocheck
lin chancel_N = mkN "chancel" | mkN "sanctuaire" ; -- UWN
lin chancellor_N = mkN "chancelier" masculine ; -- tocheck
lin chancroid_N = mkN "chancre_mou" ; -- UWN
lin chandelier_N = mkN "lustre" masculine ; -- tocheck
lin chandler_N = mkN "chandeleur" ; -- UWN
lin changchun_PN = mkPN "Changchun" ; -- status=guess src=geonames
lin change_N = mkN "changement" masculine | mkN "correspondance" | mkN "monnaie" feminine ; --- split 3
lin change_V = reflV (mkV "changer") ;
lin change_V2 = mkV2 (mkV "changer") ;
lin change_over_V2 = prepV2 OP_change_V OP_over_Prep ; -- guess-p-verb
lin changeable_A = mkA "changeable" | mkA "changeant" ; -- tocheck
lin changeover_N = mkN "conversion" | mkN "relève" | mkN "transformation" | mkN "transition" ; -- UWN
lin changing_A = variants {} ; --
lin changsha_PN = mkPN "Changsha" ; -- status=guess src=geonames
lin channel_N = mkN "chaîne" feminine ; -- tocheck
lin channel_V2 = mkV2 (mkV "canaliser") ; -- tocheck
lin chant_V2 = mkV2 (mkV "chanter") ; -- tocheck
lin chanter_N = mkN "scandeur" masculine | mkN "chalumeau" masculine ; -- tocheck
lin chanterelle_N = mkN "chanterelle" feminine ; -- tocheck
lin chaos_N = mkN "chaos" masculine ; -- tocheck
lin chaotic_A = mkA "chaotique" ; -- tocheck
lin chap_N = mkN "bougre" masculine ; -- tocheck
lin chapatti_N = mkN "chapati" ; -- UWN
lin chapel_N = mkN "chapelle" feminine ; -- tocheck
lin chaperon_N = mkN "chaperon" | mkN "compagne" ; -- UWN
lin chaplain_N = mkN "aumônier" ; -- tocheck
lin chaplaincy_N = mkN "aumônerie" ; -- UWN
lin chapman_N = mkN "chapman" ; -- UWN
lin chapter_N = mkN "chapitre" masculine ;
lin char_N = mkN "omble" masculine ; -- tocheck
lin char_V2 = mkV2 (mkV "carboniser") ; -- tocheck
lin charabanc_N = variants {} ;
lin character_1_N = mkN "personnage" masculine ; -- tocheck
lin character_2_N = mkN "caractère" masculine ; -- tocheck
lin characteristic_A = mkA "caractéristique" ; -- tocheck
lin characteristic_N = mkN "caractéristique" feminine ; -- tocheck
lin characterization_N = mkN "caractérisation" feminine ; -- tocheck
lin characterize_V2 = mkV2 (mkV "caractériser") ; -- tocheck
lin charades_N = mkN "charade" feminine ; -- tocheck
lin charcoal_N = mkN "charbon_de_bois" ; -- UWN
lin chard_N = mkN "bettes" ; -- tocheck
lin chard_PN = mkPN "Chard" ; -- status=guess src=geonames
lin charge_1_N = mkN "frais" | mkN "charge" feminine ;
lin charge_2_N = mkN "inculpation" feminine ;
lin charge_N = mkN "inculpation" feminine | mkN "frais" | mkN "charge" feminine ;
lin charge_V = variants {} ; -- mkV2 (mkV "charger") | mkV2 (mkV "accuser") | mkV2 (mkV "armer") ; -- tocheck
lin charge_V2 = mkV2 (mkV "charger") | mkV2 (mkV "accuser") | mkV2 (mkV "armer") ; -- tocheck
lin charge_off_V = advV OP_charge_V OP_off_Adv ; -- guess-p-verb
lin charge_up_V2 = prepV2 OP_charge_V OP_up_Prep ; -- guess-p-verb
lin charge_with_V3 = variants {} ; -- guess-p-verb
lin chargeable_A = mkA "facturable" ; -- UWN
lin chariot_N = mkN "char" ; -- tocheck
lin charioteer_N = mkN "aurige" feminine ; -- tocheck
lin charisma_N = mkN "charisme" masculine ; -- tocheck
lin charismatic_A = mkA "charismatique" ; -- tocheck
lin charitable_A = mkA "caritatif" ; -- tocheck
lin charity_N = mkN "charité" feminine ; -- tocheck
lin charivari_N = mkN "charivari" ; -- tocheck
lin charlatan_N = mkN "charlatan" masculine ; -- tocheck
lin charlatanism_N = mkN "charlatanisme" ; -- UWN
lin charlotte_N = mkN "charlotte" ; -- UWN
lin charlotte_PN = mkPN "Charlotte" ; -- status=guess src=geonames
lin charm_N = mkN "charme" | mkN "fétiche" | mkN "breloque" feminine ; -- tocheck
lin charm_V = mkV "influencer" | mkV "tenter" ; -- UWN
lin charming_A = variants {} ; --
lin chart_N = mkN "graphe" masculine ; -- tocheck
lin charter_N = mkN "charte" feminine ; -- tocheck
lin charter_V2 = mkV2 (mkV "affretter") ; -- tocheck
lin charterhouse_N = mkN "chartreuse" ; -- UWN
lin charwoman_N = mkN "carboniser" | mkN "femme" | mkN "femme_de_ménage" | mkN "fille" | mkN "nettoyeuse" | mkN "sportif" | mkN "tout" ; -- UWN
lin chase_N = mkN "poursuite" feminine ; -- tocheck
lin chase_V = variants {} ; -- mkV2 (mkV I.poursuivre_V2) ; -- tocheck
lin chase_V2 = mkV2 (mkV I.poursuivre_V2) ; -- tocheck
lin chaser_N = mkN "pousse-café" masculine | mkN "poursuivant" masculine ; -- tocheck
lin chasm_N = mkN "fossé" masculine ; -- tocheck
lin chassis_N = mkN "châssis" masculine ; -- tocheck
lin chaste_A = mkA "chaste" ; -- tocheck
lin chasteness_N = mkN "modération" | mkN "retenue" | mkN "simplicité" ; -- UWN
lin chastise_V2 = mkV2 (mkV "châtier") ; -- tocheck
lin chastisement_N = mkN "châtiment" masculine ; -- tocheck
lin chastity_N = mkN "chasteté" feminine ; -- tocheck
lin chasuble_N = mkN "chasuble" feminine ; -- tocheck
lin chat_N = variants {} ; --
lin chat_V = variants {} ; -- mkV2 (mkV "discuter") | mkV2 (mkV "jaser") ; -- tocheck
lin chatham_PN = mkPN "Chatham" ; -- status=guess src=geonames
lin chatter_N = mkN "jacassement" masculine ; -- tocheck
lin chatter_V = mkV (mkV "jacasser") ; -- tocheck
lin chatterbox_N = mkN "moulin_à_paroles" | mkN "pie" | mkN "prater" ; -- UWN
lin chatterer_N = mkN "cotinga" | mkN "cotingidae" | mkN "cotingidés" ; -- UWN
lin chatty_A = mkA "bavard" ; -- tocheck
lin chauffeur_N = mkN "chauffeur" masculine ; -- tocheck
lin chauvinism_N = mkN "chauvinisme" masculine ; -- tocheck
lin chauvinist_N = mkN "chauviniste" ; -- tocheck
lin chaw_N = mkN "mâcher" ; -- UWN
lin cheadle_PN = mkPN "Cheadle" ; -- status=guess src=geonames
lin cheap_A = mkA "radin" | mkA "modique" ; -- tocheck
lin cheapen_V2 = mkV2 (mkV "déprécier") ; -- tocheck
lin cheapness_N = mkN "horreur" | mkN "ignominie" ; -- UWN
lin cheapskate_N = mkN "avare" masculine ; -- tocheck
lin cheat_N = mkN "menteur" ; -- tocheck
lin cheat_V = mkV "tromper" ; -- UWN
lin cheat_V2 = mkV2 (mkV "tromper") | mkV2 (mkV "tricher") ; -- tocheck
lin check_N = mkN "addition" feminine | mkN "vérification" feminine | mkN "croix" feminine | mkN "échec" masculine ; -- tocheck
lin check_V = mkV "vérifier" ; -- UWN
lin check_V2 = mkV2 (mkV "checker") | mkV2 (mkV "contrôler") | mkV2 (mkV "vérifier") | mkV2 (mkV "laisser") | mkV2 (mkV "enregistrer") | mkV2 (mkV "cocher") ; -- tocheck
lin check_back_V = advV OP_check_V OP_back_Adv ; -- guess-p-verb
lin check_by_V2 = prepV2 OP_check_V OP_by_Prep ; -- guess-p-verb
lin check_for_V2 = prepV2 OP_check_V OP_for_Prep ; -- guess-p-verb
lin check_in_V = advV OP_check_V OP_in_Adv ; -- guess-p-verb
lin check_in_V2 = prepV2 OP_check_V OP_in_Prep ; -- guess-p-verb
lin check_into_V2 = prepV2 OP_check_V OP_into_Prep ; -- guess-p-verb
lin check_off_V2 = prepV2 OP_check_V OP_off_Prep ; -- guess-p-verb
lin check_on_V2 = prepV2 OP_check_V OP_on_Prep ; -- guess-p-verb
lin check_out_V = advV OP_check_V OP_out_Adv ; -- guess-p-verb
lin check_out_V2 = prepV2 OP_check_V OP_out_Prep ; -- guess-p-verb
lin check_out_of_V2 = prepV2 (advV OP_check_V OP_out_Adv ) OP_of_Prep ; -- guess-p-verb
lin check_over_V2 = prepV2 OP_check_V OP_over_Prep ; -- guess-p-verb
lin check_through_V2 = prepV2 OP_check_V OP_through_Prep ; -- guess-p-verb
lin check_up_on_V2 = prepV2 (advV OP_check_V OP_up_Adv ) OP_on_Prep ; -- guess-p-verb
lin check_with_V2 = prepV2 OP_check_V OP_with_Prep ; -- guess-p-verb
lin checkbook_N = mkN "carnet_de_chèques" | mkN "chéquier" ; -- UWN
lin checker_N = mkN "vérificateur" masculine ; -- tocheck
lin checkerboard_N = mkN "damier" | mkN "échiquier" ; -- UWN
lin checkmate_N = mkN "mater" | mkN "échec_et_mat" ; -- UWN
lin checkout_N = mkN "contrôle" | mkN "vérification" | mkN "échec" ; -- UWN
lin checksum_N = mkN "somme_de_contrôle" ; -- UWN
lin checkup_N = mkN "check-up" masculine ; -- tocheck
lin cheek_N = mkN "fesse" feminine | mkN "culot" masculine | mkN "joue" feminine ; -- tocheck
lin cheekbone_N = mkN "pommette" feminine ; -- tocheck
lin cheep_V = mkV (mkV "piailler") ; -- tocheck
lin cheer_V = variants {} ; -- mkV2 (mkV "applaudir") ; -- tocheck
lin cheer_V2 = mkV2 (mkV "applaudir") ; -- tocheck
lin cheerful_A = mkA "joyeux" ; -- tocheck
lin cheers_Interj = mkInterj "merci" | mkInterj "santé" ; -- tocheck
lin cheery_A = mkA "ensoleillé" | mkA "gai" ; -- UWN
lin cheese_N = L.cheese_N ;
lin cheeseburger_N = mkN "cheeseburger" masculine ; -- tocheck
lin cheesecake_N = mkN "cheesecake" masculine ; -- tocheck
lin cheesecloth_N = mkN "coton_à_fromage" | mkN "étamine" ; -- UWN
lin cheesemonger_N = mkN "fromager" masculine ; -- tocheck
lin cheeseparing_A = mkA "fermer" | mkA "proche" | mkA "près" ; -- UWN
lin cheetah_N = mkN "guépard" masculine ; -- tocheck
lin chef_N = mkN "chef" | mkN "chef_cuisinier" | mkN "cuisinier" ; -- UWN
lin cheilitis_N = mkN "chéilite" ; -- UWN
lin chela_N = mkN "griffe" | mkN "pince" ; -- UWN
lin chelicera_N = mkN "chélicère" ; -- UWN
lin chelmsford_PN = mkPN "Chelmsford" ; -- status=guess src=geonames
lin chelsea_PN = mkPN "Chelsea" ; -- status=guess src=geonames
lin cheltenham_PN = mkPN "Cheltenham" ; -- status=guess src=geonames
lin chelyabinsk_PN = mkPN "Tcheliabinsk" ; -- status=guess src=geonames
lin chemical_A = mkA "chimique" ; -- tocheck
lin chemical_N = mkN "chimie" | mkN "chimique" | mkN "substance" ; -- UWN
lin chemiluminescence_N = mkN "chimiluminescence" ; -- UWN
lin chemistFem_N = mkN "chimiste" feminine ; -- tocheck
lin chemistMasc_N = mkN "chimiste" masculine ;
lin chemistry_N = mkN "chimie" feminine ; -- tocheck
lin chemosynthesis_N = mkN "chimiosynthèse" feminine ; -- tocheck
lin chemotaxis_N = mkN "chimiotactisme" ; -- UWN
lin chemotherapy_N = mkN "chimiothérapie" feminine ; -- tocheck
lin chepstow_PN = mkPN "Chepstow" ; -- status=guess src=geonames
lin cheque_N = mkN "chèque" masculine ; -- tocheck
lin chequebook_N = mkN "carnet_de_chèques" | mkN "chéquier" ; -- UWN
lin cherish_V2 = mkV2 (mkV "chérir") ; -- tocheck
lin cherry_N = mkN "cerise" feminine | mkN "cerisier" masculine ; -- tocheck
lin chert_N = mkN "chaille" ; -- tocheck
lin cherub_N = mkN "chérubin" masculine ; -- tocheck
lin chervil_N = mkN "cerfeuil" ; -- tocheck
lin chesham_PN = mkPN "Chesham" ; -- status=guess src=geonames
lin cheshire_PN = mkPN "Cheshire" ; -- status=guess src=geonames
lin chess_N = mkN "échecs" ; -- tocheck
lin chessboard_N = mkN "échiquier" masculine ; -- tocheck
lin chessman_N = mkN "pièce" | mkN "pièces" ; -- UWN
lin chest_N = mkN "coffre" masculine | mkN "poitrine" feminine ; -- tocheck
lin chester_PN = mkPN "Chester" ; -- status=guess src=geonames
lin chesterfield_PN = mkPN "Chesterfield" ; -- status=guess src=geonames
lin chestnut_A = mkA "marron" ; -- tocheck
lin chestnut_N = mkN "châtaigne" feminine | mkN "marron" masculine | mkN "châtaigner" masculine ; -- tocheck
lin chevrotain_N = mkN "chevrotain" | mkN "mouse_deer" | mkN "tragulidae" ; -- UWN
lin chew_N = mkN "mastication" | mkN "mâcher" ; -- UWN
lin chew_V = mkV "mastiquer" | mkV "mâcher" ; -- UWN
lin chew_V2 = mkV2 (mkV "mâcher") ; -- tocheck
lin chi_N = mkN "chi" masculine ; -- tocheck
lin chiaroscuro_N = mkN "clair-obscur" masculine ; -- tocheck
lin chiasma_N = mkN "chiasma" | mkN "décussation" ; -- UWN
lin chiasmus_N = mkN "chiasme" masculine ; -- tocheck
lin chic_A = mkA "chic" ; -- tocheck
lin chic_N = mkN "chic" ; -- UWN
lin chicago_PN = mkPN "Chicago" ; -- status=guess src=geonames
lin chichester_PN = mkPN "Chichester" ; -- status=guess src=geonames
lin chichi_N = mkN "chic" ; -- UWN
lin chick_N = mkN "oisillon" masculine | mkN "poussin" masculine | mkN "nana" feminine ; -- tocheck
lin chickadee_N = mkN "mésange" feminine ; -- tocheck
lin chicken_A = mkA "jaune" | mkA "poltron" | mkA "poulet" ; -- UWN
lin chicken_N = mkN "poulet" masculine ; -- tocheck
lin chickenfeed_N = mkN "petite_monnaie" | mkN "small_change" ; -- UWN
lin chickenpox_N = mkN "varicelle" feminine ; -- tocheck
lin chickweed_N = mkN "mouron_blanc" ; -- UWN
lin chicle_N = mkN "chicle" ; -- UWN
lin chicory_N = mkN "chicorée" feminine ; -- tocheck
lin chide_V2 = mkV2 (mkV "réprimander") ; -- tocheck
lin chief_A = variants {} ; --
lin chief_N = variants {} ; --
lin chieftainFem_N = variants {} ; ---- sense to be split
lin chieftainMasc_N = variants {} ; ---- sense to be split
lin chignon_N = mkN "chignon" masculine ; -- tocheck
lin chilblain_N = mkN "engelure" feminine ; -- tocheck
lin child_N = L.child_N ;
lin childbirth_N = mkN "accouchement" ; -- tocheck
lin childcare_N = mkN "Protection_de_l'enfance" | mkN "garde_d'enfants" | mkN "protection_de_l'enfance" ; -- UWN
lin childhood_N = mkN "enfance" feminine ; -- tocheck
lin childish_A = mkA "enfantin" ; -- tocheck
lin childishness_N = mkN "enfantillage" masculine ; -- tocheck
lin chile_PN = mkPN "Chili" ; -- status=guess src=geonames
lin chileanFem_N = variants {} ; ---- sense to be split
lin chileanMasc_N = variants {} ; ---- sense to be split
lin chili_N = mkN "piment" masculine | mkN "chili" | mkN "piment" ; -- UWN
lin chill_N = mkN "frisson" masculine | mkN "froid" masculine ; -- tocheck
lin chill_V2 = mkV2 (reflV (mkV "relaxer")) ; -- tocheck
lin chilliness_N = mkN "frigidité" | mkN "froid" | mkN "froideur" ; -- UWN
lin chilly_A = mkA "froid" ; -- tocheck
lin chime_N = mkN "carillon" masculine ; -- tocheck
lin chime_V2 = mkV2 (mkV "carillonner") ; -- tocheck
lin chimera_N = mkN "chimère" feminine ; -- tocheck
lin chimeric_A = mkA "chimérique" ; -- UWN
lin chimney_N = mkN "cheminée" feminine ; -- tocheck
lin chimney_sweep_N = mkN "balayer" ; -- UWN
lin chimneysweeper_N = mkN "balayer" ; -- UWN
lin chimpanzee_N = mkN "chimpanzé" masculine ; -- tocheck
lin chin_N = mkN "menton" masculine ; -- tocheck
lin china_N = mkN "porcelaine" ; -- tocheck
lin china_PN = mkPN "Chine" ;
lin chinaware_N = mkN "porcelaine" ; -- UWN
lin chinchilla_N = mkN "chinchilla" | mkN "chinchilla" masculine ; -- tocheck
lin chineseFem_N = mkN "chinoise" ;
lin chineseMasc_N = mkN "chinois" ;
lin chinese_A = mkA "chinois" ;
lin chinoiserie_N = mkN "chinoiserie" ; -- UWN
lin chintz_N = mkN "chintz" masculine ; -- tocheck
lin chip_N = mkN "micropuce" feminine | mkN "frite" | mkN "chips" feminine | mkN "brisure" feminine ; -- tocheck
lin chip_V2 = mkV2 (mkV "briser") | mkV2 (mkV "cocher") ; -- tocheck
lin chipboard_N = mkN "aggloméré" masculine ; -- tocheck
lin chipmunk_N = mkN "suisse" | mkN "tamia" | mkN "tamias" ; -- UWN
lin chipolata_N = mkN "chipolata" feminine ; -- tocheck
lin chippenham_PN = mkPN "Chippenham" ; -- status=guess src=geonames
lin chiropodist_N = mkN "podologie" | mkN "podologue" ; -- UWN
lin chiropody_N = mkN "podologie" ; -- UWN
lin chiropractic_N = mkN "chiropractie" | mkN "chiropratique" | mkN "chiropraxie" ; -- UWN
lin chiropractor_N = mkN "chiropraticien" masculine ; -- tocheck
lin chirp_N = mkN "pépiement" masculine ; -- tocheck
lin chirp_V2 = mkV2 (mkV "gazouiller") ; -- tocheck
lin chirpy_A = mkA "actif" | mkA "gai" | mkA "hardi" | mkA "joyeux" | mkA "vif" ; -- UWN
lin chisel_N = mkN "ciseau" masculine ; -- tocheck
lin chisel_V2 = mkV2 (mkV "ciseler") ; -- tocheck
lin chiseller_N = mkN "arnaqueur" ; -- UWN
lin chit_N = mkN "addition" | mkN "cavalier" ; -- UWN
lin chit_chat_N = mkN "bavardage" masculine ; -- tocheck
lin chitin_N = mkN "chitine" feminine ; -- tocheck
lin chiton_N = mkN "chiton" masculine ; -- tocheck
lin chitterlings_N = mkN "tripes" ; -- tocheck
lin chivalric_A = mkA "médiéval" ; -- UWN
lin chivalrous_A = mkA "chevaleresque" | mkA "galant" ; -- tocheck
lin chivalry_N = mkN "galanterie" feminine | mkN "chevalerie" feminine ; -- tocheck
lin chive_N = mkN "ciboulette" | mkN "ciboulette" feminine ; -- tocheck
lin chlamydia_N = mkN "chlamydia" feminine ; -- tocheck
lin chlamys_N = mkN "chlamyde" feminine ; -- tocheck
lin chloasma_N = mkN "chleuasme" | mkN "chloasma" | mkN "masque_de_grossesse" | mkN "melasma" ; -- UWN
lin chlorate_N = mkN "chlorate" masculine ; -- tocheck
lin chlorella_N = mkN "chlorella" ; -- UWN
lin chlorhexidine_N = mkN "chlorhexidine" ; -- UWN
lin chloride_N = mkN "chlorure" masculine ; -- tocheck
lin chlorinate_V2 = mkV2 (mkV "chlorer") ; -- tocheck
lin chlorine_N = mkN "chlore" masculine ; -- tocheck
lin chlorite_N = mkN "chlorite" masculine ; -- tocheck
lin chlorobenzene_N = mkN "chlorobenzène" ; -- UWN
lin chlorofluorocarbon_N = mkN "chlorofluorocarbure" masculine ; -- tocheck
lin chloroform_N = mkN "chloroforme" masculine ; -- tocheck
lin chlorophyll_N = mkN "chlorophylle" feminine ; -- tocheck
lin chloroplast_N = mkN "chloroplaste" masculine ; -- tocheck
lin chloroquine_N = mkN "chloroquine" ; -- UWN
lin chlorosis_N = mkN "chlorose" feminine ; -- tocheck
lin chlorotic_A = mkA "chlorotique" ; -- tocheck
lin choanocyte_N = mkN "choanocyte" ; -- UWN
lin chock_N = mkN "coinceur" masculine ; -- tocheck
lin chocolate_N = mkN "chocolat" masculine ; -- tocheck
lin choice_A = mkA "choix" | mkA "excellent" | mkA "premier" | mkA "qualité" | mkA "sélectionner" ; -- UWN
lin choice_N = mkN "choix" masculine ; -- tocheck
lin choir_N = mkN "choeur" masculine ; -- tocheck
lin choke_N = mkN "réduit" | mkN "starter" masculine | mkN "mainmise" ; -- tocheck
lin choke_V = variants {} ; -- mkV2 (mkV "étouffer") | mkV2 (mkV "suffoquer") ; -- tocheck
lin choke_V2 = mkV2 (mkV "étouffer") | mkV2 (mkV "suffoquer") ; -- tocheck
lin choke_up_V = mkV "boucher" | mkV "fermer" | mkV "fréquenter" ; -- UWN
lin choker_N = mkN "ras-de-cou" masculine ; -- tocheck
lin choking_N = mkN "strangulation" | mkN "étranglement" ; -- UWN
lin choler_N = mkN "bile_jaune" ; -- UWN
lin cholera_N = mkN "choléra" masculine ; -- tocheck
lin choleraic_A = mkA "cholérique" ; -- tocheck
lin cholesterol_N = mkN "cholestérol" masculine ; -- tocheck
lin choline_N = mkN "choline" feminine ; -- tocheck
lin chondrite_N = mkN "Chondrite" | mkN "chondrite" ; -- UWN
lin chondrule_N = mkN "Chondrite" | mkN "chondrite" ; -- UWN
lin choose_V2 = mkV2 (mkV "choisir") | mkV2 (mkV "sélectionner") | mkV2 (mkV I.élire_V2) ;
lin choose_VV = deVV (mkV "choisir") ;
lin choose_up_V = advV (lin V OP_choose_V2) OP_up_Adv ; -- guess-p-verb
lin choose_up_V2 = prepV2 (lin V OP_choose_V2) OP_up_Prep ; -- guess-p-verb
lin chop_N = mkN "atemi" masculine | mkN "égalité" feminine | mkN "côtelette" feminine ; -- tocheck
lin chop_V = variants {} ; -- mkV2 (mkV "hacher") ; -- tocheck
lin chop_V2 = mkV2 (mkV "hacher") ; -- tocheck
lin chopine_N = mkN "plate-forme" ; -- UWN
lin chopper_N = mkN "banane" feminine | mkN "hachoir" masculine | mkN "zob" masculine ; -- tocheck
lin choppy_A = mkA "haché" ; -- tocheck
lin chopstick_N = mkN "baguette" feminine ; -- tocheck
lin choragus_N = mkN "choragus" ; -- UWN
lin chorale_N = mkN "choral" | mkN "chorale" ; -- UWN
lin chord_N = mkN "accord" | mkN "corde" feminine ; -- tocheck
lin chordate_N = mkN "cordés" ; -- UWN
lin chore_N = mkN "corvée" feminine ; -- tocheck
lin choreographer_N = mkN "chorégraphe" ; -- tocheck
lin choreography_N = mkN "chorégraphie" feminine ; -- tocheck
lin chorion_N = mkN "chorion" masculine ; -- tocheck
lin chorister_N = mkN "choeureur" masculine ; -- tocheck
lin chorley_PN = mkPN "Chorley" ; -- status=guess src=geonames
lin chortle_N = mkN "gloussement" masculine ; -- tocheck
lin chortle_V = mkV (mkV "glousser") ; -- tocheck
lin chorus_N = mkN "choeur" masculine | mkN "refrain" masculine ; -- tocheck
lin chosen_A = variants {} ; --
lin chough_N = mkN "crave_à_bec_rouge" | mkN "pyrrhocorax" ; -- UWN
lin chow_N = mkN "chow-chow" ; -- UWN
lin chowder_N = mkN "chaudrée" ; -- UWN
lin chrism_N = mkN "chrême" masculine ; -- tocheck
lin christchurch_PN = mkPN "Christchurch" ; -- status=guess src=geonames
lin christen_V2 = mkV2 (mkV "baptiser") ; -- tocheck
lin christening_N = mkN "baptême" ; -- UWN
lin christian_A = mkA "chrétien" ; -- UWN
lin christmas_PN = mkPN "Christmas" ; -- status=guess src=geonames
lin christopher_PN = mkPN "Christopher" ; -- status=guess src=geonames
lin chromatic_A = mkA "chromatique" ; -- tocheck
lin chromatid_N = mkN "Chromatide" | mkN "chromatide" ; -- UWN
lin chromatin_N = mkN "chromatine" ; -- UWN
lin chromatographic_A = mkA "chromatographique" ; -- UWN
lin chromatography_N = mkN "chromatographie" ; -- UWN
lin chrome_N = mkN "chrome" ; -- UWN
lin chromite_N = mkN "chromite" ; -- UWN
lin chromium_N = mkN "chrome" masculine ; -- tocheck
lin chromophore_N = mkN "chromophore" ; -- UWN
lin chromoplast_N = mkN "chromoplaste" ; -- UWN
lin chromosomal_A = mkA "chromosomique" ; -- tocheck
lin chromosome_N = mkN "chromosome" masculine ; -- tocheck
lin chromosphere_N = mkN "chromosphère" feminine ; -- tocheck
lin chronic_A = mkA "chronique" ; -- tocheck
lin chronicle_N = mkN "chronique" feminine ; -- tocheck
lin chronicler_N = mkN "chroniqueur" masculine ; -- tocheck
lin chronograph_N = mkN "chronographe" masculine ; -- tocheck
lin chronological_A = mkA "chronologique" ; -- tocheck
lin chronology_N = mkN "chronologie" feminine ; -- tocheck
lin chronometer_N = mkN "chronomètre" masculine ; -- tocheck
lin chrysalis_N = mkN "chrysalide" feminine ; -- tocheck
lin chrysanthemum_N = mkN "chrysanthème" masculine ; -- tocheck
lin chrysoberyl_N = mkN "chrysobéryl" masculine ; -- tocheck
lin chrysoprase_N = mkN "chrysoprase" feminine ; -- tocheck
lin chrysotile_N = mkN "chrysotile" ; -- UWN
lin chthonian_A = mkA "chthonien" ; -- tocheck
lin chub_N = mkN "chevesne" masculine ; -- tocheck
lin chubby_A = mkA "dodu" | mkA "potelé" ; -- tocheck
lin chuck_V2 = mkV2 (mkV "vomir") ; -- tocheck
lin chuckle_N = mkN "ricanerie" feminine ; -- tocheck
lin chuckle_V = mkV (mkV "ricaner") | mkV (mkV "glousser") ; -- tocheck
lin chuckle_VS = mkvVS "glousser" ; -- UWN
lin chug_V = mkV (mkV "caler") ; -- tocheck
lin chumminess_N = mkN "camaraderie" ; -- UWN
lin chump_N = mkN "abruti" masculine ; -- tocheck
lin chunk_N = mkN "bloc" masculine | mkN "pièce" feminine ; -- tocheck
lin chunky_A = mkA "courtaud" ; -- tocheck
lin church_N = L.church_N ;
lin churchgoer_N = mkN "pratiquant" masculine ; -- tocheck
lin churchgoing_A = mkA "pratiquant" ; -- tocheck
lin churchman_N = mkN "abbé" | mkN "divin" | mkN "ecclésiastique" ; -- UWN
lin churchwarden_N = mkN "marguillier" ; -- tocheck
lin churl_N = mkN "rustre" masculine ; -- tocheck
lin churn_N = mkN "baratte" feminine ; -- tocheck
lin churn_V2 = mkV2 (mkV "baratter") ; -- tocheck
lin chute_N = mkN "toboggan" masculine ; -- tocheck
lin chutney_N = mkN "chutney" ; -- tocheck
lin chyle_N = mkN "chyle" ; -- UWN
lin chylomicron_N = mkN "Chylomicron" | mkN "chylomicron" | mkN "chylomicrons" ; -- UWN
lin chyme_N = mkN "chyme" masculine ; -- tocheck
lin cicada_N = mkN "cigale" feminine ; -- tocheck
lin cicatrice_N = mkN "balafre" | mkN "cicatrice" ; -- UWN
lin cicatrix_N = mkN "balafre" | mkN "cicatrice" ; -- UWN
lin cicerone_N = mkN "cicérone" masculine ; -- tocheck
lin cichlid_N = mkN "Cichlidae" | mkN "cichlidae" | mkN "cichlidé" ; -- UWN
lin cider_N = mkN "cidre" masculine ; -- tocheck
lin cigar_N = mkN "cigare" masculine ; -- tocheck
lin cigarette_N = mkN "cigarette" feminine ; -- tocheck
lin cigarillo_N = mkN "cigarillo" masculine ; -- tocheck
lin ciliate_N = mkN "cilié" ; -- UWN
lin cinchona_N = mkN "quinquina" masculine ; -- tocheck
lin cincinnati_PN = mkPN "Cincinnati" ; -- status=guess src=geonames
lin cinder_N = mkN "cendre" | mkN "cendre" feminine ; -- tocheck
lin cinderford_PN = mkPN "Cinderford" ; -- status=guess src=geonames
lin cinema_N = mkN "cinéma" masculine | mkN "film" masculine ; -- tocheck
lin cinematography_N = mkN "cinématographie" feminine ; -- tocheck
lin cinnabar_N = mkN "cinabre" masculine ; -- tocheck
lin cinnamon_N = mkN "cannelier" masculine | mkN "cannelle" feminine ; -- tocheck
lin cipher_N = mkN "tranche" feminine | mkN "chiffre" ; -- tocheck
lin cipher_V = mkV "calculer" | mkV "compter" | mkV "computer" ; -- UWN
lin circadian_A = mkA "circadien" ; -- tocheck
lin circle_N = mkN "disque" masculine | mkN "cercle" masculine ; -- tocheck
lin circle_V2 = mkV2 (mkV "encercler") | mkV2 (mkV "entourer") | mkV2 (mkV "cercler") ; -- tocheck
lin circuit_N = mkN "circuit" ; -- tocheck
lin circuitous_A = mkA "tortueux" ; -- tocheck
lin circular_A = mkA "rond" ; -- tocheck
lin circular_N = mkN "circulaire" ; -- tocheck
lin circularity_N = mkN "circularité" ; -- UWN
lin circulate_V = variants {} ; -- mkV2 (mkV "circuler") ; -- tocheck
lin circulate_V2 = mkV2 (mkV "circuler") ; -- tocheck
lin circulation_N = mkN "circulation" feminine ; -- tocheck
lin circulative_A = mkA "circulatoire" ; -- UWN
lin circulatory_A = mkA "circulatoire" ; -- tocheck
lin circumcise_V2 = mkV2 (mkV "circoncire") ; -- tocheck
lin circumcision_N = mkN "circoncision" feminine ; -- tocheck
lin circumference_N = mkN "circonférence" feminine ; -- tocheck
lin circumflex_N = mkN "circonflexe" ; -- tocheck
lin circumlocution_N = mkN "périphrase" feminine ; -- tocheck
lin circumlocutious_A = mkA "périphrastique" ; -- UWN
lin circumnavigate_V2 = mkV2 (mkV "circumnaviguer") ; -- tocheck
lin circumnavigation_N = mkN "circumnavigation" feminine ; -- tocheck
lin circumscribe_V2 = mkV2 (mkV I.circonscrire_V2) ; -- tocheck
lin circumspect_A = mkA "circonspect" ; -- tocheck
lin circumspection_N = mkN "circonspection" feminine ; -- tocheck
lin circumstance_N = mkN "circonstance" feminine ; -- tocheck
lin circumvent_V2 = mkV2 (mkV "contourner") | mkV2 (mkV "cerner") ; -- tocheck
lin circumvention_N = mkN "contournement" ; -- UWN
lin circus_N = mkN "cirque" masculine ; -- tocheck
lin cirencester_PN = mkPN "Cirencester" ; -- status=guess src=geonames
lin cirque_N = mkN "cirque" masculine ; -- tocheck
lin cirrhosis_N = mkN "cirrhose" feminine ; -- tocheck
lin cirrocumulus_N = mkN "cirrocumulus" ; -- UWN
lin cirrostratus_N = mkN "cirrostratus" ; -- UWN
lin cirrus_N = mkN "algue" | mkN "cil" ; -- UWN
lin cisalpine_A = mkA "cisalpin" ; -- tocheck
lin cistern_N = mkN "citerne" feminine ; -- tocheck
lin citadel_N = mkN "citadelle" feminine ; -- tocheck
lin cite_V2 = variants {} ; --
lin citizenFem_N = mkN "citoyen" | mkN "citoyenne" ; -- UWN
lin citizenMasc_N = mkN "citoyen" ;
lin citizenship_N = mkN "citoyenneté" feminine ; -- tocheck
lin citrine_N = mkN "citrine" ; -- UWN
lin citron_N = mkN "cédrat" masculine ; -- tocheck
lin citrulline_N = mkN "Citrulline" | mkN "citrulline" ; -- UWN
lin citrus_N = mkN "agrume" masculine ; -- tocheck
lin cittern_N = mkN "cistre" masculine ; -- tocheck
lin city_N = L.city_N ;
lin civet_N = mkN "viverridés" ; -- tocheck
lin civic_A = mkA "civique" ; -- tocheck
lin civics_N = mkN "instruction_civique" ; -- UWN
lin civil_A = mkA "civil" ; -- tocheck
lin civilian_A = mkA "civil" ; -- tocheck
lin civilian_N = mkN "civil" ; -- UWN
lin civility_N = mkN "politesse" feminine ; -- tocheck
lin civilization_N = mkN "civilisation" | mkN "raffinement" ; -- UWN
lin clad_V2 = mkV2 (mkV I.recouvrir_V2) ; -- tocheck
lin clade_N = mkN "clade" ; -- UWN
lin cladogram_N = mkN "cladogramme" ; -- UWN
lin claim_N = mkN "réclamation" feminine | mkN "affirmation" feminine ; -- tocheck
lin claim_V = mkV "revendiquer" ;
lin claim_V2 = mkV2 (mkV "revendiquer") ;
lin claim_VS = mkVS (mkV "affirmer") ;
lin claimant_N = mkN "prétendant" ; -- tocheck
lin clairvoyance_N = mkN "clairvoyance" feminine ; -- tocheck
lin clam_N = mkN "palourde" feminine ; -- tocheck
lin clamant_A = mkA "critique" | mkA "moment" ; -- UWN
lin clamber_V = mkV (mkV "grimper") ; -- tocheck
lin clammy_A = mkA "moite" ; -- tocheck
lin clamor_N = mkN "clameur" masculine ; -- tocheck
lin clamp_N = mkN "attache" ; -- tocheck
lin clan_N = mkN "clan" | mkN "tribu" ; -- UWN
lin clandestine_A = mkA "clandestin" ; -- tocheck
lin clang_N = mkN "choc" | mkN "tinter" ; -- UWN
lin clanger_N = mkN "couac" masculine ; -- tocheck
lin clangour_N = mkN "choc" | mkN "tinter" ; -- UWN
lin clank_N = mkN "choc" | mkN "tinter" ; -- UWN
lin clannishness_N = mkN "clanisme" ; -- UWN
lin clap_N = mkN "chtouille" feminine ; -- tocheck
lin clap_V2 = mkV2 (mkV "applaudir") ; -- tocheck
lin clapperboard_N = mkN "clap" masculine ; -- tocheck
lin claptrap_N = mkN "verbiage" ; -- tocheck
lin clare_PN = mkPN "Clare" ; -- status=guess src=geonames
lin claret_N = mkN "bordeaux-clairet" masculine ; -- tocheck
lin clarification_N = mkN "clarification" feminine ; -- tocheck
lin clarify_V = mkV "clarifier" | mkV "expliquer" | mkV "préciser" | mkV "éclaircir" ; -- UWN
lin clarify_V2 = variants {} ; --
lin clarinet_N = mkN "clarinette" feminine ; -- tocheck
lin clarinetistFem_N = mkN "clarinettiste" feminine ; -- tocheck
lin clarinetistMasc_N = mkN "clarinettiste" masculine ; -- tocheck
lin clarity_N = mkN "clarté" feminine ; -- tocheck
lin clarkston_PN = mkPN "Clarkston" ; -- status=guess src=geonames
lin clash_N = mkN "fracas" | mkN "échauffourée" feminine ; -- tocheck
lin clash_V2 = mkV2 (reflV (mkV "affronter")) ; -- tocheck
lin clasp_N = mkN "fermoir" masculine ; -- tocheck
lin clasp_V2 = mkV2 (mkV "serrer") ; -- tocheck
lin class_N = mkN "classe" feminine | mkN "cours" masculine ; --- split -- | upper class -- | history class
lin classic_A = mkA "classique" ; -- tocheck
lin classic_N = mkN "classique" masculine ; -- tocheck
lin classical_A = mkA "classique" ; -- tocheck
lin classicism_N = mkN "classicisme" ; -- UWN
lin classics_N = mkN "littérature_antique" ; -- UWN
lin classification_N = mkN "classification" feminine ; -- tocheck
lin classifier_N = mkN "classificateur" masculine ; -- tocheck
lin classify_V2 = mkV2 (mkV "classifier") ; -- tocheck
lin classless_A = mkA "égalitaire" | mkA "égalitariste" ; -- UWN
lin classmate_N = mkN "camarade" ; -- tocheck
lin classroom_N = variants {} ; --
lin classy_A = mkA "chic" ; -- tocheck
lin claude_PN = mkPN "Claude" ; -- status=guess src=geonames
lin clause_N = mkN "clause" | mkN "proposition" ; -- UWN
lin claustrophobe_N = mkN "claustrophobe" ; -- tocheck
lin claustrophobia_N = mkN "claustrophobie" feminine ; -- tocheck
lin claustrophobic_A = mkA "claustrophobe" ; -- tocheck
lin claustrum_N = mkN "claustrum" ; -- UWN
lin clavichord_N = mkN "clavicorde" ; -- tocheck
lin clavicle_N = mkN "clavicule" feminine ; -- tocheck
lin claw_N = mkN "griffe" | mkN "pied-de-biche" | mkN "pince" ; -- tocheck
lin claw_V2 = mkV2 (mkV "griffer") | mkV2 (reflV (mkV "agripper")) ; -- tocheck
lin clay_N = mkN "argile" masculine ; -- tocheck
lin claystone_N = mkN "argilite" ; -- tocheck
lin clean_A = L.clean_A ;
lin clean_Adv = mkAdv "nettoyer" | mkAdv "prune" | mkAdv "prunier" ; -- UWN
lin clean_N = mkN "nettoyer" | mkN "propre" | mkN "pur" | mkN "épaulé-jeté" ; -- UWN
lin clean_V = variants {} ; -- mkV2 (mkV "nettoyer") | mkV2 (mkV "ranger") ; -- tocheck
lin clean_V2 = mkV2 (mkV "nettoyer") | mkV2 (mkV "ranger") ; -- tocheck
lin clean_out_V = advV OP_clean_V OP_out_Adv ; -- guess-p-verb
lin clean_out_V2 = prepV2 OP_clean_V OP_out_Prep ; -- guess-p-verb
lin clean_up_V = mkV "nettoyer" ; -- UWN
lin clean_up_V2 = prepV2 OP_clean_V OP_up_Prep ; -- guess-p-verb
lin cleaner_N = mkN "nettoyant" masculine | mkN "nettoyeur" masculine | mkN "pressing" masculine ; -- tocheck
lin cleaning_N = mkN "lavage" | mkN "nettoyage" ; -- UWN
lin cleanliness_N = mkN "propreté" ; -- tocheck
lin clean_up_N = mkN "nettoyage" masculine ; -- tocheck
lin clear_A = mkA "clair" | mkA "libre" | mkA "dégagé" ;
lin clear_Adv = mkAdv "clairement" ; -- UWN
lin clear_V = variants {} ; -- mkV2V (mkV "débarrasser") | mkV2V (reflV (mkV "éclaircir")) | mkV2V (mkV "clarifier") ; -- tocheck
lin clear_V2 = variants {} ; -- mkV2V (mkV "débarrasser") | mkV2V (reflV (mkV "éclaircir")) | mkV2V (mkV "clarifier") ; -- tocheck
lin clear_away_V = advV OP_clear_V OP_away_Adv ; -- guess-p-verb
lin clear_away_V2 = mkV2 (advV OP_clear_V OP_away_Adv ) ; -- guess-p-verb
lin clear_off_V = advV OP_clear_V OP_off_Adv ; -- guess-p-verb
lin clear_out_V = advV OP_clear_V OP_out_Adv ; -- guess-p-verb
lin clear_out_V2 = prepV2 OP_clear_V OP_out_Prep ; -- guess-p-verb
lin clear_up_V = advV OP_clear_V OP_up_Adv ; -- guess-p-verb
lin clear_up_V2 = prepV2 OP_clear_V OP_up_Prep ; -- guess-p-verb
lin clearance_N = mkN "braderie" feminine ; -- tocheck
lin clearing_N = mkN "clairière" ; -- tocheck
lin cleat_N = mkN "crampon" masculine ; -- tocheck
lin cleats_N = mkN "crampons" ; -- tocheck
lin cleavable_A = mkA "scindable" ; -- tocheck
lin cleavage_N = mkN "division" feminine | mkN "clivage" masculine | mkN "décolleté" masculine ; -- tocheck
lin cleave_V = mkV "adhérer" | mkV "coller" ; -- UWN
lin cleaver_N = mkN "fendoir" masculine ; -- tocheck
lin cleethorpes_PN = mkPN "Cleethorpes" ; -- status=guess src=geonames
lin clef_N = mkN "clé" feminine ; -- tocheck
lin cleft_N = mkN "fissure" feminine ; -- tocheck
lin clemency_N = mkN "compassion" | mkN "clémence" feminine ; -- tocheck
lin clementine_N = mkN "clémentine" feminine ; -- tocheck
lin clench_V2 = mkV2 (mkV "serrer") ; -- tocheck
lin clerestory_N = mkN "clair-étage" masculine ; -- tocheck
lin clergy_N = mkN "clergé" masculine ; -- tocheck
lin clergyman_N = mkN "prêtre" masculine ; -- tocheck
lin cleric_N = mkN "prêtre" masculine ; -- tocheck
lin clerical_A = mkA "clérical" ; -- tocheck
lin clerk_N = mkN "greffier" masculine ; -- tocheck
lin clerk_V = mkV "greffier" ; -- UWN
lin clevedon_PN = mkPN "Clevedon" ; -- status=guess src=geonames
lin cleveland_PN = mkPN "Cleveland" ; -- status=guess src=geonames
lin clever_A = L.clever_A ;
lin cleverness_N = mkN "ingéniosité" ; -- UWN
lin clevis_N = mkN "chape" ; -- tocheck
lin clew_N = mkN "indice" | mkN "preuve" ; -- UWN
lin click_N = mkN "clic" masculine | mkN "déclic" masculine ; -- tocheck
lin click_V = mkV (mkV "cliquer") ; -- tocheck
lin client_N = mkN "client" masculine ; -- tocheck
lin clientele_N = mkN "clientèle" feminine ; -- tocheck
lin cliff_N = mkN "falaise" feminine ; -- tocheck
lin clifford_PN = mkPN "Clifford" ; -- status=guess src=geonames
lin climacteric_N = mkN "ménopause" ; -- UWN
lin climate_N = mkN "climat" masculine ; -- tocheck
lin climatic_A = mkA "climatique" ; -- tocheck
lin climatologist_N = mkN "climatologue" ; -- tocheck
lin climatology_N = mkN "climatologie" feminine ; -- tocheck
lin climax_N = mkN "apogée" feminine | mkN "jouissance" ; -- tocheck
lin climb_N = mkN "gravir" ; -- UWN
lin climb_V = variants {} ; -- mkV2 (mkV "grimper") | mkV2 (mkV "escalader") ; -- tocheck
lin climb_V2 = mkV2 (mkV "grimper") | mkV2 (mkV "escalader") ; -- tocheck
lin climb_down_V = mkV "descendre" | mkV "donner" ; -- UWN
lin climber_N = mkN "grimpeur" masculine ; -- tocheck
lin clime_N = mkN "climat" | mkN "convention-cadre" ; -- UWN
lin cling_V = mkV (mkV "accrocher") ; -- tocheck
lin clinic_N = mkN "clinique" feminine ; -- tocheck
lin clinical_A = variants {} ; --
lin clip_N = mkN "extrait" masculine ; -- tocheck
lin clipboard_N = mkN "presse-papiers" masculine ; -- tocheck
lin clipper_N = mkN "clipperi" masculine ; -- tocheck
lin clipping_N = mkN "Transform" ; -- UWN
lin clique_N = mkN "clique" feminine ; -- tocheck
lin clitheroe_PN = mkPN "Clitheroe" ; -- status=guess src=geonames
lin clitoral_A = mkA "clitoridien" ; -- tocheck
lin clitoris_N = mkN "clitoris" masculine ; -- tocheck
lin clive_PN = mkPN "Clive" ; -- status=guess src=geonames
lin cloaca_N = mkN "cloaque" masculine ; -- tocheck
lin cloak_N = mkN "pelisse" feminine ; -- tocheck
lin cloakmaker_N = mkN "fourreur" | mkN "pelletier" ; -- UWN
lin cloakroom_N = mkN "consigne" feminine ; -- tocheck
lin clobber_V2 = mkV2 (mkV "écraser") | mkV2 (mkV "tabasser") ; -- tocheck
lin cloche_N = mkN "cloche" feminine ; -- tocheck
lin clock_N = mkN "horloge" feminine ; -- tocheck
lin clockwork_N = mkN "rouage" ; -- tocheck
lin clod_N = mkN "motte" feminine ; -- tocheck
lin clog_N = mkN "bouchon" masculine | mkN "sabot" masculine ; -- tocheck
lin cloggy_A = mkA "lourd" ; -- UWN
lin cloister_N = mkN "cloître" masculine | mkN "cloître" ; -- tocheck
lin clone_N = mkN "clone" masculine ; -- tocheck
lin clone_V2 = mkV2 (mkV "cloner") ; -- tocheck
lin cloning_N = mkN "clonage" ; -- UWN
lin close_A = mkA "proche" ; -- tocheck
lin close_Adv = variants {} ; --
lin close_N = mkN "fin" feminine | mkN "cul-de-sac" masculine ; -- tocheck
lin close_V = variants {} ; -- L.close_V2 ;
lin close_V2 = L.close_V2 ;
lin close_down_V = advV OP_close_V OP_down_Adv ; -- guess-p-verb
lin close_down_V2 = prepV2 OP_close_V OP_down_Prep ; -- guess-p-verb
lin close_in_V = mkV "entourer" ; -- UWN
lin close_in_on_V2 = prepV2 (advV OP_close_V OP_in_Adv ) OP_on_Prep ; -- guess-p-verb
lin close_in_upon_V2 = prepV2 (advV OP_close_V OP_in_Adv ) OP_upon_Prep ; -- guess-p-verb
lin close_off_V2 = prepV2 OP_close_V OP_off_Prep ; -- guess-p-verb
lin close_on_V2 = prepV2 OP_close_V OP_on_Prep ; -- guess-p-verb
lin close_out_V2 = prepV2 OP_close_V OP_out_Prep ; -- guess-p-verb
lin close_up_V = advV OP_close_V OP_up_Adv ; -- guess-p-verb
lin close_up_V2 = prepV2 OP_close_V OP_up_Prep ; -- guess-p-verb
lin closed_A = variants {} ; --
lin closer_N = mkN "stoppeur" masculine ; -- tocheck
lin closet_N = mkN "placard" masculine ; -- tocheck
lin closing_N = mkN "clôture" masculine ; -- tocheck
lin clostridium_N = mkN "clostridia" | mkN "clostridium" ; -- UWN
lin closure_N = mkN "fermeture" ; -- tocheck
lin clot_N = mkN "imbecile" masculine | mkN "caillot" masculine ; -- tocheck
lin clot_V2 = mkV2 (mkV "coaguler") ; -- tocheck
lin cloth_N = mkN "tenue" feminine | mkN "tissu" masculine ; -- tocheck
lin clothes_N = variants {} ; --
lin clotheshorse_N = mkN "étendoir" masculine ; -- tocheck
lin clothes_pin_N = mkN "pince_à_linge" | mkN "épingle_à_linge" ; -- UWN
lin clothing_N = mkN "vêtements" ; -- tocheck
lin cloud_N = L.cloud_N ;
lin cloud_cuckoo_land_N = mkN "Coucouville-les-Nuées" ; -- tocheck
lin cloudburst_N = mkN "averse" feminine ; -- tocheck
lin cloudy_A = mkA "nuageux" | mkA "trouble" | mkA "brumeux" ; -- tocheck
lin clout_N = mkN "coup" ; -- UWN
lin clove_N = mkN "gousse" ; -- tocheck
lin clove_hitch_N = mkN "amarre" | mkN "nœud_de_cabestan" ; -- UWN
lin clover_N = mkN "trèfle" masculine ; -- tocheck
lin clown_N = mkN "clown" masculine | mkN "bouffon" masculine ; -- tocheck
lin clowne_PN = mkPN "Clowne" ; -- status=guess src=geonames
lin clownish_A = mkA "clownesque" ; -- UWN
lin club_1_N = mkN "club" masculine ;
lin club_2_N = mkN "bâton" masculine ;
lin club_N = mkN "club" masculine | mkN "club" | mkN "bâton" masculine | mkN "boîte" feminine | mkN "trèfle" masculine ; -- tocheck
lin club_V2 = mkV2 (mkV "bâtonner") ; -- tocheck
lin clubfoot_N = mkN "pied-bot" | mkN "pied_bot" ; -- UWN
lin clubhouse_N = mkN "club" ; -- UWN
lin cluck_N = mkN "gloussement" ; -- tocheck
lin cluck_V = mkV (mkV "glousser") ; -- tocheck
lin clue_N = mkN "indice" feminine | mkN "preuve" feminine ; -- tocheck
lin clump_N = mkN "touffe" feminine ; -- tocheck
lin clumsiness_N = mkN "maladresse" feminine ; -- tocheck
lin clumsy_A = mkA "gauche" ; -- tocheck
lin clusia_N = mkN "clusia" ; -- UWN
lin cluster_N = mkN "groupe" ; -- tocheck
lin clutch_N = mkN "embrayage" | mkN "nichée" feminine ; -- tocheck
lin clutch_V = variants {} ; -- mkV2 (mkV "agripper") ; -- tocheck
lin clutch_V2 = mkV2 (mkV "agripper") ; -- tocheck
lin clutter_N = mkN "bric-à-brac" masculine ; -- tocheck
lin clydach_PN = mkPN "Clydach" ; -- status=guess src=geonames
lin clydebank_PN = mkPN "Clydebank" ; -- status=guess src=geonames
lin co_ed_N = mkN "étudiante" feminine ; -- tocheck
lin coach_1_N = variants {} ; --
lin coach_2_N = variants {} ; --
lin coach_3_N = variants {} ; --
lin coach_N = mkN "coche" masculine | mkN "voiture" feminine | mkN "entraîneur" masculine ; -- tocheck
lin coach_V = mkV "entraîner" | mkV "exercer" | mkV "former" ; -- UWN
lin coach_V2 = mkV2 (mkV "entraîner") ; -- tocheck
lin coaching_N = mkN "coaching" | mkN "exercice" | mkN "mentorat" ; -- UWN
lin coachman_N = mkN "cocher" masculine ; -- tocheck
lin coadjutor_N = mkN "coadjuteur" masculine ; -- tocheck
lin coagulase_N = mkN "coagulase" ; -- UWN
lin coagulate_V2 = mkV2 (mkV "coaguler") ; -- tocheck
lin coagulation_N = mkN "Coagulation_sanguine" | mkN "coagulation" | mkN "coagulation_sanguine" ; -- UWN
lin coal_N = mkN "charbon" masculine | mkN "charbon" ; -- tocheck
lin coalesce_V = mkV (reflV (mkV I.fondre_V2)) | mkV (reflV (mkV "réunir")) ; -- tocheck
lin coalition_N = mkN "coalition" feminine ; -- tocheck
lin coalville_PN = mkPN "Coalville" ; -- status=guess src=geonames
lin coaming_N = mkN "hiloire" ; -- UWN
lin coarse_A = mkA "brut" | mkA "vulgaire" ; -- tocheck
lin coarseness_N = mkN "vulgarité" ; -- UWN
lin coast_N = mkN "côte" feminine ; -- tocheck
lin coast_V2 = mkV2 (mkV "caboter") ; -- tocheck
lin coastal_A = variants {} ; --
lin coaster_N = mkN "caboteur" | mkN "sous-verre" masculine ; -- tocheck
lin coastguard_N = mkN "garde-côte" ; -- tocheck
lin coastline_N = mkN "rive" feminine ; -- tocheck
lin coat_N = L.coat_N ;
lin coat_V2 = mkV2 (mkV I.couvrir_V2) ; -- tocheck
lin coatbridge_PN = mkPN "Coatbridge" ; -- status=guess src=geonames
lin coating_N = mkN "couche" feminine ; -- tocheck
lin coatrack_N = mkN "portemanteau" ; -- UWN
lin coauthorFem_N = mkN "coauteur" feminine ; -- tocheck
lin coauthorMasc_N = mkN "coauteur" masculine ; -- tocheck
lin coax_V = mkV "amadouer" ; -- UWN
lin coax_V2 = mkV2 (mkV "cajoler") ; -- tocheck
lin coaxial_A = mkA "coaxial" ; -- tocheck
lin cob_N = mkN "torchis" masculine ; -- tocheck
lin cobalt_N = mkN "cobalt" masculine ; -- tocheck
lin cobaltite_N = mkN "cobaltite" ; -- UWN
lin cobbler_N = mkN "cordonnier" masculine ; -- tocheck
lin cobblestone_N = mkN "pavé" ; -- tocheck
lin cobham_PN = mkPN "Cobham" ; -- status=guess src=geonames
lin cob_nut_N = mkN "aveline" | mkN "noisette" ; -- UWN
lin cobra_N = mkN "naja" ; -- tocheck
lin coca_N = mkN "coca" ; -- tocheck
lin cocaine_N = mkN "cocaïne" feminine ; -- tocheck
lin cocarboxylase_N = mkN "thiamine_pyrophosphate" ; -- UWN
lin coccidiosis_N = mkN "coccidiose" ; -- UWN
lin coccus_N = mkN "cocci" | mkN "coccus" | mkN "cochenille" ; -- UWN
lin coccygeal_A = mkA "coccygien" ; -- tocheck
lin coccyx_N = mkN "coccyx" masculine ; -- tocheck
lin cochineal_N = mkN "cochenille" feminine ; -- tocheck
lin cochlea_N = mkN "cochlée" feminine ; -- tocheck
lin cochlear_A = mkA "cochléaire" ; -- tocheck
lin cock_N = mkN "mâle" masculine | mkN "coq" masculine | mkN "bite" feminine ; -- tocheck
lin cock_V2 = mkV2 (mkV "baiser") ; -- tocheck
lin cockade_N = mkN "cocarde" feminine ; -- tocheck
lin cockatoo_N = mkN "cacatoès" masculine ; -- tocheck
lin cockatrice_N = mkN "cocatrix" feminine ; -- tocheck
lin cockchafer_N = mkN "hanneton" masculine ; -- tocheck
lin cockerel_N = mkN "coquelet" masculine ; -- tocheck
lin cockermouth_PN = mkPN "Cockermouth" ; -- status=guess src=geonames
lin cockeyed_A = mkA "bourré" | mkA "empégué" | mkA "gris" | mkA "grise" | mkA "mouillé" | mkA "pompette" | mkA "rigide" | mkA "schlass" | mkA "trempé" | mkA "émeché" | mkA "éméché" | mkA "éméchée" ; -- UWN
lin cockfight_N = mkN "combat_de_coq" | mkN "combat_de_coqs" ; -- UWN
lin cocklebur_N = mkN "xanthium" masculine ; -- tocheck
lin cockroach_N = mkN "cafard" masculine ; -- tocheck
lin cockscomb_N = mkN "crête" ; -- UWN
lin cocktail_N = mkN "cocktail" masculine ; -- tocheck
lin cocky_A = mkA "suffisant" ; -- tocheck
lin cocoa_N = mkN "cacao" masculine ; -- tocheck
lin coconut_N = mkN "cocotier" | mkN "noix_de_coco" ; -- UWN
lin cocoon_N = mkN "cocon" masculine ; -- tocheck
lin cocooning_N = mkN "cocooning" ; -- UWN
lin cod_N = mkN "morue" feminine ; -- tocheck
lin cod_liver_oil_N = mkN "huile_de_foie_de_morue" ; -- UWN
lin coda_N = mkN "coda" | mkN "finale" ; -- UWN
lin coddle_V2 = mkV2 (mkV "choyer") ; -- tocheck
lin code_N = mkN "code" masculine ; -- tocheck
lin code_V2 = variants {} ; --
lin codeine_N = mkN "codéine" feminine ; -- tocheck
lin codex_N = mkN "codex" ; -- UWN
lin codger_N = mkN "grognon" masculine ; -- tocheck
lin codicil_N = mkN "codicille" masculine ; -- tocheck
lin codification_N = mkN "codification" feminine ; -- tocheck
lin codify_V2 = mkV2 (mkV "codifier") ; -- tocheck
lin codon_N = mkN "codon" masculine ; -- tocheck
lin codpiece_N = mkN "Braguette" | mkN "braguette" ; -- UWN
lin codsall_PN = mkPN "Codsall" ; -- status=guess src=geonames
lin coeducation_N = mkN "mixité" | mkN "mixte" ; -- UWN
lin coefficient_N = mkN "coefficient" masculine ; -- tocheck
lin coelacanth_N = mkN "coelacanthe" masculine ; -- tocheck
lin coeliac_A = mkA "coeliaque" ; -- tocheck
lin coelophysis_N = mkN "coelophysis" | mkN "cœlophysis" ; -- UWN
lin coenzyme_N = mkN "Coenzyme" | mkN "coenzyme" ; -- UWN
lin coerce_V2 = mkV2 (mkV I.contraindre_V2) | mkV2 (mkV "forcer") ; -- tocheck
lin coercion_N = mkN "coercition" ; -- tocheck
lin coercive_A = mkA "coercitif" ; -- UWN
lin coetaneous_A = mkA "contemporain" ; -- UWN
lin coeval_A = mkA "contemporain" ; -- UWN
lin coeval_N = mkN "contemporain" ; -- UWN
lin co_exist_V = mkV (mkV "coexister") ; -- tocheck
lin coexistence_N = mkN "coexistence" feminine ; -- tocheck
lin coffee_N = mkN "café" masculine | mkN "caféier" masculine ; -- tocheck
lin coffer_N = mkN "caisson" masculine | mkN "coffre" masculine ; -- tocheck
lin coffin_N = mkN "cercueil" masculine ; -- tocheck
lin cog_N = mkN "dent" feminine ; -- tocheck
lin cogent_A = mkA "intelligible" | mkA "irréfutable" | mkA "convaincant" ; -- tocheck
lin cogitate_V2 = mkV2 (mkV "cogiter") ; -- tocheck
lin cogitation_N = mkN "cogitation" feminine ; -- tocheck
lin cognac_N = mkN "cognac" masculine ; -- tocheck
lin cognate_A = mkA "apparenté" ; -- tocheck
lin cognate_N = mkN "cognat" masculine ; -- tocheck
lin cognition_N = mkN "connaissance" feminine ; -- tocheck
lin cognitive_A = mkA "cognitif" ; -- tocheck
lin cognizant_A = mkA "conscient" ; -- tocheck
lin cognomen_N = mkN "nom_de_famille" | mkN "patronyme" ; -- UWN
lin cohabit_V = mkV (mkV "cohabiter") ; -- tocheck
lin cohabitation_N = mkN "cohabitation" feminine ; -- tocheck
lin cohere_V = mkV "adhérer" | mkV "coller" ; -- UWN
lin coherence_N = mkN "cohérence" | mkN "cohérence" feminine ; -- tocheck
lin coherency_N = mkN "cohérence" ; -- UWN
lin coherent_A = mkA "cohérent" ; -- tocheck
lin cohesion_N = mkN "cohésion" ; -- tocheck
lin coif_N = mkN "coiffure" ; -- tocheck
lin coiffure_N = mkN "coiffure" ; -- UWN
lin coil_N = mkN "bobine" feminine | mkN "stérilet" masculine | mkN "spire" feminine ; -- tocheck
lin coil_V2 = mkV2 (mkV "enrouler") ; -- tocheck
lin coimbatore_PN = mkPN "Coimbatore" ; -- status=guess src=geonames
lin coin_N = mkN "jeton" masculine | mkN "monnaie" feminine ; -- tocheck
lin coin_V2 = mkV2 (mkV "inventer") ; -- tocheck
lin coinage_N = mkN "néologisme" ; -- UWN
lin coincide_V = mkV (mkV "coïncider") ; -- tocheck
lin coincidence_N = mkN "coïncidence" feminine ; -- tocheck
lin coincidental_A = variants {} ;
lin coiner_N = mkN "minter" ; -- UWN
lin coinsurance_N = mkN "franchise" feminine ; -- tocheck
lin coir_N = mkN "coir" ; -- UWN
lin coital_A = mkA "coïtal" ; -- UWN
lin coitus_N = mkN "coït" masculine ; -- tocheck
lin coke_N = mkN "charbon" | mkN "coca" masculine | mkN "coke" feminine ; -- tocheck
lin col_N = mkN "col" | mkN "cou" ; -- UWN
lin cola_N = mkN "coca" masculine ; -- tocheck
lin colander_N = mkN "passoire" feminine ; -- tocheck
lin colchester_PN = mkPN "Colchester" ; -- status=guess src=geonames
lin colchicine_N = mkN "colchicine" feminine ; -- tocheck
lin cold_A = L.cold_A ;
lin cold_N = mkN "rhume" masculine | mkN "froid" masculine ; -- tocheck
lin cold_blooded_A = mkA "poïkilotherme" ; -- tocheck
lin coldness_N = mkN "froideur" feminine | mkN "froid" masculine ; -- tocheck
lin coleslaw_N = mkN "coleslaw" masculine ; -- tocheck
lin coleus_N = mkN "coleus" | mkN "coléus" | mkN "vieux_garçon" ; -- UWN
lin colic_N = mkN "colique" feminine ; -- tocheck
lin collaborate_V = mkV (mkV "collaborer") ; -- tocheck
lin collaboration_N = mkN "collaboration" feminine ; -- tocheck
lin collaborationist_N = mkN "collabo" | mkN "collaborateur" | mkN "quisling" ; -- UWN
lin collaborative_A = mkA "collaboratif" ; -- UWN
lin collaborator_N = mkN "collaborateur" ; -- tocheck
lin collage_N = mkN "collage" masculine ; -- tocheck
lin collagen_N = mkN "collagène" ; -- UWN
lin collapsable_A = mkA "pliable" ; -- UWN
lin collapse_N = mkN "effondrement" masculine ; -- tocheck
lin collapse_V = variants {} ; -- mkV2 (reflV (mkV "effondrer")) ; -- tocheck
lin collapse_V2 = mkV2 (reflV (mkV "effondrer")) ; -- tocheck
lin collapsible_A = mkA "pliable" ; -- tocheck
lin collar_N = mkN "collier" masculine | mkN "col" masculine ; -- tocheck
lin collarbone_N = mkN "clavicule" ; -- UWN
lin collateral_A = mkA "collatéral" ; -- tocheck
lin collateral_N = mkN "nantissement" masculine | mkN "collatéral" masculine ; -- tocheck
lin colleague_N = mkN "confrère" ; -- tocheck
lin collect_A = mkA "cabillaud" | mkA "collectionner" | mkA "morue" ; -- UWN
lin collect_V = mkV "collecter" | mkV "rassembler" | mkV "recueillir" ; -- UWN
lin collect_V2 = mkV2 (mkV "rassembler") | mkV2 (mkV "collectionner") | mkV2 (mkV I.percevoir_V2) ; -- tocheck
lin collectedly_Adv = mkAdv "paisiblement" ; -- UWN
lin collectible_A = mkA "analogue" | mkA "manifeste" ; -- UWN
lin collection_N = mkN "collection" | mkN "collection" feminine ; -- tocheck
lin collective_A = mkA "collectif" ; -- UWN
lin collective_N = mkN "collectif" ; -- UWN
lin collectivism_N = mkN "collectivisme" masculine ; -- tocheck
lin collectivist_N = mkN "gauchiste" ; -- UWN
lin collectivization_N = mkN "collectivisation" ; -- UWN
lin collector_N = mkN "collecteur" masculine | mkN "collectionneur" masculine | mkN "percepteur" masculine ; -- tocheck
lin colleen_N = mkN "colleen" ; -- UWN
lin college_N = variants {} ; --
lin collembolan_N = mkN "Collembola" | mkN "collembola" | mkN "collembole" | mkN "collemboles" ; -- UWN
lin collider_N = mkN "collisionneur" ; -- UWN
lin collie_N = mkN "colley" masculine ; -- tocheck
lin collier_N = mkN "charbonnier" masculine ; -- tocheck
lin colligation_N = mkN "colligation" feminine ; -- tocheck
lin collimation_N = mkN "collimation" ; -- UWN
lin collinear_A = mkA "colinéaire" ; -- UWN
lin collision_N = mkN "collision" feminine ; -- tocheck
lin collocation_N = mkN "collocation" feminine ; -- tocheck
lin collodion_N = mkN "collodion" ; -- UWN
lin colloid_N = mkN "colloïde" ; -- UWN
lin colloquial_A = mkA "familier" ; -- tocheck
lin colloquium_N = mkN "colloque" masculine ; -- tocheck
lin colloquy_N = mkN "colloque" masculine ; -- tocheck
lin collotype_N = mkN "phototypie" ; -- UWN
lin collusion_N = mkN "collusion" feminine ; -- tocheck
lin colne_PN = mkPN "Colne" ; -- status=guess src=geonames
lin colobus_N = mkN "colobe" | mkN "colobus" ; -- UWN
lin cologne_N = mkN "cologne" | mkN "eau_de_Cologne" | mkN "eau_de_cologne" ; -- UWN
lin cologne_PN = mkPN "Cologne" ; -- status=guess src=geonames
lin colombia_PN = mkPN "Colombie" ; -- status=guess src=geonames
lin colombo_PN = mkPN "Colombo" ; -- status=guess src=geonames
lin colon_N = mkN "côlon" masculine ; -- tocheck
lin colonel_N = mkN "colonel" masculine ; -- tocheck
lin colonial_A = mkA "colonial" ; -- tocheck
lin colonial_N = mkN "colonial" | mkN "colonialisme" ; -- UWN
lin colonialism_N = mkN "colonialisme" masculine ; -- tocheck
lin colonist_N = mkN "coloniste" ; -- tocheck
lin colonization_N = mkN "colonisation" feminine ; -- tocheck
lin colonnade_N = mkN "colonnade" ; -- tocheck
lin colonoscopy_N = mkN "coloscopie" feminine ; -- tocheck
lin colony_N = mkN "colonie" feminine ; -- tocheck
lin colophon_N = mkN "colophon" masculine ; -- tocheck
lin colorado_PN = mkPN "Colorado" ; -- status=guess src=geonames
lin colorectal_A = mkA "colorectal" ; -- tocheck
lin colorimetric_A = mkA "colorimétrique" ; -- tocheck
lin colorimetry_N = mkN "colorimétrie" feminine ; -- tocheck
lin colorlessness_N = mkN "achromatisme" ; -- UWN
lin colossal_A = mkA "colossal" ; -- tocheck
lin colossus_N = mkN "colosse" | mkN "colosse" masculine ; -- tocheck
lin colostomy_N = mkN "colostomie" feminine ; -- tocheck
lin colostrum_N = mkN "colostrum" masculine ; -- tocheck
lin colour_A = mkA "colorer" | mkA "colorier" | mkA "couleur" ; -- UWN
lin colour_N = mkN "couleur" feminine ;
lin colour_V = mkV "colorer" ;
lin colour_V2 = mkV2 "colorer" ;
lin colour_V2A = variants {} ; --
lin coloured_A = mkA "coloré" ;
lin colourful_A = mkA "coloré" ;
lin colt_N = mkN "poulain" masculine | mkN "jeunot" masculine ; -- tocheck
lin colter_N = mkN "coutre" masculine ; -- tocheck
lin columbia_PN = mkPN "Columbia" ; -- status=guess src=geonames
lin columbine_N = mkN "ancolie" feminine ; -- tocheck
lin columbium_N = mkN "columbium" ; -- UWN
lin columbus_PN = mkPN "Columbus" ; -- status=guess src=geonames
lin columella_N = mkN "columelle" | mkN "lucius_iunius_moderatus_columella" ; -- UWN
lin column_N = mkN "colonne" feminine | mkN "colonne" ; -- tocheck
lin columnea_N = mkN "columnea" ; -- UWN
lin columnistFem_N = mkN "chroniqueur" | mkN "éditorialiste" ; -- UWN
lin columnistMasc_N = mkN "chroniqueur" | mkN "éditorialiste" ; -- UWN
lin coma_N = mkN "chevelure" feminine | mkN "coma" masculine ; -- tocheck
lin comatose_A = mkA "comateux" ; -- UWN
lin comb_N = mkN "crête" feminine | mkN "peigne" masculine ; -- tocheck
lin comb_V2 = mkV2 (mkV "peigner") ; -- tocheck
lin combat_N = mkN "combat" masculine ; -- tocheck
lin combat_V = variants {} ; -- mkV2 (mkV I.combattre_V2) ; -- tocheck
lin combat_V2 = mkV2 (mkV I.combattre_V2) ; -- tocheck
lin combatant_N = mkN "bagarreur" | mkN "belligérant" | mkN "chasseur" | mkN "combattant" ; -- UWN
lin combativeness_N = mkN "militance" ; -- UWN
lin combinable_A = mkA "combinable" | mkA "jumelable" ; -- UWN
lin combination_N = mkN "combinaison" feminine ; -- tocheck
lin combine_V = variants {} ; -- mkV2V (mkV "combiner") ; -- tocheck
lin combine_V2 = variants {} ; -- mkV2V (mkV "combiner") ; -- tocheck
lin combine_VV = variants {} ; -- mkV2V (mkV "combiner") ; -- tocheck
lin combined_A = variants {} ; --
lin combining_N = mkN "combinaison" ; -- UWN
lin combretum_N = mkN "combretum" ; -- UWN
lin combustible_A = mkA "combustible" ; -- UWN
lin combustion_N = mkN "combustion" ; -- tocheck
lin come_V = L.come_V ;
lin come_about_V = advV OP_come_V OP_about_Adv ; -- guess-p-verb
lin come_across_V = advV OP_come_V OP_across_Adv ; -- guess-p-verb
lin come_across_V2 = prepV2 OP_come_V OP_across_Prep ; -- guess-p-verb
lin come_along_V = advV OP_come_V OP_along_Adv ; -- guess-p-verb
lin come_along_with_V2 = prepV2 (advV OP_come_V OP_along_Adv ) OP_with_Prep ; -- guess-p-verb
lin come_apart_V = mkV "casser" | mkV "diviser" | mkV "séparer" ; -- UWN
lin come_around_V = advV OP_come_V OP_around_Adv ; -- guess-p-verb
lin come_around_to_V2 = prepV2 (advV OP_come_V OP_around_Adv ) OP_to_Prep ; -- guess-p-verb
lin come_away_V = advV OP_come_V OP_away_Adv ; -- guess-p-verb
lin come_back_V = advV OP_come_V OP_back_Adv ; -- guess-p-verb
lin come_before_V2 = prepV2 OP_come_V OP_before_Prep ; -- guess-p-verb
lin come_by_V = advV OP_come_V OP_by_Adv ; -- guess-p-verb
lin come_by_V2 = prepV2 OP_come_V OP_by_Prep ; -- guess-p-verb
lin come_down_V = advV OP_come_V OP_down_Adv ; -- guess-p-verb
lin come_down_on_V2 = prepV2 (advV OP_come_V OP_down_Adv ) OP_on_Prep ; -- guess-p-verb
lin come_down_upon_V2 = prepV2 (advV OP_come_V OP_down_Adv ) OP_upon_Prep ; -- guess-p-verb
lin come_down_with_V2 = prepV2 (advV OP_come_V OP_down_Adv ) OP_with_Prep ; -- guess-p-verb
lin come_forth_V = advV OP_come_V OP_forth_Adv ; -- guess-p-verb
lin come_forth_with_V2 = prepV2 (advV OP_come_V OP_forth_Adv ) OP_with_Prep ; -- guess-p-verb
lin come_forward_V = mkV "augmenter" | mkV "étendre" ; -- UWN
lin come_from_V2 = prepV2 OP_come_V OP_from_Prep ; -- guess-p-verb
lin come_in_V = advV OP_come_V OP_in_Adv ; -- guess-p-verb
lin come_in_V2 = prepV2 OP_come_V OP_in_Prep ; -- guess-p-verb
lin come_in_for_V2 = prepV2 (advV OP_come_V OP_in_Adv ) OP_for_Prep ; -- guess-p-verb
lin come_into_V2 = prepV2 OP_come_V OP_into_Prep ; -- guess-p-verb
lin come_into_use_V = variants {} ; -- guess-p-verb
lin come_off_V = advV OP_come_V OP_off_Adv ; -- guess-p-verb
lin come_off_V2 = prepV2 OP_come_V OP_off_Prep ; -- guess-p-verb
lin come_off_it_V = variants {} ; -- guess-p-verb
lin come_on_V = advV OP_come_V OP_on_Adv ; -- guess-p-verb
lin come_out_V = advV OP_come_V OP_out_Adv ; -- guess-p-verb
lin come_out_in_V2 = prepV2 (advV OP_come_V OP_out_Adv ) OP_in_Prep ; -- guess-p-verb
lin come_out_of_V2 = prepV2 (advV OP_come_V OP_out_Adv ) OP_of_Prep ; -- guess-p-verb
lin come_out_with_V2 = prepV2 (advV OP_come_V OP_out_Adv ) OP_with_Prep ; -- guess-p-verb
lin come_over_V = mkV "rencontrer" ; -- UWN
lin come_over_V2 = prepV2 OP_come_V OP_over_Prep ; -- guess-p-verb
lin come_round_V = advV OP_come_V OP_round_Adv ; -- guess-p-verb
lin come_through_V = advV OP_come_V OP_through_Adv ; -- guess-p-verb
lin come_through_with_V2 = prepV2 (advV OP_come_V OP_through_Adv ) OP_with_Prep ; -- guess-p-verb
lin come_to_V = advV OP_come_V OP_to_Adv ; -- guess-p-verb
lin come_to_V2 = prepV2 OP_come_V OP_to_Prep ; -- guess-p-verb
lin come_up_V = mkV "apparaître" | mkV "devenir" | mkV "découler" | mkV "présenter" | mkV "résulter" | mkV "surgir" | mkV "survenir" ; -- UWN
lin come_up_against_V2 = prepV2 (advV OP_come_V OP_up_Adv ) OP_against_Prep ; -- guess-p-verb
lin come_up_to_V2 = prepV2 (advV OP_come_V OP_up_Adv ) OP_to_Prep ; -- guess-p-verb
lin come_up_with_V2 = prepV2 (advV OP_come_V OP_up_Adv ) OP_with_Prep ; -- guess-p-verb
lin come_upon_V2 = prepV2 OP_come_V OP_upon_Prep ; -- guess-p-verb
lin come_with_V2 = prepV2 OP_come_V OP_with_Prep ; -- guess-p-verb
lin comeback_N = mkN "repartie" feminine ; -- tocheck
lin comedian_N = mkN "humoriste" ; -- tocheck
lin comedienne_N = mkN "comédienne" ; -- tocheck
lin comedy_N = mkN "comédie" feminine ; -- tocheck
lin comeliness_N = mkN "beauté" | mkN "charme" ; -- UWN
lin comely_A = mkA "avenant" ; -- tocheck
lin comer_N = mkN "arrivage" | mkN "arrivée" ; -- UWN
lin comestible_N = mkN "comestible" ; -- UWN
lin comet_N = mkN "comète" feminine ; -- tocheck
lin comfort_N = mkN "confort" | mkN "confort" masculine ; -- tocheck
lin comfort_V2 = mkV2 (mkV "consoler") ; -- tocheck
lin comfortable_A = mkA "confortable" ; -- tocheck
lin comforter_N = mkN "tétine" ; -- UWN
lin comforting_A = mkA "rassurant" ; -- tocheck
lin comfy_A = mkA "confortable" ; -- tocheck
lin comic_A = mkA "comique" ; -- tocheck
lin comic_N = mkN "comédien" masculine ; -- tocheck
lin comical_A = mkA "comique" ; -- tocheck
lin coming_A = variants {} ; --
lin coming_N = mkN "venue" feminine ; -- tocheck
lin comma_N = mkN "virgule" feminine ; -- tocheck
lin command_1_N = variants {} ; --
lin command_2_N = variants {} ; --
lin command_N = variants {} ; --
lin command_V = variants {} ; -- mkV2 (mkV "commander") ; -- tocheck
lin command_V2 = mkV2 (mkV "commander") ; -- tocheck
lin commandant_N = mkN "commandant" masculine ; -- tocheck
lin commandeer_V2 = mkV2 (mkV "réquisitionner") ; -- tocheck
lin commander_N = mkN "commandant" masculine ; -- tocheck
lin commandment_N = mkN "commandement" masculine ; -- tocheck
lin commando_N = mkN "commando" ; -- UWN
lin commemorate_V2 = mkV2 (mkV "commémorer") ; -- tocheck
lin commemoration_N = mkN "commémoration" ; -- tocheck
lin commence_V = variants {} ; -- mkV2 (mkV "commencer") ; -- tocheck
lin commence_V2 = mkV2 (mkV "commencer") ; -- tocheck
lin commend_V2 = mkV2 (mkV "féliciter") | mkV2 (mkV "recommander") ; -- tocheck
lin commendation_N = mkN "agrément" | mkN "approbation" | mkN "visa" ; -- UWN
lin commensurate_A = mkA "commensurable" ; -- tocheck
lin commensurateness_N = mkN "correspondance" ; -- UWN
lin comment_N = mkN "commentaire" masculine ; -- tocheck
lin comment_V = variants {} ; -- mkV2 (mkV "commenter") ; -- tocheck
lin comment_V2 = mkV2 (mkV "commenter") ; -- tocheck
lin comment_VS = variants {} ; -- mkV2 (mkV "commenter") ; -- tocheck
lin commentary_N = variants {} ; --
lin commentator_N = mkN "commentateur" masculine ; -- tocheck
lin commerce_N = mkN "rapports" | mkN "commerce" masculine ; -- tocheck
lin commercial_A = variants {} ; --
lin commercial_N = mkN "publicité" feminine ; -- tocheck
lin commercialism_N = mkN "commerce" | mkN "mercantilisme" ; -- UWN
lin commercialization_N = mkN "commercialisation" feminine ; -- tocheck
lin commiserate_V = mkV (mkV "compatir") ; -- tocheck
lin commiseration_N = mkN "commisération" feminine ; -- tocheck
lin commissar_N = mkN "commissaire_politique" ; -- UWN
lin commission_N = mkN "commission" feminine ; -- tocheck
lin commission_V2 = variants {} ; -- mkV2V (mkV "commander") | mkV2V (mkV "charger") ; -- tocheck
lin commission_V2V = mkV2V (mkV "commander") | mkV2V (mkV "charger") ; -- tocheck
lin commissioner_N = mkN "commissaire" ; -- UWN
lin commit_V2 = variants {} ; --
lin commitment_N = mkN "engagement" masculine ; -- tocheck
lin committedness_N = mkN "engagement" | mkN "obligation" | mkN "volonté" ; -- UWN
lin committee_N = mkN "comité" masculine ;
lin commode_N = mkN "commode" feminine ; -- tocheck
lin commodious_A = mkA "ample" | mkA "commode" | mkA "large" | mkA "étendu" ; -- UWN
lin commodity_N = mkN "produit" masculine ; -- tocheck
lin commodore_N = mkN "commodore" ; -- tocheck
lin common_1_A = mkA "commun" ;
lin common_2_A = mkA "ordinaire" ;
lin common_A = mkA "commun" | mkA "ordinaire" ; -- tocheck
lin common_N = mkN "fête" | mkN "parc" | mkN "park" | mkN "stationner" | mkN "vert" ; -- UWN
lin commoner_N = mkN "roturier" masculine ; -- tocheck
lin commonplace_A = mkA "ordinaire" ; -- tocheck
lin commons_N = mkN "communs" ; -- tocheck
lin commonwealth_N = mkN "communauté" ; -- tocheck
lin communal_A = mkA "communautaire" | mkA "commun" ; -- tocheck
lin commune_N = mkN "commune" ; -- UWN
lin communicable_A = mkA "communicable" ; -- tocheck
lin communicate_V = mkV "communiquer" ; -- UWN
lin communicate_V2 = mkV2 (mkV "communiquer") ; -- tocheck
lin communication_N = mkN "communication" feminine ; -- tocheck
lin communications_N = mkN "théorie_de_la_communication" ; -- UWN
lin communicator_N = mkN "communicateur" masculine ; -- tocheck
lin communism_N = mkN "communisme" masculine | mkN "communisme" ; -- tocheck
lin communist_A = mkA "communiste" ; -- tocheck
lin communist_N = mkN "communiste" ; -- tocheck
lin community_N = mkN "communauté" feminine ;
lin commutation_N = mkN "substitution" | mkN "échange" ; -- UWN
lin commutative_A = mkA "commutatif" ; -- tocheck
lin commute_V2 = mkV2 (mkV "commuter") ; -- tocheck
lin commuter_N = mkN "navetteur" masculine ; -- tocheck
lin compact_A = mkA "compact" ; -- tocheck
lin compact_N = mkN "compact" ; -- UWN
lin companion_N = mkN "compagnon" masculine ; -- tocheck
lin company_1_N = mkN "compagnie" feminine ;
lin company_2_N = mkN "société" feminine ;
lin comparability_N = mkN "comparabilité" ; -- tocheck
lin comparable_A = mkA "comparable" ; -- tocheck
lin comparative_A = mkA "comparatif" ; -- tocheck
lin comparative_N = mkN "comparatif" masculine ; -- tocheck
lin compare_N = mkN "comparabilité" | mkN "comparaison" | mkN "comparer" | mkN "équivalence" ; -- UWN
lin compare_V = variants {} ; -- mkV2 (mkV "comparer") ; -- tocheck
lin comparison_N = mkN "comparaison" feminine ; -- tocheck
lin compartment_N = mkN "compartiment" masculine ; -- tocheck
lin compartmentalization_N = mkN "assortiment" | mkN "catégorisation" | mkN "classification" | mkN "nomenclature" ; -- UWN
lin compass_N = mkN "portée" feminine | mkN "boussole" feminine ; -- tocheck
lin compassion_N = mkN "compassion" feminine ; -- tocheck
lin compatibility_N = mkN "compatibilité" feminine ; -- tocheck
lin compatible_A = mkA "compatible" ; -- tocheck
lin compatriotFem_N = mkN "compatriote" ; -- tocheck
lin compatriotMasc_N = mkN "compatriote" ; -- tocheck
lin compeer_N = mkN "allumette" | mkN "pareil" | mkN "égal" | mkN "égalitaire" | mkN "équivalent" ; -- UWN
lin compel_V2 = variants {} ; -- mkV2V (mkV I.contraindre_V2) | mkV2V (mkV "obliger") ; -- tocheck
lin compel_V2V = mkV2V (mkV I.contraindre_V2) | mkV2V (mkV "obliger") ; -- tocheck
lin compel_VV = variants {} ; -- mkV2V (mkV I.contraindre_V2) | mkV2V (mkV "obliger") ; -- tocheck
lin compendium_N = mkN "recueil" masculine ; -- tocheck
lin compensate_V = mkV "recompenser" ;
lin compensate_V2 = mkV2 (mkV "recompenser") ;
lin compensation_N = mkN "compensation" feminine | mkN "dédommagement" masculine ; -- tocheck
lin compete_V = mkV (mkV "rivaliser") ; -- tocheck
lin competence_N = mkN "compétence" | mkN "compétence" feminine ; -- tocheck
lin competent_A = variants {} ; --
lin competition_N = mkN "concours" masculine | mkN "compétition" feminine ; -- tocheck
lin competitive_A = mkA "compétitif" ; -- UWN
lin competitor_N = mkN "compétiteur" masculine ; -- tocheck
lin compilation_N = mkN "compilation" ; -- UWN
lin compile_V2 = mkV2 (mkV "compiler") ; -- tocheck
lin compiler_N = mkN "compilateur" masculine ; -- tocheck
lin complacence_N = mkN "autosatisfaction" | mkN "complaisance" | mkN "infatuation" ; -- UWN
lin complacency_N = mkN "complaisance" feminine ; -- tocheck
lin complacent_A = mkA "suffisant" ; -- tocheck
lin complain_V = mkV (mkV I.plaindre_V2) ; -- tocheck
lin complain_VS = mkVS (mkV I.plaindre_V2) | mkvVS "râler" ; -- UWN
lin complainant_N = mkN "plaignant" masculine ; -- tocheck
lin complaint_N = mkN "plainte" feminine ; -- tocheck
lin complaisance_N = mkN "accortise" | mkN "conditionnalité" ; -- UWN
lin complaisant_A = mkA "affable" ; -- UWN
lin complement_V2 = mkV2 (mkV "compléter") | mkV2 (mkV "complémenter") ; -- tocheck
lin complementary_A = mkA "complémentaire" ; -- tocheck
lin complete_A = mkA "complète" | mkA "complet" ; -- tocheck
lin complete_V = mkV "compléter" | mkV "remplir" ; -- UWN
lin complete_V2 = mkV2 (mkV "accomplir") | mkV2 (mkV "compléter") ; -- tocheck
lin completeness_N = mkN "complétude" feminine ; -- tocheck
lin completion_N = mkN "achèvement" | mkN "exécution" feminine ; -- tocheck
lin complex_A = mkA "complexe" ; -- tocheck
lin complex_N = mkN "complexe" masculine ; -- tocheck
lin complexion_N = mkN "teint" masculine ; -- tocheck
lin complexity_N = mkN "complexité" feminine ; -- tocheck
lin compliance_N = mkN "conformité" feminine | mkN "observance" feminine ; -- tocheck
lin complicate_V2 = mkV2 (mkV "compliquer") ; -- tocheck
lin complicated_A = variants {} ; --
lin complicatedness_N = mkN "complication" ; -- UWN
lin complication_N = mkN "complication" feminine ; -- tocheck
lin complicity_N = mkN "complicité" feminine ; -- tocheck
lin compliment_N = mkN "compliment" masculine ; -- tocheck
lin compliment_V2 = mkV2 (mkV "complimenter") ; -- tocheck
lin complimentary_A = mkA "gratuit" | mkA "flatteur" ; -- tocheck
lin complin_N = mkN "complies" ; -- UWN
lin compline_N = mkN "complies" ; -- tocheck
lin comply_V = variants {} ; -- mkV2 (reflV (mkV "conformer")) ; -- tocheck
lin comply_V2 = mkV2 (reflV (mkV "conformer")) ; -- tocheck
lin component_N = mkN "composant" masculine ; -- tocheck
lin comport_V2 = mkV2 (reflV (mkV "comporter")) ; -- tocheck
lin comportment_N = mkN "air" | mkN "manière" | mkN "mine" | mkN "présence" ; -- UWN
lin compose_V = variants {} ; -- mkV2 (mkV "composer") ; -- tocheck
lin compose_V2 = mkV2 (mkV "composer") ; -- tocheck
lin composer_N = mkN "compositeur" masculine ; -- tocheck
lin composing_N = mkN "composition" ; -- UWN
lin composite_A = mkA "composé" ; -- tocheck
lin composite_N = mkN "composite" masculine ; -- tocheck
lin composition_N = mkN "essai" masculine | mkN "composition" feminine ; -- tocheck
lin compositor_N = mkN "typographe" ; -- tocheck
lin compost_N = mkN "compost" masculine ; -- tocheck
lin compost_V2 = mkV2 (mkV "composter") ; -- tocheck
lin composure_N = mkN "quiétude" feminine ; -- tocheck
lin compote_N = mkN "Compote" | mkN "compote" ; -- UWN
lin compound_A = mkA "composé" ; -- tocheck
lin compound_N = mkN "composé" | mkN "complexe" masculine ; -- tocheck
lin compound_V = variants {} ; -- mkV2 (mkV "composer") ; -- tocheck
lin compound_V2 = mkV2 (mkV "composer") ; -- tocheck
lin comprehend_V2 = mkV2 (mkV I.comprendre_V2) ; -- tocheck
lin comprehensible_A = mkA "compréhensible" ; -- tocheck
lin comprehension_N = mkN "compréhension" feminine ; -- tocheck
lin comprehensive_A = mkA "complet" ; -- tocheck
lin comprehensiveness_N = mkN "ampleur" | mkN "largeur" ; -- UWN
lin compress_N = mkN "compresse" feminine ; -- tocheck
lin compress_V2 = mkV2 (mkV "comprimer") | mkV2 (mkV "compresser") ; -- tocheck
lin compressibility_N = mkN "compressibilité" feminine ; -- tocheck
lin compression_N = mkN "compression" ; -- tocheck
lin compressor_N = mkN "compresseur" masculine ; -- tocheck
lin comprise_V2 = mkV2 (mkV I.comprendre_V2) | mkV2 (mkV I.contenir_V2) ; -- tocheck
lin compromise_N = variants {} ; --
lin compromise_V = variants {} ; -- mkV2 (mkV I.compromettre_V2) ; -- tocheck
lin compromise_V2 = mkV2 (mkV I.compromettre_V2) ; -- tocheck
lin comptroller_N = mkN "contrôleur" ; -- tocheck
lin compulsory_A = mkA "obligatoire" ; -- tocheck
lin compunction_N = mkN "componction" feminine ; -- tocheck
lin computable_A = mkA "calculable" ; -- UWN
lin computation_N = mkN "calcul" masculine | mkN "résultat" ; -- tocheck
lin computational_A = mkA "informatique" ; -- tocheck
lin compute_V = mkV "calculer" | mkV "compter" | mkV "computer" ; -- UWN
lin compute_V2 = mkV2 (mkV "computer") ; -- tocheck
lin computer_N = L.computer_N ;
lin computerization_N = mkN "informatisation" feminine ; -- tocheck
lin computerize_V2 = mkV2 (mkV "informatiser") ; -- tocheck
lin computing_N = variants {} ; --
lin comrade_N = mkN "camarade" ; -- tocheck
lin comradely_A = variants {} ;
lin comradely_Adv = adjAdv comradely_A ; -- derived
lin comradeship_N = mkN "camaraderie" feminine ; -- tocheck
lin con_N = mkN "duper" | mkN "inconvénient" masculine ; -- tocheck
lin con_V2 = mkV2 (mkV "duper") ; -- tocheck
lin concatenation_N = mkN "enchaînement" masculine ; -- tocheck
lin concave_A = mkA "concave" ; -- tocheck
lin concavity_N = mkN "concavité" feminine ; -- tocheck
lin conceal_V2 = mkV2 (mkV "dissimuler") ; -- tocheck
lin concealment_N = mkN "dissimulation" ; -- UWN
lin concede_V = mkV "concéder" | mkV "céder" | mkV "donner" ; -- UWN
lin concede_V2 = mkV2 (mkV "concéder") | mkV2 (mkV "céder") ; -- tocheck
lin concede_VS = mkVS (mkV I.admettre_V2) | mkvVS "concéder" | mkvVS "confesser" | mkvVS "déclarer" ; -- UWN
lin conceit_N = mkN "vanité" feminine ; -- tocheck
lin conceited_A = mkA "prétentieux" | mkA "vaniteux" ; -- tocheck
lin conceivable_A = mkA "pensable" ; -- tocheck
lin conceive_V = mkV "concevoir" | mkV "imaginer" ; -- UWN
lin conceive_V2 = mkV2 (mkV I.concevoir_V2) ; -- tocheck
lin concentrate_N = mkN "concentré" masculine ; -- tocheck
lin concentrate_V = variants {} ; -- mkV2 (reflV (mkV "concentrer")) | mkV2 (mkV "concentrer") ; -- tocheck
lin concentrate_V2 = mkV2 (reflV (mkV "concentrer")) | mkV2 (mkV "concentrer") ; -- tocheck
lin concentration_N = variants {} ; --
lin concept_N = mkN "concept" masculine ; -- tocheck
lin conception_N = mkN "conception" feminine ; -- tocheck
lin conceptive_A = mkA "imprenable" | mkA "inexpugnable" ; -- UWN
lin conceptual_A = mkA "conceptuel" ; -- tocheck
lin conceptualism_N = mkN "conceptualisme" ; -- UWN
lin conceptualization_N = mkN "formulation" | mkN "élaboration" ; -- UWN
lin concern_N = mkN "importance" | mkN "inquiétude" | mkN "soin" ; -- tocheck
lin concern_V2 = mkV2 (mkV "concerner") | mkV2 (mkV "inquiéter") ; -- tocheck
lin concerned_A = variants {} ; --
lin concerning_Prep = variants {} ; --
lin concert_N = mkN "concert" masculine ; -- tocheck
lin concertina_N = mkN "accordéon" masculine ; -- tocheck
lin concerto_N = mkN "concerto" masculine ; -- tocheck
lin concession_N = mkN "concession" masculine ; -- tocheck
lin concessionaire_N = mkN "concessionnaire" ; -- UWN
lin conch_N = mkN "conque" ; -- tocheck
lin conchology_N = mkN "conchyliologie" ; -- UWN
lin concierge_N = mkN "concierge" masculine ; -- tocheck
lin conciliator_N = mkN "pacificateur" | mkN "tétine" ; -- UWN
lin conciliatory_A = mkA "accommodant" ; -- tocheck
lin concise_A = mkA "concis" ; -- tocheck
lin conciseness_N = mkN "concision" ; -- UWN
lin conclude_V = mkV I.conclure_V2 | mkV "motiver" ; -- UWN
lin conclude_V2 = mkV2 (mkV I.conclure_V2) ; -- tocheck
lin conclude_VS = mkVS (mkV I.conclure_V2) | mkvVS "motiver" ; -- UWN
lin conclusion_N = mkN "conclusion" feminine ; -- tocheck
lin concoct_V2 = mkV2 (mkV "concocter") ; -- tocheck
lin concomitance_N = mkN "concomitance" feminine ; -- tocheck
lin concomitant_A = mkA "concomitant" ; -- tocheck
lin concomitant_N = mkN "accompagnement" | mkN "concomitant" ; -- UWN
lin concord_N = mkN "concorde" feminine ; -- tocheck
lin concordat_N = mkN "compact" | mkN "concordat" | mkN "convent" ; -- UWN
lin concourse_N = mkN "hall" masculine ; -- tocheck
lin concrete_A = mkA "concret" ; -- tocheck
lin concrete_N = mkN "béton" masculine ; -- tocheck
lin concrete_V2 = mkV2 (mkV "bétonner") ; -- tocheck
lin concubinage_N = mkN "concubinage" ; -- UWN
lin concubine_N = mkN "concubine" feminine ; -- tocheck
lin concupiscence_N = mkN "concupiscence" ; -- tocheck
lin concur_V = mkV (mkV I.convenir_V2) ; -- tocheck
lin concurrence_N = mkN "accord" ; -- UWN
lin concurrent_A = mkA "concomitant" ; -- tocheck
lin concussion_N = mkN "commotion" feminine | mkN "choc" masculine ; -- tocheck
lin condemn_V2 = mkV2 (mkV "condamner") ; -- tocheck
lin condemnable_A = mkA "criminel" ; -- UWN
lin condemnation_N = mkN "condamnation" feminine ; -- tocheck
lin condensate_N = mkN "condensat" masculine ; -- tocheck
lin condensation_N = mkN "déshydratation" feminine | mkN "condensation" feminine ; -- tocheck
lin condense_V2 = mkV2 (reflV (mkV "condenser")) | mkV2 (mkV "condenser") ; -- tocheck
lin condenser_N = mkN "condenseur" masculine ; -- tocheck
lin condensing_N = mkN "condensation" ; -- UWN
lin condescendingly_Adv = mkAdv "arrogamment" | mkAdv "de_haut" | mkAdv "dédaigneusement" ; -- UWN
lin condescension_N = mkN "condescendance" feminine ; -- tocheck
lin condiment_N = mkN "condiment" masculine ; -- tocheck
lin condition_1_N = mkN "condition" ;
lin condition_2_N = mkN "condition" ;
lin condition_N = mkN "condition" ;
lin conditionality_N = mkN "Conditionnalité" | mkN "conditionnalité" ; -- UWN
lin conditioning_N = mkN "conditionnement" ; -- tocheck
lin conditions_N = mkN "intempérie" | mkN "temps" ; -- UWN
lin condolence_N = mkN "réconfort" masculine | mkN "condoléances" ; -- tocheck
lin condom_N = mkN "préservatif" masculine ; -- tocheck
lin condominium_N = mkN "copropriété" feminine ; -- tocheck
lin condone_V2 = mkV2 (mkV I.permettre_V2) | mkV2 (mkV "pardonner") ; -- tocheck
lin condor_N = mkN "condor" masculine ; -- tocheck
lin conducive_A = mkA "favorable" ; -- tocheck
lin conduct_N = mkN "comportement" masculine ; -- tocheck
lin conduct_V = variants {} ; -- mkV2 (reflV (mkV "comporter")) ; -- tocheck
lin conduct_V2 = mkV2 (reflV (mkV "comporter")) ; -- tocheck
lin conductance_N = mkN "conductance" feminine ; -- tocheck
lin conduction_N = mkN "conduction" | mkN "conductivité" ; -- UWN
lin conductivity_N = mkN "conductivité" feminine ; -- tocheck
lin conductor_N = mkN "conducteur" ; -- tocheck
lin condylar_A = mkA "condylien" ; -- UWN
lin condyle_N = mkN "condyle" ; -- tocheck
lin cone_N = mkN "cône" masculine ; -- tocheck
lin conenose_N = mkN "réduve" | mkN "triatome" ; -- UWN
lin coney_N = mkN "lapin" ; -- UWN
lin confab_V = mkV "conférer" | mkV "consulter" | mkV "donner" ; -- UWN
lin confabulate_V = mkV "conférer" | mkV "consulter" | mkV "donner" ; -- UWN
lin confectioner_N = mkN "confiseur" ; -- UWN
lin confectionery_N = mkN "confiserie" feminine ; -- tocheck
lin confederacy_N = mkN "confédération" ; -- tocheck
lin confederate_N = mkN "complice" | mkN "compère" ; -- UWN
lin confederation_N = mkN "confédération" feminine ; -- tocheck
lin confer_V = mkV "conférer" | mkV "consulter" | mkV "donner" ; -- UWN
lin conference_N = mkN "conférence" feminine ; -- tocheck
lin conferva_N = mkN "conferve" ; -- UWN
lin confess_V = mkV "avouer" ;
lin confess_V2 = mkV2 (mkV "avouer") ;
lin confess_VS = mkVS (mkV "avouer") ;
lin confessedly_Adv = mkAdv "certes" | mkAdv "vrai" ; -- UWN
lin confession_N = mkN "confession" feminine ; -- tocheck
lin confessional_N = mkN "confessionnal" masculine ; -- tocheck
lin confessor_N = mkN "confesseur" masculine ; -- tocheck
lin confetti_N = mkN "confetti" masculine ; -- tocheck
lin confidantFem_N = mkN "intime" ; -- UWN
lin confidantMasc_N = mkN "intime" ; -- UWN
lin confide_V = mkV "confier" ; -- UWN
lin confide_VS = mkvVS "confier" ; -- UWN
lin confidence_N = mkN "confidence" feminine | mkN "assurance" | mkN "confiance" feminine ; -- tocheck
lin confident_A = mkA "assuré" ; -- tocheck
lin confidential_A = mkA "confidentiel" ; -- tocheck
lin configuration_N = mkN "configuration" ; -- tocheck
lin configurational_A = mkA "configurationnel" ; -- UWN
lin configure_V2 = mkV2 (mkV "configurer") ; -- tocheck
lin confine_N = mkN "limite" feminine ; -- tocheck
lin confine_V2 = mkV2 (mkV "confiner") ; -- tocheck
lin confining_A = mkA "fermer" ; -- UWN
lin confirm_V2 = mkV2 (mkV "confirmer") ; -- tocheck
lin confirm_VS = variants {} ; -- mkV2 (mkV "confirmer") ; -- tocheck
lin confirmable_A = mkA "falsifiable" | mkA "vérifiable" ; -- UWN
lin confirmation_N = mkN "confirmation" feminine ; -- tocheck
lin confiscate_A = mkA "confisquer" ; -- UWN
lin confiscate_V2 = mkV2 (mkV "confisquer") ; -- tocheck
lin confiscation_N = mkN "confiscation" feminine ; -- tocheck
lin conflagration_N = mkN "conflagration" feminine ; -- tocheck
lin conflict_N = mkN "conflit" masculine ; -- tocheck
lin conflict_V = variants {} ; --
lin confluence_N = mkN "confluent" masculine ; -- tocheck
lin confluent_A = mkA "confluent" ; -- UWN
lin conform_V = variants {} ; -- mkV2 (reflV (mkV "aligner")) ; -- tocheck
lin conform_V2 = mkV2 (reflV (mkV "aligner")) ; -- tocheck
lin conformable_A = mkA "conforme" ; -- tocheck
lin conformation_N = mkN "conformité" | mkN "correspondance" ; -- UWN
lin conformity_N = mkN "conformité" feminine ; -- tocheck
lin confront_V2 = mkV2 (mkV "confronter") ; -- tocheck
lin confrontation_N = mkN "confrontation" feminine ; -- tocheck
lin confrontational_A = mkA "acariâtre" | mkA "batailleur" ; -- UWN
lin confuse_V2 = mkV2 (mkV I.confondre_V2) ; -- tocheck
lin confused_A = variants {} ;
lin confusing_A = mkA "complexe" ; -- tocheck
lin confusion_N = variants {} ; --
lin conga_N = mkN "conga" feminine ; -- tocheck
lin congee_N = mkN "congee" masculine ; -- tocheck
lin congeniality_N = mkN "sociabilité" feminine ; -- tocheck
lin congenialness_N = mkN "agrément" ; -- UWN
lin congenital_A = mkA "congénital" ; -- tocheck
lin conger_N = mkN "Conger" | mkN "conger" | mkN "congre" | mkN "congres" ; -- UWN
lin congested_A = mkA "engorgé" ; -- UWN
lin congestion_N = mkN "embouteillage" masculine ; -- tocheck
lin congleton_PN = mkPN "Congleton" ; -- status=guess src=geonames
lin conglomerate_N = mkN "empire" ; -- UWN
lin congratulate_V2 = mkV2 (mkV "féliciter") ; -- tocheck
lin congratulation_N = mkN "félicitations" ; -- tocheck
lin congratulatory_A = mkA "congratulatoire" ; -- UWN
lin congregation_N = mkN "assemblée" feminine | mkN "congrégation" ; -- tocheck
lin congress_N = mkN "congrès" masculine ; -- tocheck
lin congresswoman_N = mkN "congrès" | mkN "député" | mkN "membre_du_Congrès" | mkN "parlementaire" | mkN "représentant" | mkN "représentation" ; -- UWN
lin congruent_A = mkA "congru" | mkA "conforme" ; -- tocheck
lin congruity_N = mkN "Congruence" | mkN "congruence" ; -- UWN
lin congruous_A = mkA "congru" ; -- tocheck
lin conic_A = mkA "conique" ; -- UWN
lin conical_A = mkA "conique" ; -- tocheck
lin conidium_N = mkN "conidie" ; -- UWN
lin conifer_N = mkN "conifère" masculine ; -- tocheck
lin coniferous_A = mkA "conifère" ; -- UWN
lin conjectural_A = mkA "conjectural" ; -- tocheck
lin conjecture_N = mkN "conjecture" feminine ; -- tocheck
lin conjecture_V = mkV "conjecturer" | mkV "spéculer" | mkV "supposer" ; -- UWN
lin conjecture_V2 = mkV2 (mkV "conjecturer") ; -- tocheck
lin conjoin_V = mkV "joindre" | mkV "rejoindre" | mkV "relier" ; -- UWN
lin conjugal_A = mkA "conjugal" ; -- tocheck
lin conjugate_V = mkV "conjuguer" ; -- UWN
lin conjugate_V2 = mkV2 (mkV "conjuguer") ; -- tocheck
lin conjugation_N = mkN "conjugaison" feminine ; -- tocheck
lin conjunction_N = mkN "conjonction" feminine ; -- tocheck
lin conjunctiva_N = mkN "conjonctive" feminine ; -- tocheck
lin conjunctive_N = mkN "conjonction" ; -- UWN
lin conjunctivitis_N = mkN "conjonctivite" feminine ; -- tocheck
lin conjuncture_N = mkN "conjoncture" feminine ; -- tocheck
lin conjure_V = mkV "conspirer" ; -- UWN
lin conk_N = mkN "langue" feminine ; -- tocheck
lin conk_V = mkV "cogner" | mkV "s'évanouir" | mkV "évanouir" ; -- UWN
lin conker_N = mkN "marron_d'Inde" | mkN "marron_d'inde" ; -- UWN
lin connatural_A = mkA "inné" | mkA "naturel" ; -- UWN
lin connect_V = mkV "connecter" ; -- UWN
lin connect_V2 = mkV2 (mkV "accoupler") ; -- tocheck
lin connection_N = mkN "connexion" feminine | mkN "complicité" feminine | mkN "lien" masculine | mkN "correspondance" feminine ; -- tocheck
lin connective_N = mkN "connecteur" | mkN "connexion" ; -- UWN
lin connectivity_N = mkN "connexité" feminine ; -- tocheck
lin connivance_N = mkN "connivence" ; -- UWN
lin connive_V = mkV (mkV "conspirer") ; -- tocheck
lin connoisseur_N = mkN "connaisseur" masculine ; -- tocheck
lin connotation_N = mkN "connotation" feminine ; -- tocheck
lin connote_V2 = mkV2 (mkV "connoter") ; -- tocheck
lin connubial_A = mkA "conjugal" ; -- UWN
lin conquer_V2 = mkV2 (mkV I.conquérir_V2) ; -- tocheck
lin conqueror_N = mkN "conquérant" ; -- UWN
lin conquistador_N = mkN "conquistador" | mkN "conquistadores" ; -- UWN
lin consanguinity_N = mkN "consanguinité" ; -- tocheck
lin conscience_N = mkN "conscience" feminine ; -- tocheck
lin conscientious_A = mkA "consciencieux" ; -- tocheck
lin conscious_A = mkA "conscient" ; -- tocheck
lin consciousness_N = mkN "conscience" feminine ; -- tocheck
lin conscript_N = mkN "conscrit" ; -- tocheck
lin conscription_N = mkN "conscription" feminine ; -- tocheck
lin consecrate_V2 = mkV2 (mkV "consacrer") ; -- tocheck
lin consecration_N = mkN "consécration" feminine ; -- tocheck
lin consecutive_A = mkA "consécutif" ; -- tocheck
lin consecutive_Adv = mkAdv "consécutif" | mkAdv "successivement" | mkAdv "séquentiellement" ; -- UWN
lin consensual_A = mkA "consensuel" ; -- UWN
lin consensus_N = mkN "consensus" masculine ; -- tocheck
lin consent_N = mkN "consentement" masculine ; -- tocheck
lin consent_V = mkV "accepter" | mkV "agréer" | mkV "approuver" | mkV "consentir" ; -- UWN
lin consent_V2V = mkV2V (mkV I.consentir_V2) ; -- tocheck
lin consentaneous_A = mkA "unanime" ; -- UWN
lin consequence_N = mkN "conséquence" feminine ; -- tocheck
lin consequent_A = variants {} ;
lin conservation_N = mkN "défense" feminine | mkN "préservation" feminine ; -- tocheck
lin conservatism_N = mkN "conservatisme" masculine ; -- tocheck
lin conservative_1_N = mkN "conservateur" ; -- tocheck
lin conservative_2_N = mkN "conservateur" ; -- tocheck
lin conservative_A = mkA "conservateur" ; -- tocheck
lin conservatoire_N = mkN "conservatoire" masculine ; -- tocheck
lin conservatory_N = mkN "serre" feminine | mkN "conservatoire" masculine ; -- tocheck
lin conserve_N = mkN "conserver" | mkN "maintenir" ; -- UWN
lin conserve_V2 = mkV2 (mkV "conserver") ; -- tocheck
lin consett_PN = mkPN "Consett" ; -- status=guess src=geonames
lin consider_V = mkV "considérer" ;
lin consider_V2 = mkV2 (mkV "considérer") | mkV2 (mkV "songer") ;
lin consider_V2A = mkV2A (mkV "considérer") ;
lin consider_V2V = mkV2V (mkV "considérer") ;
lin consider_V3 = mkV3 (mkV "considérer") (mkPrep "comme") | mkV3 (mkV I.prendre_V2) (mkPrep "pour") ;
lin consider_VS = mkVS (mkV "considérer") ;
lin consider_VV = deVV (mkV "considérer") ;
lin considerable_A = variants {} ; --
lin considerate_A = mkA "attentif" ; -- tocheck
lin considerateness_N = mkN "considération" ; -- UWN
lin consideration_N = mkN "considération" | mkN "considération" feminine ; -- tocheck
lin considering_Prep = variants {} ; --
lin considering_Subj = variants {} ; --
lin consignee_N = mkN "destinataire" ; -- tocheck
lin consignment_N = mkN "envoi" | mkN "expédition" | mkN "lot" ; -- UWN
lin consignor_N = mkN "expéditeur" masculine ; -- tocheck
lin consist_V = variants {} ; --
lin consistence_N = mkN "cohérence" feminine | mkN "consistance" feminine ; -- tocheck
lin consistency_N = mkN "consistance" feminine ; -- tocheck
lin consistent_A = mkA "conforme" | mkA "cohérent" | mkA "constant" ; -- tocheck
lin consistory_N = mkN "Consistoire" | mkN "consistoire" ; -- UWN
lin consolation_N = mkN "consoler" ; -- tocheck
lin console_N = mkN "console" feminine ; -- tocheck
lin console_V2 = mkV2 (mkV "consoler") ; -- tocheck
lin consolidate_V = variants {} ; -- mkV2 (mkV "consolider") ; -- tocheck
lin consolidate_V2 = mkV2 (mkV "consolider") ; -- tocheck
lin consolidation_N = mkN "consolidation" feminine ; -- tocheck
lin consonant_A = mkA "consonant" ; -- tocheck
lin consonant_N = mkN "consonne" feminine ; -- tocheck
lin consort_N = mkN "chorale" | mkN "chœur" ; -- UWN
lin consort_V = mkV "courir" ; -- UWN
lin consortium_N = mkN "consortium" masculine ; -- tocheck
lin conspecific_A = mkA "conspécifique" ; -- tocheck
lin conspicuous_A = mkA "obvie" | mkA "visible" ; -- UWN
lin conspiracy_N = mkN "conspiration" feminine ; -- tocheck
lin conspirator_N = mkN "conspirateur" masculine ; -- tocheck
lin conspiratorial_A = mkA "conspiratoire" ; -- tocheck
lin conspire_V = mkV "conspirer" ; -- UWN
lin constable_N = mkN "connétable" ; -- tocheck
lin constabulary_N = mkN "droit" | mkN "loi" | mkN "police" | mkN "policier" ; -- UWN
lin constancy_N = mkN "constance" feminine ; -- tocheck
lin constant_A = mkA "constant" ; -- tocheck
lin constant_N = mkN "constante" feminine ; -- tocheck
lin constellation_N = mkN "constellation" feminine ; -- tocheck
lin consternation_N = mkN "consternation" feminine ; -- tocheck
lin constipate_V2 = mkV2 (mkV "constiper") ; -- tocheck
lin constipation_N = mkN "constipation" feminine ; -- tocheck
lin constituency_N = mkN "circonscription" ; -- UWN
lin constituent_N = variants {} ; --
lin constitute_V2 = mkV2 (mkV "constituer") ; -- tocheck
lin constitution_N = mkN "constitution" feminine ; -- tocheck
lin constitutional_A = mkA "constitutionnel" ; -- tocheck
lin constitutional_N = mkN "constitutionnel" ; -- UWN
lin constitutionalize_V2 = mkV2 (mkV "constitutionaliser") ; -- tocheck
lin constrain_V2 = mkV2 (mkV I.astreindre_V2) ; -- tocheck
lin constraint_N = mkN "contrainte" feminine ; -- tocheck
lin construct_V2 = mkV2 (mkV I.construire_V2) ; -- tocheck
lin construction_N = mkN "construction" feminine ; -- tocheck
lin constructive_A = mkA "constructif" | mkA "implicite" ; -- tocheck
lin constructivism_N = mkN "constructivisme" ; -- tocheck
lin constructivist_N = mkN "constructiviste" ; -- UWN
lin constructor_N = mkN "constructeur" masculine ; -- tocheck
lin construe_V = mkV "analyser" | mkV "comprendre" | mkV "entendre" | mkV "interpréter" | mkV "traduire" | mkV "voir" ; -- UWN
lin construe_V2V = mkV2V (mkV "expliquer") ; -- tocheck
lin consubstantiation_N = mkN "consubstantiation" ; -- UWN
lin consul_N = mkN "consul" masculine ; -- tocheck
lin consular_A = mkA "consulaire" ; -- tocheck
lin consulate_N = mkN "consulat" masculine ; -- tocheck
lin consult_V = mkV "consulter" ; -- UWN
lin consult_V2 = variants {} ; --
lin consultancy_N = mkN "conseil_et_expertise" ; -- UWN
lin consultant_N = mkN "consultant" masculine ; -- tocheck
lin consultation_N = mkN "consultation" feminine ; -- tocheck
lin consultative_A = mkA "consultatif" | mkA "facultatif" ; -- UWN
lin consume_V = variants {} ; -- mkV2 (mkV "consommer") | mkV2 (mkV "consumer") ; -- tocheck
lin consume_V2 = mkV2 (mkV "consommer") | mkV2 (mkV "consumer") ; -- tocheck
lin consumer_N = mkN "consommateur" ; -- tocheck
lin consumerism_N = mkN "consumérisme" ; -- UWN
lin consummate_A = mkA "consommé" ; -- tocheck
lin consummate_V2 = mkV2 (mkV "consommer") ; -- tocheck
lin consumption_N = mkN "consommation" | mkN "consommation" feminine ; -- tocheck
lin contact_N = mkN "contact" masculine | mkN "lentille" feminine ; -- tocheck
lin contact_V2 = mkV2 (mkV "contacter") | mkV2 (mkV "toucher") ; -- tocheck
lin contagion_N = mkN "contagion" feminine ; -- tocheck
lin contagious_A = mkA "contagieux" ; -- tocheck
lin contain_V2 = mkV2 (mkV I.contenir_V2) ;
lin container_N = mkN "récipient" masculine | mkN "conteneur" masculine ; -- tocheck
lin containment_N = mkN "confinement" | mkN "endiguement" ; -- UWN
lin contaminant_N = mkN "contamination" ; -- UWN
lin contaminate_V2 = mkV2 (mkV "contaminer") ; -- tocheck
lin contamination_N = mkN "contamination" feminine ; -- tocheck
lin contemplate_V = variants {} ; -- mkV2 (mkV "envisager") ; -- tocheck
lin contemplate_V2 = mkV2 (mkV "envisager") ; -- tocheck
lin contemplate_VS = variants {} ; -- mkV2 (mkV "envisager") ; -- tocheck
lin contemplation_N = mkN "contemplation" feminine ; -- tocheck
lin contemplative_A = mkA "pensif" | mkA "recueilli" ; -- UWN
lin contemporaneous_A = mkA "contemporain" ; -- tocheck
lin contemporary_A = mkA "contemporain" ; -- tocheck
lin contemporary_N = mkN "contemporain" masculine ; -- tocheck
lin contempt_N = mkN "mépris" masculine | mkN "outrage" masculine ; -- tocheck
lin contemptible_A = mkA "méprisable" ; -- tocheck
lin contend_V = variants {} ; --
lin contend_VS = mkvVS "postuler" ; -- UWN
lin contender_N = mkN "chalengeur" | mkN "challengeur" | mkN "compétiteur" | mkN "compétitrice" | mkN "concurrence" | mkN "concurrent" | mkN "rival" ; -- UWN
lin content_A = mkA "content" ; -- tocheck
lin content_N = mkN "contenu" masculine ; -- tocheck
lin content_V2 = mkV2 (mkV I.satisfaire_V2) ; -- tocheck
lin contentedness_N = mkN "contenu" | mkN "fond" | mkN "teneur" ; -- UWN
lin contention_N = mkN "Controverse" | mkN "argument" | mkN "controverse" | mkN "polémique" | mkN "querelle" ; -- UWN
lin contentious_A = mkA "belliqueux" | mkA "controversé" ; -- tocheck
lin contentment_N = mkN "contentement" masculine ; -- tocheck
lin contents_N = mkN "contenu" masculine ; -- tocheck
lin conterminous_A = mkA "limitrophe" ; -- tocheck
lin contest_N = mkN "concours" masculine ; -- tocheck
lin contest_V = variants {} ; --
lin contest_V2 = variants {} ; --
lin contestable_A = mkA "contestable" ; -- tocheck
lin context_N = mkN "contexte" masculine ; -- tocheck
lin contextual_A = mkA "contextuel" ; -- tocheck
lin contiguity_N = mkN "contiguïté" feminine ; -- tocheck
lin contiguous_A = mkA "contigu" ; -- tocheck
lin continent_A = mkA "continent" ; -- UWN
lin continent_N = mkN "continent" masculine ; -- tocheck
lin continental_A = mkA "continental" ; -- tocheck
lin contingency_N = mkN "contingence" feminine ; -- tocheck
lin contingent_A = mkA "contingent" ; -- tocheck
lin continual_A = variants {} ;
lin continuance_N = mkN "continuation" | mkN "poursuite" | mkN "reprise" ; -- UWN
lin continuation_N = mkN "continuation" feminine ; -- tocheck
lin continue_V = mkV "continuer" ;
lin continue_V2 = mkV2 (mkV "continuer") ;
lin continue_VV = aVV (mkV "continuer") ;
lin continue_on_V = advV OP_continue_V OP_on_Adv ; -- guess-p-verb
lin continued_A = variants {} ; --
lin continuing_A = variants {} ; --
lin continuity_N = mkN "continuité" feminine ; -- tocheck
lin continuous_A = mkA "continu" ; -- tocheck
lin contortion_N = mkN "contorsion" feminine ; -- tocheck
lin contortionist_N = mkN "contorsionniste" ; -- tocheck
lin contour_N = mkN "contour" masculine ; -- tocheck
lin contraband_N = mkN "contrebande" feminine ; -- tocheck
lin contrabass_N = mkN "contrebasse" ; -- UWN
lin contrabassoon_N = mkN "contrebasson" ; -- tocheck
lin contraception_N = mkN "contraception" feminine ; -- tocheck
lin contraceptive_A = mkA "contraceptif" ; -- tocheck
lin contraceptive_N = mkN "contraceptif" masculine ; -- tocheck
lin contract_N = mkN "contrat" masculine ; -- tocheck
lin contract_V = variants {} ; -- mkV2V (mkV "contracter") | mkV2V (reflV (mkV "rétracter")) ; -- tocheck
lin contract_V2 = variants {} ; -- mkV2V (mkV "contracter") | mkV2V (reflV (mkV "rétracter")) ; -- tocheck
lin contract_V2V = mkV2V (mkV "contracter") | mkV2V (reflV (mkV "rétracter")) ; -- tocheck
lin contraction_N = mkN "contraction" feminine ; -- tocheck
lin contractor_N = mkN "sous-traitant" masculine | mkN "entrepreneur" masculine | mkN "entrepreneur" ; -- tocheck
lin contractual_A = mkA "contractuel" ; -- UWN
lin contracture_N = mkN "contracture" ; -- UWN
lin contradict_V2 = mkV2 (mkV I.contredire_V2) ; -- tocheck
lin contradiction_N = mkN "contradiction" feminine ; -- tocheck
lin contradictory_A = mkA "contradictoire" ; -- tocheck
lin contraindication_N = mkN "contre-indication" feminine ; -- tocheck
lin contralto_N = mkN "contralto" masculine ; -- tocheck
lin contrariety_N = mkN "contrariété" ; -- UWN
lin contrarious_A = mkA "contraire" ; -- tocheck
lin contrariwise_Adv = mkAdv "au_contraire" | mkAdv "contrairement" ; -- UWN
lin contrary_A = variants {} ; --
lin contrary_N = variants {} ; --
lin contrast_N = mkN "contraste" | mkN "contraster" ; -- UWN
lin contrast_V = variants {} ; -- mkV2 (mkV "contraster") ; -- tocheck
lin contrast_V2 = mkV2 (mkV "contraster") ; -- tocheck
lin contravention_N = mkN "contravention" | mkN "différend" | mkN "dispute" | mkN "litige" | mkN "querelle" ; -- UWN
lin contribute_V = variants {} ; -- mkV2V (mkV "contribuer") ; -- tocheck
lin contribute_V2 = variants {} ; -- mkV2V (mkV "contribuer") ; -- tocheck
lin contribution_N = mkN "contribution" feminine ; -- tocheck
lin contributor_N = mkN "contributeur" | mkN "soumissionnaire" ; -- tocheck
lin contributory_A = mkA "favorable" ; -- UWN
lin contrite_A = mkA "contrit" ; -- tocheck
lin contrition_N = mkN "contrition" feminine ; -- tocheck
lin contrivance_N = mkN "appareil" masculine ; -- tocheck
lin contrive_V2 = mkV2 (mkV "combiner") ; -- tocheck
lin contriver_N = mkN "organisateur" ; -- UWN
lin control_N = mkN "contrôle" masculine ;
lin control_V2 = mkV2 (mkV "contrôler") ; -- tocheck
lin controllable_A = mkA "contrôlable" ; -- tocheck
lin controlled_A = variants {} ; --
lin controller_N = mkN "contrôleur" | mkN "contrôleur" masculine ; -- tocheck
lin controversial_A = mkA "controversé" ; -- tocheck
lin controversialist_N = mkN "controversiste" ; -- tocheck
lin controversy_N = mkN "controverse" feminine ; -- tocheck
lin contumacious_A = mkA "contumace" ; -- UWN
lin contumacy_N = mkN "contumace" feminine ; -- tocheck
lin contumelious_A = mkA "insolent" ; -- tocheck
lin contumely_N = mkN "abus" | mkN "affront" | mkN "insulter" | mkN "violation" ; -- UWN
lin contusion_N = mkN "ecchymose" feminine ; -- tocheck
lin conundrum_N = mkN "dilemme" masculine | mkN "énigme" feminine ; -- tocheck
lin conurbation_N = mkN "conurbation" feminine ; -- tocheck
lin convector_N = mkN "convecteur" masculine ; -- tocheck
lin convene_V = mkV "amener" | mkV "convoquer" | mkV "emmener" ; -- UWN
lin convener_N = mkN "convoqueur" ; -- UWN
lin convenience_N = mkN "commodité" feminine ; -- tocheck
lin convenient_A = mkA "commode" ; -- tocheck
lin convent_N = mkN "couvent" masculine ; -- tocheck
lin convention_N = mkN "convention" ; -- tocheck
lin conventional_A = mkA "conventionnel" ; -- tocheck
lin converge_V = mkV (mkV "converger") ; -- tocheck
lin conversation_N = mkN "conversation" feminine ; -- tocheck
lin conversational_A = mkA "familier" | mkA "parlé" ; -- UWN
lin converse_A = variants {} ;
lin converse_N = mkN "converser" ; -- UWN
lin converse_V = mkV (mkV "converser") ; -- tocheck
lin conversion_N = mkN "conversion" ; -- UWN
lin convert_N = mkN "reconverti" ; -- tocheck
lin convert_V = variants {} ; -- mkV2 (mkV "convertir") ; -- tocheck
lin convert_V2 = mkV2 (mkV "convertir") ; -- tocheck
lin converter_N = mkN "convertisseur" ; -- tocheck
lin convertible_A = mkA "convertible" ; -- tocheck
lin convertible_N = mkN "décapotable" feminine ; -- tocheck
lin convex_A = mkA "convexe" ; -- tocheck
lin convexity_N = mkN "convexité" feminine ; -- tocheck
lin convey_V2 = mkV2 (mkV "transporter") | mkV2 (mkV "véhiculer") ; -- tocheck
lin conveyance_N = mkN "transport" ; -- UWN
lin conveyer_N = mkN "bande_transporteuse" | mkN "convoyeur" ; -- UWN
lin conveyor_N = mkN "convoyeur" masculine ; -- tocheck
lin convict_N = mkN "bagnard" masculine ; -- tocheck
lin convict_V2 = variants {} ; --
lin conviction_N = mkN "certitude" | mkN "conviction" ; -- UWN
lin convince_V2 = variants {} ; -- mkV2V (mkV I.convaincre_V2) ; -- tocheck
lin convince_V2V = mkV2V (mkV I.convaincre_V2) ; -- tocheck
lin convincing_A = mkA "convaincant" ; -- tocheck
lin convocation_N = mkN "convocation" ; -- UWN
lin convoluted_A = mkA "convoluté" ; -- tocheck
lin convolvulus_N = mkN "convolvulus" masculine ; -- tocheck
lin convoy_N = mkN "convoi" ; -- tocheck
lin convulsion_N = mkN "convulsion" feminine ; -- tocheck
lin convulsive_A = mkA "spasmodique" ; -- UWN
lin conwy_PN = mkPN "Conwy" ; -- status=guess src=geonames
lin cony_N = mkN "lapin" ; -- UWN
lin coo_N = mkN "roucoulement" masculine ; -- tocheck
lin coo_V2 = mkV2 (mkV "roucouler") ; -- tocheck
lin cook_N = mkN "chef" ; -- tocheck
lin cook_V = variants {} ; -- mkV2 (mkV I.cuire_V2) | mkV2 (mkV "cuisiner") ; -- tocheck
lin cook_V2 = mkV2 (mkV I.cuire_V2) | mkV2 (mkV "cuisiner") ; -- tocheck
lin cookbook_N = mkN "^" | mkN "cuisinier" | mkN "cuisinière" | mkN "livre_de_cuisine" ; -- UWN
lin cooker_N = mkN "cuiseur" ; -- UWN
lin cookery_N = mkN "cuisine" | mkN "cuisson" | mkN "cuistance" | mkN "lexique_de_techniques_culinaires" | mkN "préparation" | mkN "techniques_culinaires" ; -- UWN
lin cookham_PN = mkPN "Cookham" ; -- status=guess src=geonames
lin cookie_N = mkN "biscuit" masculine ; -- tocheck
lin cooking_N = mkN "cuisine" feminine ;
lin cooky_N = mkN "biscuit" | mkN "galette" ; -- UWN
lin cool_A = mkA "cool" | mkA "chouette" | mkA "frais" | mkA "sympa" ; -- tocheck
lin cool_V = variants {} ; --
lin cool_V2 = variants {} ; --
lin coolant_N = mkN "refroidisseur" ; -- UWN
lin cooler_N = mkN "glacière" | mkN "refroidisseur" ; -- UWN
lin coolie_N = mkN "coolie" ; -- tocheck
lin cooling_N = mkN "refroidissement" masculine ; -- tocheck
lin coolness_N = mkN "frais" ; -- tocheck
lin coop_N = mkN "cage" | mkN "poulailler" ; -- UWN
lin cooper_N = mkN "tonnelier" ; -- tocheck
lin cooperate_V = mkV (mkV "coopérer") ; -- tocheck
lin cooperation_N = mkN "coopération" feminine ; -- tocheck
lin cooperative_A = variants {} ; --
lin coordinate_A = mkA "coordonner" | mkA "coordonnée" ; -- UWN
lin coordinate_N = mkN "coordonnée" feminine ; -- tocheck
lin coordinate_V = variants {} ; -- mkV2 (mkV "coordonner") ; -- tocheck
lin coordinate_V2 = mkV2 (mkV "coordonner") ; -- tocheck
lin coordination_N = mkN "coordination" feminine ; -- tocheck
lin coordinator_N = mkN "coordonnateur" masculine ; -- tocheck
lin coot_N = mkN "foulque" | mkN "foulques" | mkN "fulica" ; -- UWN
lin cop_N = mkN "flic" masculine ; -- tocheck
lin cop_V2 = variants {} ; --
lin copacetic_A = mkA "super" ; -- tocheck
lin copaiba_N = mkN "copaiba" ; -- UWN
lin copartner_N = mkN "partenaire" ; -- UWN
lin cope_N = mkN "chape" feminine ; -- tocheck
lin cope_V = mkV (reflV (mkV "débrouiller")) ; -- tocheck
lin copenhagen_PN = mkPN "Copenhague" ; -- status=guess src=geonames
lin copepod_N = mkN "Copepoda" | mkN "copepoda" | mkN "copépodes" ; -- UWN
lin copilot_N = mkN "copilote" ; -- tocheck
lin coping_N = mkN "arête" | mkN "chape" ; -- UWN
lin copper_N = mkN "cuivré" masculine | mkN "cuivre" masculine | mkN "flic" masculine ; -- tocheck
lin coppersmith_N = mkN "dinandier" masculine ; -- tocheck
lin coppery_A = mkA "cuivré" ; -- UWN
lin coppice_N = mkN "taillis" masculine ; -- tocheck
lin coppull_PN = mkPN "Coppull" ; -- status=guess src=geonames
lin copra_N = mkN "coprah" masculine ; -- tocheck
lin coproduction_N = mkN "coproduction" feminine ; -- tocheck
lin coprolalia_N = mkN "coprolalie" ; -- UWN
lin coprophagy_N = mkN "coprophagie" ; -- UWN
lin copse_N = mkN "taillis" masculine ; -- tocheck
lin copula_N = mkN "copule" feminine ; -- tocheck
lin copulate_V = mkV (mkV "coïter") ; -- tocheck
lin copulative_N = mkN "copule" ; -- UWN
lin copy_N = mkN "copie" feminine ; -- tocheck
lin copy_V = variants {} ; -- mkV2 (mkV "imiter") | mkV2 (mkV "copier") | mkV2 (mkV I.recevoir_V2) ; -- tocheck
lin copy_V2 = mkV2 (mkV "imiter") | mkV2 (mkV "copier") | mkV2 (mkV I.recevoir_V2) ; -- tocheck
lin copycat_N = mkN "copycat" masculine ; -- tocheck
lin copying_N = mkN "copiage" masculine ; -- tocheck
lin copyist_N = mkN "scribe" ; -- UWN
lin copyright_N = variants {} ; --
lin copywriter_N = mkN "rédacteur" masculine ; -- tocheck
lin coquetry_N = mkN "coquetterie" feminine ; -- tocheck
lin coquette_N = mkN "allumeuse" feminine ; -- tocheck
lin coquettish_A = mkA "coquette" ; -- tocheck
lin coral_A = mkA "corail" ; -- UWN
lin coral_N = mkN "corail" masculine ; -- tocheck
lin corby_PN = mkPN "Corby" ; -- status=guess src=geonames
lin cord_N = mkN "corde" feminine ; -- tocheck
lin cordial_N = mkN "sirop" masculine ; -- tocheck
lin cordiality_N = mkN "amitié" ; -- UWN
lin cordierite_N = mkN "cordiérite" feminine ; -- tocheck
lin cordite_N = mkN "cordite" ; -- UWN
lin core_N = mkN "centre" masculine | mkN "coeur" masculine | mkN "trognon" masculine ; -- tocheck
lin coreopsis_N = mkN "coréopsis" masculine ; -- tocheck
lin corgi_N = mkN "corgi" masculine ; -- tocheck
lin coriander_N = mkN "coriandre" ; -- tocheck
lin cork_N = mkN "bouchon" masculine | mkN "liège" masculine ; -- tocheck
lin cork_PN = mkPN "Cork" ; -- status=guess src=geonames
lin corkscrew_N = mkN "tire-bouchon" masculine ; -- tocheck
lin corm_N = mkN "tubercule" ; -- UWN
lin cormorant_N = mkN "cormoran" masculine ; -- tocheck
lin corn_N = mkN "cor" masculine ; -- tocheck
lin corncob_N = mkN "épi" ; -- tocheck
lin cornea_N = mkN "cornée" feminine ; -- tocheck
lin corneal_A = mkA "cornéen" ; -- UWN
lin cornelian_N = mkN "cornaline" ; -- UWN
lin corner_N = mkN "coin" masculine ; -- tocheck
lin corner_V2 = mkV2 (mkV "rencogner") | mkV2 (mkV "manoeuvrer") | mkV2 (mkV "tourner") | mkV2 (mkV "piéger") ; -- tocheck
lin cornerback_N = mkN "cornerback" ; -- UWN
lin cornet_N = mkN "cornet" masculine | mkN "cornette" masculine ; -- tocheck
lin cornetfish_N = mkN "Fistulariidae" | mkN "Fistulariidés" | mkN "fistulariidae" | mkN "fistulariidés" ; -- UWN
lin cornflour_N = mkN "Maïzena" | mkN "maïzena" ; -- UWN
lin cornflower_N = mkN "bleuet" masculine ; -- tocheck
lin cornice_N = mkN "corniche" feminine ; -- tocheck
lin cornsmut_N = mkN "charbon_du_maïs" ; -- UWN
lin cornstarch_N = mkN "Maïzena" | mkN "maïzena" ; -- UWN
lin cornu_N = mkN "cornu" ; -- UWN
lin cornucopia_N = mkN "corne_d'abondance" | mkN "cornucopia" | mkN "excès" | mkN "fortune" | mkN "surabondance" ; -- UWN
lin cornwall_PN = mkPN "Cornwall" ; -- status=guess src=geonames
lin corny_A = mkA "kitsch" | mkA "banal" ; -- tocheck
lin corolla_N = mkN "corolle" feminine ; -- tocheck
lin corollary_N = mkN "corollaire" masculine ; -- tocheck
lin corona_N = mkN "couronne" feminine ; -- tocheck
lin coronation_N = mkN "couronnement" ; -- tocheck
lin coronilla_N = mkN "coronilla" | mkN "coronille" ; -- UWN
lin corporal_A = mkA "corporel" ; -- tocheck
lin corporal_N = mkN "corporal" masculine | mkN "caporal" masculine ; -- tocheck
lin corporate_A = variants {} ; --
lin corporation_N = mkN "corporation" feminine ; -- tocheck
lin corporeal_A = mkA "corporel" | mkA "matériel" ; -- UWN
lin corps_N = mkN "corps" masculine ; -- tocheck
lin corps_de_ballet_N = mkN "ensemble" ; -- UWN
lin corpse_N = mkN "cadavre" masculine ; -- tocheck
lin corpulence_N = mkN "corpulence" feminine ; -- tocheck
lin corpulent_A = mkA "corpulent" ; -- tocheck
lin corpus_N = mkN "corpus" masculine ; -- tocheck
lin corpuscle_N = mkN "corpuscule" masculine ; -- tocheck
lin corral_N = mkN "corral" masculine ; -- tocheck
lin correct_A = L.correct_A ;
lin correct_V = variants {} ; -- mkV2 (mkV "corriger") ; -- tocheck
lin correct_V2 = mkV2 (mkV "corriger") ; -- tocheck
lin correct_VS = variants {} ; -- mkV2 (mkV "corriger") ; -- tocheck
lin correction_1_N = mkN "correction" feminine ; -- tocheck
lin correction_2_N = mkN "correction" feminine ; -- tocheck
lin corrective_A = mkA "correcteur" ; -- tocheck
lin corrective_N = mkN "correcteur" | mkN "correction" ; -- UWN
lin correctness_N = mkN "conformité" ; -- tocheck
lin correlate_N = mkN "corréler" ; -- UWN
lin correlate_V = mkV "corréler" ; -- UWN
lin correlation_N = mkN "corrélation" feminine ; -- tocheck
lin correlative_A = mkA "corréler" ; -- UWN
lin correlative_N = mkN "corréler" ; -- UWN
lin correspond_V = mkV "correspondre" ; -- UWN
lin correspond_V2 = variants {} ; --
lin correspondence_N = mkN "correspondance" feminine ; -- tocheck
lin correspondent_N = mkN "épistolier" ; -- UWN
lin corresponding_A = variants {} ; --
lin corridor_N = mkN "couloir" masculine | mkN "corridor" masculine ; -- tocheck
lin corrie_N = mkN "cirque" feminine ; -- tocheck
lin corrigendum_N = mkN "erratum" | mkN "erratum" masculine ; -- tocheck
lin corroboration_N = mkN "certification" | mkN "corroboration" | mkN "document" | mkN "documentation" ; -- UWN
lin corroborative_A = mkA "collatéral" ; -- UWN
lin corrode_V2 = mkV2 (mkV "éroder") | mkV2 (mkV "corroder") ; -- tocheck
lin corrosion_N = mkN "corrosion" feminine ; -- tocheck
lin corrosive_A = mkA "corrosif" ; -- UWN
lin corrosive_N = mkN "corrosif" ; -- UWN
lin corrugate_V = mkV "onduler" ; -- UWN
lin corrupt_A = mkA "corrompu" ; -- tocheck
lin corrupt_V2 = mkV2 (mkV I.corrompre_V2) ; -- tocheck
lin corruptible_A = mkA "corruptible" ; -- tocheck
lin corruption_N = mkN "corruption" feminine ; -- tocheck
lin corruptness_N = mkN "corruption" ; -- UWN
lin corsage_N = mkN "bouquet" ; -- UWN
lin corsair_N = mkN "pirate" | mkN "corsaire" ; -- tocheck
lin corselet_N = mkN "combiné" masculine ; -- tocheck
lin corset_N = mkN "corset" masculine ; -- tocheck
lin corsham_PN = mkPN "Corsham" ; -- status=guess src=geonames
lin corslet_N = mkN "combiné" ; -- UWN
lin cortege_1_N = mkN "cortège" masculine ; -- tocheck ---- sense to be split
lin cortege_2_N = mkN "cortège" masculine ; -- tocheck ---- sense to be split
lin cortege_N = mkN "cortège" masculine ; -- tocheck
lin cortex_N = mkN "cortex" masculine ; -- tocheck
lin cortical_A = mkA "cortical" ; -- UWN
lin corticosteroid_N = mkN "corticostéroïde" | mkN "corticostéroïdes" | mkN "corticoïde" | mkN "corticoïdes" ; -- UWN
lin cortisone_N = mkN "cortisone" feminine ; -- tocheck
lin corundom_N = mkN "corindon" ; -- UWN
lin corundum_N = mkN "corindon" masculine ; -- tocheck
lin corunna_PN = mkPN "Corunna" ; -- status=guess src=geonames
lin coruscation_N = mkN "coruscation" feminine ; -- tocheck
lin corvette_N = mkN "corvette" feminine ; -- tocheck
lin corvine_A = mkA "corvide" ; -- tocheck
lin corynebacterium_N = mkN "corynebacterium" ; -- UWN
lin corythosaur_N = mkN "corythosaurus" ; -- UWN
lin coscoroba_N = mkN "coscoroba" | mkN "coscorobas" ; -- UWN
lin cosecant_N = mkN "cosécante" feminine ; -- tocheck
lin cosenza_PN = mkPN "Cosenza" ; -- status=guess src=geonames
lin cosignatory_N = mkN "cosignataire" ; -- tocheck
lin cosine_N = mkN "cosinus" masculine ; -- tocheck
lin cosmetic_N = mkN "cosmétique" masculine ; -- tocheck
lin cosmetician_N = mkN "esthéticien" ; -- UWN
lin cosmic_A = mkA "cosmique" ; -- tocheck
lin cosmogony_N = mkN "cosmogonie" feminine ; -- tocheck
lin cosmographer_N = mkN "cosmographe" ; -- tocheck
lin cosmology_N = mkN "cosmologie" feminine ; -- tocheck
lin cosmonaut_N = mkN "cosmonaute" masculine ; -- tocheck
lin cosmopolitan_A = mkA "cosmopolite" ; -- tocheck
lin cosmopolitan_N = mkN "cosmopolite" ; -- UWN
lin cosmos_N = mkN "cosmos" masculine ; -- tocheck
lin cost_N = mkN "coût" masculine ;
lin cost_V = mkV "coûter" ;
lin cost_V2 = mkV2 (mkV "coûter") | I.valoir_V2 ; ---- sense valoir be worth
lin cost_up_V2 = prepV2 OP_cost_V OP_up_Prep ; -- guess-p-verb
lin costa_N = mkN "côte" ; -- UWN
lin costing_N = mkN "calcul_des_coûts" ; -- UWN
lin costly_A = mkA "coûteux" ; -- tocheck
lin costume_N = mkN "costume" masculine ; -- tocheck
lin costumier_N = mkN "costumier" masculine ; -- tocheck
lin cosy_A = mkA "douillet" ; -- tocheck
lin cosy_N = mkN "douillet" ; -- UWN
lin cot_N = mkN "lit_de_camp" ; -- UWN
lin cotangent_N = mkN "cotangente" masculine ; -- tocheck
lin cote_N = mkN "cote" ; -- UWN
lin cotenant_N = mkN "colocataire" ; -- UWN
lin coterie_N = mkN "coterie" feminine | mkN "coterie" ; -- tocheck
lin cotinga_N = mkN "cotinga" | mkN "cotingidae" | mkN "cotingidés" ; -- UWN
lin cotoneaster_N = mkN "cotoneaster" | mkN "cotonéaster" ; -- UWN
lin cottage_N = mkN "cottage" masculine ; -- tocheck
lin cotton_N = mkN "coton" | mkN "coton" masculine ; -- tocheck
lin cottontail_N = mkN "lapin_d'amérique" | mkN "lapins_d'amérique" ; -- UWN
lin cotyledon_N = mkN "cotylédon" masculine ; -- tocheck
lin coucal_N = mkN "centropodinae" | mkN "centropodinés" | mkN "coucals" ; -- UWN
lin couch_N = mkN "sofa" masculine ; -- tocheck
lin cougar_N = mkN "cougar" ; -- tocheck
lin cough_N = mkN "toux" feminine ; -- tocheck
lin cough_V = variants {} ; -- mkV2 (mkV "tousser") ; -- tocheck
lin coulomb_N = mkN "coulomb" masculine ; -- tocheck
lin council_N = mkN "conseil" masculine ;
lin councillor_N = mkN "conseiller_municipal" | mkN "échevin" ; -- UWN
lin councilman_N = mkN "conseil" ; -- UWN
lin counsel_N = mkN "conseil" ; -- tocheck
lin counsel_V2 = mkV2 (mkV "conseiller") ; -- tocheck
lin counselling_N = variants {} ; --
lin counsellor_N = mkN "conseiller" masculine ;
lin count_N = mkN "compte" masculine | mkN "comte" masculine ; -- tocheck
lin count_V = variants {} ; -- L.count_V2 ;
lin count_V2 = L.count_V2 ;
lin count_against_V2 = prepV2 OP_count_V OP_against_Prep ; -- guess-p-verb
lin count_among_V2 = prepV2 OP_count_V OP_among_Prep ; -- guess-p-verb
lin count_down_V2 = prepV2 OP_count_V OP_down_Prep ; -- guess-p-verb
lin count_for_V2 = prepV2 OP_count_V OP_for_Prep ; -- guess-p-verb
lin count_in_V2 = prepV2 OP_count_V OP_in_Prep ; -- guess-p-verb
lin count_off_V2 = prepV2 OP_count_V OP_off_Prep ; -- guess-p-verb
lin count_on_V2 = prepV2 OP_count_V OP_on_Prep ; -- guess-p-verb
lin count_out_V2 = prepV2 OP_count_V OP_out_Prep ; -- guess-p-verb
lin count_towards_V2 = prepV2 OP_count_V OP_towards_Prep ; -- guess-p-verb
lin count_up_V2 = prepV2 OP_count_V OP_up_Prep ; -- guess-p-verb
lin count_upon_V2 = prepV2 OP_count_V OP_upon_Prep ; -- guess-p-verb
lin countable_A = mkA "dénombrable" ; -- tocheck
lin countdown_N = mkN "hit-parade" masculine ; -- tocheck
lin counter_Adv = mkAdv "contre" ; -- tocheck
lin counter_N = mkN "compteur" | mkN "compteur" masculine | mkN "guichet" masculine ; -- tocheck
lin counter_V = variants {} ; --
lin counter_VS = variants {} ; --
lin counteractive_A = mkA "antagonique" ; -- UWN
lin counterargument_N = mkN "contre-argument" masculine ; -- tocheck
lin counterbalance_N = mkN "contrepoids" masculine ; -- tocheck
lin counterbalance_V2 = mkV2 (mkV "contrebalancer") ; -- tocheck
lin counterclockwise_Adv = mkAdv "sens_antihoraire" ; -- UWN
lin counterculture_N = mkN "contreculture" ; -- UWN
lin countercurrent_N = mkN "contre-courant" masculine ; -- tocheck
lin counterespionage_N = mkN "contre-espionnage" masculine ; -- tocheck
lin counter_example_N = mkN "contrexemple" masculine ; -- tocheck
lin counterfeit_A = mkA "contrefait" ; -- tocheck
lin counterfeit_N = mkN "contrefaçon" ; -- tocheck
lin counterfeit_V2 = mkV2 (mkV I.contrefaire_V2) ; -- tocheck
lin counterfeiter_N = mkN "faux-monnayeur" masculine ; -- tocheck
lin counterglow_N = mkN "gegenschein" | mkN "lueur_anti-solaire" ; -- UWN
lin counterintelligence_N = mkN "contre-espionnage" masculine ; -- tocheck
lin countermeasure_N = mkN "contre-mesure" feminine ; -- tocheck
lin counterpart_N = mkN "homologue" ; -- tocheck
lin counterpoint_N = mkN "contrepoint" ; -- UWN
lin counterpoise_N = mkN "but_égalisateur" | mkN "contrepoids" | mkN "égaliseur" | mkN "équilibre" ; -- UWN
lin countershot_N = mkN "contrechamp" ; -- UWN
lin countersign_N = mkN "contresignature" | mkN "contresigner" | mkN "cosignature" ; -- UWN
lin countersign_V2 = mkV2 (mkV "contresigner") ; -- tocheck
lin countersignature_N = mkN "contresignature" feminine ; -- tocheck
lin counterspy_N = mkN "mole" | mkN "taupe" ; -- UWN
lin countertenor_N = mkN "contreténor" masculine | mkN "contreteneur" ; -- tocheck
lin counterterrorism_N = mkN "contreterrorisme" ; -- UWN
lin countertransference_N = mkN "contre-transfert" ; -- UWN
lin counterweight_N = mkN "contrepoids" masculine ; -- tocheck
lin countess_N = mkN "comtesse" feminine ; -- tocheck
lin countless_A = mkA "incalculable" ; -- tocheck
lin country_N = L.country_N ;
lin countryman_N = mkN "compatriote" ; -- tocheck
lin countryside_N = mkN "campagne" feminine ; -- tocheck
lin county_N = mkN "comté" | mkN "comté" masculine ; -- tocheck
lin coup_N = mkN "coup" | mkN "putsch" ; -- UWN
lin coup_d'etat_N = mkN "coup" | mkN "coup_d'état" | mkN "coup_d’État" | mkN "coup_d’état" | mkN "prise_de_pouvoir" | mkN "putsch" ; -- UWN
lin coup_de_grace_N = mkN "coup_de_grâce" ; -- UWN
lin couple_N = mkN "quelques" | mkN "paire" feminine | mkN "couple" masculine ; -- tocheck
lin couple_V = variants {} ; --
lin couple_V2 = variants {} ; --
lin couplet_N = mkN "couplet" ; -- tocheck
lin coupling_N = mkN "dépendance" feminine ; -- tocheck
lin coupon_N = mkN "coupon" masculine | mkN "bon" masculine ; -- tocheck
lin courage_N = mkN "courage" masculine ; -- tocheck
lin courageous_A = mkA "courageux" ; -- tocheck
lin courgette_N = mkN "courgette" feminine ; -- tocheck
lin courier_N = mkN "coursier" masculine ; -- tocheck
lin course_N = mkN "cours" masculine | mkN "plat" masculine | mkN "trajectoire" feminine ; --- split senses
lin course_V2 = mkV2 (mkV I.parcourir_V2) ; -- tocheck
lin court_1_N = mkN "cour" feminine ;
lin court_2_N = mkN "cour" feminine ;
lin court_N = mkN "cour" feminine ;
lin court_V2 = mkV2 (mkV "courtiser") ; -- tocheck
lin courteous_A = mkA "courtois" ; -- tocheck
lin courtesan_N = mkN "courtisane" feminine ; -- tocheck
lin courtesy_N = mkN "indulgence" feminine | mkN "courtoisie" feminine | mkN "politesse" feminine ; -- tocheck
lin courtier_N = mkN "courtisan" masculine ; -- tocheck
lin courtly_A = mkA "formel" | mkA "élégant" ; -- UWN
lin courtroom_N = mkN "cour" | mkN "tribunal" ; -- UWN
lin courtship_N = mkN "cour" feminine ; -- tocheck
lin courtyard_N = mkN "cour" feminine ; -- tocheck
lin couscous_N = mkN "couscous" ; -- tocheck
lin cousin_N = L.cousin_N ;
lin couth_A = mkA "raffiné" ; -- tocheck
lin couture_N = mkN "couture" ; -- UWN
lin couturier_N = mkN "couturier" masculine ; -- tocheck
lin couvade_N = mkN "couvade" ; -- UWN
lin covariance_N = mkN "covariance" feminine ; -- tocheck
lin cove_N = mkN "arcade" feminine | mkN "grotte" feminine | mkN "crique" feminine ; -- tocheck
lin coven_N = mkN "sabbat" masculine | mkN "clique" feminine ; -- tocheck
lin covenant_N = mkN "pacte" ; -- UWN
lin coventry_PN = mkPN "Coventry" ; -- status=guess src=geonames
lin cover_N = mkN "couverture" feminine | mkN "couvercle" masculine | mkN "couvert" masculine ; -- tocheck
lin cover_V2 = mkV2 (mkV I.couvrir_V2) ;
lin cover_for_V2 = prepV2 (lin V OP_cover_V2) OP_for_Prep ; -- guess-p-verb
lin cover_up_V2 = prepV2 (lin V OP_cover_V2) OP_up_Prep ; -- guess-p-verb
lin coverage_N = mkN "couverture" feminine ; -- tocheck
lin coverall_N = mkN "combinaison" feminine ; -- tocheck
lin covert_N = mkN "couverture" ; -- UWN
lin covet_V2 = mkV2 (mkV "convoiter") ; -- tocheck
lin covetousness_N = mkN "convoitise" feminine ; -- tocheck
lin covey_N = mkN "mec" masculine ; -- tocheck
lin cow_N = L.cow_N ;
lin coward_N = mkN "couard" masculine ; -- tocheck
lin cowardice_N = mkN "lâcheté" feminine ; -- tocheck
lin cowardly_A = mkA "lâche" ; -- tocheck
lin cowbarn_N = mkN "étable" ; -- UWN
lin cowbell_N = mkN "cencerro" ; -- UWN
lin cowberry_N = mkN "airelle" | mkN "airelle_rouge" ; -- UWN
lin cowboy_N = mkN "cow-boy" ; -- tocheck
lin cowcatcher_N = mkN "pilote" ; -- UWN
lin cowdenbeath_PN = mkPN "Cowdenbeath" ; -- status=guess src=geonames
lin cower_V = mkV (reflV (mkV "recroqueviller")) ; -- tocheck
lin cowes_PN = mkPN "Cowes" ; -- status=guess src=geonames
lin cowgirl_N = mkN "vachère" feminine ; -- tocheck
lin cowhand_N = mkN "cow-boy" | mkN "vacher" ; -- UWN
lin cowherd_N = mkN "vacher" ; -- tocheck
lin cowhouse_N = mkN "étable" ; -- UWN
lin cowling_N = mkN "capot" | mkN "capote" | mkN "capuchon" | mkN "cylindre" ; -- UWN
lin cowman_N = mkN "cow-boy" | mkN "vacher" ; -- UWN
lin coworker_N = mkN "collègue" ; -- tocheck
lin cowpox_N = mkN "vaccine" feminine ; -- tocheck
lin cowshed_N = mkN "étable" feminine ; -- tocheck
lin cox_N = mkN "timonier" ; -- UWN
lin coxcomb_N = mkN "crête" ; -- UWN
lin coxswain_N = mkN "timonier" ; -- UWN
lin coy_A = mkA "timide" ; -- tocheck
lin coyote_N = mkN "coyote" masculine ; -- tocheck
lin coypu_N = mkN "ragondin" masculine ; -- tocheck
lin cozy_A = mkA "douillet" ; -- tocheck
lin crab_N = mkN "morpions" | mkN "crabe" masculine ; -- tocheck
lin crabgrass_N = mkN "digitaire" feminine ; -- tocheck
lin crack_N = mkN "fissure" feminine | mkN "plaisanterie" feminine | mkN "craquement" masculine | mkN "crack" masculine ; -- tocheck
lin crack_V2 = mkV2 (mkV "craquer") ; -- tocheck
lin crackbrained_A = mkA "stupide" ; -- UWN
lin crackdown_N = mkN "réplique" | mkN "réponse" | mkN "répression" ; -- UWN
lin cracker_N = mkN "cracker" masculine ; -- tocheck
lin cracking_N = mkN "fissure" | mkN "fracture" ; -- UWN
lin crackle_V = mkV (mkV "grésiller") ; -- tocheck
lin cracklings_N = mkN "friton" ; -- UWN
lin cradle_N = mkN "berceau" masculine ; -- tocheck
lin cradle_V2 = mkV2 (mkV "bercer") ; -- tocheck
lin craft_N = variants {} ; --
lin craftsman_N = mkN "artisan" masculine ; -- tocheck
lin crafty_A = mkA "rusé" ; -- tocheck
lin cram_V2 = mkV2 (reflV (mkV "gaver")) | mkV2 (mkV "gaver") | mkV2 (mkV "bâcler") | mkV2 (mkV "bourrer") | mkV2 (mkV "bachoter") | mkV2 (mkV "bûcher") ; -- tocheck
lin cramlington_PN = mkPN "Cramlington" ; -- status=guess src=geonames
lin cramp_N = mkN "crampe" feminine ; -- tocheck
lin crampon_N = mkN "alpiniste" ; -- UWN
lin cranberry_N = mkN "canneberge" feminine ; -- tocheck
lin crane_N = mkN "grue" feminine ; -- tocheck
lin cranial_A = mkA "crânien" ; -- tocheck
lin cranium_N = mkN "crâne" ; -- UWN
lin crank_A = mkA "manivelle" ; -- UWN
lin crank_N = mkN "manivelle" feminine ; -- tocheck
lin crankshaft_N = mkN "vilebrequin" ; -- tocheck
lin cranky_A = mkA "maussade" ; -- UWN
lin crap_N = mkN "crotte" feminine ; -- tocheck
lin craps_N = mkN "craps" ; -- UWN
lin crapshoot_N = mkN "craps" ; -- UWN
lin crash_N = mkN "descente" feminine | mkN "plantage" masculine | mkN "krach" masculine ; -- tocheck
lin crash_V = variants {} ; -- mkV2 (mkV "planter") | mkV2 (reflV (mkV "écraser")) | mkV2 (mkV "pieuter") ; -- tocheck
lin crash_dive_V = variants {} ; -- guess-p-verb
lin crash_land_V = variants {} ; -- guess-p-verb
lin crash_land_V2 = variants {} ; -- guess-p-verb
lin crash_out_V = advV OP_crash_V OP_out_Adv ; -- guess-p-verb
lin crass_A = mkA "grossier" ; -- tocheck
lin crate_N = mkN "caisse" feminine ; -- tocheck
lin crater_N = mkN "cratère" masculine ; -- tocheck
lin craton_N = mkN "Craton" | mkN "craton" ; -- UWN
lin cravat_N = mkN "ascot" ; -- UWN
lin crave_V = mkV "désirer" ; -- UWN
lin crave_V2 = mkV2 (mkV "souhaiter") ; -- tocheck
lin craven_N = mkN "couard" | mkN "lâche" ; -- UWN
lin craw_N = mkN "jabot" ; -- UWN
lin crawfish_N = mkN "langouste" | mkN "langoustine" | mkN "écrevisse" ; -- UWN
lin crawl_V = mkV (mkV "ramper") ; -- tocheck
lin crawley_PN = mkPN "Crawley" ; -- status=guess src=geonames
lin crayfish_N = mkN "écrevisse" ; -- tocheck
lin crayon_N = mkN "pastel" masculine ; -- tocheck
lin craze_N = mkN "engouement" ; -- tocheck
lin crazed_A = mkA "forcené" ; -- tocheck
lin crazy_A = mkA "fou" ; -- tocheck
lin crazy_N = mkN "fou" masculine ; -- tocheck
lin creak_N = mkN "craquement" masculine ; -- tocheck
lin creak_V = mkV (mkV "craquer") ; -- tocheck
lin creaky_A = mkA "gémissant" ; -- tocheck
lin cream_N = mkN "crème" feminine ; -- tocheck
lin creamery_N = mkN "crémerie" feminine ; -- tocheck
lin creamy_A = mkA "crémeux" ; -- tocheck
lin crease_N = mkN "pli" masculine ; -- tocheck
lin crease_V = mkV "chiffonner" | mkV "froisser" ; -- UWN
lin create_V = mkV "créer" ;
lin create_V2 = mkV2 (mkV "créer") ;
lin creatine_N = mkN "créatine" ; -- UWN
lin creation_N = mkN "création" feminine ; -- tocheck
lin creationism_N = mkN "créationnisme" masculine ; -- tocheck
lin creative_A = variants {} ; --
lin creativeness_N = mkN "créativité" ; -- UWN
lin creativity_N = mkN "créativité" feminine ; -- tocheck
lin creator_N = mkN "créateur" masculine ; -- tocheck
lin creature_N = mkN "créature" feminine ; -- tocheck
lin credence_N = mkN "crédit" masculine ; -- tocheck
lin credibility_N = mkN "crédibilité" feminine ; -- tocheck
lin credit_N = mkN "crédit" masculine | mkN "crédit" ; -- tocheck
lin credit_V2 = variants {} ; --
lin creditor_N = mkN "créancier" masculine ; -- tocheck
lin credits_N = mkN "générique" ; -- UWN
lin credit_worthy_A = mkA "responsable" ; -- UWN
lin credulity_N = mkN "crédulité" ; -- UWN
lin credulous_A = mkA "crédule" ; -- tocheck
lin credulousness_N = mkN "crédulité" ; -- UWN
lin creed_N = mkN "crédo" masculine ; -- tocheck
lin creek_N = mkN "ruisseau" masculine ; -- tocheck
lin creep_N = mkN "fatigue" feminine | mkN "rampement" masculine ; -- tocheck
lin creep_V = mkV (mkV "ramper") ; -- tocheck
lin creepy_A = mkA "angoissant" ; -- tocheck
lin cremate_V2 = mkV2 (mkV "crémer") ; -- tocheck
lin cremation_N = mkN "crémation" ; -- tocheck
lin crematorium_N = mkN "crématorium" masculine ; -- tocheck
lin crenate_A = mkA "découpé" | mkA "festonné" | mkA "échancré" ; -- UWN
lin crenel_N = mkN "créneau" masculine ; -- tocheck
lin creole_N = mkN "créole" masculine ; -- tocheck
lin creosote_N = mkN "créosote" masculine ; -- tocheck
lin crepe_1_N = mkN "crêpe" feminine ; -- tocheck ---- sense to be split
lin crepe_2_N = mkN "crêpe" feminine ; -- tocheck ---- sense to be split
lin crepe_N = mkN "crêpe" feminine ; -- tocheck
lin crepuscular_A = mkA "crépusculaire" ; -- tocheck
lin cres_PN = mkPN "Cres" ; -- status=guess src=geonames
lin crescendo_A = mkA "crescendo" ; -- UWN
lin crescendo_N = mkN "crescendo" ; -- UWN
lin crescent_N = mkN "croissant" ; -- tocheck
lin cresol_N = mkN "DNOC" | mkN "dnoc" ; -- UWN
lin cress_N = mkN "cresson" masculine ; -- tocheck
lin crest_N = mkN "crête" feminine | mkN "huppe" ; -- tocheck
lin creswell_PN = mkPN "Creswell" ; -- status=guess src=geonames
lin cretin_N = mkN "crétin" masculine ; -- tocheck
lin cretinism_N = mkN "crétinisme" ; -- UWN
lin cretonne_N = mkN "cretonne" ; -- UWN
lin crevasse_N = mkN "crevasse" feminine ; -- tocheck
lin crevice_N = mkN "fissure" ; -- tocheck
lin crew_N = mkN "équipe" masculine | mkN "équipage" masculine ; -- tocheck
lin crewe_PN = mkPN "Crewe" ; -- status=guess src=geonames
lin crib_N = mkN "huche" feminine | mkN "berceau" | mkN "antisèche" feminine ; -- tocheck
lin cribbage_N = mkN "crib" masculine ; -- tocheck
lin cricket_N = mkN "cricket" masculine | mkN "grillon" masculine ; -- tocheck
lin crieff_PN = mkPN "Crieff" ; -- status=guess src=geonames
lin crime_N = mkN "crime" | mkN "crime" masculine ; -- tocheck
lin criminal_A = mkA "criminel" ; -- tocheck
lin criminal_N = mkN "criminel" masculine ; -- tocheck
lin criminalism_N = mkN "délinquance" ; -- UWN
lin criminalization_N = mkN "criminalisation" feminine ; -- tocheck
lin criminologist_N = mkN "criminologiste" ; -- tocheck
lin criminology_N = mkN "criminologie" feminine ; -- tocheck
lin crimp_V2 = mkV2 (mkV "sertir") ; -- tocheck
lin crimson_A = mkA "cramoisi" ; -- tocheck
lin crimson_N = mkN "cramoisi" masculine ; -- tocheck
lin crimson_V = mkV "rougir" ; -- UWN
lin crinkle_N = mkN "ligne" | mkN "ride" | mkN "rider" | mkN "sillon" ; -- UWN
lin crinkle_V = mkV "chiffonner" | mkV "froisser" ; -- UWN
lin crinkly_A = mkA "ondulatoire" | mkA "ondulé" ; -- UWN
lin crinoid_N = mkN "crinoïdes" ; -- UWN
lin cripple_N = mkN "estropié" masculine ; -- tocheck
lin cripple_V2 = mkV2 (mkV "estropier") ; -- tocheck
lin crisis_N = mkN "crise" feminine ; -- tocheck
lin crisscross_N = mkN "croix" | mkN "marque" ; -- UWN
lin criss_cross_V2 = mkV2 (mkV "sillonner") ; -- tocheck
lin cristobalite_N = mkN "cristobalite" ; -- UWN
lin criterion_N = mkN "critère" masculine ; -- tocheck
lin critic_N = mkN "critique" | mkN "critique" masculine ; -- tocheck
lin critical_1_A = variants {} ; --
lin critical_2_A = variants {} ; --
lin critical_A = mkA "critique" ; -- tocheck
lin criticism_N = mkN "critique" feminine ; -- tocheck
lin criticize_V = variants {} ; --
lin criticize_V2 = variants {} ; --
lin critique_N = mkN "critique" feminine ; -- tocheck
lin croak_N = mkN "coassement" masculine ; -- tocheck
lin croak_V2 = mkV2 (mkV "coasser") | mkV2 (mkV "croasser") | mkV2 (mkV "crever") ; -- tocheck
lin croaky_A = mkA "gutturale" ; -- UWN
lin crochet_N = mkN "crochet" masculine ; -- tocheck
lin crockery_N = mkN "vaisselle" ; -- tocheck
lin crocodile_N = mkN "crocodile" masculine ; -- tocheck
lin crocus_N = mkN "crocus" masculine ; -- tocheck
lin cromer_PN = mkPN "Cromer" ; -- status=guess src=geonames
lin cromlech_N = mkN "dolmen" | mkN "sépulture_mégalithique" ; -- UWN
lin crone_N = mkN "sorcière" feminine ; -- tocheck
lin cronyism_N = mkN "copinage" masculine ; -- tocheck
lin crook_N = mkN "courbe" feminine | mkN "houlette" feminine | mkN "escroc" masculine ; -- tocheck
lin crook_PN = mkPN "Crook" ; -- status=guess src=geonames
lin crook_V2 = mkV2 (mkV "courber") ; -- tocheck
lin crooner_N = mkN "crooner" ; -- UWN
lin crop_N = mkN "cravache" masculine | mkN "récolte" feminine | mkN "jabot" masculine ; -- tocheck
lin crop_V = variants {} ; -- mkV2 (mkV "découper") ; -- tocheck
lin crop_V2 = mkV2 (mkV "découper") ; -- tocheck
lin cropper_N = mkN "métayer" ; -- UWN
lin croquet_N = mkN "croquet" masculine ; -- tocheck
lin croquette_N = mkN "croquette" ; -- tocheck
lin crore_N = mkN "Crore" | mkN "crore" ; -- UWN
lin crosby_PN = mkPN "Crosby" ; -- status=guess src=geonames
lin crosier_N = mkN "crosse" feminine ; -- tocheck
lin cross_A = mkA "fâché" | mkA "contraire" | mkA "transversal" ; -- tocheck
lin cross_N = mkN "croix" | mkN "croix" feminine ; -- tocheck
lin cross_V = variants {} ; -- mkV2 (mkV "contrecarrer") | mkV2 (mkV "traverser") | mkV2 (mkV "croiser") ; -- tocheck
lin cross_V2 = mkV2 (mkV "contrecarrer") | mkV2 (mkV "traverser") | mkV2 (mkV "croiser") ; -- tocheck
lin cross_examination_N = mkN "contre-interrogatoire" masculine ; -- tocheck
lin cross_examine_V2 = variants {} ; -- guess-p-verb
lin cross_fertilize_V2 = variants {} ; -- guess-p-verb
lin cross_index_V2 = variants {} ; -- guess-p-verb
lin cross_off_V2 = prepV2 OP_cross_V OP_off_Prep ; -- guess-p-verb
lin cross_out_V2 = prepV2 OP_cross_V OP_out_Prep ; -- guess-p-verb
lin cross_question_V2 = variants {} ; -- guess-p-verb
lin cross_up_V2 = prepV2 OP_cross_V OP_up_Prep ; -- guess-p-verb
lin crossbeam_N = mkN "trave" ; -- UWN
lin crossbill_N = mkN "bec-croisé" masculine ; -- tocheck
lin crossbow_N = mkN "arbalète" feminine ; -- tocheck
lin crossbreed_N = mkN "croix" | mkN "hybride" ; -- UWN
lin crosse_N = mkN "crosse" feminine ; -- tocheck
lin crossing_N = mkN "carrefour" | mkN "traversée" ; -- tocheck
lin crossopterygian_N = mkN "actinistiens" ; -- UWN
lin crossover_N = mkN "croisement" | mkN "passage" | mkN "passage_pour_piétons" ; -- UWN
lin crosspatch_N = mkN "araignée" | mkN "manivelle" ; -- UWN
lin crossroad_N = mkN "carrefour" ; -- tocheck
lin crossroads_N = mkN "carrefour" masculine ; -- tocheck
lin crosstalk_N = mkN "diaphonie" feminine ; -- tocheck
lin crosswalk_N = mkN "croisement" | mkN "passage" | mkN "passage_pour_piétons" ; -- UWN
lin crossword_N = mkN "grille_de_mots_croisés" | mkN "mots_croisés" ; -- UWN
lin crotalaria_N = mkN "crotalaria" ; -- UWN
lin crotch_N = mkN "entrejambe" masculine | mkN "fourche" feminine ; -- tocheck
lin crotchet_N = mkN "noire" feminine ; -- tocheck
lin crotchety_A = mkA "acariâtre" ; -- UWN
lin crouch_V = variants {} ; -- mkV2 (reflV (mkV "tapir")) ; -- tocheck
lin croup_N = mkN "croup" masculine | mkN "croupe" feminine ; -- tocheck
lin crouton_N = mkN "croûton" ; -- UWN
lin crow_N = mkN "pied-de-biche" masculine | mkN "chant" masculine | mkN "corneille" feminine ; -- tocheck
lin crowbar_N = mkN "pied-de-biche" masculine ; -- tocheck
lin crowberry_N = mkN "camarine" feminine ; -- tocheck
lin crowborough_PN = mkPN "Crowborough" ; -- status=guess src=geonames
lin crowd_N = mkN "monceau" masculine | mkN "foule" feminine ; -- tocheck
lin crowd_V = variants {} ; --
lin crowd_V2 = variants {} ; --
lin crown_N = mkN "milieu" masculine | mkN "couronne" feminine | mkN "clef" feminine | mkN "lauriers" | mkN "fond" masculine | mkN "sommet" masculine | mkN "couronnement" masculine | mkN "cime" feminine ; -- tocheck
lin crown_V2 = mkV2 (mkV "couronner") ; -- tocheck
lin crowthorne_PN = mkPN "Crowthorne" ; -- status=guess src=geonames
lin croydon_PN = mkPN "Croydon" ; -- status=guess src=geonames
lin crozier_N = mkN "crosse" | mkN "crosse_épiscopale" ; -- UWN
lin crucial_A = mkA "crucial" ; -- tocheck
lin crucible_N = mkN "creuset" masculine ; -- tocheck
lin crucifer_N = mkN "crucifère" feminine | mkN "crucifère" ; -- tocheck
lin cruciferous_A = mkA "crucifère" ; -- tocheck
lin crucifix_N = mkN "croix" ; -- tocheck
lin crucifixion_N = mkN "crucifixion" | mkN "crucifixion" feminine ; -- tocheck
lin cruciform_A = mkA "cruciforme" ; -- tocheck
lin crucify_V2 = mkV2 (mkV "crucifier") ; -- tocheck
lin crud_N = mkN "crud" ; -- tocheck
lin crude_A = mkA "cru" | mkA "vulgaire" ; -- tocheck
lin cruel_A = mkA "cruel" ; -- tocheck
lin cruelty_N = mkN "cruauté" feminine ; -- tocheck
lin cruet_N = mkN "burettes" ; -- UWN
lin cruise_N = mkN "croisière" ; -- tocheck
lin cruise_V = mkV "croisière" ; -- UWN
lin cruiser_N = mkN "croiseur" masculine ; -- tocheck
lin crumb_N = mkN "miette" feminine | mkN "mie" feminine ; -- tocheck
lin crumble_V2 = mkV2 (reflV (mkV "effondrer")) | mkV2 (mkV "effriter") ; -- tocheck
lin crumpet_N = mkN "crumpet" ; -- UWN
lin crumple_V = mkV "chiffonner" | mkV "froisser" ; -- UWN
lin crumple_V2 = mkV2 (reflV (mkV "froisser")) | mkV2 (reflV (mkV "effondrer")) | mkV2 (mkV "chiffonner") ; -- tocheck
lin crunch_V2 = mkV2 (mkV "compiler") ; -- tocheck
lin crural_A = mkA "crural" ; -- UWN
lin crusade_N = mkN "croisade" feminine ; -- tocheck
lin crusader_N = mkN "croisé" masculine ; -- tocheck
lin crush_N = mkN "barricade" feminine | mkN "béguin" ; -- tocheck
lin crush_V = mkV "abaisser" | mkV "briser" | mkV "fracasser" | mkV "écraser" ; -- UWN
lin crush_V2 = mkV2 (reflV (mkV "écraser")) | mkV2 (mkV "écraser") | mkV2 (mkV "concasser") ; -- tocheck
lin crusher_N = mkN "manomètre_à_écrasement" ; -- UWN
lin crust_N = mkN "croûte" feminine ; -- tocheck
lin crustacean_N = mkN "crustacé" masculine ; -- tocheck
lin crutch_N = mkN "béquille" | mkN "soutient" masculine ; -- tocheck
lin crux_N = mkN "croix_du_sud" | mkN "crux" | mkN "crux_linux" ; -- UWN
lin cry_N = mkN "pleur" masculine | mkN "cri" masculine ; -- tocheck
lin cry_V = variants {} ; -- mkV2 (mkV "crier") | mkV2 (mkV "pleurer") ; -- tocheck
lin cry_V2 = mkV2 (mkV "crier") | mkV2 (mkV "pleurer") ; -- tocheck
lin cry_off_V2 = prepV2 OP_cry_V OP_off_Prep ; -- guess-p-verb
lin cry_out_V = advV OP_cry_V OP_out_Adv ; -- guess-p-verb
lin crybaby_N = mkN "pleurnicheur" masculine ; -- tocheck
lin crying_N = mkN "larme" ; -- UWN
lin cryobiology_N = mkN "cryobiologie" ; -- UWN
lin cryogenics_N = mkN "cryogénie" ; -- UWN
lin cryolite_N = mkN "cryolithe" feminine ; -- tocheck
lin cryostat_N = mkN "cryostat" ; -- UWN
lin crypt_N = mkN "crypte" feminine ; -- tocheck
lin cryptanalysis_N = mkN "cryptanalyse" | mkN "cryptographie" | mkN "cryptologie" ; -- UWN
lin cryptanalyst_N = mkN "cryptanalyste" ; -- tocheck
lin cryptanalytic_A = mkA "cryptologique" ; -- UWN
lin cryptic_A = mkA "mystérieux" ; -- tocheck
lin cryptobiosis_N = mkN "cryptobiose" ; -- UWN
lin cryptococcosis_N = mkN "cryptococcose" ; -- UWN
lin cryptocoryne_N = mkN "cryptocoryne" ; -- UWN
lin cryptogam_N = mkN "cryptogame" ; -- UWN
lin cryptogram_N = mkN "cryptogramme" ; -- UWN
lin cryptography_N = mkN "cryptographie" feminine ; -- tocheck
lin cryptomonad_N = mkN "cryptophyta" | mkN "cryptophytes" ; -- UWN
lin cryptorchidy_N = mkN "cryptorchidie" ; -- UWN
lin crystal_N = mkN "cristal" masculine ; -- tocheck
lin crystalline_A = mkA "cristallin" ; -- tocheck
lin crystallite_N = mkN "cristallite" ; -- UWN
lin crystallization_N = mkN "cristallisation" feminine ; -- tocheck
lin crystallize_V2 = mkV2 (mkV "cristalliser") | mkV2 (reflV (mkV "cristalliser")) ; -- tocheck
lin crystallography_N = mkN "cristallographie" feminine ; -- tocheck
lin ctenidium_N = mkN "ctenidium" ; -- UWN
lin ctenophore_N = mkN "Ctenophora" | mkN "ctenophora" | mkN "cténophores" ; -- UWN
lin cub_N = mkN "renardeau" masculine | mkN "petit" ; -- tocheck
lin cuba_PN = mkPN "Cuba" ; -- status=guess src=geonames
lin cube_N = mkN "cube" masculine ; -- tocheck
lin cubic_A = mkA "cube" | mkA "cubique" ; -- tocheck
lin cubism_N = mkN "cubisme" masculine ; -- tocheck
lin cubist_A = mkA "cubiste" ; -- UWN
lin cubit_N = mkN "coudée" feminine ; -- tocheck
lin cuboid_N = mkN "parallélépipède_rectangle" ; -- UWN
lin cuckold_N = mkN "cocu" masculine ; -- tocheck
lin cuckold_V2 = mkV2 (mkV "cocufier") ; -- tocheck
lin cuckoo_N = mkN "coucou" masculine ; -- tocheck
lin cucumber_N = mkN "concombre" masculine ; -- tocheck
lin cud_N = mkN "mâcher" ; -- UWN
lin cuddle_N = mkN "câlin" masculine ; -- tocheck
lin cuddle_V2 = mkV2 (mkV "cajoler") | mkV2 (mkV "câliner") ; -- tocheck
lin cuddlesome_A = mkA "calin" ; -- UWN
lin cuddly_A = mkA "calin" ; -- tocheck
lin cudworth_PN = mkPN "Cudworth" ; -- status=guess src=geonames
lin cue_N = mkN "diriger" ; -- tocheck
lin cuff_N = mkN "manchette" feminine ; -- tocheck
lin cuff_V2 = mkV2 (mkV "menotter") | mkV2 (mkV "gifler") ; -- tocheck
lin cuffley_PN = mkPN "Cuffley" ; -- status=guess src=geonames
lin cuirass_N = mkN "armure" ; -- UWN
lin cuisine_N = mkN "cuisine" feminine ; -- tocheck
lin cul_N = mkN "cul" | mkN "cul-de-sac" | mkN "impasse" ; -- UWN
lin cul_de_sac_N = mkN "cul-de-sac" masculine ; -- tocheck
lin culcheth_PN = mkPN "Culcheth" ; -- status=guess src=geonames
lin culinary_A = mkA "culinaire" ; -- tocheck
lin cull_V2 = mkV2 (mkV I.cueillir_V2) ; -- tocheck
lin culm_N = mkN "herbe" ; -- UWN
lin culminate_V2 = mkV2 (mkV "culminer") ; -- tocheck
lin culmination_N = mkN "achèvement" | mkN "désinence" | mkN "exécution" ; -- UWN
lin culotte_N = mkN "culotte" | mkN "jupe-culotte" ; -- UWN
lin culpability_N = mkN "culpabilité" ; -- UWN
lin culpable_A = mkA "coupable" ; -- tocheck
lin culprit_N = mkN "coupable" ; -- tocheck
lin cult_N = mkN "culte" masculine | mkN "secte" feminine ; -- tocheck
lin cultivable_A = mkA "cultivable" ; -- tocheck
lin cultivar_N = mkN "cultivar" | mkN "en_culture" ; -- UWN
lin cultivate_V2 = mkV2 (mkV "cultiver") ; -- tocheck
lin cultivation_N = mkN "culture" feminine ; -- tocheck
lin cultivator_N = mkN "cultivateur" ; -- UWN
lin cultural_A = mkA "culturel" ; -- tocheck
lin culture_N = mkN "culture" feminine ; -- tocheck
lin cultured_A = mkA "cultivé" ; -- tocheck
lin culverin_N = mkN "couleuvrine" feminine ; -- tocheck
lin culvert_N = mkN "ponceau" masculine ; -- tocheck
lin cumberland_PN = mkPN "Cumberland" ; -- status=guess src=geonames
lin cumbernauld_PN = mkPN "Cumbernauld" ; -- status=guess src=geonames
lin cumbersome_A = mkA "encombrant" | mkA "pénible" ; -- tocheck
lin cumin_N = mkN "cumin" masculine ; -- tocheck
lin cumnock_PN = mkPN "Cumnock" ; -- status=guess src=geonames
lin cumulative_A = mkA "cumulé" ; -- tocheck
lin cumulonimbus_N = mkN "cumulonimbus" masculine ; -- tocheck
lin cunnilingus_N = mkN "cunnilingus" masculine ; -- tocheck
lin cunning_A = mkA "rusé" | mkA "talentueux" ; -- tocheck
lin cunning_N = mkN "fourberie" feminine ; -- tocheck
lin cunt_N = mkN "chatte" feminine | mkN "con" masculine ; -- tocheck
lin cup_N = mkN "coupe" feminine | mkN "tasse" feminine | mkN "bonnet" masculine ; -- tocheck
lin cupar_PN = mkPN "Cupar" ; -- status=guess src=geonames
lin cup_bearer_N = mkN "échanson" ; -- UWN
lin cupboard_N = mkN "armoire" feminine ; -- tocheck
lin cupful_N = mkN "tasse" feminine ; -- tocheck
lin cupidity_N = mkN "avarice" | mkN "cupidité" ; -- UWN
lin cupola_N = mkN "coupole" feminine ; -- tocheck
lin cupric_A = mkA "cuprique" ; -- tocheck
lin cuprite_N = mkN "cuprite" ; -- UWN
lin cupro_nickel_N = mkN "cupronickel" ; -- UWN
lin cur_N = mkN "clébard" masculine ; -- tocheck
lin curacy_N = mkN "vicariat" masculine ; -- tocheck
lin curassow_N = mkN "hocco" masculine ; -- tocheck
lin curate_N = mkN "Pasteur_protestant" | mkN "Recteur" | mkN "curé" | mkN "ministre" | mkN "pasteur" | mkN "recteur" | mkN "vicaire" ; -- UWN
lin curative_A = mkA "curatif" | mkA "guérison" | mkA "thérapeutique" ; -- UWN
lin curator_N = mkN "conservateur" masculine ; -- tocheck
lin curb_N = mkN "bride" | mkN "contrôle" | mkN "réprimer" ; -- UWN
lin curdle_V2 = mkV2 (mkV "cailler") ; -- tocheck
lin curdling_N = mkN "Coagulation_sanguine" | mkN "coagulation" | mkN "coagulation_sanguine" ; -- UWN
lin cure_N = variants {} ; --
lin cure_V2 = mkV2 (mkV "traiter") ; -- tocheck
lin curettage_N = mkN "curetage" masculine ; -- tocheck
lin curfew_N = mkN "couvre-feu" masculine ; -- tocheck
lin curio_N = mkN "bizarrerie" | mkN "curiosité" ; -- UWN
lin curiosity_N = mkN "curiosité" | mkN "curiosité" feminine ; -- tocheck
lin curious_A = mkA "curieux" ; -- tocheck
lin curiousness_N = mkN "étrangeté" ; -- UWN
lin curitiba_PN = mkPN "Curitiba" ; -- status=guess src=geonames
lin curium_N = mkN "curium" masculine ; -- tocheck
lin curl_N = mkN "boucle" feminine ; -- tocheck
lin curl_V = variants {} ; --
lin curler_N = mkN "curleur" masculine ; -- tocheck
lin curlew_N = mkN "courlis" masculine ; -- tocheck
lin curling_N = mkN "curling" masculine ; -- tocheck
lin curly_A = mkA "bouclé" ; -- tocheck
lin curmudgeon_N = mkN "bourru" masculine ; -- tocheck
lin currant_N = mkN "groseillier" masculine | mkN "groseille" feminine ; -- tocheck
lin currawong_N = mkN "strepera" ; -- UWN
lin currency_N = mkN "monnaie" feminine ; -- tocheck
lin current_A = mkA "courant" | mkA "actuel" ; -- tocheck
lin current_N = mkN "courant" masculine ; -- tocheck
lin currentness_N = mkN "devise" ; -- UWN
lin curriculum_N = variants {} ; --
lin currie_PN = mkPN "Currie" ; -- status=guess src=geonames
lin curry_N = mkN "curry" masculine | mkN "cari" ; -- tocheck
lin curse_N = mkN "blasphémer" | mkN "juron" | mkN "malédiction" | mkN "serment" ; -- UWN
lin curse_V2 = mkV2 (mkV "maudire") ; -- tocheck
lin cursive_A = mkA "cursif" ; -- tocheck
lin cursor_N = mkN "curseur" masculine ; -- tocheck
lin cursory_A = mkA "rapide" ; -- tocheck
lin curst_A = mkA "maudit" ; -- UWN
lin curt_A = mkA "laconique" | mkA "lapidaire" ; -- UWN
lin curtail_V2 = mkV2 (mkV "écourter") | mkV2 (mkV I.restreindre_V2) ; -- tocheck
lin curtailment_N = mkN "abaissement" | mkN "restructuration" | mkN "réduction" ; -- UWN
lin curtain_N = mkN "rideau" masculine ; -- tocheck
lin curtsey_N = mkN "révérence" ; -- tocheck
lin curvature_N = mkN "courbure" feminine ; -- tocheck
lin curve_N = mkN "courbe" feminine | mkN "courbes" ; -- tocheck
lin curve_V = variants {} ; --
lin curve_V2 = variants {} ; --
lin curvilineal_A = mkA "curvilinéaire" ; -- UWN
lin cuscus_N = mkN "cuscus" ; -- UWN
lin cushion_N = mkN "coussin" masculine ; -- tocheck
lin cushion_V2 = mkV2 (mkV "amortir") ; -- tocheck
lin cushy_A = mkA "molle" | mkA "mou" ; -- UWN
lin cuspidor_N = mkN "crachoir" ; -- UWN
lin cuss_N = mkN "blasphémer" | mkN "juron" | mkN "malédiction" | mkN "serment" ; -- UWN
lin cussed_A = mkA "obstiné" | mkA "opiniâtre" | mkA "têtu" ; -- UWN
lin custard_N = mkN "crème_anglaise" | mkN "crème_pâtissière" | mkN "custard" ; -- UWN
lin custodial_A = mkA "tuteur" ; -- UWN
lin custodian_N = mkN "gardien" masculine ; -- tocheck
lin custody_N = mkN "garde" ; -- UWN
lin custom_N = mkN "connaissance" | mkN "coutume" feminine ; -- tocheck
lin customary_A = mkA "habituel" ; -- tocheck
lin customerFem_N = variants {} ; ---- sense to be split
lin customerMasc_N = mkN "client" ;
lin customs_N = mkN "douane" feminine ; -- tocheck
lin cut_N = mkN "coupe" feminine | mkN "baissé" | mkN "coupure" feminine ; -- tocheck
lin cut_V = mkV L.cut_V2 ;
lin cut_V2 = L.cut_V2 ;
lin cut_across_V2 = prepV2 OP_cut_V OP_across_Prep ; -- guess-p-verb
lin cut_back_V2 = mkV2 (advV OP_cut_V OP_back_Adv ) ; -- guess-p-verb
lin cut_back_on_V2 = prepV2 (advV OP_cut_V OP_back_Adv ) OP_on_Prep ; -- guess-p-verb
lin cut_down_V = mkV "abattre" | mkV "démolir" ; -- UWN
lin cut_down_V2 = prepV2 OP_cut_V OP_down_Prep ; -- guess-p-verb
lin cut_down_on_V2 = prepV2 (advV OP_cut_V OP_down_Adv ) OP_on_Prep ; -- guess-p-verb
lin cut_in_V = advV OP_cut_V OP_in_Adv ; -- guess-p-verb
lin cut_in_V2 = prepV2 OP_cut_V OP_in_Prep ; -- guess-p-verb
lin cut_in_on_V2 = prepV2 (advV OP_cut_V OP_in_Adv ) OP_on_Prep ; -- guess-p-verb
lin cut_it_out_V2 = variants {} ; -- guess-p-verb
lin cut_off_V = mkV "retrancher" | mkV "tailler" | mkV "trancher" ; -- UWN
lin cut_off_V2 = prepV2 OP_cut_V OP_off_Prep ; -- guess-p-verb
lin cut_out_V = advV OP_cut_V OP_out_Adv ; -- guess-p-verb
lin cut_out_V2 = prepV2 OP_cut_V OP_out_Prep ; -- guess-p-verb
lin cut_out_on_V2 = prepV2 (advV OP_cut_V OP_out_Adv ) OP_on_Prep ; -- guess-p-verb
lin cut_up_V = advV OP_cut_V OP_up_Adv ; -- guess-p-verb
lin cut_up_V2 = prepV2 OP_cut_V OP_up_Prep ; -- guess-p-verb
lin cutaneous_A = mkA "cutané" ; -- tocheck
lin cute_A = mkA "mignon" ; -- tocheck
lin cuteness_N = mkN "mignon" ; -- UWN
lin cuticle_N = mkN "cuticule" feminine ; -- tocheck
lin cuticular_A = mkA "épidermique" ; -- UWN
lin cutlassfish_N = mkN "trichiuridae" ; -- UWN
lin cutlery_N = mkN "couverts" ; -- tocheck
lin cutlet_N = mkN "côtelette" feminine ; -- tocheck
lin cutpurse_N = mkN "pickpocket" | mkN "voleur" ; -- UWN
lin cutter_N = mkN "cotre" masculine ; -- tocheck
lin cutting_N = mkN "découpage" ; -- tocheck
lin cuttlefish_N = mkN "seiche" feminine ; -- tocheck
lin cwmbran_PN = mkPN "Cwmbran" ; -- status=guess src=geonames
lin cyan_N = mkN "cyan" masculine ; -- tocheck
lin cyanide_N = mkN "cyanure" masculine ; -- tocheck
lin cyanogen_N = mkN "cyanogène" ; -- UWN
lin cyanosis_N = mkN "cyanose" ; -- UWN
lin cybercrime_N = mkN "cybercriminalité" feminine | mkN "cybercrime" masculine ; -- tocheck
lin cyberculture_N = mkN "cyberculture" ; -- UWN
lin cybernaut_N = mkN "cybernaute" | mkN "internaute" ; -- UWN
lin cybernetic_A = mkA "cybernétique" ; -- tocheck
lin cybernetics_N = mkN "cybernétique" feminine | mkN "informatique" feminine ; -- tocheck
lin cybersex_N = mkN "cybersexe" ; -- UWN
lin cyborg_N = mkN "cyborg" masculine ; -- tocheck
lin cycad_N = mkN "Cycadophyta" | mkN "Cycadophytes" | mkN "cycadophyta" | mkN "cycadophytes" ; -- UWN
lin cyclamen_N = mkN "cyclamen" masculine ; -- tocheck
lin cycle_N = mkN "tour" masculine | mkN "cycle" masculine ; -- tocheck
lin cycling_N = mkN "cyclisme" ; -- tocheck
lin cyclist_N = mkN "cycliste" ; -- tocheck
lin cyclohexanol_N = mkN "cyclohexanol" ; -- UWN
lin cycloid_A = mkA "cycloïde" | mkA "cycloïdal" ; -- tocheck
lin cycloid_N = mkN "cycloïde" feminine ; -- tocheck
lin cyclone_N = mkN "cyclone" masculine ; -- tocheck
lin cyclopaedia_N = mkN "encyclopédie" ; -- UWN
lin cyclopia_N = mkN "cyclopia" ; -- UWN
lin cyclopropane_N = mkN "cyclopropane" masculine ; -- tocheck
lin cyclops_N = mkN "cyclope" masculine ; -- tocheck
lin cyclosis_N = mkN "cyclose" ; -- UWN
lin cyclostome_N = mkN "cyclostome" ; -- tocheck
lin cyclothymia_N = mkN "cyclothymie" ; -- UWN
lin cyclotron_N = mkN "cyclotron" masculine ; -- tocheck
lin cyder_N = mkN "cidre" | mkN "verre" ; -- UWN
lin cygnet_N = mkN "cygneau" masculine ; -- tocheck
lin cylinder_N = mkN "cylindre" masculine | mkN "bonbonne" feminine | mkN "barillet" masculine ; -- tocheck
lin cylindrical_A = mkA "cylindrique" ; -- tocheck
lin cyma_N = mkN "cymatium" | mkN "n.b." ; -- UWN
lin cymbal_N = mkN "cymbales" ; -- tocheck
lin cymbid_N = mkN "cymbidium" ; -- UWN
lin cynic_N = mkN "cynique" masculine ; -- tocheck
lin cynical_A = mkA "cynique" ; -- tocheck
lin cynicism_N = mkN "cynisme" masculine ; -- tocheck
lin cynodont_N = mkN "Cynodontia" | mkN "cynodontes" | mkN "cynodontia" ; -- UWN
lin cynosure_N = mkN "tramontane" ; -- tocheck
lin cypher_V = mkV "calculer" | mkV "compter" | mkV "computer" ; -- UWN
lin cypress_N = mkN "cyprès" masculine ; -- tocheck
lin cyprus_PN = mkPN "Chypre" ; -- status=guess src=geonames
lin cyril_PN = mkPN "Cyril" ; -- status=guess src=geonames
lin cyst_N = mkN "kyste" masculine ; -- tocheck
lin cysteine_N = mkN "cystéine" feminine ; -- tocheck
lin cystic_A = mkA "kystique" ; -- tocheck
lin cystine_N = mkN "cystine" feminine ; -- tocheck
lin cystitis_N = mkN "cystite" ; -- UWN
lin cystocele_N = mkN "cystocèle" masculine ; -- tocheck
lin cytochrome_N = mkN "cytochrome" ; -- UWN
lin cytogenetics_N = mkN "cytogénétique" ; -- UWN
lin cytokine_N = mkN "cytokine" ; -- tocheck
lin cytology_N = mkN "cytologie" feminine ; -- tocheck
lin cytoplasm_N = mkN "cytoplasme" masculine ; -- tocheck
lin cytoplasmic_A = mkA "cytoplasmique" ; -- tocheck
lin cytosine_N = mkN "cytosine" feminine ; -- tocheck
lin cytoskeleton_N = mkN "cytosquelette" ; -- tocheck
lin cytosol_N = mkN "cytosol" masculine ; -- tocheck
lin cytotoxicity_N = mkN "Cytotoxicité" | mkN "cytotoxicité" ; -- UWN
lin czar_N = mkN "tsar" ; -- UWN
lin czarina_N = mkN "tsarine" | mkN "tzarine" ; -- UWN
lin czarist_A = mkA "tsariste" ; -- UWN
lin dab_V = mkV "tapoter" ; -- UWN
lin dabble_V2 = mkV2 (mkV "barboter") ; -- tocheck
lin dace_N = mkN "vandoise" feminine ; -- tocheck
lin dacha_N = mkN "datcha" feminine ; -- tocheck
lin dachshund_N = mkN "teckel" masculine ; -- tocheck
lin dacite_N = mkN "dacite" feminine ; -- tocheck
lin dacoity_N = mkN "dacoït" | mkN "dacoïts" ; -- UWN
lin dactyl_N = mkN "dactyle" masculine ; -- tocheck
lin dad_N = mkN "papa" masculine ; -- tocheck
lin dada_N = mkN "dadaïsme" ; -- UWN
lin daddy_N = mkN "papa" masculine ; -- tocheck
lin daemon_N = mkN "démon" ; -- tocheck
lin daffodil_N = mkN "jonquille" feminine ; -- tocheck
lin daft_A = mkA "cinglé" | mkA "dingue" | mkA "simplet" ; -- tocheck
lin dagger_N = mkN "croix" feminine | mkN "poignard" masculine ; -- tocheck
lin daguerreotype_N = mkN "daguerréotype" masculine ; -- tocheck
lin dahlia_N = mkN "dahlia" masculine ; -- tocheck
lin daily_A = mkA "quotidien" ; -- tocheck
lin daily_Adv = mkAdv "quotidiennement" ; -- tocheck
lin daily_N = mkN "quotidien" masculine ; -- tocheck
lin dainty_A = mkA "délicat" ; -- tocheck
lin dainty_N = mkN "friandise" ; -- UWN
lin daiquiri_N = mkN "daiquiri" ; -- UWN
lin dairy_N = mkN "laiterie" feminine | mkN "laiterie" | mkN "laitages" | mkN "crémerie" ; -- tocheck
lin dairymaid_N = mkN "fille_de_laiterie" | mkN "laitière" | mkN "trayeuse" ; -- UWN
lin dairyman_N = mkN "laitier" ; -- UWN
lin dais_N = mkN "estrade" ; -- tocheck
lin daisy_N = mkN "marguerite" feminine | mkN "pâquerette" feminine ; -- tocheck
lin dakar_PN = mkPN "Dakar" ; -- status=guess src=geonames
lin dale_N = mkN "combe" feminine ; -- tocheck
lin dalkeith_PN = mkPN "Dalkeith" ; -- status=guess src=geonames
lin dallas_PN = mkPN "Dallas" ; -- status=guess src=geonames
lin dalliance_N = mkN "baguenaudage" | mkN "flirt" ; -- tocheck
lin dalmatian_N = mkN "dalmatien" ; -- UWN
lin dalry_PN = mkPN "Dalry" ; -- status=guess src=geonames
lin dalton_PN = mkPN "Dalton" ; -- status=guess src=geonames
lin dam_N = mkN "barrage" masculine ; -- tocheck
lin damage_N = mkN "dégât" masculine ; -- tocheck
lin damage_V2 = mkV2 (mkV "endommager") ; -- tocheck
lin damages_N = mkN "Dommages_et_intérêts" | mkN "dommages_et_intérêts" | mkN "restitution" ; -- UWN
lin damaging_A = variants {} ; --
lin damascus_PN = mkPN "Damas" ; -- status=guess src=geonames
lin damask_A = mkA "lie-de-vin" ; -- tocheck
lin damask_N = mkN "lie-de-vin" | mkN "damas" ; -- tocheck
lin damn_A = mkA "foutu" ; -- tocheck
lin damn_N = mkN "merde" ; -- tocheck
lin damn_V2 = mkV2 (mkV "damner") ; -- tocheck
lin damnable_A = mkA "exécrable" ; -- UWN
lin damnation_N = mkN "damnation" ; -- UWN
lin damp_A = mkA "humide" ; -- tocheck
lin damp_N = mkN "humide" | mkN "moiteur" ; -- UWN
lin damp_V2 = mkV2 (mkV "mouiller") | mkV2 (mkV "amortir") ; -- tocheck
lin dampen_V = mkV "humidifier" | mkV "laver" ; -- UWN
lin dampen_V2 = mkV2 (reflV (mkV "humidifier")) | mkV2 (mkV "déprécier") | mkV2 (mkV "humecter") ; -- tocheck
lin dampish_A = mkA "humide" | mkA "moite" ; -- UWN
lin dampness_N = mkN "humide" | mkN "moiteur" ; -- UWN
lin damsel_N = mkN "demoiselle" feminine ; -- tocheck
lin damselfish_N = mkN "demoiselle" ; -- UWN
lin damselfly_N = mkN "demoiselle" feminine ; -- tocheck
lin damson_N = mkN "damas" | mkN "prune_de_Damas" | mkN "prunier_de_Damas" | mkN "quetsche" ; -- UWN
lin dance_N = mkN "danse" feminine ; -- tocheck
lin dance_V = variants {} ; -- mkV2 (mkV "danser") ; -- tocheck
lin dance_V2 = mkV2 (mkV "danser") ; -- tocheck
lin dancer_N = mkN "danseur" masculine ; -- tocheck
lin dancing_N = mkN "danse" ; -- UWN
lin dandelion_N = mkN "pissenlit" ; -- tocheck
lin dandified_A = mkA "soigné" ; -- UWN
lin dandruff_N = mkN "pellicule" feminine ; -- tocheck
lin dandy_N = mkN "dandy" ; -- tocheck
lin danger_N = mkN "danger" masculine ; -- tocheck
lin dangerous_A = mkA "dangereux" ; -- tocheck
lin dangerousness_N = mkN "dangerosité" feminine ; -- tocheck
lin dangle_V = mkV "suspendre" ; -- UWN
lin dangle_V2 = mkV2 (mkV I.pendre_V2) ; -- tocheck
lin danishFem_N = mkN "feuilletée" feminine ; -- tocheck
lin danishMasc_N = mkN "feuilleté" masculine ; -- tocheck
lin dank_A = mkA "fort" ; -- tocheck
lin danse_macabre_N = mkN "danse_macabre" ; -- UWN
lin daphne_PN = mkPN "Daphne" ; -- status=guess src=geonames
lin daphnia_N = mkN "daphnia" | mkN "daphnie" | mkN "daphnies" ; -- UWN
lin dapper_A = mkA "fissa" | mkA "épicéa" | mkA "épinette" ; -- UWN
lin dapsone_N = mkN "dapsone" ; -- UWN
lin darby_PN = mkPN "Darby" ; -- status=guess src=geonames
lin dare_N = mkN "défi" masculine ; -- tocheck
lin dare_V2 = mkV2 (mkV "oser") | mkV2 (mkV "affronter") | mkV2 (mkV "défier") ; -- tocheck
lin daredevil_A = mkA "casse-cou" ; -- tocheck
lin daredevil_N = mkN "casse-cou" ; -- tocheck
lin darfield_PN = mkPN "Darfield" ; -- status=guess src=geonames
lin daring_N = mkN "audace" ; -- tocheck
lin dark_A = mkA "obscur" | mkA "foncé" | mkA "sombre" ; -- tocheck
lin dark_N = mkN "obscurité" | mkN "noir" masculine ; -- tocheck
lin darken_V2 = mkV2 (mkV "foncer") ; -- tocheck
lin darkness_N = mkN "obscurité" feminine | mkN "noirceur" | mkN "ténèbres" ; -- tocheck
lin darkroom_N = mkN "darkroom" feminine ; -- tocheck
lin darling_N = mkN "chéri" masculine ; -- tocheck
lin darlington_PN = mkPN "Darlington" ; -- status=guess src=geonames
lin darmstadt_PN = mkPN "Darmstadt" ; -- status=guess src=geonames
lin darmstadtium_N = mkN "darmstadtium" masculine ; -- tocheck
lin darn_N = mkN "rapiécer" | mkN "repriser" ; -- UWN
lin darn_V = mkV "repriser" ; -- UWN
lin darn_V2 = mkV2 (mkV "repriser") ; -- tocheck
lin dart_N = mkN "dard" masculine | mkN "fléchettes" ; -- tocheck
lin dartford_PN = mkPN "Dartford" ; -- status=guess src=geonames
lin dartmouth_PN = mkPN "Dartmouth" ; -- status=guess src=geonames
lin darts_N = mkN "fléchettes" ; -- tocheck
lin darwen_PN = mkPN "Darwen" ; -- status=guess src=geonames
lin dash_N = mkN "tiret" masculine | mkN "trait" masculine | mkN "sprint" masculine | mkN "soupçon" masculine ; -- tocheck
lin dash_V = variants {} ; -- mkV2 (reflV (mkV "précipiter")) ; -- tocheck
lin dashboard_N = mkN "panneau" | mkN "tableau" | mkN "tableau_de_bord" ; -- UWN
lin dashiki_N = mkN "Dashiki" | mkN "dashiki" ; -- UWN
lin dasyure_N = mkN "dasyure" ; -- UWN
lin data_N = mkN "donnée" feminine ;
lin database_N = mkN "banque_de_données" | mkN "base_de_données" | mkN "database" ; -- UWN
lin date_1_N = variants {} ; --
lin date_3_N = variants {} ; --
lin date_7_N = mkN "date" | mkN "datte" ; -- UWN
lin date_N = variants {} ; --
lin date_V = variants {} ; -- mkV2 (mkV "vieillir") | mkV2 (mkV "dater") ; -- tocheck
lin date_V2 = mkV2 (mkV "vieillir") | mkV2 (mkV "dater") ; -- tocheck
lin dating_N = mkN "datage" | mkN "datation" ; -- UWN
lin dative_A = mkA "datif" ; -- tocheck
lin dative_N = mkN "datif" masculine ; -- tocheck
lin datum_N = mkN "système_géodésique" ; -- UWN
lin daub_N = mkN "croûte" feminine ; -- tocheck
lin daub_V2 = mkV2 (mkV "barbouiller") ; -- tocheck
lin dauber_N = mkN "crépisseur" ; -- UWN
lin daughter_N = mkN "fille" feminine ; -- tocheck
lin daughter_in_law_N = mkN "bru" feminine ; -- tocheck
lin daunt_V2 = mkV2 (mkV "décourager") ; -- tocheck
lin daunting_A = mkA "décourageant" | mkA "colossal" ; -- tocheck
lin dauntless_A = mkA "audacieux" | mkA "brave" | mkA "courageux" | mkA "intrépide" ; -- UWN
lin dauphin_N = mkN "dauphin" masculine ; -- tocheck
lin daventry_PN = mkPN "Daventry" ; -- status=guess src=geonames
lin david_PN = mkPN "David" ; -- status=guess src=geonames
lin davit_N = mkN "bossoir" ; -- UWN
lin dawdler_N = mkN "faux_bourdon" ; -- UWN
lin dawlish_PN = mkPN "Dawlish" ; -- status=guess src=geonames
lin dawn_N = mkN "aube" feminine ; -- tocheck
lin dawn_V = mkV (reflV (mkV "lever")) | mkV (mkV I.naître_V) ; -- tocheck
lin day_N = L.day_N ;
lin daybreak_N = mkN "aube" | mkN "aurore" | mkN "matin" | mkN "matinée" | mkN "première_lumière" ; -- UWN
lin daydream_N = mkN "rêverie" feminine ; -- tocheck
lin daydream_V = mkV (mkV "rêvasser") ; -- tocheck
lin daylight_N = mkN "jour" masculine ; -- tocheck
lin dayspring_N = mkN "aube" | mkN "aurore" | mkN "matin" | mkN "matinée" | mkN "première_lumière" ; -- UWN
lin daytime_N = mkN "journée" feminine ; -- tocheck
lin dayton_PN = mkPN "Dayton" ; -- status=guess src=geonames
lin daze_N = mkN "stupéfaction" ; -- tocheck
lin daze_V2 = mkV2 (mkV "étourdir") ; -- tocheck
lin dazzle_N = mkN "éblouir" ; -- UWN
lin dazzle_V2 = mkV2 (mkV "éblouir") ; -- tocheck
lin de_facto_A = mkA "effectif" ; -- UWN
lin de_jure_Adv = mkAdv "juridiquement" | mkAdv "légalement" ; -- UWN
lin de_luxe_A = mkA "luxe" ; -- UWN
lin deacon_N = mkN "diacre" masculine ; -- tocheck
lin deactivate_V2 = mkV2 (mkV "désactiver") ; -- tocheck
lin dead_A = mkA "mort" ; -- tocheck
lin dead_Adv = variants {} ; --
lin dead_N = mkN "morts" | mkN "milieu" masculine ; -- tocheck
lin deaden_V2 = mkV2 (mkV I.endormir_V2) | mkV2 (mkV "assourdir") ; -- tocheck
lin deadline_N = mkN "date" | mkN "date_butoire" | mkN "date_limite" | mkN "délai" | mkN "échéance" ; -- UWN
lin deadliness_N = mkN "létalité" ; -- UWN
lin deadlock_N = mkN "interblocage" masculine | mkN "impasse" feminine ; -- tocheck
lin deadly_A = mkA "mortel" ; -- tocheck
lin deadpan_A = mkA "atone" | mkA "impassible" ; -- UWN
lin deadwood_N = mkN "cinquième_roue_du_carrosse" ; -- UWN
lin deaf_A = mkA "sourd" ; -- tocheck
lin deaf_N = mkN "sourd" ; -- UWN
lin deaf_mute_N = mkN "sourd-muet" masculine ; -- tocheck
lin deafen_V2 = mkV2 (mkV "assourdir") ; -- tocheck
lin deafening_A = mkA "assourdissant" ; -- tocheck
lin deafness_N = mkN "surdité" feminine ; -- tocheck
lin deal_N = mkN "contrat" masculine | mkN "part" | mkN "pli" masculine ; -- tocheck
lin deal_PN = mkPN "Deal" ; -- status=guess src=geonames
lin deal_V = variants {} ; -- mkV2 (mkV "distribuer") ; -- tocheck
lin deal_V2 = mkV2 (mkV "distribuer") ; -- tocheck
lin dealer_N = mkN "dealer" ; -- tocheck
lin dealing_N = mkN "opération" | mkN "transaction" ; -- UWN
lin dean_N = mkN "doyen" masculine | mkN "doyen" ; -- tocheck
lin dear_A = mkA "cher" ; -- tocheck
lin dear_Adv = mkAdv "cher" | mkAdv "chèrement" | mkAdv "coûteux" ; -- UWN
lin dear_Interj = variants {} ; --
lin dear_N = variants {} ; --
lin dearest_N = mkN "chéri" masculine ; -- tocheck
lin dearness_N = mkN "cherté" ; -- tocheck
lin dearth_N = mkN "disette" feminine | mkN "pénurie" feminine ; -- tocheck
lin death_N = mkN "mort" feminine ;
lin deathblow_N = mkN "coup" ; -- tocheck
lin deathly_A = variants {} ;
lin deathly_Adv = adjAdv deathly_A ; -- derived
lin death_rate_N = mkN "morbidité" | mkN "mortalite" | mkN "mortalité" | mkN "taux_de_mortalité" ; -- UWN
lin deathtrap_N = mkN "deathtrap" ; -- UWN
lin debacle_N = mkN "débâcle" feminine | mkN "fiasco" masculine ; -- tocheck
lin debase_V2 = mkV2 (mkV "abâtardir") ; -- tocheck
lin debasement_N = mkN "dégradation" ; -- UWN
lin debaser_N = mkN "debaser" ; -- UWN
lin debatable_A = mkA "discutable" ; -- tocheck
lin debate_N = mkN "débat" masculine | mkN "discussion" feminine ; -- tocheck
lin debate_V = variants {} ; -- mkV2 (mkV I.débattre_V2) ; -- tocheck
lin debate_V2 = mkV2 (mkV I.débattre_V2) ; -- tocheck
lin debauch_N = mkN "débauche" feminine ; -- tocheck
lin debauch_V2 = mkV2 (mkV "débaucher") ; -- tocheck
lin debaucheeFem_N = variants {} ; ---- sense to be split
lin debaucheeMasc_N = variants {} ; ---- sense to be split
lin debauchery_N = mkN "débauche" feminine ; -- tocheck
lin debenture_N = mkN "debenture" ; -- tocheck
lin debilitate_V2 = mkV2 (mkV "débiliter") ; -- tocheck
lin debilitating_A = mkA "débilitant" ; -- UWN
lin debility_N = mkN "infirmité" ; -- UWN
lin debriefing_N = mkN "débriefing" | mkN "réunion-bilan" ; -- UWN
lin debris_N = mkN "débris" ; -- tocheck
lin debt_N = mkN "dette" feminine | mkN "dette" ; -- tocheck
lin debtor_N = mkN "débiteur" masculine ; -- tocheck
lin debug_V2 = mkV2 (mkV "déboguer") | mkV2 (mkV "désinsectiser") ; -- tocheck
lin debugger_N = mkN "débogueur" ; -- tocheck
lin debunk_V2 = mkV2 (mkV "dévoiler") ; -- tocheck
lin debut_1_N = variants {} ; --
lin debut_2_N = variants {} ; --
lin debut_N = mkN "première" ; -- tocheck
lin debutante_N = variants {} ;
lin decade_N = mkN "dizaine" | mkN "décennie" feminine ; -- tocheck
lin decadence_N = mkN "décadence" feminine ; -- tocheck
lin decadent_A = mkA "décadent" ; -- tocheck
lin decadent_N = mkN "décadent" masculine ; -- tocheck
lin decagon_N = mkN "décagone" masculine ; -- tocheck
lin decahedron_N = mkN "décaèdre" masculine ; -- tocheck
lin decal_N = mkN "décalcomanie" ; -- UWN
lin decalcomania_N = mkN "décalcomanie" feminine ; -- tocheck
lin decameter_N = mkN "barrage" | mkN "decamètre" | mkN "décamètre" ; -- UWN
lin decant_V2 = mkV2 (mkV "décanter") | mkV2 (mkV "transvaser") ; -- tocheck
lin decanter_N = mkN "carafe" | mkN "carafon" ; -- UWN
lin decapitate_V2 = mkV2 (mkV "décapiter") ; -- tocheck
lin decapitation_N = mkN "décapitation" feminine ; -- tocheck
lin decarboxylation_N = mkN "Décarboxylation" | mkN "décarboxylation" ; -- UWN
lin decathlon_N = mkN "décathlon" masculine ; -- tocheck
lin decay_N = mkN "déchéance" feminine | mkN "décrépitude" feminine ; -- tocheck
lin decay_V = mkV (mkV "pourrir") ; -- tocheck
lin decease_N = mkN "décès" | mkN "mort" ; -- UWN
lin decease_V = mkV (mkV "décéder") ; -- tocheck
lin deceit_N = mkN "tromperie" ; -- tocheck
lin deceitful_A = mkA "trompeur" ; -- tocheck
lin deceitfulness_N = mkN "ruse" ; -- UWN
lin deceive_V2 = mkV2 (mkV "tromper") ; -- tocheck
lin deceiver_N = mkN "trompeur" ; -- tocheck
lin deceivingly_Adv = mkAdv "fallacieusement" | mkAdv "illusoirement" | mkAdv "trompeusement" ; -- UWN
lin decelerate_V2 = mkV2 (mkV "ralentir") ; -- tocheck
lin deceleration_N = mkN "décélération" feminine ; -- tocheck
lin decency_N = mkN "décence" ; -- tocheck
lin decent_A = mkA "intègre" | mkA "décent" | mkA "substantiel" ; -- tocheck
lin deception_N = mkN "tromperie" ; -- tocheck
lin deceptive_A = mkA "trompeur" ; -- tocheck
lin decibel_N = mkN "décibel" masculine ; -- tocheck
lin decide_V = mkV "décider" ;
lin decide_V2 = mkV2 (mkV "décider") ;
lin decide_VS = mkVS (mkV "décider") ;
lin decide_VV = deVV (mkV "décider") ;
lin decide_on_V2 = prepV2 OP_decide_V OP_on_Prep ; -- guess-p-verb
lin decide_upon_V2 = prepV2 OP_decide_V OP_upon_Prep ; -- guess-p-verb
lin decided_A = mkA "définitif" ; -- UWN
lin deciduous_A = mkA "décidual" | mkA "caduc" ; -- tocheck
lin decigram_N = mkN "décigramme" ; -- tocheck
lin decile_N = mkN "décile" ; -- UWN
lin deciliter_N = mkN "dl" | mkN "décilitre" ; -- UWN
lin decimal_A = mkA "décimal" ; -- tocheck
lin decimal_N = mkN "décimal" masculine ; -- tocheck
lin decimalization_N = mkN "décimalisation" ; -- UWN
lin decimate_V2 = mkV2 (mkV "décimer") ; -- tocheck
lin decimeter_N = mkN "dm" | mkN "décimètre" ; -- UWN
lin decipher_V2 = mkV2 (mkV "déchiffrer") ; -- tocheck
lin decipherable_A = mkA "déchiffrable" ; -- tocheck
lin decision_N = mkN "décision" feminine ;
lin decision_making_N = variants {} ; --
lin decisive_A = mkA "décisif" | mkA "ferme" ; -- tocheck
lin decisiveness_N = mkN "finalité" ; -- UWN
lin deck_N = mkN "pont" masculine ; -- tocheck
lin declaim_V = mkV "déclamer" | mkV "réciter" ; -- UWN
lin declaim_V2 = mkV2 (mkV "déclamer") ; -- tocheck
lin declamation_N = mkN "déclamation" ; -- UWN
lin declamatory_A = mkA "ampoulé" | mkA "bombastique" | mkA "boursouflé" | mkA "enflé" | mkA "pompeux" ; -- UWN
lin declaration_N = mkN "déclaration" feminine ; -- tocheck
lin declare_V = mkV "déclarer" ; -- UWN
lin declare_V2 = variants {} ; -- mkV2V (mkV "déclarer") ; -- tocheck
lin declare_VS = variants {} ; -- mkV2V (mkV "déclarer") ; -- tocheck
lin declension_N = mkN "déclinaison" feminine ; -- tocheck
lin declination_N = mkN "déclinaison" feminine ; -- tocheck
lin decline_N = mkN "déclin" ; -- tocheck
lin decline_V = mkV "diminuer" ; -- UWN
lin decline_V2 = mkV2 (mkV "décliner") | mkV2 (mkV "accorder") | mkV2 (mkV "refuser") ; -- tocheck
lin decline_VV = variants {} ; -- mkV2 (mkV "décliner") | mkV2 (mkV "accorder") | mkV2 (mkV "refuser") ; -- tocheck
lin decoction_N = mkN "décoction" feminine ; -- tocheck
lin decode_V2 = mkV2 (mkV "décoder") ; -- tocheck
lin decoding_N = mkN "Décrypter" | mkN "décryptage" | mkN "décrypter" | mkN "sans" ; -- UWN
lin decolletage_N = mkN "décolleté" ; -- UWN
lin decollete_A = mkA "décolleté" ; -- tocheck
lin decolonization_N = mkN "décolonisation" feminine ; -- tocheck
lin decompose_V = mkV "décomposer" ; -- UWN
lin decompose_V2 = mkV2 (mkV "décomposer") | mkV2 (reflV (mkV "décomposer")) ; -- tocheck
lin decomposition_N = mkN "démontage" masculine | mkN "décomposition" feminine ; -- tocheck
lin decompression_N = mkN "décompression" ; -- UWN
lin decongestant_N = mkN "décongestionnant" masculine ; -- tocheck
lin deconstruction_N = mkN "déconstruction" ; -- UWN
lin deconstructivism_N = mkN "déconstruction" | mkN "déconstructivisme" ; -- UWN
lin decontamination_N = mkN "décontamination" feminine ; -- tocheck
lin decorate_V2 = mkV2 (mkV "décorer") ; -- tocheck
lin decoration_N = mkN "décoration" feminine ; -- tocheck
lin decorative_A = mkA "cosmétique" | mkA "décoratif" | mkA "ornemental" ; -- UWN
lin decorator_N = mkN "décorateur" | mkN "peintre" ; -- UWN
lin decorum_N = mkN "décorum" masculine ; -- tocheck
lin decoy_N = mkN "leurre" masculine ; -- tocheck
lin decoy_V2 = mkV2 (mkV "piéger") ; -- tocheck
lin decrease_N = variants {} ; --
lin decrease_V = variants {} ; -- mkV2 (mkV "diminuer") ; -- tocheck
lin decrease_V2 = mkV2 (mkV "diminuer") ; -- tocheck
lin decree_N = mkN "décret" masculine ; -- tocheck
lin decrepit_A = mkA "décrépit" ; -- tocheck
lin decrepitude_N = mkN "abaissement" | mkN "décrépitude" ; -- UWN
lin decrescendo_A = mkA "diminuendo" ; -- UWN
lin decrescendo_N = mkN "diminuendo" ; -- UWN
lin decriminalization_N = mkN "décriminalisation" feminine ; -- tocheck
lin decry_V2 = mkV2 (mkV "décrier") ; -- tocheck
lin decubitus_N = mkN "décubitus" masculine ; -- tocheck
lin dedicate_V2 = mkV2 (mkV "consacrer") | mkV2 (mkV "dédier") | mkV2 (reflV (mkV "consacrer")) | mkV2 (mkV "inaugurer") ; -- tocheck
lin dedication_N = mkN "dédicace" feminine ; -- tocheck
lin deduce_V2 = mkV2 (mkV I.déduire_V2) ; -- tocheck
lin deduct_V2 = mkV2 (mkV "décompter") ; -- tocheck
lin deductible_A = mkA "déductible" ; -- tocheck
lin deductible_N = mkN "déductible" ; -- UWN
lin deduction_N = mkN "déduction" feminine | mkN "déduction" ; -- tocheck
lin deductive_A = mkA "déductif" ; -- tocheck
lin deed_N = variants {} ; --
lin deem_V2 = variants {} ; --
lin deem_V2A = variants {} ; --
lin deem_V2V = variants {} ; --
lin deep_A = mkA "profond" | mkA "foncé" | mkA "grave" | mkA "épais" ; -- tocheck
lin deep_Adv = variants {} ; --
lin deep_N = mkN "profondeurs" ; -- tocheck
lin deepen_V2 = mkV2 (mkV "approfondir") ; -- tocheck
lin deer_N = mkN "cerf" masculine ; -- tocheck
lin defalcation_N = mkN "dilapidation" | mkN "détournement" | mkN "détournement_de_fonds" | mkN "malversation" ; -- UWN
lin defamation_N = mkN "diffamation" feminine ; -- tocheck
lin defamatory_A = mkA "diffamant" ; -- tocheck
lin defamer_N = mkN "diffamateur" | mkN "traducteur" ; -- UWN
lin default_N = mkN "défaut" ; -- tocheck
lin defeat_N = mkN "défaite" feminine ; -- tocheck
lin defeat_V2 = mkV2 (mkV I.vaincre_V2) ; -- tocheck
lin defeatism_N = mkN "défaitisme" ; -- tocheck
lin defeatist_N = mkN "défaitiste" ; -- UWN
lin defecate_V = mkV (mkV "déféquer") ; -- tocheck
lin defecation_N = mkN "défécation" feminine ; -- tocheck
lin defect_N = mkN "défaut" masculine ; -- tocheck
lin defect_V = mkV (mkV "déserter") ; -- tocheck
lin defection_N = mkN "défection" feminine ; -- tocheck
lin defective_A = mkA "défectueux" | mkA "défectif" ; -- tocheck
lin defector_N = mkN "transfuge" masculine ; -- tocheck
lin defence_N = mkN "défense" feminine ; -- tocheck
lin defend_V2 = mkV2 (mkV I.défendre_V2) ; -- tocheck
lin defendant_N = mkN "inculpé" ; -- tocheck
lin defenderFem_N = mkN "défenseuse" feminine ; -- tocheck
lin defenderMasc_N = mkN "défenseur" masculine ;
lin defenestration_N = mkN "défenestration" feminine ; -- tocheck
lin defensive_A = mkA "défensif" ; -- tocheck
lin defensive_N = mkN "défensif" ; -- UWN
lin defer_V2 = mkV2 (mkV "différer") ; -- tocheck
lin deference_N = mkN "respect" masculine ; -- tocheck
lin deferment_N = mkN "ajournement" | mkN "report" ; -- UWN
lin deferral_N = mkN "ajournement" | mkN "report" ; -- UWN
lin defiance_N = mkN "défi" masculine ; -- tocheck
lin defibrillation_N = mkN "défibrillation" feminine ; -- tocheck
lin defibrillator_N = mkN "défibrillateur" masculine ; -- tocheck
lin deficiency_N = mkN "déficience" feminine ; -- tocheck
lin deficit_N = variants {} ; --
lin defile_N = mkN "défilé" ; -- tocheck
lin defile_V2 = mkV2 (mkV "souiller") | mkV2 (mkV "défiler") ; -- tocheck
lin defilement_N = mkN "nuisance" | mkN "polluant" | mkN "pollution" ; -- UWN
lin definable_A = mkA "définissable" ; -- tocheck
lin define_V = mkV "définir" | mkV "déterminer" | mkV "fixer" ; -- UWN
lin define_V2 = mkV2 (mkV "définir") | mkV2 (mkV "déterminer") ; -- tocheck
lin definite_A = mkA "définitif" | mkA "évident" ; -- UWN
lin definition_N = mkN "définition" feminine ;
lin definitive_A = mkA "définitif" ; -- tocheck
lin deflagration_N = mkN "déflagration" ; -- UWN
lin deflation_N = mkN "déflation" feminine ; -- tocheck
lin deflationary_A = mkA "déflationniste" ; -- UWN
lin deflection_N = mkN "déflexion" ; -- tocheck
lin defloration_N = mkN "défloration" feminine ; -- tocheck
lin deflower_V2 = mkV2 (mkV "déflorer") ; -- tocheck
lin defoliant_N = mkN "défoliant" ; -- UWN
lin defoliate_V2 = mkV2 (mkV "défolier") ; -- tocheck
lin deforest_V2 = mkV2 (mkV "déboiser") ; -- tocheck
lin deforestation_N = mkN "déforestation" feminine ; -- tocheck
lin deform_V2 = mkV2 (mkV "déformer") ; -- tocheck
lin deformation_N = mkN "déformation" feminine ; -- tocheck
lin defraud_V2 = mkV2 (mkV "escroquer") ; -- tocheck
lin defray_V2 = mkV2 (mkV "défrayer") ; -- tocheck
lin defrayal_N = mkN "paiement" | mkN "versement" ; -- UWN
lin defrayment_N = mkN "paiement" | mkN "versement" ; -- UWN
lin defrock_V2 = mkV2 (mkV "défroquer") ; -- tocheck
lin defrost_V2 = mkV2 (mkV "décongeler") ; -- tocheck
lin deft_A = mkA "habile" ; -- tocheck
lin deftness_N = mkN "dispositif" | mkN "mécanisme" | mkN "équipement" ; -- UWN
lin defuse_V2 = mkV2 (mkV "désamorcer") ; -- tocheck
lin defy_V2 = variants {} ; -- mkV2V (mkV "défier") ; -- tocheck
lin defy_V2V = mkV2V (mkV "défier") ; -- tocheck
lin degauss_V2 = mkV2 (mkV "dégausser") ; -- tocheck
lin degeneracy_N = mkN "corruption" ; -- UWN
lin degenerate_A = mkA "dissolu" | mkA "jeûner" | mkA "libertin" | mkA "rapide" ; -- UWN
lin degenerate_V = mkV (mkV "dégénérer") ; -- tocheck
lin degeneration_N = mkN "dégénérescence" feminine ; -- tocheck
lin degenerative_A = mkA "dégénératif" ; -- UWN
lin degradation_N = mkN "dégradation" feminine ; -- tocheck
lin degree_1_N = mkN "degré" masculine ; -- tocheck
lin degree_2_N = mkN "diplôme" masculine ; -- tocheck
lin degree_3_N = mkN "degré" masculine ; -- tocheck
lin degree_N = variants {} ; --
lin dehiscence_N = mkN "déhiscence" feminine ; -- tocheck
lin dehiscent_A = mkA "déhiscent" ; -- tocheck
lin dehydration_N = mkN "déshydratation" feminine ; -- tocheck
lin deictic_A = mkA "déictique" ; -- tocheck
lin deification_N = mkN "déification" feminine ; -- tocheck
lin deify_V2 = mkV2 (mkV "déifier") ; -- tocheck
lin deign_V = mkV (mkV "daigner") ; -- tocheck
lin deinocheirus_N = mkN "deinocheirus" ; -- UWN
lin deism_N = mkN "déisme" masculine ; -- tocheck
lin deist_N = mkN "libre-penseur" | mkN "libre_penseur" ; -- UWN
lin deity_N = mkN "déité" feminine ; -- tocheck
lin deixis_N = mkN "Deixis" | mkN "deixis" | mkN "déixis" ; -- UWN
lin dejection_N = mkN "abattement" masculine ; -- tocheck
lin delaware_PN = mkPN "Delaware" ; -- status=guess src=geonames
lin delay_N = mkN "délai" masculine ; -- tocheck
lin delay_V = variants {} ; -- mkV2 (mkV "retarder") ; -- tocheck
lin delay_V2 = mkV2 (mkV "retarder") ; -- tocheck
lin delectable_A = mkA "délicieux" ; -- tocheck
lin delegate_N = mkN "délégué" masculine ; -- tocheck
lin delegate_V2 = mkV2 (mkV "déléguer") ; -- tocheck
lin delegating_N = mkN "délégation" | mkN "députation" ; -- UWN
lin delegation_N = mkN "délégation" feminine ; -- tocheck
lin delete_V2 = mkV2 (mkV "supprimer") ; -- tocheck
lin deleterious_A = mkA "délétère" ; -- tocheck
lin deletion_N = mkN "suppression" feminine | mkN "délétion" | mkN "suppression" ; -- tocheck
lin delft_N = mkN "delft" ; -- UWN
lin delhi_PN = mkPN "Delhi" ; -- status=guess src=geonames
lin deliberate_A = mkA "concerté" | mkA "délibéré" ; -- tocheck
lin deliberate_V2 = mkV2 (mkV "délibérer") ; -- tocheck
lin delicacy_N = mkN "délicatesse" feminine | mkN "gourmandise" feminine ; -- tocheck
lin delicate_A = mkA "délicat" ; -- tocheck
lin delicatessen_N = mkN "delicatessen" masculine ; -- tocheck
lin delicious_A = mkA "délicieux" ; -- tocheck
lin delight_N = mkN "plaisir" ; -- tocheck
lin delight_V = variants {} ; -- mkV2 (mkV "enchanter") ; -- tocheck
lin delight_V2 = mkV2 (mkV "enchanter") ; -- tocheck
lin delighted_A = variants {} ; --
lin delightful_A = mkA "délicieux" ; -- tocheck
lin delimitation_N = mkN "frontière" | mkN "limite" ; -- UWN
lin delineate_V2 = mkV2 (mkV "délimiter") | mkV2 (mkV I.décrire_V2) ; -- tocheck
lin delineation_N = mkN "délimitation" ; -- tocheck
lin delinquency_N = mkN "délinquance" | mkN "délinquance_juvénile" ; -- UWN
lin delinquent_N = mkN "délinquant" masculine ; -- tocheck
lin delirium_N = mkN "délire" masculine ; -- tocheck
lin deliver_V = variants {} ; -- mkV2 (mkV "livrer") ; -- tocheck
lin deliver_V2 = mkV2 (mkV "livrer") ; -- tocheck
lin deliverable_A = mkA "livrable" ; -- tocheck
lin deliverable_N = mkN "livrable" masculine ; -- tocheck
lin deliverance_N = mkN "délivrance" feminine ; -- tocheck
lin delivery_N = mkN "accouchement" | mkN "administration" | mkN "livraison" feminine ; -- tocheck
lin deliveryman_N = mkN "livreur" masculine ; -- tocheck
lin dell_N = mkN "dingle" ; -- UWN
lin delphinium_N = mkN "dauphinelle" | mkN "dauphinelles" | mkN "delphinium" | mkN "pied-d’alouette" | mkN "pieds-d'alouette" ; -- UWN
lin delta_N = mkN "delta" masculine ; -- tocheck
lin delude_V2 = mkV2 (mkV "tricher") ; -- tocheck
lin deluge_N = mkN "déluge" ; -- tocheck
lin deluge_V2 = mkV2 (mkV "inonder") ; -- tocheck
lin delusion_N = mkN "illusion" ; -- tocheck
lin deluxe_A = mkA "luxe" ; -- UWN
lin demagogic_A = mkA "démagogique" ; -- tocheck
lin demagogue_N = mkN "démagogue" ; -- tocheck
lin demagoguery_N = mkN "Démagogie" | mkN "démagogie" ; -- UWN
lin demagogy_N = mkN "démagogie" feminine ; -- tocheck
lin demand_N = mkN "demande" feminine | mkN "demande" | mkN "exige" ; -- tocheck
lin demand_V2 = mkV2 (mkV "exiger") ; -- tocheck
lin demand_VS = variants {} ; -- mkV2 (mkV "exiger") ; -- tocheck
lin demander_N = mkN "exigeur" ; -- UWN
lin demanding_A = mkA "éprouvant" ; -- tocheck
lin demarcation_N = mkN "démarcation" feminine ; -- tocheck
lin demeanor_N = mkN "comportement" masculine ; -- tocheck
lin demeanour_N = mkN "agissement" | mkN "comportement" | mkN "conduite" ; -- UWN
lin demented_A = mkA "dément" ; -- tocheck
lin dementia_N = mkN "démence" feminine ; -- tocheck
lin demigod_N = mkN "demi-dieu" masculine ; -- tocheck
lin demijohn_N = mkN "dame-jeanne" ; -- tocheck
lin demimondaine_N = mkN "demi-mondaine" ; -- UWN
lin demimonde_N = mkN "demi-mondaine" | mkN "demi-monde" ; -- UWN
lin demiurge_N = mkN "démiurge" masculine ; -- tocheck
lin demo_N = mkN "démonstration" feminine | mkN "démo" feminine ; -- tocheck
lin demobilize_V2 = mkV2 (mkV "démobilier") ; -- tocheck
lin democracy_N = mkN "démocratie" feminine ; -- tocheck
lin democrat_N = mkN "démocrate" ; -- tocheck
lin democratic_A = mkA "démocratique" ; -- tocheck
lin democratization_N = mkN "démocratisation" feminine ; -- tocheck
lin democratize_V2 = mkV2 (mkV "démocratiser") ; -- tocheck
lin demographer_N = mkN "démographe" ; -- tocheck
lin demographic_A = mkA "démographique" ; -- tocheck
lin demographic_N = mkN "démographique" ; -- UWN
lin demography_N = mkN "démographie" feminine ; -- tocheck
lin demolish_V2 = mkV2 (mkV "démolir") ; -- tocheck
lin demolition_N = mkN "démolition" feminine ; -- tocheck
lin demon_N = mkN "démon" masculine ; -- tocheck
lin demonic_A = mkA "démoniaque" ; -- tocheck
lin demonization_N = mkN "diabolisation" feminine ; -- tocheck
lin demonize_V2 = mkV2 (mkV "diaboliser") ; -- tocheck
lin demonstrability_N = mkN "démonstrabilité" ; -- UWN
lin demonstrate_V = mkV "démontrer" ; -- UWN
lin demonstrate_V2 = mkV2 (mkV "démontrer") ; -- tocheck
lin demonstrate_VS = mkvVS "assurer" | mkvVS "attester" | mkvVS "démontrer" | mkvVS "exprimer" | mkvVS "indiquer" | mkvVS "montrer" | mkvVS "prouver" | mkvVS "témoigner" ; -- UWN
lin demonstration_N = mkN "démonstration" feminine | mkN "manifestation" feminine ; -- tocheck
lin demonstrative_A = mkA "démonstratif" ; -- tocheck
lin demonstrator_N = mkN "manifestant" masculine ; -- tocheck
lin demoralize_V2 = mkV2 (mkV "démoraliser") ; -- tocheck
lin demote_V2 = mkV2 (mkV "rétrograder") ; -- tocheck
lin demotion_N = mkN "abaissement" | mkN "rétrogradation_professionnelle" ; -- UWN
lin demulcent_A = mkA "émollient" ; -- UWN
lin demure_A = mkA "réservé" ; -- tocheck
lin demurrer_N = mkN "défense" | mkN "déni" ; -- UWN
lin demyelination_N = mkN "démyélinisation" feminine ; -- tocheck
lin demythologization_N = mkN "démythification" ; -- UWN
lin den_N = mkN "terrier" masculine ; -- tocheck
lin denain_PN = mkPN "Denain" ; -- status=guess src=geonames
lin denationalize_V2 = mkV2 (mkV "dénationaliser") ; -- tocheck
lin denazification_N = mkN "dénazification" feminine ; -- tocheck
lin denbigh_PN = mkPN "Denbigh" ; -- status=guess src=geonames
lin dendritic_A = mkA "dendroïde" ; -- UWN
lin dendrobium_N = mkN "dendrobium" ; -- UWN
lin dengue_N = mkN "dengue" ; -- tocheck
lin deniable_A = mkA "niable" ; -- UWN
lin denial_N = mkN "négation" feminine | mkN "déni" masculine | mkN "refus" masculine ; -- tocheck
lin denier_N = mkN "denier" masculine ; -- tocheck
lin denigrate_V2 = mkV2 (mkV "noircir") | mkV2 (mkV "dénigrer") ; -- tocheck
lin denigration_N = mkN "dénigrement" ; -- UWN
lin denim_N = mkN "denim" masculine ; -- tocheck
lin denizen_N = mkN "habitué" ; -- tocheck
lin denmark_PN = mkPN "Danemark" ; -- status=guess src=geonames
lin dennis_PN = mkPN "Dennis" ; -- status=guess src=geonames
lin denny_PN = mkPN "Denny" ; -- status=guess src=geonames
lin denomination_N = mkN "dénomination" feminine | mkN "désignation" feminine ; -- tocheck
lin denominator_N = mkN "dénominateur" masculine ; -- tocheck
lin denote_V2 = mkV2 (mkV "dénoter") | mkV2 (mkV "indiquer") ; -- tocheck
lin denounce_V2 = mkV2 (mkV "dénoncer") ; -- tocheck
lin dense_A = variants {} ; --
lin density_N = mkN "densité" feminine ; -- tocheck
lin dent_N = mkN "accroc" ; -- tocheck
lin dent_V2 = mkV2 (mkV "cabosser") ; -- tocheck
lin dental_A = mkA "dentaire" | mkA "dental" ; -- tocheck
lin dentate_A = mkA "denté" ; -- tocheck
lin dentist_N = mkN "dentiste" ; -- tocheck
lin dentistry_N = mkN "odontologie" feminine ; -- tocheck
lin dentition_N = mkN "dent" ; -- UWN
lin denture_N = mkN "dentier" masculine | mkN "dentition" feminine ; -- tocheck
lin denudation_N = mkN "densité_de_flux_thermique_critique" | mkN "démembrement" | mkN "dépotage" | mkN "extraction_au_gaz" | mkN "stripping" | mkN "éveinage" ; -- UWN
lin denunciation_N = mkN "accusation" | mkN "dénonciation" | mkN "plainte" ; -- UWN
lin denver_PN = mkPN "Denver" ; -- status=guess src=geonames
lin deny_V2 = variants {} ; -- mkV3 (mkV "nier") ; -- tocheck
lin deny_V3 = mkV3 (mkV "nier") ; -- tocheck
lin deodorant_N = mkN "déodorant" masculine ; -- tocheck
lin deoxycytidine_N = mkN "cytidine" ; -- UWN
lin deoxyguanosine_N = mkN "guanosine" ; -- UWN
lin deoxyribose_N = mkN "désoxyribose" ; -- tocheck
lin deoxythymidine_N = mkN "désoxythymidine" | mkN "thymidine" ; -- UWN
lin depart_V = mkV (mkV I.partir_V) | mkV (mkV "dévier") | mkV (mkV I.mourir_V) | mkV (mkV "quitter") ; -- tocheck
lin departer_N = mkN "navire_quittant" ; -- UWN
lin department_N = mkN "département" masculine | mkN "ministère" masculine ; ---- split
lin departmental_A = mkA "départemental" ; -- tocheck
lin departure_N = mkN "déviation" | mkN "départ" masculine ; -- tocheck
lin depend_V = mkV (mkV I.pendre_V2) | mkV (mkV I.dépendre_V2) ; -- tocheck
lin dependability_N = mkN "fiabilité" | mkN "fiable" ; -- UWN
lin dependable_A = mkA "fiable" ; -- tocheck
lin dependant_N = mkN "dépendant" ; -- UWN
lin dependence_N = mkN "dépendance" ; -- tocheck
lin dependency_N = mkN "dépendance" feminine ; -- tocheck
lin dependent_A = mkA "dépendant" ; -- tocheck
lin dependent_N = mkN "dépendant" masculine ; -- tocheck
lin depending_A = variants {} ; --
lin depersonalization_N = mkN "réification" ; -- UWN
lin depict_V2 = mkV2 (mkV "représenter") ; -- tocheck
lin depicting_N = mkN "représentation" ; -- UWN
lin depiction_N = mkN "représentation" feminine ; -- tocheck
lin deplete_V2 = mkV2 (mkV "vider") ; -- tocheck
lin depletion_N = mkN "épuisement" ; -- UWN
lin deplorable_A = mkA "déplorable" ; -- tocheck
lin deplore_V2 = mkV2 (mkV "déplorer") ; -- tocheck
lin deploy_V = variants {} ; --
lin deploy_V2 = variants {} ; --
lin depolarization_N = mkN "dépolarisation" feminine ; -- tocheck
lin deponent_N = mkN "déponent" ; -- tocheck
lin depopulation_N = mkN "dépeuplement" masculine ; -- tocheck
lin deport_V2 = mkV2 (mkV "déporter") ; -- tocheck
lin deportation_N = mkN "déportation" feminine ; -- tocheck
lin deportee_N = mkN "déporté" masculine ; -- tocheck
lin deportment_N = mkN "agissement" | mkN "comportement" | mkN "conduite" ; -- UWN
lin depose_V = mkV "déposer" | mkV "jurer" ; -- UWN
lin depose_V2 = mkV2 (mkV "déposer") ; -- tocheck
lin deposit_N = mkN "dépôt" masculine | mkN "acompte" masculine | mkN "caution" feminine ; -- tocheck
lin deposit_V2 = mkV2 (mkV "déposer") ; -- tocheck
lin depositor_N = mkN "déposant" | mkN "dépositaire" ; -- UWN
lin depository_N = mkN "dépôt" masculine ; -- tocheck
lin depot_N = mkN "dépôt" ; -- tocheck
lin depravity_N = mkN "turpitude" ; -- UWN
lin deprecation_N = mkN "désapprobation" feminine ; -- tocheck
lin depreciate_V2 = mkV2 (mkV "déprécier") ; -- tocheck
lin depreciation_N = mkN "dépréciation" feminine ; -- tocheck
lin depredation_N = mkN "prédation" ; -- UWN
lin depressed_A = variants {} ; --
lin depressing_A = mkA "déprimant" ; -- tocheck
lin depression_N = mkN "dépression" feminine | mkN "dépression" ; -- tocheck
lin depressive_A = mkA "dépressif" ; -- tocheck
lin deprivation_N = variants {} ; --
lin deprive_V2 = variants {} ; --
lin depth_N = mkN "profondeur" feminine ; -- tocheck
lin deputation_N = mkN "délégation" | mkN "députation" ; -- UWN
lin deputy_N = mkN "adjoint" masculine | mkN "député" masculine ; -- tocheck
lin derail_V2 = mkV2 (mkV "dérailler") ; -- tocheck
lin derailment_N = mkN "déraillement" masculine ; -- tocheck
lin derangement_N = mkN "renverser" ; -- UWN
lin derby_N = mkN "chapeau_melon" | mkN "derby" | mkN "melon" | mkN "orage" | mkN "tempête" ; -- UWN
lin derby_PN = mkPN "Derby" ; -- status=guess src=geonames
lin deregulation_N = mkN "dérèglementation" | mkN "déréglementation" ; -- UWN
lin derelict_A = mkA "abandonné" | mkA "négligent" ; -- tocheck
lin derelict_N = mkN "épave" ; -- tocheck
lin dereliction_N = mkN "déréliction" ; -- tocheck
lin deride_V2 = mkV2 (mkV "bafouer") ; -- tocheck
lin derision_N = mkN "dérision" ; -- tocheck
lin derisive_A = mkA "goguenard" ; -- UWN
lin derivable_A = mkA "dérivable" ; -- UWN
lin derivative_A = mkA "dérivée" ; -- UWN
lin derivative_N = mkN "dérivée" feminine ; -- tocheck
lin derive_V = mkV "découler" | mkV "dériver" | mkV "provenir" ; -- UWN
lin derive_V2 = mkV2 (mkV "dériver") | mkV2 (mkV I.déduire_V2) ; -- tocheck
lin dermabrasion_N = mkN "dermabrasion" ; -- UWN
lin dermatitis_N = mkN "dermatite" | mkN "dermite" | mkN "eczéma" ; -- UWN
lin dermatologic_A = mkA "dermatologique" ; -- UWN
lin dermatologistFem_N = mkN "dermatologue" ; -- tocheck
lin dermatologistMasc_N = mkN "dermatologue" ; -- tocheck
lin dermatology_N = mkN "dermatologie" feminine ; -- tocheck
lin dermatomycosis_N = mkN "dermatophytose" | mkN "dermatophytoses" ; -- UWN
lin dermatosis_N = mkN "dermatose" ; -- UWN
lin dermis_N = mkN "derme" masculine ; -- tocheck
lin derogation_N = mkN "dérogation" | mkN "exception" ; -- UWN
lin derogatory_A = mkA "désobligeant" ; -- tocheck
lin derrick_N = mkN "derrick" ; -- UWN
lin derring_do_N = mkN "prouesse" ; -- tocheck
lin derris_N = mkN "derris" ; -- UWN
lin dervish_N = mkN "derviche" masculine ; -- tocheck
lin desalination_N = mkN "dessalement" masculine ; -- tocheck
lin desalt_V2 = mkV2 (mkV "dessaler") ; -- tocheck
lin descend_V = variants {} ; -- mkV2 (mkV I.descendre_V2) ; -- tocheck
lin descend_V2 = mkV2 (mkV I.descendre_V2) ; -- tocheck
lin descendant_N = mkN "descendant" masculine ; -- tocheck
lin descent_N = mkN "origine" feminine ; -- tocheck
lin describe_V2 = I.décrire_V2 ;
lin describe_VS = mkVS (mkV I.décrire_V2) ;
lin description_N = mkN "signalement" | mkN "description" feminine ; -- tocheck
lin desecrate_V2 = mkV2 (mkV "profaner") | mkV2 (mkV "désacraliser") | mkV2 (mkV "désécrer") ; -- tocheck
lin desecration_N = mkN "profanation" feminine ; -- tocheck
lin desegregation_N = mkN "déségrégation" | mkN "intégration" ; -- UWN
lin desensitize_V2 = mkV2 (mkV "désensibiliser") ; -- tocheck
lin desert_A = mkA "désert" ; -- tocheck
lin desert_N = mkN "désert" | mkN "déserter" ; -- UWN
lin desert_V = variants {} ; -- mkV2 (mkV "déserter") ; -- tocheck
lin desert_V2 = mkV2 (mkV "déserter") ; -- tocheck
lin deserter_N = mkN "déserteur" masculine ; -- tocheck
lin desertification_N = mkN "désertification" feminine ; -- tocheck
lin desertion_N = mkN "désertion" feminine ; -- tocheck
lin deserve_V = variants {} ; -- mkV2 (mkV "mériter") ; -- tocheck
lin deserve_V2 = mkV2 (mkV "mériter") ; -- tocheck
lin deservingness_N = mkN "mérite" ; -- UWN
lin desiccate_V2 = mkV2 (mkV "secher") ; -- tocheck
lin desideratum_N = mkN "desiderata" ; -- UWN
lin design_N = mkN "design" masculine | mkN "conception" feminine | mkN "dessein" masculine | mkN "modèle" feminine ; -- tocheck
lin design_V = variants {} ; --
lin design_V2 = variants {} ; --
lin designate_V = mkV "destiner" ; -- UWN
lin designate_V2 = variants {} ; --
lin designate_V2V = variants {} ; --
lin designate_VS = mkvVS "destiner" ; -- UWN
lin designation_N = mkN "appellation" feminine ; -- tocheck
lin designer_N = mkN "designer" masculine ; -- tocheck
lin designing_N = mkN "conception" ; -- UWN
lin desirability_N = mkN "désirabilité" feminine ; -- tocheck
lin desirable_A = mkA "souhaitable" ; -- tocheck
lin desire_N = mkN "désir" masculine ; -- tocheck
lin desire_V2 = mkV2 (mkV "désirer") ; -- tocheck
lin desired_A = variants {} ; --
lin desirous_A = mkA "désireux" ; -- tocheck
lin desk_N = mkN "bureau" masculine ; -- tocheck
lin desktop_N = mkN "bureau" masculine ; -- tocheck
lin desolate_V2 = mkV2 (mkV "ravager") ; -- tocheck
lin desorption_N = mkN "adsorption" | mkN "désorption" ; -- UWN
lin despair_N = mkN "désespoir" masculine ; -- tocheck
lin despair_V = mkV (mkV "désespérer") ; -- tocheck
lin despatch_N = mkN "expédition" ; -- UWN
lin desperate_A = mkA "désespéré" ; -- tocheck
lin desperate_N = mkN "désespéré" ; -- UWN
lin desperation_N = mkN "désespoir" | mkN "désespérance" ; -- UWN
lin despicable_A = mkA "abject" ; -- tocheck
lin despise_V2 = mkV2 (mkV "dédaigner") ; -- tocheck
lin despite_Prep = variants {} ; --
lin despiteful_A = mkA "rancunier" | mkA "vindicatif" ; -- UWN
lin despondency_N = mkN "abattement" masculine | mkN "désespoir" ; -- tocheck
lin despondent_A = mkA "déprimé" ; -- tocheck
lin despot_N = mkN "despote" ; -- tocheck
lin despotism_N = mkN "despotisme" ; -- tocheck
lin desquamation_N = mkN "desquamation" ; -- UWN
lin dessau_PN = mkPN "Dessau" ; -- status=guess src=geonames
lin dessert_N = mkN "dessert" masculine ; -- tocheck
lin dessertspoon_N = mkN "cuillère_à_dessert" ; -- UWN
lin dessertspoonful_N = mkN "cuillère_à_dessert" ; -- UWN
lin destabilization_N = mkN "déstabilisation" feminine ; -- tocheck
lin destination_N = mkN "destination" feminine ; -- tocheck
lin destiny_N = mkN "destinée" masculine ; -- tocheck
lin destitute_A = mkA "démuni" ; -- tocheck
lin destitution_N = mkN "dénuement" masculine | mkN "indigence" feminine ; -- tocheck
lin destroy_V2 = mkV2 (mkV I.détruire_V2) | mkV2 (mkV "euthanasier") ; -- tocheck
lin destroyer_N = mkN "destructeur" masculine | mkN "destroyer" ; -- tocheck
lin destruction_N = mkN "destruction" feminine ; -- tocheck
lin destructive_A = mkA "destructif" ; -- tocheck
lin desuetude_N = mkN "désuétude" feminine ; -- tocheck
lin desultory_A = mkA "incohérence" ; -- tocheck
lin detach_V2 = mkV2 (mkV "détacher") ; -- tocheck
lin detachable_A = mkA "amovible" ; -- tocheck
lin detail_N = mkN "détail" masculine ;
lin detail_V2 = mkV2 (mkV "détailler") ; -- tocheck
lin detailed_A = mkA "aléatoire" | mkA "autre" | mkA "minutieux" | mkA "préalable" | mkA "précis" | mkA "relatif" | mkA "semestriel" ; -- UWN
lin detain_V2 = mkV2 (mkV I.détenir_V2) ; -- tocheck
lin detainee_N = mkN "détenu" masculine ; -- tocheck
lin detect_V2 = mkV2 (mkV "déceler") ; -- tocheck
lin detectable_A = mkA "détectable" ; -- tocheck
lin detection_N = variants {} ; --
lin detective_N = mkN "détective" masculine | mkN "détective" ; -- tocheck
lin detector_N = mkN "détecteur" masculine ; -- tocheck
lin detention_N = mkN "détention" feminine ; -- tocheck
lin deter_V2 = mkV2 (mkV "empêcher") | mkV2 (mkV "dissuader") ; -- tocheck
lin detergent_A = mkA "détergent" ; -- tocheck
lin detergent_N = mkN "détergent" masculine ; -- tocheck
lin deteriorate_V = variants {} ; -- mkV2 (mkV "détériorer") ; -- tocheck
lin deteriorate_V2 = mkV2 (mkV "détériorer") ; -- tocheck
lin deterioration_N = mkN "détérioration" ; -- UWN
lin determent_N = mkN "dissuasion" | mkN "intimidation" ; -- UWN
lin determinant_A = mkA "déterminant" ; -- UWN
lin determinant_N = mkN "déterminant" masculine ; -- tocheck
lin determinateness_N = mkN "définitude" ; -- UWN
lin determination_N = mkN "décision" | mkN "détermination" | mkN "usage" | mkN "volonté" ; -- UWN
lin determinative_A = mkA "déterminant" ; -- UWN
lin determinative_N = mkN "déterminant" ; -- UWN
lin determine_V = variants {} ; -- mkV2V (mkV "déterminer") ; -- tocheck
lin determine_V2 = variants {} ; -- mkV2V (mkV "déterminer") ; -- tocheck
lin determine_V2V = mkV2V (mkV "déterminer") ; -- tocheck
lin determined_A = variants {} ; --
lin determiner_N = mkN "déterminant" masculine ; -- tocheck
lin determinism_N = mkN "déterminisme" masculine ; -- tocheck
lin deterministic_A = mkA "déterministe" ; -- tocheck
lin deterrence_N = mkN "dissuasion" feminine ; -- tocheck
lin deterrent_A = mkA "dissuasif" ; -- tocheck
lin deterrent_N = mkN "dissuasion" feminine ; -- tocheck
lin detest_V2 = mkV2 (mkV "détester") ; -- tocheck
lin dethrone_V2 = mkV2 (mkV "détrôner") ; -- tocheck
lin detonate_V2 = mkV2 (mkV "détoner") ; -- tocheck
lin detonation_N = mkN "détonation" feminine ; -- tocheck
lin detonator_N = mkN "détonateur" masculine ; -- tocheck
lin detox_N = mkN "désintoxication" ; -- UWN
lin detoxification_N = mkN "désintoxication" feminine ; -- tocheck
lin detract_V = mkV "déroger" | mkV "détracter" ; -- UWN
lin detractor_N = mkN "détracteur" masculine ; -- tocheck
lin detriment_N = mkN "détriment" masculine ; -- tocheck
lin detrimental_A = mkA "nuisible" ; -- tocheck
lin detritus_N = mkN "détritus" masculine ; -- tocheck
lin detroit_PN = mkPN "Détroit" ; -- status=guess src=geonames
lin deuce_N = mkN "égalité" feminine ; -- tocheck
lin deuterium_N = mkN "deutérium" masculine ; -- tocheck
lin deuteron_N = mkN "deutéron" masculine ; -- tocheck
lin deutzia_N = mkN "deutzia" ; -- UWN
lin devaluation_N = mkN "dévaluation" feminine ; -- tocheck
lin devastate_V2 = mkV2 (mkV "dévaster") ; -- tocheck
lin develop_V = reflV (mkV "développer") ;
lin develop_V2 = mkV2 (mkV "développer") ;
lin developed_A = variants {} ; --
lin developer_N = mkN "concepteur" masculine | mkN "révélateur" masculine | mkN "développateur" masculine | mkN "promoteur" masculine | mkN "promoteur" ; -- tocheck
lin developing_A = variants {} ; --
lin development_N = mkN "développement" masculine ;
lin deviant_A = mkA "déviant" ; -- tocheck
lin deviant_N = mkN "déviant" masculine ; -- tocheck
lin deviate_V = mkV (mkV "dévier") ; -- tocheck
lin deviation_N = mkN "déviation" feminine ; -- tocheck
lin deviationist_N = mkN "déviationniste" ; -- UWN
lin device_N = mkN "appareil" masculine | mkN "stratagème" masculine ; -- tocheck
lin devil_N = mkN "diable" masculine | mkN "type" masculine | mkN "Diable" masculine ; -- tocheck
lin devilish_A = mkA "infernal" | mkA "diabolique" ; -- tocheck
lin devious_A = mkA "rusé" ; -- tocheck
lin devise_V2 = variants {} ; --
lin devising_N = mkN "genèse" | mkN "prise" | mkN "réalisation" ; -- UWN
lin devizes_PN = mkPN "Devizes" ; -- status=guess src=geonames
lin devolution_N = mkN "dévolution_du_pouvoir" ; -- UWN
lin devon_PN = mkPN "Devon" ; -- status=guess src=geonames
lin devote_V2 = mkV2 (mkV "consacrer") ; -- tocheck
lin devoted_A = variants {} ; --
lin devotion_N = mkN "dévouement" masculine ; -- tocheck
lin devotional_A = mkA "dévotionnel" ; -- tocheck
lin devour_V2 = mkV2 (mkV "dévorer") ; -- tocheck
lin devout_A = mkA "dévot" | mkA "pieux" ; -- UWN
lin devoutness_N = mkN "piété" ; -- UWN
lin dew_N = mkN "rosée" feminine ; -- tocheck
lin dewsbury_PN = mkPN "Dewsbury" ; -- status=guess src=geonames
lin dexterity_N = mkN "dextérité" feminine ; -- tocheck
lin dexterous_A = mkA "adroit" ; -- tocheck
lin dextrorotary_A = mkA "dextrogyre" | mkA "droitier" ; -- UWN
lin dextrorotation_N = mkN "dextrogyre" ; -- UWN
lin dextrose_N = mkN "dextrose" masculine ; -- tocheck
lin dextrous_A = mkA "adroit" ; -- UWN
lin dhoti_N = mkN "dhotî" | mkN "dhûtî" | mkN "parîdhâna" ; -- UWN
lin dhow_N = mkN "boutre" ; -- UWN
lin diabetes_N = mkN "diabète" masculine ; -- tocheck
lin diabetic_A = mkA "diabétique" ; -- tocheck
lin diabetic_N = mkN "diabétique" ; -- tocheck
lin diabolic_A = mkA "diabolique" ; -- tocheck
lin diabolical_A = mkA "diabolique" | mkA "démoniaque" | mkA "infernal" | mkA "satanique" | mkA "satané" ; -- UWN
lin diachronic_A = mkA "diachronique" ; -- tocheck
lin diacritic_A = mkA "diacritique" ; -- UWN
lin diacritic_N = mkN "diacritique" ; -- UWN
lin diacritical_A = mkA "diacritique" ; -- UWN
lin diadem_N = mkN "couronne" feminine | mkN "diadème" masculine ; -- tocheck
lin diaeresis_N = mkN "diérèse" feminine ; -- tocheck
lin diagnose_V2 = mkV2 (mkV "diagnostiquer") ; -- tocheck
lin diagnosis_N = mkN "diagnostic" masculine ; -- tocheck
lin diagnostic_A = mkA "diagnostic" ; -- tocheck
lin diagnostician_N = mkN "interniste" masculine ; -- tocheck
lin diagonal_A = mkA "diagonale" ; -- tocheck
lin diagonal_N = mkN "diagonale" feminine ; -- tocheck
lin diagonalization_N = mkN "diagonalisation" ; -- UWN
lin diagram_N = mkN "diagramme" masculine | mkN "schema" masculine ; -- tocheck
lin dial_N = mkN "cadran" masculine | mkN "bouille" feminine ; -- tocheck
lin dial_V2 = mkV2 (mkV "composer") ; -- tocheck
lin dialect_N = mkN "dialecte" masculine ; -- tocheck
lin dialectal_A = mkA "dialectal" ; -- tocheck
lin dialectic_A = mkA "dialectique" ; -- UWN
lin dialectic_N = mkN "dialectique" ; -- UWN
lin dialectical_A = mkA "dialectique" ; -- UWN
lin dialectics_N = mkN "dialectique" feminine ; -- tocheck
lin dialectology_N = mkN "dialectologie" feminine ; -- tocheck
lin dialogue_N = mkN "dialogue" masculine ; -- tocheck
lin dialysis_N = mkN "dialyse" feminine ; -- tocheck
lin diamagnetic_A = mkA "diamagnétique" ; -- UWN
lin diamagnetism_N = mkN "diamagnétisme" ; -- UWN
lin diameter_N = mkN "diamètre" masculine ; -- tocheck
lin diametral_A = mkA "diamétral" ; -- tocheck
lin diamine_N = mkN "diamine" feminine ; -- tocheck
lin diamond_N = mkN "carreau" masculine | mkN "diamant" masculine ; -- tocheck
lin dianoetic_A = mkA "discursif" ; -- UWN
lin diapason_N = mkN "accordoir" | mkN "diapason" ; -- UWN
lin diapensia_N = mkN "diapensia" ; -- UWN
lin diaper_N = mkN "couche" feminine ; -- tocheck
lin diaphanous_A = mkA "diaphane" ; -- tocheck
lin diaphragm_N = mkN "diaphragme" masculine | mkN "membrane" feminine ; -- tocheck
lin diapir_N = mkN "diapir" ; -- UWN
lin diapsid_N = mkN "Diapsida" | mkN "diapsida" | mkN "diapsides" ; -- UWN
lin diarchy_N = mkN "dyarchie" feminine ; -- tocheck
lin diarist_N = mkN "diariste" ; -- tocheck
lin diarrhea_N = mkN "diarrhée" feminine ; -- tocheck
lin diarrheal_A = mkA "diarrhéique" ; -- UWN
lin diarrhoea_N = mkN "Diarrhée" | mkN "diarrhée" ; -- UWN
lin diary_N = variants {} ; --
lin diaspora_N = mkN "diaspora" feminine ; -- tocheck
lin diastole_N = mkN "diastole" ; -- UWN
lin diatom_N = mkN "diatomée" feminine ; -- tocheck
lin diatomic_A = mkA "diatomique" ; -- tocheck
lin diatonic_A = mkA "diatonique" ; -- tocheck
lin diatribe_N = mkN "diatribe" ; -- tocheck
lin diazepam_N = mkN "diazépam" masculine ; -- tocheck
lin dibber_N = mkN "plantoir" ; -- UWN
lin dibble_N = mkN "plantoir" ; -- UWN
lin dibs_N = mkN "prems" masculine ; -- tocheck
lin dicamptodon_N = mkN "dicamptodon" | mkN "dicamptodontidae" ; -- UWN
lin dice_N = mkN "dé" | mkN "dé_à_jouer" ; -- UWN
lin dicey_A = mkA "périlleux" | mkA "risqué" ; -- UWN
lin dichloride_N = mkN "dichlorure" ; -- UWN
lin dichotomy_N = mkN "dichotomie" feminine ; -- tocheck
lin dick_N = mkN "bitte" | mkN "connard" masculine ; -- tocheck
lin dicot_N = mkN "dicotylédone" | mkN "dicotylédones" ; -- UWN
lin dictate_N = mkN "diktat" | mkN "vouloir" ; -- UWN
lin dictate_V = mkV "dicter" ; -- UWN
lin dictate_V2 = mkV2 (mkV "dicter") ; -- tocheck
lin dictate_VS = mkvVS "dicter" ; -- UWN
lin dictator_N = mkN "dictateur" masculine ; -- tocheck
lin dictatorial_A = mkA "dictatorial" ; -- tocheck
lin dictatorship_N = mkN "dictature" feminine ; -- tocheck
lin diction_N = mkN "diction" feminine ; -- tocheck
lin dictionary_N = mkN "dictionnaire" masculine ; -- tocheck
lin dictum_N = mkN "déclaration" ; -- UWN
lin didactic_A = mkA "didactique" | mkA "livresque" ; -- tocheck
lin didcot_PN = mkPN "Didcot" ; -- status=guess src=geonames
lin die_N = mkN "filière" feminine | mkN "dé" masculine ; -- tocheck
lin die_V = L.die_V ;
lin die_away_V = advV OP_die_V OP_away_Adv ; -- guess-p-verb
lin die_back_V = advV OP_die_V OP_back_Adv ; -- guess-p-verb
lin die_down_V = advV OP_die_V OP_down_Adv ; -- guess-p-verb
lin die_for_V2 = prepV2 OP_die_V OP_for_Prep ; -- guess-p-verb
lin die_off_V = advV OP_die_V OP_off_Adv ; -- guess-p-verb
lin die_out_V = advV OP_die_V OP_out_Adv ; -- guess-p-verb
lin dieresis_N = mkN "diérèse" | mkN "inflexion" | mkN "métaphonie" | mkN "tréma" | mkN "umlaut" ; -- UWN
lin diesel_N = mkN "diésel" masculine ; -- tocheck
lin diet_N = mkN "régime" ; -- tocheck
lin dietary_A = mkA "diététique" ; -- UWN
lin dietician_N = mkN "diététicien" | mkN "diététicien_;_diététicienne" | mkN "nutritionniste" ; -- UWN
lin dietitian_N = mkN "diététicien" ; -- tocheck
lin differ_V = mkV (mkV "différer") ; -- tocheck
lin difference_N = mkN "différence" feminine ;
lin different_A = mkA "différent" ;
lin differentiable_A = mkA "dérivable" ; -- tocheck
lin differential_A = mkA "différentiel" ; -- tocheck
lin differentiate_V = variants {} ; --
lin differentiate_V2 = variants {} ; --
lin differentiation_N = mkN "différentiation" feminine | mkN "différenciation" ; -- tocheck
lin differentiator_N = mkN "dérivateur" ; -- UWN
lin difficult_A = mkA "difficile" ;
lin difficulty_N = mkN "difficulté" feminine ; -- tocheck
lin diffraction_N = mkN "diffraction" feminine ; -- tocheck
lin diffuse_A = mkA "diffus" ; -- tocheck
lin diffuse_V = mkV "diffuser" | mkV "disperser" | mkV "disséminer" | mkV "parsemer" | mkV "programmer" | mkV "propager" | mkV "répandre" ; -- UWN
lin diffuse_V2 = mkV2 (mkV "diffuser") ; -- tocheck
lin diffusion_N = mkN "diffusion" feminine ; -- tocheck
lin dig_N = mkN "creuser" ; -- UWN
lin dig_V = L.dig_V ;
lin dig_V2 = mkV2 (mkV "creuser") ; -- tocheck
lin dig_in_V = advV OP_dig_V OP_in_Adv ; -- guess-p-verb
lin dig_into_V2 = prepV2 OP_dig_V OP_into_Prep ; -- guess-p-verb
lin dig_out_V2 = prepV2 OP_dig_V OP_out_Prep ; -- guess-p-verb
lin dig_up_V2 = prepV2 OP_dig_V OP_up_Prep ; -- guess-p-verb
lin digest_N = mkN "digeste" masculine ; -- tocheck
lin digest_V2 = mkV2 (mkV "digérer") ; -- tocheck
lin digester_N = mkN "digesteur" ; -- UWN
lin digestible_A = mkA "digeste" ; -- UWN
lin digestion_N = mkN "digestion" feminine ; -- tocheck
lin digger_N = mkN "excavatrice" feminine ; -- tocheck
lin digging_N = mkN "creuser" | mkN "excavation" ; -- UWN
lin digit_N = mkN "doigt" masculine | mkN "chiffre" masculine ; -- tocheck
lin digital_A = mkA "numérique" ; -- tocheck
lin digitalis_N = mkN "digitale" ; -- UWN
lin digitalization_N = mkN "numérisation" ; -- UWN
lin digitization_N = mkN "numérisation" ; -- tocheck
lin digitizer_N = mkN "convertisseur_analogique-numérique" ; -- UWN
lin digitoxin_N = mkN "digitaline" | mkN "digitoxine" | mkN "digitoxoside" ; -- UWN
lin dignitary_N = mkN "dignitaire" feminine ; -- tocheck
lin dignity_N = mkN "dignité" feminine ; -- tocheck
lin digraph_N = mkN "digramme" | mkN "digraphe" ; -- UWN
lin digress_V = mkV (reflV (mkV "écarter")) ; -- tocheck
lin digression_N = mkN "digression" feminine ; -- tocheck
lin digressive_A = mkA "discursif" ; -- UWN
lin dijon_PN = mkPN "Dijon" ; -- status=guess src=geonames
lin dike_N = mkN "digue" feminine | mkN "fossé" masculine ; -- tocheck
lin dilapidated_A = mkA "caduc" ; -- tocheck
lin dilapidation_N = mkN "délabrement" masculine ; -- tocheck
lin dilate_V2 = mkV2 (mkV "dilater") | mkV2 (reflV (mkV "dilater")) ; -- tocheck
lin dilation_N = mkN "dilatation" feminine ; -- tocheck
lin dilatoriness_N = mkN "procrastination" ; -- UWN
lin dilatory_A = mkA "dilatoire" ; -- UWN
lin dildo_N = mkN "godemiché" masculine ; -- tocheck
lin dilemma_N = mkN "dilemme" masculine ; -- tocheck
lin dilettante_A = mkA "dilettante" ; -- tocheck
lin dilettante_N = mkN "dilettante" ; -- tocheck
lin diligence_N = mkN "diligence" feminine ; -- tocheck
lin diligent_A = mkA "industrieux" ; -- tocheck
lin dill_N = mkN "aneth" masculine ; -- tocheck
lin dilute_A = mkA "dilué" | mkA "faible" ; -- tocheck
lin dilute_V2 = mkV2 (mkV "diluer") ; -- tocheck
lin dilution_N = mkN "dilution" ; -- UWN
lin diluvian_A = mkA "diluvial" ; -- UWN
lin dim_A = mkA "tamisé" | mkA "flou" | mkA "bête" ; -- tocheck
lin dimension_N = mkN "dimension" feminine ; -- tocheck
lin dimensional_A = mkA "dimensionnel" ; -- tocheck
lin dimensionality_N = mkN "dimensionnalité" ; -- UWN
lin dimetrodon_N = mkN "dimetrodon" | mkN "dimétrodon" ; -- UWN
lin diminish_V = variants {} ; -- mkV2 (mkV I.réduire_V2) | mkV2 (mkV "rétrécir") | mkV2 (mkV "diminuer") | mkV2 (mkV "amincir") ; -- tocheck
lin diminish_V2 = mkV2 (mkV I.réduire_V2) | mkV2 (mkV "rétrécir") | mkV2 (mkV "diminuer") | mkV2 (mkV "amincir") ; -- tocheck
lin diminuendo_N = mkN "diminuendo" ; -- UWN
lin diminutive_A = mkA "diminutif" | mkA "minuscule" ; -- tocheck
lin diminutive_N = mkN "diminutif" masculine ; -- tocheck
lin dimmer_N = mkN "gradateur" masculine ; -- tocheck
lin dimorphic_A = mkA "dimorphe" ; -- UWN
lin dimple_N = mkN "fossette" feminine ; -- tocheck
lin dimwit_N = mkN "four" ; -- UWN
lin din_N = mkN "vacarme" masculine ; -- tocheck
lin dinar_N = mkN "dinar" masculine ; -- tocheck
lin dine_V = mkV "restaurer" ; -- UWN
lin diner_N = mkN "café-restaurant" ; -- tocheck
lin dingbat_N = mkN "dingbat" ; -- UWN
lin dinghy_N = mkN "youyou" masculine ; -- tocheck
lin dingle_N = mkN "dingle" ; -- UWN
lin dingle_PN = mkPN "Dingle" ; -- status=guess src=geonames
lin dingo_N = mkN "dingo" masculine ; -- tocheck
lin dining_N = mkN "restauration" ; -- UWN
lin dining_room_N = mkN "salle_à_manger" ; -- UWN
lin dinner_N = mkN "dîner" masculine | mkN "déjeuner" masculine ; -- tocheck
lin dinnington_PN = mkPN "Dinnington" ; -- status=guess src=geonames
lin dinosaur_N = mkN "dinosaure" masculine ; -- tocheck
lin diocesan_A = mkA "diocésain" ; -- tocheck
lin diocese_N = mkN "diocèse" masculine ; -- tocheck
lin diode_N = mkN "diode" feminine ; -- tocheck
lin dioecious_A = mkA "dioïque" ; -- UWN
lin diol_N = mkN "diol" masculine ; -- tocheck
lin diopter_N = mkN "dioptrie" ; -- UWN
lin diorite_N = mkN "diorite" feminine ; -- tocheck
lin dioxide_N = mkN "dioxyde" masculine ; -- tocheck
lin dioxin_N = mkN "dioxine" ; -- UWN
lin dip_V = variants {} ; -- mkV2 (mkV "tremper") ; -- tocheck
lin dip_V2 = mkV2 (mkV "tremper") ; -- tocheck
lin diphtheria_N = mkN "diphthérie" feminine ; -- tocheck
lin diphthong_N = mkN "diphtongue" feminine ; -- tocheck
lin diplodocus_N = mkN "diplodocus" ; -- UWN
lin diploid_A = mkA "diploïde" ; -- tocheck
lin diploid_N = mkN "diploïde" ; -- UWN
lin diploidy_N = mkN "diploïdie" feminine ; -- tocheck
lin diploma_N = mkN "diplôme" masculine ; -- tocheck
lin diplomacy_N = mkN "diplomatie" ; -- tocheck
lin diplomat_N = mkN "diplomate" masculine ; -- tocheck
lin diplomatic_A = mkA "diplomatique" ; -- tocheck
lin diplomatist_N = mkN "diplomate" ; -- UWN
lin diplopia_N = mkN "diplopie" ; -- UWN
lin dipole_N = mkN "dipôle" masculine ; -- tocheck
lin dipper_N = mkN "louche" feminine ; -- tocheck
lin dipsomania_N = mkN "alcoolisme" | mkN "dipsomanie" ; -- UWN
lin dipstick_N = mkN "jauge" ; -- tocheck
lin diptych_N = mkN "Diptyque" | mkN "diptyque" ; -- UWN
lin dire_A = mkA "funeste" ; -- tocheck
lin direct_A = mkA "direct" ; -- tocheck
lin direct_Adv = mkAdv "direct" | mkAdv "directement" | mkAdv "droit" | mkAdv "tout_droit" ; -- UWN
lin direct_V = variants {} ; --
lin direct_V2 = variants {} ; --
lin direction_N = variants {} ; --
lin directive_N = mkN "directive" feminine ; -- tocheck
lin directness_N = mkN "candeur" | mkN "franchise" ; -- UWN
lin director_N = mkN "directeur" masculine ;
lin directorate_N = mkN "conseil_d'administration" | mkN "directorat" ; -- UWN
lin directory_N = mkN "annuaire" | mkN "dossier" masculine ; -- tocheck
lin dirge_N = mkN "chant_funèbre" | mkN "requiem" | mkN "thrène" | mkN "thrénodie" ; -- UWN
lin dirigible_N = mkN "ballon_dirigeable" | mkN "dirigeable" ; -- UWN
lin dirt_N = mkN "terre" feminine | mkN "salissure" feminine ; -- tocheck
lin dirtiness_N = mkN "saleté" feminine ; -- tocheck
lin dirty_A = L.dirty_A ;
lin dirty_V2 = mkV2 (mkV "salir") ; -- tocheck
lin disability_N = mkN "infirmité" feminine | mkN "invalidité" feminine ; -- tocheck
lin disabled_A = variants {} ; --
lin disabuse_V2 = mkV2 (mkV "détromper") ; -- tocheck
lin disaccharide_N = mkN "disaccharide" masculine ; -- tocheck
lin disadvantage_N = mkN "désavantage" ; -- UWN
lin disadvantageous_A = mkA "défavorable" | mkA "nuisible" ; -- UWN
lin disaffected_A = mkA "rebelle" ; -- tocheck
lin disagree_V = mkV "différencier" | mkV "différer" | mkV "distinguer" | mkV "diverger" | mkV "écarter" ; -- UWN
lin disagree_V2 = variants {} ; --
lin disagree_VS = variants {} ; --
lin disagreement_N = mkN "désaccord" masculine ; -- tocheck
lin disambiguation_N = mkN "désambiguïsation" ; -- tocheck
lin disappear_V = mkV (mkV I.disparaître_V2) ; -- tocheck
lin disappearance_N = mkN "disparition" feminine ; -- tocheck
lin disappoint_V2 = mkV2 (mkV I.décevoir_V2) ; -- tocheck
lin disappointing_A = mkA "décevant" ; -- tocheck
lin disappointment_N = mkN "déception" feminine ; -- tocheck
lin disapprobation_N = mkN "condamnation" | mkN "désapprobation" ; -- UWN
lin disarm_V = mkV "désarmer" ; -- UWN
lin disarm_V2 = mkV2 (mkV "désarmer") ; -- tocheck
lin disarmament_N = mkN "désarmement" masculine ; -- tocheck
lin disarray_N = mkN "désordre" masculine ; -- tocheck
lin disarray_V2 = mkV2 (mkV "désordonner") ; -- tocheck
lin disaster_N = mkN "désastre" masculine ; -- tocheck
lin disastrous_A = mkA "désastreux" ; -- tocheck
lin disavow_V2 = mkV2 (mkV "désavouer") ; -- tocheck
lin disavowal_N = mkN "abjuration" | mkN "désaveu" ; -- UWN
lin disband_V = mkV "dissoudre" | mkV "supprimer" ; -- UWN
lin disband_V2 = mkV2 (mkV "démanteler") ; -- tocheck
lin disbelief_N = mkN "incrédulité" | mkN "scepticisme" ; -- UWN
lin disbelieve_V = mkV "discréditer" ; -- UWN
lin disbeliever_N = mkN "incroyant" | mkN "incrédule" ; -- UWN
lin disburse_V2 = mkV2 (mkV "débourser") ; -- tocheck
lin disbursement_N = mkN "déboursement" | mkN "dépense" | mkN "paiement" ; -- UWN
lin disc_N = mkN "disque" masculine ; -- tocheck
lin discard_V2 = mkV2 (mkV "rejeter") ; -- tocheck
lin discernability_N = mkN "lisibilité" ; -- UWN
lin discernment_N = mkN "jugement" ; -- UWN
lin discharge_N = mkN "débit" masculine ; -- tocheck
lin discharge_V = variants {} ; --
lin discharge_V2 = variants {} ; --
lin disciple_N = mkN "disciple" ; -- tocheck
lin disciplinarian_N = mkN "martinet" ; -- UWN
lin disciplinary_A = variants {} ; --
lin discipline_N = mkN "discipline" | mkN "discipline" feminine ; -- tocheck
lin discipline_V2 = variants {} ; --
lin disclaimer_N = mkN "abjuration" | mkN "désaveu" ; -- UWN
lin disclose_V = mkV "dire" | mkV "divulguer" | mkV "exposer" | mkV "révéler" ; -- UWN
lin disclose_V2 = mkV2 (mkV "révéler") ; -- tocheck
lin disclose_VS = mkvVS "dire" | mkvVS "divulguer" | mkvVS "exposer" | mkvVS "révéler" ; -- UWN
lin disclosure_N = mkN "révélation" feminine ; -- tocheck
lin disco_N = mkN "disco" | mkN "discothèque" ; -- UWN
lin discography_N = mkN "discographie" feminine ; -- tocheck
lin discoid_A = mkA "discoïde" ; -- tocheck
lin discoloration_N = mkN "décoloration" feminine ; -- tocheck
lin discolour_V = mkV "colorer" | mkV "décolorer" ; -- UWN
lin discomfit_V2 = mkV2 (mkV I.déconfire_V2) ; -- tocheck
lin discomfort_N = mkN "incomfort" masculine ; -- tocheck
lin discomycete_N = mkN "pezizaceae" ; -- UWN
lin disconcert_V2 = mkV2 (mkV "déconcerter") ; -- tocheck
lin disconcerting_A = mkA "déconcertant" ; -- UWN
lin disconnection_N = mkN "disjonction" ; -- UWN
lin disconsolate_A = mkA "inconsolable" ; -- tocheck
lin discontent_N = mkN "mécontentement" ; -- tocheck
lin discontentment_N = mkN "mécontentement" ; -- UWN
lin discontinue_V = mkV "arrêter" | mkV "casser" | mkV "terminer" ; -- UWN
lin discontinuity_N = mkN "discontinuité" ; -- UWN
lin discord_N = mkN "discorde" feminine ; -- tocheck
lin discotheque_N = mkN "discothèque" feminine ; -- tocheck
lin discount_N = mkN "rabais" masculine ; -- tocheck
lin discount_V = variants {} ; --
lin discount_V2 = variants {} ; --
lin discourage_V2 = mkV2 (mkV "décourager") | mkV2 (mkV "dissuader") ; -- tocheck
lin discourse_N = mkN "discours" masculine | mkN "conversation" feminine ; -- tocheck
lin discourteous_A = mkA "discourtois" ; -- tocheck
lin discourtesy_N = mkN "courtoisie" | mkN "injure" | mkN "offense" ; -- UWN
lin discover_V = variants {} ; -- mkV2V (mkV I.découvrir_V2) ; -- tocheck
lin discover_V2 = variants {} ; -- mkV2V (mkV I.découvrir_V2) ; -- tocheck
lin discover_VS = variants {} ; -- mkV2V (mkV I.découvrir_V2) ; -- tocheck
lin discovererFem_N = variants {} ; ---- sense to be split
lin discovererMasc_N = variants {} ; ---- sense to be split
lin discovery_N = mkN "découverte" feminine ; -- tocheck
lin discredit_N = mkN "discréditer" ; -- UWN
lin discredit_V2 = mkV2 (mkV "discréditer") ; -- tocheck
lin discreet_A = mkA "discret" ; -- tocheck
lin discrepancy_N = mkN "incohérence" feminine ; -- tocheck
lin discrete_A = mkA "distinct" ; -- tocheck
lin discretion_N = mkN "discrétion" feminine ; -- tocheck
lin discretionary_A = mkA "discrétionnaire" ; -- tocheck
lin discriminate_V2 = mkV2 (mkV "discriminer") ; -- tocheck
lin discrimination_N = mkN "discrimination" feminine ; -- tocheck
lin discursive_A = mkA "discursif" ; -- UWN
lin discus_N = mkN "disque" masculine ; -- tocheck
lin discuss_V2 = mkV2 (mkV "discuter") ; -- tocheck
lin discussion_N = mkN "discussion" feminine ; -- tocheck
lin disdain_N = mkN "dédain" masculine ; -- tocheck
lin disdain_V2 = mkV2 (mkV "dédaigner") ; -- tocheck
lin disdainful_A = mkA "dédaigneux" ; -- tocheck
lin disease_N = mkN "maladie" feminine ; -- tocheck
lin diseased_A = mkA "malade" ; -- tocheck
lin disembark_V2 = mkV2 (mkV "débarquer") ; -- tocheck
lin disembowel_V2 = mkV2 (mkV "éventrer") ; -- tocheck
lin disembowelment_N = mkN "étriper" ; -- UWN
lin disenchantment_N = mkN "désenchantement" masculine ; -- tocheck
lin disencumber_V2 = mkV2 (mkV "déshypothéquer") ; -- tocheck
lin disfigure_V2 = mkV2 (mkV "défigurer") ; -- tocheck
lin disgorge_V2 = mkV2 (mkV "vomir") ; -- tocheck
lin disgrace_N = mkN "honte" feminine ; -- tocheck
lin disgraceful_A = mkA "honteux" ; -- tocheck
lin disgruntled_A = mkA "mécontent" | mkA "malheureux" ; -- tocheck
lin disgruntlement_N = mkN "insatisfaction" feminine ; -- tocheck
lin disguise_N = mkN "déguisement" masculine ; -- tocheck
lin disguise_V2 = mkV2 (mkV "déguiser") ; -- tocheck
lin disgust_N = mkN "dégoût" masculine ; -- tocheck
lin disgust_V2 = mkV2 (mkV "dégoûter") ; -- tocheck
lin disgusting_A = mkA "dégoûtant" ; -- tocheck
lin dish_N = mkN "plat" masculine | mkN "assiette" | mkN "canon" masculine | mkN "vaisselle" feminine | mkN "parabole" feminine ; -- tocheck
lin disharmonious_A = mkA "dysharmonique" ; -- tocheck
lin disharmony_N = mkN "disharmonie" | mkN "dysharmonie" ; -- UWN
lin dishcloth_N = mkN "torchon" masculine | mkN "lavette" feminine ; -- tocheck
lin dishearten_V2 = mkV2 (mkV "décourager") ; -- tocheck
lin dishonest_A = mkA "malhonnête" ; -- tocheck
lin dishonorable_A = mkA "malhonnête" ; -- UWN
lin dishonour_N = mkN "déshonneur" masculine ; -- tocheck
lin dishonour_V2 = mkV2 (mkV "déshonorer") ; -- tocheck
lin dishrag_N = mkN "lavette" | mkN "torchon" ; -- UWN
lin dishtowel_N = mkN "torchon" ; -- UWN
lin dishwasher_N = mkN "lave-vaisselle" masculine | mkN "plongeur" masculine ; -- tocheck
lin dishwater_N = mkN "bibine" ; -- UWN
lin disillusion_N = mkN "déception" | mkN "désenchantement" ; -- UWN
lin disillusionment_N = mkN "déception" | mkN "désenchantement" ; -- UWN
lin disinclination_N = mkN "hésitation" | mkN "réticence" ; -- UWN
lin disinfect_V2 = mkV2 (mkV "désinfecter") ; -- tocheck
lin disinfectant_A = mkA "désinfectant" ; -- UWN
lin disinfectant_N = mkN "désinfectant" masculine ; -- tocheck
lin disinfection_N = mkN "désinfection" feminine ; -- tocheck
lin disinflation_N = mkN "désinflation" ; -- UWN
lin disinformation_N = mkN "désinformation" feminine ; -- tocheck
lin disingenuous_A = mkA "sournois" ; -- tocheck
lin disintegrate_V2 = mkV2 (mkV "désintégrer") ; -- tocheck
lin disintegration_N = mkN "annihilation" | mkN "anéantissement" | mkN "désintégration" ; -- UWN
lin disinterest_N = mkN "désintérêt" masculine ; -- tocheck
lin disinterested_A = mkA "désintéressé" ; -- tocheck
lin disinterestedness_N = mkN "désintéressement" ; -- tocheck
lin disinterment_N = mkN "exhumation" ; -- UWN
lin disjoined_A = mkA "séparer" ; -- UWN
lin disjunction_N = mkN "disjonction" feminine ; -- tocheck
lin disk_N = mkN "disque" masculine ; -- tocheck
lin diskette_N = mkN "disquette" feminine ; -- tocheck
lin dislike_N = mkN "antipathie" feminine ; -- tocheck
lin dislike_V2 = variants {} ; --
lin dislocation_N = mkN "luxation" feminine ; -- tocheck
lin dislodge_V2 = mkV2 (mkV "déloger") ; -- tocheck
lin dislodgement_N = mkN "délogement" masculine ; -- tocheck
lin dislodgment_N = mkN "délogement" ; -- UWN
lin disloyal_A = mkA "déloyal" ; -- tocheck
lin dismal_A = mkA "déprimant" | mkA "morne" ; -- tocheck
lin dismantle_V2 = mkV2 (mkV "démonter") ; -- tocheck
lin dismantlement_N = mkN "démantèlement" ; -- UWN
lin dismantling_N = mkN "démantèlement" ; -- UWN
lin dismay_N = mkN "désarroi" masculine ; -- tocheck
lin dismay_V2 = mkV2 (mkV "affliger") | mkV2 (mkV "mortifier") ; -- tocheck
lin dismember_V2 = mkV2 (mkV "démembrer") ; -- tocheck
lin dismemberment_N = mkN "écartèlement" ; -- UWN
lin dismiss_V2 = mkV2 (mkV "retirer") | mkV2 (mkV I.renvoyer_V2) | mkV2 (mkV "rejeter") ; -- tocheck
lin dismissal_N = mkN "limogeage" masculine | mkN "non-lieu" masculine ; -- tocheck
lin dismount_V2 = mkV2 (mkV "démonter") ; -- tocheck
lin disobedience_N = mkN "désobéissance" feminine ; -- tocheck
lin disobedient_A = mkA "désobéissant" ; -- tocheck
lin disobey_V2 = mkV2 (mkV "désobéir") ; -- tocheck
lin disorder_N = mkN "trouble" masculine | mkN "désordre" masculine ; -- tocheck
lin disorderliness_N = mkN "désarroi" ; -- UWN
lin disorderly_A = mkA "désordonné" ; -- tocheck
lin disorganization_N = mkN "désorganisation" feminine ; -- tocheck
lin disorientation_N = mkN "désorientation" feminine ; -- tocheck
lin disparage_V2 = mkV2 (mkV "dénigrer") ; -- tocheck
lin disparate_A = mkA "disparate" ; -- tocheck
lin dispassionate_A = mkA "dépassionné" ; -- tocheck
lin dispatch_N = mkN "expédition" ; -- UWN
lin dispatcher_N = mkN "régulateur" masculine | mkN "expéditeur" masculine ; -- tocheck
lin dispel_V2 = mkV2 (mkV "chasser") ; -- tocheck
lin dispensary_N = mkN "pharmacie" ; -- UWN
lin dispensation_N = mkN "dérogation" feminine ; -- tocheck
lin dispense_V2 = mkV2 (mkV I.émettre_V2) | mkV2 (mkV "éliminer") | mkV2 (mkV "doser") ; -- tocheck
lin dispenser_N = mkN "distributeur" masculine ; -- tocheck
lin dispersal_N = mkN "diffusion" ; -- UWN
lin disperse_V = variants {} ; --
lin disperse_V2 = variants {} ; --
lin dispersion_N = mkN "dispersion" feminine ; -- tocheck
lin dispirit_V2 = mkV2 (mkV "décourager") ; -- tocheck
lin display_N = mkN "représentation" feminine ; -- tocheck
lin display_V2 = mkV2 (mkV "afficher") | mkV2 (mkV "étaler") ; -- tocheck
lin display_VS = variants {} ; -- mkV2 (mkV "afficher") | mkV2 (mkV "étaler") ; -- tocheck
lin displeasure_N = mkN "mécontentement" ; -- UWN
lin disposable_A = mkA "jetable" ; -- tocheck
lin disposal_N = mkN "disposition" ; -- UWN
lin dispose_V = mkV "débarrasser" | mkV "éliminer" ; -- UWN
lin dispose_V2 = variants {} ; --
lin disposition_N = mkN "disposition" feminine | mkN "tempérament" masculine ; -- tocheck
lin dispossession_N = mkN "éviction" ; -- UWN
lin disproof_N = mkN "falsification" | mkN "frelatage" | mkN "réfutation" ; -- UWN
lin disputant_N = mkN "controversiste" ; -- UWN
lin disputation_N = mkN "Controverse" | mkN "argument" | mkN "controverse" | mkN "polémique" | mkN "querelle" ; -- UWN
lin disputatious_A = mkA "acariâtre" | mkA "bagarreur" ; -- UWN
lin dispute_N = mkN "dispute" masculine ; -- tocheck
lin dispute_V = variants {} ; --
lin dispute_V2 = variants {} ; --
lin disqualification_N = mkN "disqualification" ; -- UWN
lin disqualify_V2 = mkV2 (mkV "disqualifier") ; -- tocheck
lin disquiet_N = mkN "inquiétude" ; -- UWN
lin disquieting_A = mkA "inconfortable" ; -- UWN
lin disquietude_N = mkN "angoisse" ; -- tocheck
lin disregard_N = mkN "mépris" masculine ; -- tocheck
lin disregard_V2 = mkV2 (mkV "ignorer") ; -- tocheck
lin disrepair_N = mkN "délabrement" ; -- UWN
lin disrepute_N = mkN "discréditer" ; -- UWN
lin disrespectful_A = mkA "irrespectueux" ; -- tocheck
lin disrobe_V2 = mkV2 (mkV "déshabiller") ; -- tocheck
lin disrupt_V = variants {} ; -- mkV2 (mkV "perturber") | mkV2 (mkV I.interrompre_V2) ; -- tocheck
lin disrupt_V2 = mkV2 (mkV "perturber") | mkV2 (mkV I.interrompre_V2) ; -- tocheck
lin disruption_N = mkN "interruption" feminine ; -- tocheck
lin disruptive_A = mkA "perturbant" ; -- tocheck
lin dissatisfaction_N = mkN "insatisfaction" feminine ; -- tocheck
lin dissect_V2 = mkV2 (mkV "disséquer") ; -- tocheck
lin dissection_N = mkN "dissection" feminine ; -- tocheck
lin dissembler_N = mkN "charlatan" | mkN "faux" | mkN "hypocrite" | mkN "mystificateur" | mkN "trompeur" ; -- UWN
lin disseminate_V = mkV "diffuser" | mkV "disperser" | mkV "disséminer" | mkV "parsemer" | mkV "programmer" | mkV "propager" | mkV "répandre" ; -- UWN
lin disseminate_V2 = mkV2 (mkV "disséminer") ; -- tocheck
lin dissemination_N = mkN "dissémination" feminine ; -- tocheck
lin dissension_N = mkN "dissension" feminine ; -- tocheck
lin dissent_N = mkN "dissidence" feminine ; -- tocheck
lin dissent_V = mkV "différencier" | mkV "différer" | mkV "distinguer" | mkV "diverger" | mkV "écarter" ; -- UWN
lin dissenter_N = mkN "dissident" masculine ; -- tocheck
lin dissentient_A = mkA "dissident" ; -- UWN
lin dissentious_A = mkA "factieux" | mkA "séparatif" ; -- UWN
lin dissertation_N = mkN "dissertation" feminine ; -- tocheck
lin dissidence_N = mkN "dissidence" ; -- UWN
lin dissident_A = mkA "dissident" ; -- UWN
lin dissident_N = mkN "dissident" masculine ; -- tocheck
lin dissimilarity_N = mkN "dissimilitude" feminine ; -- tocheck
lin dissimilation_N = mkN "catabolisme" | mkN "dissimilation" ; -- UWN
lin dissimilitude_N = mkN "dissimilitude" ; -- UWN
lin dissimulate_V = mkV "dissimuler" ; -- UWN
lin dissimulation_N = mkN "dissimulation" feminine ; -- tocheck
lin dissipate_V = mkV "dissiper" | mkV "gaspiller" ; -- UWN
lin dissipate_V2 = mkV2 (mkV "dissiper") ; -- tocheck
lin dissociable_A = mkA "séparable" ; -- UWN
lin dissociate_V2 = mkV2 (mkV "dissocier") ; -- tocheck
lin dissolute_A = mkA "dissolu" | mkA "jeûner" | mkA "libertin" | mkA "rapide" ; -- UWN
lin dissolution_N = mkN "dissolution" | mkN "dissolution" feminine ; -- tocheck
lin dissolve_N = mkN "dissoudre" ; -- UWN
lin dissolve_V = mkV "dissoudre" ; -- UWN
lin dissolve_V2 = mkV2 (mkV I.dissoudre_V2) | mkV2 (reflV (mkV I.dissoudre_V2)) ; -- tocheck
lin dissolving_N = mkN "dissolution" ; -- UWN
lin dissuade_V2 = mkV2 (mkV "dissuader") ; -- tocheck
lin dissuasion_N = mkN "dissuasion" feminine ; -- tocheck
lin distaff_N = mkN "quenouille" feminine ; -- tocheck
lin distance_N = mkN "distance" feminine ; -- tocheck
lin distance_N3 = L.distance_N3 ;
lin distance_V2 = mkV2 (mkV "éloigner") ; -- tocheck
lin distant_A = mkA "distant" ; -- tocheck
lin distaste_N = mkN "antipathie" ; -- UWN
lin distasteful_A = mkA "désagréable" ; -- tocheck
lin distil_V = mkV "distiller" ; -- UWN
lin distillate_N = mkN "distillation" ; -- UWN
lin distillation_N = mkN "distillation" feminine ; -- tocheck
lin distiller_N = mkN "alambic" masculine ; -- tocheck
lin distillery_N = mkN "distillerie" ; -- tocheck
lin distinct_A = mkA "distinct" | mkA "reconnaissable" ; -- tocheck
lin distinction_N = mkN "distinction" ; -- tocheck
lin distinctive_A = mkA "distinctif" ; -- tocheck
lin distinctness_N = mkN "clarté" ; -- UWN
lin distinguish_V = variants {} ; -- mkV2 (mkV "distinguer") ; -- tocheck
lin distinguish_V2 = mkV2 (mkV "distinguer") ; -- tocheck
lin distinguishable_A = mkA "distinguable" ; -- tocheck
lin distinguished_A = variants {} ; --
lin distort_V2 = mkV2 (mkV "déformer") ; -- tocheck
lin distortion_N = mkN "corruption" feminine ; -- tocheck
lin distract_V = variants {} ; -- mkV2 (mkV I.distraire_V2) ; -- tocheck
lin distract_V2 = mkV2 (mkV I.distraire_V2) ; -- tocheck
lin distraction_N = mkN "distraction" feminine ; -- tocheck
lin distraint_N = mkN "saisie-exécution" feminine ; -- tocheck
lin distraught_A = mkA "perturbé" ; -- tocheck
lin distress_N = mkN "détresse" ; -- tocheck
lin distressful_A = mkA "anxiogène" | mkA "ennuyant" | mkA "gênant" | mkA "inconfortable" | mkA "inquiétant" ; -- UWN
lin distressing_A = mkA "lamentable" | mkA "pauvre" | mkA "triste" ; -- UWN
lin distribute_V2 = mkV2 (mkV "distribuer") | mkV2 (mkV "répartir") ; -- tocheck
lin distributed_A = variants {} ; --
lin distribution_N = mkN "distribution" feminine ; -- tocheck
lin distributive_A = mkA "distributif" ; -- tocheck
lin distributor_N = variants {} ; --
lin district_N = mkN "district" masculine ; -- tocheck
lin distrust_N = mkN "défiance" feminine ; -- tocheck
lin distrust_V2 = mkV2 (reflV (mkV "méfier")) ; -- tocheck
lin distrustful_A = mkA "méfiant" ; -- tocheck
lin distrustfulness_N = mkN "défiance" | mkN "méfiance" ; -- UWN
lin disturb_V2 = mkV2 (mkV "déranger") ; -- tocheck
lin disturbance_N = variants {} ; --
lin disturbing_A = variants {} ;
lin disunite_V = mkV "diviser" | mkV "partager" | mkV "séparer" ; -- UWN
lin disunity_N = mkN "désunion" ; -- UWN
lin disuse_N = mkN "désuétude" ; -- UWN
lin disused_A = mkA "obsolète" ; -- UWN
lin disyllabic_A = mkA "dissyllabique" ; -- tocheck
lin ditch_N = mkN "fossé" masculine ; -- tocheck
lin dithyramb_N = mkN "dithyrambe" masculine ; -- tocheck
lin dithyrambic_A = mkA "dithyrambique" ; -- UWN
lin ditto_N = mkN "idem" ; -- tocheck
lin ditty_N = mkN "chansonnette" ; -- UWN
lin diurnal_A = mkA "diurne" | mkA "journalier" ; -- tocheck
lin divan_N = mkN "divan" masculine ; -- tocheck
lin dive_N = mkN "piqué" masculine | mkN "plongeon" masculine | mkN "plongée" feminine | mkN "gargote" feminine ; -- tocheck
lin dive_V = mkV (mkV "nager") | mkV (mkV "chiquer") | mkV (mkV "plonger") ; -- tocheck
lin diver_N = mkN "plongeur" masculine | mkN "plongeon" masculine ; -- tocheck
lin divergence_N = mkN "divergence" feminine ; -- tocheck
lin divergency_N = mkN "divergence" ; -- UWN
lin divers_A = mkA "divers" ; -- UWN
lin diverse_A = mkA "divers" ; -- tocheck
lin diverseness_N = mkN "diversité" | mkN "variété" ; -- UWN
lin diversification_N = mkN "diversification" feminine ; -- tocheck
lin diversify_V2 = mkV2 (mkV "diversifier") ; -- tocheck
lin diversion_N = mkN "diversion" feminine ; -- tocheck
lin diversionist_N = mkN "dévastateur" | mkN "saboteur" ; -- UWN
lin diversity_N = mkN "diversité" feminine ; -- tocheck
lin divert_V = variants {} ; -- mkV2 (mkV "dévier") | mkV2 (mkV "divertir") ; -- tocheck
lin diverticulosis_N = mkN "diverticulose" ; -- UWN
lin diverticulum_N = mkN "diverticule" ; -- UWN
lin divertimento_N = mkN "divertimento" | mkN "sérénade" ; -- UWN
lin divide_N = mkN "diviser" | mkN "ligne_de_partage_des_eaux" | mkN "partager" | mkN "point_tournant" ; -- UWN
lin divide_V = variants {} ; -- mkV2 (mkV "diviser") | mkV2 (reflV (mkV "diviser")) | mkV2 (mkV "partager") ; -- tocheck
lin divide_V2 = mkV2 (mkV "diviser") | mkV2 (reflV (mkV "diviser")) | mkV2 (mkV "partager") ; -- tocheck
lin divide_up_V2 = prepV2 OP_divide_V OP_up_Prep ; -- guess-p-verb
lin dividend_N = mkN "dividende" masculine ; -- tocheck
lin divider_N = mkN "séparateur" masculine ; -- tocheck
lin divination_N = mkN "divination" feminine ; -- tocheck
lin divine_A = mkA "divin" ; -- tocheck
lin divine_N = mkN "divin" masculine ; -- tocheck
lin divine_V2 = mkV2 (mkV I.prédire_V2) | mkV2 (mkV "deviner") ; -- tocheck
lin diviner_N = mkN "prophète" ; -- UWN
lin diving_N = mkN "plongeon" masculine ; -- tocheck
lin divinity_N = mkN "divinité" feminine ; -- tocheck
lin divisibility_N = mkN "divisibilité" feminine ; -- tocheck
lin divisible_A = mkA "divisible" ; -- tocheck
lin division_1_N = variants {} ; --
lin division_2_N = variants {} ; --
lin division_3_N = variants {} ; --
lin division_N = mkN "division" feminine ; -- tocheck
lin divisor_N = mkN "diviseur" masculine ; -- tocheck
lin divorce_N = mkN "divorce" masculine ; -- tocheck
lin divorce_V2 = mkV2 (mkV "divorcer") ; -- tocheck
lin divorcee_N = mkN "divorcé" masculine ; -- tocheck
lin divulge_V2 = mkV2 (mkV "divulguer") ; -- tocheck
lin dixie_N = mkN "dixie" ; -- UWN
lin dizygotic_A = mkA "dizygote" ; -- UWN
lin dizziness_N = mkN "vertige" masculine ; -- tocheck
lin dizzy_A = mkA "vertigineux" ; -- tocheck
lin dj_N = mkN "ambianceur" | mkN "ambianceuse" | mkN "disc_jockey" ; -- UWN
lin djibouti_PN = mkPN "Djibouti" ; -- status=guess src=geonames
lin dm_N = mkN "dm" | mkN "décimètre" ; -- UWN
lin do_N = mkN "do" masculine ; -- tocheck
lin do_V2 = mkV2 (mkV I.faire_V2) ;
lin dobbin_N = mkN "carne" feminine ; -- tocheck
lin dobra_N = mkN "dobra" ; -- tocheck
lin docile_A = mkA "docile" ; -- tocheck
lin docility_N = mkN "docilité" feminine ; -- tocheck
lin dock_N = mkN "socle" masculine | mkN "darse" feminine ; -- tocheck
lin dockage_N = mkN "ligotage" ; -- UWN
lin docker_N = mkN "Stevedore" | mkN "aconier" | mkN "arrimeur" | mkN "chargeur" | mkN "docker" | mkN "débardeur" | mkN "manutentionnaire" | mkN "stevedore" ; -- UWN
lin docking_N = mkN "amarrage" masculine | mkN "caudectomie" feminine ; -- tocheck
lin doctor_N = mkN "médecin" | mkN "docteur" ; ---- split
lin doctoral_A = mkA "doctoral" ; -- UWN
lin doctorate_N = mkN "doctorat" masculine ; -- tocheck
lin doctrinaire_N = mkN "dogmatiste" ; -- UWN
lin doctrinal_A = mkA "doctrinal" ; -- tocheck
lin doctrine_N = mkN "doctrine" feminine ; -- tocheck
lin document_N = mkN "document" masculine ; -- tocheck
lin document_V2 = mkV2 (mkV "documenter") ; -- tocheck
lin documentary_A = mkA "documentaire" ; -- tocheck
lin documentary_N = mkN "documentaire" masculine ; -- tocheck
lin documentation_N = mkN "documentation" feminine ; -- tocheck
lin doddery_A = mkA "sénile" ; -- UWN
lin dodecagon_N = mkN "dodécagone" masculine ; -- tocheck
lin dodecahedron_N = mkN "dodécaèdre" masculine ; -- tocheck
lin dodge_V2 = mkV2 (mkV "éviter") | mkV2 (mkV "esquiver") ; -- tocheck
lin dodgy_A = mkA "perverti" | mkA "malhonnête" | mkA "louche" | mkA "périlleux" ; -- tocheck
lin dodo_N = mkN "dodo" masculine | mkN "fossile" masculine ; -- tocheck
lin doe_N = mkN "biche" feminine | mkN "daine" feminine | mkN "hase" feminine | mkN "lapine" feminine ; -- tocheck
lin doer_N = mkN "Scop" | mkN "acteur" | mkN "agent" | mkN "ouvrier" | mkN "personnage" | mkN "personnel" | mkN "salarié" | mkN "travailleur" ; -- UWN
lin dog_N = L.dog_N ;
lin dog_eared_A = mkA "écorné" ; -- tocheck
lin dogbane_N = mkN "apocyne" ; -- UWN
lin doge_N = mkN "doge" masculine ; -- tocheck
lin doggedly_Adv = mkAdv "obstinément" | mkAdv "opiniâtrement" ; -- UWN
lin doggy_N = mkN "toutou" masculine ; -- tocheck
lin doghouse_N = mkN "niche" ; -- UWN
lin dogma_N = mkN "dogme" masculine ; -- tocheck
lin dogmatic_A = mkA "dogmatique" ; -- tocheck
lin dogmatism_N = mkN "dogmatisme" masculine ; -- tocheck
lin dogmatist_N = mkN "dogmatiste" ; -- tocheck
lin dogwood_N = mkN "cornouiller" masculine ; -- tocheck
lin doh_N = mkN "faire" | mkN "ut" ; -- UWN
lin doily_N = mkN "napperon" masculine ; -- tocheck
lin doing_N = variants {} ; --
lin dole_N = mkN "assedics" ; -- tocheck
lin doll_N = mkN "poupée" feminine ; -- tocheck
lin dollar_N = mkN "dollar" masculine ; -- tocheck
lin dollop_N = mkN "morceau" masculine ; -- tocheck
lin dolly_N = mkN "poupée" | mkN "vierge" ; -- UWN
lin dolmen_N = mkN "dolmen" masculine ; -- tocheck
lin dolomite_N = mkN "dolomite" ; -- UWN
lin dolor_N = mkN "douleur" feminine ; -- tocheck
lin dolorous_A = mkA "lacrymal" ; -- UWN
lin dolour_N = mkN "douleur" ; -- UWN
lin dolourous_A = mkA "lacrymal" ; -- UWN
lin dolphin_N = mkN "dauphin" masculine | mkN "duc-d'Albe" masculine ; -- tocheck
lin dolt_N = mkN "imbécile" ; -- tocheck
lin domain_N = mkN "domaine" masculine | mkN "domaine" feminine ; -- tocheck
lin dombeya_N = mkN "dombeya" ; -- UWN
lin dome_N = mkN "dôme" ; -- tocheck
lin domed_A = mkA "voûté" ; -- UWN
lin domestic_A = mkA "domestique" | mkA "intérieur" ; -- tocheck
lin domestication_N = mkN "domestication" feminine ; -- tocheck
lin domicile_N = mkN "domicile" masculine ; -- tocheck
lin dominance_N = mkN "dominance" feminine ; -- tocheck
lin dominant_A = variants {} ; --
lin dominate_V = mkV "dominer" | mkV "gouverner" | mkV "régner" ; -- UWN
lin dominate_V2 = variants {} ; --
lin domination_N = mkN "domination" feminine ; -- tocheck
lin dominatrix_N = mkN "domina" ; -- tocheck
lin dominica_PN = mkPN "Dominique" ; -- status=guess src=geonames
lin dominoes_N = mkN "domino" masculine ; -- tocheck
lin don_PN = mkPN "Don" ; -- status=guess src=geonames
lin don_V2 = mkV2 (mkV I.mettre_V2) ; -- tocheck
lin donate_V = variants {} ; -- mkV2 (mkV "donner") ; -- tocheck
lin donate_V2 = mkV2 (mkV "donner") ; -- tocheck
lin donation_N = mkN "donation" feminine ; -- tocheck
lin doncaster_PN = mkPN "Doncaster" ; -- status=guess src=geonames
lin donegal_PN = mkPN "Donegal" ; -- status=guess src=geonames
lin donetsk_PN = mkPN "Donetsk" ; -- status=guess src=geonames
lin dongle_N = mkN "dongle" masculine ; -- tocheck
lin donjon_N = mkN "cachot" | mkN "donjon" ; -- UWN
lin donkey_N = mkN "âne" masculine ; -- tocheck
lin donnish_A = mkA "académique" | mkA "méticuleux" | mkA "pointilleux" | mkA "pédant" | mkA "pédante" | mkA "universitaire" ; -- UWN
lin donor_N = mkN "donateur" ; -- tocheck
lin doodle_V = mkV (mkV "griffonner") ; -- tocheck
lin doom_N = mkN "mort" feminine | mkN "ruine" feminine ; -- tocheck
lin doom_V2 = mkV2 (mkV "condamner") ; -- tocheck
lin door_N = L.door_N ;
lin door_to_door_A = mkA "porte-à-porte" ; -- tocheck
lin doorbell_N = mkN "sonnette" feminine ; -- tocheck
lin doorhandle_N = mkN "bouton" | mkN "bouton_de_porte" | mkN "poignée" ; -- UWN
lin doorjamb_N = mkN "jambage" ; -- tocheck
lin doorkeeper_N = mkN "concierge" ; -- tocheck
lin doorknob_N = mkN "bouton" | mkN "bouton_de_porte" | mkN "poignée" ; -- UWN
lin doorknocker_N = mkN "heurtoir" masculine ; -- tocheck
lin doorman_N = mkN "portier" masculine ; -- tocheck
lin doormat_N = mkN "paillasson" masculine | mkN "carpette" feminine ; -- tocheck
lin doorsill_N = mkN "seuil" ; -- UWN
lin doorstep_N = mkN "seuil" masculine ; -- tocheck
lin doorway_N = mkN "huis" | mkN "porte" | mkN "seuil" ; -- UWN
lin dopamine_N = mkN "dopamine" feminine ; -- tocheck
lin dope_N = mkN "éponge" feminine | mkN "vernis" masculine | mkN "dope" feminine | mkN "idiot" masculine | mkN "infos" | mkN "patine" feminine ; -- tocheck
lin doppelganger_N = mkN "sosie" ; -- tocheck
lin dora_PN = mkPN "Dora" ; -- status=guess src=geonames
lin dorchester_PN = mkPN "Dorchester" ; -- status=guess src=geonames
lin dordrecht_PN = mkPN "Dordrecht" ; -- status=guess src=geonames
lin doric_A = mkA "dorique" ; -- UWN
lin dorking_PN = mkPN "Dorking" ; -- status=guess src=geonames
lin dormancy_N = mkN "dormance" ; -- UWN
lin dormant_A = mkA "dormant" ; -- tocheck
lin dormer_N = mkN "chien-assis" | mkN "outeau" ; -- UWN
lin dormer_window_N = mkN "lucarne" feminine ; -- tocheck
lin dormitory_N = mkN "résidence" feminine ; -- tocheck
lin dormouse_N = mkN "loir" masculine ; -- tocheck
lin dorsal_A = mkA "abaxial" ; -- UWN
lin dortmund_PN = mkPN "Dortmund" ; -- status=guess src=geonames
lin dose_N = mkN "dose" feminine ; -- tocheck
lin dosemeter_N = mkN "dosimètre" ; -- UWN
lin dosser_N = mkN "SDF" ; -- UWN
lin dossier_N = mkN "dossier" masculine ; -- tocheck
lin dot_N = mkN "point" masculine | mkN "point" ; -- tocheck
lin dotage_N = mkN "sénilité" ; -- UWN
lin douai_PN = mkPN "Douai" ; -- status=guess src=geonames
lin double_A = mkA "double" | mkA "normal" ; -- UWN
lin double_Adv = mkAdv "deux" | mkAdv "double" | mkAdv "doublement" ; -- UWN
lin double_N = mkN "double" masculine ; -- tocheck
lin double_V = variants {} ; -- mkV2 (mkV "doubler") ; -- tocheck
lin double_V2 = mkV2 (mkV "doubler") ; -- tocheck
lin double_as_V2 = prepV2 OP_double_V OP_as_Prep ; -- guess-p-verb
lin double_back_V = advV OP_double_V OP_back_Adv ; -- guess-p-verb
lin double_check_V2 = variants {} ; -- guess-p-verb
lin double_cross_V2 = variants {} ; -- guess-p-verb
lin double_over_V = advV OP_double_V OP_over_Adv ; -- guess-p-verb
lin double_park_V = variants {} ; -- guess-p-verb
lin double_park_V2 = variants {} ; -- guess-p-verb
lin double_up_V = advV OP_double_V OP_up_Adv ; -- guess-p-verb
lin double_up_as_V2 = prepV2 (advV OP_double_V OP_up_Adv ) OP_as_Prep ; -- guess-p-verb
lin doublespeak_N = mkN "double_langage" ; -- UWN
lin doublet_N = mkN "doublon" masculine ; -- tocheck
lin double_think_N = mkN "doublepensée" feminine ; -- tocheck
lin doubleton_N = mkN "doubleton" masculine ; -- tocheck
lin doubling_N = mkN "double" | mkN "doublement" | mkN "tache" ; -- UWN
lin doubloon_N = mkN "doublon" ; -- UWN
lin doubt_N = mkN "doute" masculine ; -- tocheck
lin doubt_V2 = mkV2 (mkV "douter") ; -- tocheck
lin doubt_VS = variants {} ; -- mkV2 (mkV "douter") ; -- tocheck
lin doubtful_A = mkA "douteux" ; -- tocheck
lin doubting_A = mkA "douteux" | mkA "dubitatif" | mkA "sceptique" ; -- UWN
lin doubtless_Adv = variants {} ; --
lin douche_N = mkN "douche" feminine ; -- tocheck
lin dough_N = mkN "pâte" feminine | mkN "fric" masculine ; -- tocheck
lin doughnut_N = mkN "beignet" masculine ; -- tocheck
lin douglas_PN = mkPN "Douglas" ; -- status=guess src=geonames
lin dour_A = mkA "sévère" | mkA "morose" | mkA "rigide" ; -- tocheck
lin douse_V2 = mkV2 (mkV "immerger") ; -- tocheck
lin dove_N = mkN "colombe" feminine ; -- tocheck
lin dovecote_N = mkN "colombier" masculine ; -- tocheck
lin dover_PN = mkPN ("Dover" | "Douvres") ;
lin dovetail_N = mkN "queue-d'aronde" feminine ; -- tocheck
lin dowager_N = mkN "douairière" feminine ; -- tocheck
lin dowdy_A = mkA "démodé" ; -- UWN
lin dowel_N = mkN "cheville" feminine ; -- tocheck
lin dowitcher_N = mkN "bécassin" | mkN "bécassins" | mkN "limnodromes" | mkN "limnodromus" ; -- UWN
lin down_A = mkA "dépressif" ; -- tocheck
lin down_Adv = mkAdv "en bas" ;
lin down_N = mkN "duvet" masculine ; -- tocheck
lin down_Prep = variants {} ; --
lin downbeat_N = mkN "temps_fort" ; -- UWN
lin downplay_V2 = mkV2 (mkV "minimiser") ; -- tocheck
lin downpour_N = mkN "trombe" ; -- tocheck
lin downright_A = mkA "absolu" | mkA "pur" ; -- UWN
lin downright_Adv = mkAdv "vraiment" ; -- tocheck
lin downstairs_Adv = mkAdv "au-dessous" ; -- tocheck
lin downstream_A = mkA "aval" ; -- tocheck
lin downstroke_N = mkN "hampe" | mkN "jambage" ; -- UWN
lin downtime_N = mkN "temps_d'arrêt" ; -- UWN
lin downtown_A = mkA "centre-ville" ; -- UWN
lin downtown_Adv = mkAdv "centre-ville" ; -- UWN
lin downtrodden_A = mkA "brimé" | mkA "écrasé" ; -- tocheck
lin downturn_N = mkN "ralentissement" masculine ; -- tocheck
lin downward_Adv = mkAdv "bas" | mkAdv "en_bas" ; -- UWN
lin downwards_Adv = mkAdv "bas" | mkAdv "en_bas" ; -- UWN
lin downy_A = mkA "duveteux" ; -- tocheck
lin dowry_N = mkN "dot" feminine ; -- tocheck
lin dowse_N = mkN "rhabdomancie" | mkN "sourcellerie" | mkN "sourcier" ; -- UWN
lin dowser_N = mkN "baguette_divinatoire" | mkN "sourcier" ; -- UWN
lin dowsing_N = mkN "rhabdomancie" feminine ; -- tocheck
lin doxology_N = mkN "doxologie" feminine ; -- tocheck
lin doxorubicin_N = mkN "doxorubicine" ; -- UWN
lin doyen_N = mkN "doyen" masculine ; -- tocheck
lin doyenne_N = mkN "doyenne" feminine ; -- tocheck
lin doze_N = mkN "somnoler" ; -- UWN
lin doze_V = mkV (mkV "somnoler") ; -- tocheck
lin dozen_N = mkN "dizaine" | mkN "douzaine" feminine ; -- tocheck
lin drab_A = mkA "drabe" ; -- tocheck
lin draba_N = mkN "draba" | mkN "draves" ; -- UWN
lin dracaena_N = mkN "dracaena" | mkN "dracéna" ; -- UWN
lin drachma_N = mkN "drachme" feminine ; -- tocheck
lin draconian_A = mkA "draconien" ; -- tocheck
lin draft_N = mkN "gorgée" | mkN "conscription" feminine | mkN "brouillon" masculine | mkN "tirant" ; -- tocheck
lin draft_V2 = mkV2 (mkV "ébaucher") ; -- tocheck
lin draftee_N = mkN "appelé" ; -- tocheck
lin drag_N = mkN "taffe" feminine | mkN "trainée" ; -- tocheck
lin drag_V = variants {} ; -- mkV2 (mkV "traîner") ; -- tocheck
lin drag_V2 = mkV2 (mkV "traîner") ; -- tocheck
lin drag_down_V = advV OP_drag_V OP_down_Adv ; -- guess-p-verb
lin drag_in_V = advV OP_drag_V OP_in_Adv ; -- guess-p-verb
lin drag_on_V = advV OP_drag_V OP_on_Adv ; -- guess-p-verb
lin dragnet_N = mkN "chalut" masculine ; -- tocheck
lin dragoman_N = mkN "drogman" ; -- tocheck
lin dragon_N = mkN "dragon" masculine | mkN "vouivre" ; -- tocheck
lin dragonet_N = mkN "Callionymidae" | mkN "callionymidae" ; -- UWN
lin dragonfly_N = mkN "libellule" feminine ; -- tocheck
lin dragoon_N = mkN "dragon" ; -- tocheck
lin drain_N = mkN "drain" masculine | mkN "hémorragie" feminine ; -- tocheck
lin drain_V = mkV "abattre" | mkV "affaiblir" | mkV "drainer" | mkV "débiliter" ; -- UWN
lin drain_V2 = mkV2 (mkV "drainer") | mkV2 (mkV "déshydrater") ; -- tocheck
lin drainage_N = mkN "assèchement" | mkN "drainage" ; -- UWN
lin drainpipe_N = mkN "descente" ; -- tocheck
lin drake_N = mkN "canard" | mkN "drake" ; -- UWN
lin drama_N = mkN "drame" masculine ; -- tocheck
lin dramatic_A = mkA "dramatique" | mkA "spectaculaire" ; -- tocheck
lin dramatization_N = mkN "dramatisation" feminine ; -- tocheck
lin dramaturgy_N = mkN "dramaturgie" feminine ; -- tocheck
lin drastic_A = mkA "draconien" ; -- tocheck
lin draught_N = mkN "gorgée" feminine ; -- tocheck
lin draw_1_V2 = mkV2 "dessiner" ;
lin draw_2_V2 = mkV2 "tirer" ;
lin draw_N = mkN "tirage" | mkN "égalité" feminine ; -- tocheck
lin draw_V = mkV "dessiner" ;
lin draw_V2 = variants {} ; -- mkV2V (mkV "tirer") | mkV2V (mkV "dessiner") | mkV2V (mkV "attirer") | mkV2V (mkV "égaliser") | mkV2V (mkV "dégainer") ; -- tocheck
lin draw_back_V2 = mkV2 (advV OP_draw_V OP_back_Adv ) ; -- guess-p-verb
lin draw_down_V2 = prepV2 OP_draw_V OP_down_Prep ; -- guess-p-verb
lin draw_even_V = advV OP_draw_V OP_even_Adv ; -- guess-p-verb
lin draw_in_V = advV OP_draw_V OP_in_Adv ; -- guess-p-verb
lin draw_into_V2 = prepV2 OP_draw_V OP_into_Prep ; -- guess-p-verb
lin draw_off_V = mkV "tirer" ; -- UWN
lin draw_on_V = advV OP_draw_V OP_on_Adv ; -- guess-p-verb
lin draw_on_V2 = prepV2 OP_draw_V OP_on_Prep ; -- guess-p-verb
lin draw_out_V2 = prepV2 OP_draw_V OP_out_Prep ; -- guess-p-verb
lin draw_up_V = mkV "rédiger" | mkV "écrire" ; -- UWN
lin draw_up_V2 = prepV2 OP_draw_V OP_up_Prep ; -- guess-p-verb
lin drawback_N = mkN "drawback" masculine | mkN "inconvénient" masculine ; -- tocheck
lin drawbar_N = mkN "timon" ; -- UWN
lin drawbridge_N = mkN "pont-levis" masculine ; -- tocheck
lin drawer_N = mkN "dessinateur" masculine | mkN "tiroir" masculine ; -- tocheck
lin drawing_N = mkN "pige" feminine | mkN "dessin" masculine ; -- tocheck
lin dread_N = mkN "crainte" feminine ; -- tocheck
lin dread_V2 = mkV2 (mkV "redouter") ; -- tocheck
lin dreadful_A = mkA "affreux" ; -- tocheck
lin dream_N = mkN "rêve" masculine ; -- tocheck
lin dream_V = variants {} ; -- mkV2 (mkV "rêver") | mkV2 (mkV "rêvasser") ; -- tocheck
lin dream_V2 = mkV2 (mkV "rêver") | mkV2 (mkV "rêvasser") ; -- tocheck
lin dream_of_V2 = prepV2 OP_dream_V OP_of_Prep ; -- guess-p-verb
lin dream_up_V2 = prepV2 OP_dream_V OP_up_Prep ; -- guess-p-verb
lin dreamer_N = mkN "rêveur" masculine ; -- tocheck
lin dreamland_N = mkN "dreamworld" ; -- UWN
lin dreamlike_A = mkA "onirique" ; -- tocheck
lin dreamworld_N = mkN "dreamworld" ; -- UWN
lin dreamy_A = mkA "rêveur" ; -- UWN
lin dreary_A = mkA "terne" ; -- tocheck
lin dreg_N = mkN "lie" ; -- tocheck
lin dregs_N = mkN "lie" feminine ; -- tocheck
lin drench_V2 = mkV2 (mkV "tremper") ; -- tocheck
lin dresden_PN = mkPN "Dresde" ; -- status=guess src=geonames
lin dress_N = mkN "tenue" feminine | mkN "robe" feminine ; -- tocheck
lin dress_V = variants {} ; -- mkV2 (mkV "panser") | mkV2 (reflV (mkV "habiller")) | mkV2 (mkV "habiller") ; -- tocheck
lin dress_V2 = mkV2 (mkV "panser") | mkV2 (reflV (mkV "habiller")) | mkV2 (mkV "habiller") ; -- tocheck
lin dress_down_V = advV OP_dress_V OP_down_Adv ; -- guess-p-verb
lin dress_down_V2 = prepV2 OP_dress_V OP_down_Prep ; -- guess-p-verb
lin dress_up_V = advV OP_dress_V OP_up_Adv ; -- guess-p-verb
lin dress_up_V2 = prepV2 OP_dress_V OP_up_Prep ; -- guess-p-verb
lin dresser_N = mkN "commode" feminine ; -- tocheck
lin dressing_N = variants {} ; --
lin dressmaker_N = mkN "couturière" feminine ; -- tocheck
lin dribble_N = mkN "goutte" feminine | mkN "dribble" masculine | mkN "bave" feminine ; -- tocheck
lin dribble_V2 = mkV2 (mkV "dribbler") | mkV2 (mkV "goutter") | mkV2 (mkV "baver") ; -- tocheck
lin dribbler_N = mkN "baveur" masculine | mkN "dribbleur" masculine ; -- tocheck
lin driblet_N = mkN "perle" ; -- UWN
lin driffield_PN = mkPN "Driffield" ; -- status=guess src=geonames
lin drift_N = mkN "dérive" feminine ; -- tocheck
lin drift_V = variants {} ; -- mkV2 (mkV "dévier") | mkV2 (mkV "errer") | mkV2 (mkV "dériver") ; -- tocheck
lin drift_V2 = mkV2 (mkV "dévier") | mkV2 (mkV "errer") | mkV2 (mkV "dériver") ; -- tocheck
lin drifter_N = mkN "vagabond" masculine ; -- tocheck
lin drill_N = mkN "coutil" masculine | mkN "chignole" feminine | mkN "exercice" masculine | mkN "drill" masculine | mkN "foreuse" feminine ; -- tocheck
lin drill_V = variants {} ; -- mkV2 (mkV "forer") | mkV2 (mkV "entraîner") | mkV2 (mkV "approfondir") | mkV2 (mkV "rabâcher") | mkV2 (reflV (mkV "entraîner")) ; -- tocheck
lin drill_V2 = mkV2 (mkV "forer") | mkV2 (mkV "entraîner") | mkV2 (mkV "approfondir") | mkV2 (mkV "rabâcher") | mkV2 (reflV (mkV "entraîner")) ; -- tocheck
lin drilling_N = mkN "ennuyeux" | mkN "forage" ; -- UWN
lin drink_N = mkN "boisson" feminine | mkN "verre" masculine ;
lin drink_V = mkV L.drink_V2 ;
lin drink_V2 = L.drink_V2 ;
lin drink_up_V2 = prepV2 OP_drink_V OP_up_Prep ; -- guess-p-verb
lin drinkable_A = mkA "buvable" | mkA "potable" ; -- tocheck
lin drinker_N = mkN "buveur" masculine ; -- tocheck
lin drip_N = mkN "goutte-à-goutte" masculine ; -- tocheck
lin drip_V = mkV "goutter" ; -- UWN
lin drip_V2 = mkV2 (mkV "goutter") | mkV2 (mkV "suinter") ; -- tocheck
lin dripping_N = mkN "dégoulinade" feminine ; -- tocheck
lin drippy_A = mkA "affecté" | mkA "démonstratif" | mkA "histrionique" | mkA "hystérique" | mkA "larmoyant" | mkA "maniéré" | mkA "mièvre" | mkA "pleurnicheur" | mkA "sentimental" ; -- UWN
lin drive_N = mkN "lecteur" masculine | mkN "pulsion" feminine ; -- tocheck
lin drive_V = I.conduire_V2 | mkV "piloter" ; ---- END edits AR
lin drive_V2 = I.conduire_V2 ;
lin drive_V2V = mkV2V (mkV I.rendre_V2) | mkV2V (mkV "pousser") | mkV2V (mkV I.conduire_V2) ;
lin drive_away_V2 = mkV2 (advV OP_drive_V OP_away_Adv ) ; -- guess-p-verb
lin drive_back_V2 = mkV2 (advV OP_drive_V OP_back_Adv ) ; -- guess-p-verb
lin drive_by_V = advV OP_drive_V OP_by_Adv ; -- guess-p-verb
lin drive_down_V = advV OP_drive_V OP_down_Adv ; -- guess-p-verb
lin drive_in_N = mkN "ciné-parc" masculine ; -- tocheck
lin drive_off_V = advV OP_drive_V OP_off_Adv ; -- guess-p-verb
lin drive_out_V2 = prepV2 OP_drive_V OP_out_Prep ; -- guess-p-verb
lin drive_up_V = advV OP_drive_V OP_up_Adv ; -- guess-p-verb
lin drive_up_V2 = prepV2 OP_drive_V OP_up_Prep ; -- guess-p-verb
lin drivel_N = mkN "foutaise" | mkN "bave" feminine ; -- tocheck
lin drivel_V = mkV (mkV "baver") | mkV (mkV "radoter") ; -- tocheck
lin driveller_N = mkN "dribbleur" ; -- UWN
lin driverFem_N = mkN "conductrice" feminine | mkN "pilote" feminine ; -- tocheck
lin driverMasc_N = mkN "chauffeur" ;
lin driveshaft_N = mkN "cardan" ; -- UWN
lin driveway_N = mkN "allée" ; -- tocheck
lin driving_A = variants {} ; --
lin driving_N = mkN "conduite" feminine ; -- tocheck
lin drizzle_N = mkN "bruine" feminine | mkN "flotte" feminine ; -- tocheck
lin drizzle_V = mkV (mkV "bruiner") | mkV (mkV "mouiller") ; -- tocheck
lin drogheda_PN = mkPN "Drogheda" ; -- status=guess src=geonames
lin drogue_N = mkN "panier-entonnoir" | mkN "cône" masculine ; -- tocheck
lin droitwich_PN = mkPN "Droitwich" ; -- status=guess src=geonames
lin droll_A = mkA "fantaisiste" ; -- tocheck
lin dromedary_N = mkN "dromadaire" masculine ; -- tocheck
lin dronabinol_N = mkN "dronabinol" ; -- UWN
lin drone_N = mkN "abeillaud" | mkN "bourdonnement" | mkN "drone" masculine ; -- tocheck
lin dronfield_PN = mkPN "Dronfield" ; -- status=guess src=geonames
lin drool_N = mkN "bave" feminine ; -- tocheck
lin drool_V = mkV (mkV "saliver") ; -- tocheck
lin droop_V2 = mkV2 (mkV "tomber") ; -- tocheck
lin drop_N = mkN "chute" feminine | mkN "goutte" feminine ; -- tocheck
lin drop_V = variants {} ; -- mkV2 (mkV "tomber") ; -- tocheck
lin drop_V2 = mkV2 (mkV "tomber") ; -- tocheck
lin drop_around_V = advV OP_drop_V OP_around_Adv ; -- guess-p-verb
lin drop_around_V2 = prepV2 OP_drop_V OP_around_Prep ; -- guess-p-verb
lin drop_away_V = advV OP_drop_V OP_away_Adv ; -- guess-p-verb
lin drop_back_V = advV OP_drop_V OP_back_Adv ; -- guess-p-verb
lin drop_by_V = advV OP_drop_V OP_by_Adv ; -- guess-p-verb
lin drop_in_V = advV OP_drop_V OP_in_Adv ; -- guess-p-verb
lin drop_in_on_V2 = prepV2 (advV OP_drop_V OP_in_Adv ) OP_on_Prep ; -- guess-p-verb
lin drop_off_V = advV OP_drop_V OP_off_Adv ; -- guess-p-verb
lin drop_off_V2 = prepV2 OP_drop_V OP_off_Prep ; -- guess-p-verb
lin drop_out_V = advV OP_drop_V OP_out_Adv ; -- guess-p-verb
lin drop_out_of_V2 = prepV2 (advV OP_drop_V OP_out_Adv ) OP_of_Prep ; -- guess-p-verb
lin drop_over_V = advV OP_drop_V OP_over_Adv ; -- guess-p-verb
lin drop_round_V = advV OP_drop_V OP_round_Adv ; -- guess-p-verb
lin drop_round_V2 = prepV2 OP_drop_V OP_round_Prep ; -- guess-p-verb
lin drop_someone_in_it_V2 = variants {} ; -- guess-p-verb
lin drop_through_V = advV OP_drop_V OP_through_Adv ; -- guess-p-verb
lin droplet_N = mkN "gouttelette" feminine ; -- tocheck
lin dropper_N = mkN "compte-goutte" masculine ; -- tocheck
lin droppings_N = mkN "crotte" feminine ; -- tocheck
lin dropsy_N = mkN "hydropisie" feminine ; -- tocheck
lin drought_N = mkN "sécheresse" feminine ; -- tocheck
lin drove_N = mkN "troupeau" masculine ; -- tocheck
lin drown_V = variants {} ; -- mkV2 (reflV (mkV "noyer")) | mkV2 (mkV "noyer") ; -- tocheck
lin drown_V2 = mkV2 (reflV (mkV "noyer")) | mkV2 (mkV "noyer") ; -- tocheck
lin drowse_N = mkN "somnolence" feminine ; -- tocheck
lin drowse_V2 = mkV2 (mkV "somnoler") ; -- tocheck
lin drowsiness_N = mkN "somnolence" feminine ; -- tocheck
lin drowsy_A = mkA "somnolent" | mkA "soporifique" | mkA "stupide" ; -- tocheck
lin drubbing_N = mkN "raclée" feminine ; -- tocheck
lin drudge_N = mkN "Peon" | mkN "galérien" | mkN "peon" ; -- UWN
lin drudgery_N = mkN "corvée" feminine ; -- tocheck
lin drug_N = mkN "drogue" feminine ; -- tocheck
lin drug_V2 = mkV2 (mkV "droguer") ; -- tocheck
lin drugget_N = mkN "droguet" ; -- UWN
lin drugstore_N = mkN "droguerie" | mkN "pharmacie" ; -- UWN
lin druid_N = mkN "druide" masculine ; -- tocheck
lin druidism_N = mkN "druidisme" masculine ; -- tocheck
lin drum_N = mkN "tonneau" masculine | mkN "tambour" masculine ; -- tocheck
lin drumhead_N = mkN "tête" ; -- UWN
lin drumlin_N = mkN "drumlin" ; -- UWN
lin drummer_N = mkN "batteur" masculine ; -- tocheck
lin drumming_N = mkN "tapage" ; -- UWN
lin drumstick_N = mkN "baguette" feminine ; -- tocheck
lin drunk_A = mkA "ivre" ; -- tocheck
lin drunk_N = mkN "ivrogne" ; -- tocheck
lin drunkard_N = mkN "ivrogne" ; -- tocheck
lin drunkenness_N = mkN "ébriété" ; -- tocheck
lin drupe_N = mkN "drupe" | mkN "fruit_à_noyau" ; -- UWN
lin drupelet_N = mkN "drupéole" feminine ; -- tocheck
lin dry_A = L.dry_A ;
lin dry_N = mkN "sec" | mkN "séchage" | mkN "sécher" ; -- UWN
lin dry_V = variants {} ; -- mkV2 (mkV "sécher") ; -- tocheck
lin dry_V2 = mkV2 (mkV "sécher") ; -- tocheck
lin dry_clean_V2 = mkV2 (advV OP_dry_V OP_clean_Adv ) ; -- guess-p-verb
lin dry_off_V2 = prepV2 OP_dry_V OP_off_Prep ; -- guess-p-verb
lin dry_out_V = advV OP_dry_V OP_out_Adv ; -- guess-p-verb
lin dry_out_V2 = prepV2 OP_dry_V OP_out_Prep ; -- guess-p-verb
lin dry_up_V = advV OP_dry_V OP_up_Adv ; -- guess-p-verb
lin dry_up_V2 = prepV2 OP_dry_V OP_up_Prep ; -- guess-p-verb
lin dryad_N = mkN "dryade" feminine ; -- tocheck
lin dryer_N = mkN "sèche-linge" masculine ; -- tocheck
lin dual_A = mkA "double" | mkA "duel" ; -- tocheck
lin dualism_N = mkN "dualisme" ; -- UWN
lin duality_N = mkN "dualité" feminine ; -- tocheck
lin dub_V3 = mkV3 (mkV "adouber") | mkV3 (mkV "doubler") ; -- tocheck
lin dubbing_N = mkN "doublage" masculine ; -- tocheck
lin dubiety_N = mkN "doute" | mkN "incertitude" ; -- UWN
lin dubious_A = mkA "douteux" | mkA "dubitatif" ; -- tocheck
lin dubiousness_N = mkN "doute" | mkN "douter" | mkN "question" ; -- UWN
lin dublin_PN = mkPN "Dublin" ; -- status=guess src=geonames
lin dubnium_N = mkN "dubnium" masculine ; -- tocheck
lin ducal_A = mkA "ducal" ; -- tocheck
lin ducat_N = mkN "ducat" masculine ; -- tocheck
lin duchess_N = mkN "duchesse" feminine ; -- tocheck
lin duchy_N = mkN "duché" masculine ; -- tocheck
lin duck_N = mkN "canard" masculine | mkN "cane" feminine ; -- tocheck
lin duck_V2 = mkV2 (mkV "esquiver") | mkV2 (mkV "baisser") | mkV2 (mkV "plonger") ; -- tocheck
lin ducking_N = mkN "immersion" ; -- UWN
lin duckling_N = mkN "canardeau" masculine ; -- tocheck
lin duct_N = mkN "tuyau" masculine ; -- tocheck
lin ductile_A = mkA "ductile" ; -- tocheck
lin ductility_N = mkN "ductilité" feminine ; -- tocheck
lin dud_N = mkN "bombarder" | mkN "bombe" | mkN "dinde" ; -- UWN
lin dude_N = mkN "type" masculine ; -- tocheck
lin dudley_PN = mkPN "Dudley" ; -- status=guess src=geonames
lin due_A = mkA "dû" ; -- tocheck
lin due_Adv = mkAdv "dûment" ; -- UWN
lin duel_N = mkN "duel" masculine ; -- tocheck
lin duel_V = mkV (mkV "dueller") ; -- tocheck
lin duenna_N = mkN "compagne" ; -- UWN
lin duet_N = mkN "duo" masculine ; -- tocheck
lin duff_N = mkN "duff" ; -- UWN
lin duffer_N = mkN "tocard" ; -- tocheck
lin duisburg_PN = mkPN "Duisbourg" ; -- status=guess src=geonames
lin duke_N = mkN "duc" masculine ; -- tocheck
lin dukedom_N = mkN "duché" ; -- UWN
lin dukinfield_PN = mkPN "Dukinfield" ; -- status=guess src=geonames
lin dulcet_A = mkA "suave" | mkA "doux" ; -- tocheck
lin dulcimer_N = mkN "tympanon" masculine ; -- tocheck
lin dull_A = L.dull_A ;
lin dull_V2 = mkV2 (mkV "émousser") | mkV2 (mkV "adoucir") ; -- tocheck
lin dulse_N = mkN "dulse" ; -- tocheck
lin duly_Adv = variants {} ; --
lin dumb_A = mkA "stupide" ; -- tocheck
lin dumbarton_PN = mkPN "Dumbarton" ; -- status=guess src=geonames
lin dumbbell_N = mkN "haltère" masculine ; -- tocheck
lin dumbfound_V2 = mkV2 (mkV "abasourdir") ; -- tocheck
lin dumfries_PN = mkPN "Dumfries" ; -- status=guess src=geonames
lin dummy_N = mkN "suce" ; -- tocheck
lin dump_V = variants {} ; -- mkV2 (mkV "larguer") ; -- tocheck
lin dump_V2 = mkV2 (mkV "larguer") ; -- tocheck
lin dumper_N = mkN "Tombereau" | mkN "benne" | mkN "motobasculeur" | mkN "tombereau" ; -- UWN
lin dumping_N = mkN "dumping" masculine ; -- tocheck
lin dumpling_N = mkN "quenelle" feminine | mkN "chou" masculine ; -- tocheck
lin duncan_PN = mkPN "Duncan" ; -- status=guess src=geonames
lin dunce_N = mkN "cancre" ; -- tocheck
lin dundalk_PN = mkPN "Dundalk" ; -- status=guess src=geonames
lin dundee_PN = mkPN "Dundee" ; -- status=guess src=geonames
lin dune_N = mkN "dune" feminine ; -- tocheck
lin dunfermline_PN = mkPN "Dunfermline" ; -- status=guess src=geonames
lin dung_N = mkN "fumier" masculine ; -- tocheck
lin dungeon_N = mkN "oubliette" feminine | mkN "donjon" masculine ; -- tocheck
lin dunkirk_PN = mkPN "Dunkirk" ; -- status=guess src=geonames
lin dunoon_PN = mkPN "Dunoon" ; -- status=guess src=geonames
lin dunstable_PN = mkPN "Dunstable" ; -- status=guess src=geonames
lin duodenum_N = mkN "duodénum" masculine ; -- tocheck
lin dupe_N = mkN "victime" ; -- UWN
lin dupe_V2 = mkV2 (mkV "duper") ; -- tocheck
lin duplex_A = mkA "duplex" ; -- UWN
lin duplicate_N = mkN "duplicata" masculine ; -- tocheck
lin duplicate_V2 = mkV2 (mkV "copier") ; -- tocheck
lin duplication_N = mkN "duplication" feminine ; -- tocheck
lin duplicator_N = mkN "copieur" | mkN "copiste" ; -- UWN
lin duplicity_N = mkN "duplicité" feminine ; -- tocheck
lin durability_N = mkN "durabilité" feminine ; -- tocheck
lin durable_A = mkA "durable" ; -- tocheck
lin durance_N = mkN "durance" ; -- UWN
lin duration_N = mkN "durée" feminine ; -- tocheck
lin durative_N = mkN "duratif" masculine ; -- tocheck
lin durban_PN = mkPN "Durban" ; -- status=guess src=geonames
lin duress_N = mkN "contrainte" feminine ; -- tocheck
lin durham_PN = mkPN "Durham" ; -- status=guess src=geonames
lin durian_N = mkN "durian" masculine ; -- tocheck
lin during_Prep = S.during_Prep ;
lin durrington_PN = mkPN "Durrington" ; -- status=guess src=geonames
lin dursley_PN = mkPN "Dursley" ; -- status=guess src=geonames
lin dusk_N = mkN "crépuscule" masculine ; -- tocheck
lin dusky_A = mkA "basané" ; -- UWN
lin dust_N = L.dust_N ;
lin dust_V2 = mkV2 (mkV "épousseter") | mkV2 (mkV "pulvériser") ; -- tocheck
lin dustbin_N = mkN "poubelle" feminine ; -- tocheck
lin dustcart_N = mkN "camion_poubelle" | mkN "castor" ; -- UWN
lin dustman_N = mkN "ramasse-miette" | mkN "ramasse-miettes" | mkN "éboueur" ; -- UWN
lin dusty_A = mkA "poussiéreux" ; -- tocheck
lin dutchFem_N = mkN "hollandaise" ;
lin dutchMasc_N = mkN "hollandais" ;
lin dutch_A = mkA "hollandais" ;
lin duty_N = mkN "devoir" masculine | mkN "travail" masculine | mkN "taxe" feminine ; -- tocheck
lin dwarf_N = mkN "nain" masculine ; -- tocheck
lin dwarf_V2 = mkV2 (reflV (mkV "nanifier")) | mkV2 (mkV "écraser") | mkV2 (mkV "nanifier") ; -- tocheck
lin dwarfism_N = mkN "nanisme" ; -- UWN
lin dwell_V = mkV (mkV "résider") ; -- tocheck
lin dweller_N = mkN "habitant" | mkN "habitante" ; -- UWN
lin dwelling_N = mkN "domicile" masculine ; -- tocheck
lin dwindle_V = mkV (mkV "diminuer") ; -- tocheck
lin dyadic_A = mkA "dyadique" ; -- tocheck
lin dyarchy_N = mkN "diarchie" | mkN "dyarchie" ; -- UWN
lin dybbuk_N = mkN "dibbouk" | mkN "dybbouk" ; -- UWN
lin dye_N = mkN "teinture" feminine ; -- tocheck
lin dye_V2 = mkV2 (mkV I.teindre_V2) ; -- tocheck
lin dyer_N = mkN "dyer" ; -- UWN
lin dyestuff_N = mkN "colorant" | mkN "couleur" | mkN "teinte" | mkN "teinture" ; -- UWN
lin dyke_N = mkN "gouine" feminine ; -- tocheck
lin dynamic_A = mkA "dynamique" ; -- tocheck
lin dynamic_N = mkN "dynamique" feminine ; -- tocheck
lin dynamics_N = mkN "dynamique" feminine ; -- tocheck
lin dynamism_N = mkN "dynamisme" masculine ; -- tocheck
lin dynamite_N = mkN "dynamite" ; -- UWN
lin dynamite_V2 = mkV2 (mkV "dynamiter") ; -- tocheck
lin dynamiter_N = mkN "dynamiteur" ; -- UWN
lin dynamo_N = mkN "dynamo" masculine ; -- tocheck
lin dynamometer_N = mkN "dynamomètre" ; -- UWN
lin dynastic_A = mkA "dynastique" ; -- UWN
lin dynasty_N = mkN "dynastie" feminine ; -- tocheck
lin dyne_N = mkN "dyne" ; -- UWN
lin dysarthria_N = mkN "Dysarthrie" | mkN "dysarthrie" ; -- UWN
lin dyscalculia_N = mkN "Dyscalculie" | mkN "dyscalculie" ; -- UWN
lin dysentery_N = mkN "dysenterie" feminine ; -- tocheck
lin dysfunction_N = mkN "dysfonctionnement" masculine ; -- tocheck
lin dysfunctional_A = mkA "dysfonctionnel" ; -- tocheck
lin dysgenic_A = mkA "dysgénique" ; -- UWN
lin dyskinesia_N = mkN "dyskinésie" feminine ; -- tocheck
lin dyslexia_N = mkN "dyslexie" feminine ; -- tocheck
lin dyslexic_A = mkA "dyslexique" ; -- tocheck
lin dysmenorrhea_N = mkN "dysménorrhée" ; -- UWN
lin dyspepsia_N = mkN "Dyspepsie" | mkN "dyspepsie" | mkN "indigestion" | mkN "malaise_épigastrique" | mkN "tractus_gastro-intestinal" ; -- UWN
lin dyspeptic_A = mkA "nauséabond" | mkA "irritable" ; -- tocheck
lin dyspeptic_N = mkN "dyspepsique" | mkN "dyspeptique" ; -- UWN
lin dysphagia_N = mkN "dysphagie" ; -- UWN
lin dysphemism_N = mkN "dysphémisme" masculine ; -- tocheck
lin dysphoria_N = mkN "dysphorie" ; -- tocheck
lin dysphoric_A = mkA "triste" ; -- UWN
lin dysplasia_N = mkN "dysplasie" ; -- UWN
lin dyspnea_N = mkN "dyspnée" feminine ; -- tocheck
lin dysprosium_N = mkN "dysprosium" masculine ; -- tocheck
lin dysthymia_N = mkN "dysthymie" feminine ; -- tocheck
lin dystopia_N = mkN "dystopie" feminine ; -- tocheck
lin dystopian_A = mkA "dystopique" ; -- tocheck
lin dystrophy_N = mkN "dystrophie" feminine ; -- tocheck
lin dysuria_N = mkN "dysurie" ; -- UWN
lin e_mail_N = mkN "courriel" masculine ; -- tocheck
lin each_Det = mkDet "chaque" ;
lin eager_A = variants {} ; --
lin eagle_N = mkN "aigle" masculine ; -- tocheck
lin eaglescliffe_PN = mkPN "Eaglescliffe" ; -- status=guess src=geonames
lin eaglet_N = mkN "aiglon" masculine ; -- tocheck
lin ealing_PN = mkPN "Ealing" ; -- status=guess src=geonames
lin ear_N = L.ear_N ;
lin earache_N = mkN "otalgie" ; -- UWN
lin eardrum_N = mkN "tympan" masculine ; -- tocheck
lin eared_A = mkA "oreillard" ; -- UWN
lin earl_N = mkN "comte" ; -- tocheck
lin earliness_N = mkN "précocité" ; -- UWN
lin earlobe_N = mkN "lobe" ; -- UWN
lin early_A = mkA "ancien" ; ---- not really A in Fre
lin early_Adv = mkAdv "tôt" ;
lin early_on_Adv = mkAdv "rapidement" | mkAdv "tôt" ; -- UWN
lin earmark_V2 = mkV2 (mkV "allouer") ; -- tocheck
lin earmuff_N = mkN "cache-oreilles" ; -- tocheck
lin earn_V = mkV "comprendre" | mkV "faire" | mkV "gagner" | mkV "mériter" | mkV "obtenir" | mkV "ouvrir" | mkV "rendre" | mkV "réaliser" ; -- UWN
lin earn_V2 = mkV2 (mkV "mériter") | mkV2 (mkV "gagner") ; -- tocheck
lin earner_N = mkN "salarié" ; -- UWN
lin earnest_A = mkA "sérieux" | mkA "ardent" ; -- tocheck
lin earnest_N = mkN "sérieux" ; -- UWN
lin earning_N = variants {} ; --
lin earphone_N = mkN "écouteur" masculine ; -- tocheck
lin earpiece_N = mkN "oreillette" | mkN "téléphone" | mkN "téléphoner" | mkN "écouteur" ; -- UWN
lin earshot_N = mkN "auditif" | mkN "ouïe" ; -- UWN
lin earth_N = L.earth_N ;
lin earthenware_N = mkN "poterie" feminine ; -- tocheck
lin earthly_A = mkA "terrestre" | mkA "terrien" ; -- UWN
lin earthquake_N = mkN "séisme" | mkN "tremblement_de_terre" ; -- UWN
lin earwax_N = mkN "cérumen" masculine ; -- tocheck
lin earwig_N = mkN "forficule" feminine ; -- tocheck
lin ease_N = mkN "facilité" feminine | mkN "repos" masculine ; -- tocheck
lin ease_V = variants {} ; --
lin ease_V2 = variants {} ; --
lin ease_off_V2 = prepV2 OP_ease_V OP_off_Prep ; -- guess-p-verb
lin ease_up_V = advV OP_ease_V OP_up_Adv ; -- guess-p-verb
lin easel_N = mkN "chevalet" masculine ; -- tocheck
lin easement_N = mkN "servitude" ; -- tocheck
lin easington_PN = mkPN "Easington" ; -- status=guess src=geonames
lin east_A = mkA "oriental" ; -- tocheck
lin east_N = mkN "est" masculine ; -- tocheck
lin eastbourne_PN = mkPN "Eastbourne" ; -- status=guess src=geonames
lin easter_N = mkN "pâques" ; -- UWN
lin easterly_A = variants {} ;
lin easterly_Adv = adjAdv easterly_A ; -- derived
lin eastern_A = mkA "oriental" ; -- tocheck
lin easterner_N = mkN "Oriental" masculine ; -- tocheck
lin eastleigh_PN = mkPN "Eastleigh" ; -- status=guess src=geonames
lin easy_A = mkA "facile" ;
lin easy_A2V = L.easy_A2V ;
lin easy_Adv = mkAdv "facile" | mkAdv "facilement" ; -- UWN
lin eat_V = variants {} ; -- L.eat_V2 ;
lin eat_V2 = L.eat_V2 ;
lin eat_away_V = advV OP_eat_V OP_away_Adv ; -- guess-p-verb
lin eat_away_V2 = mkV2 (advV OP_eat_V OP_away_Adv ) ; -- guess-p-verb
lin eat_in_V = advV OP_eat_V OP_in_Adv ; -- guess-p-verb
lin eat_into_V2 = prepV2 OP_eat_V OP_into_Prep ; -- guess-p-verb
lin eat_out_V = advV OP_eat_V OP_out_Adv ; -- guess-p-verb
lin eat_up_V2 = prepV2 OP_eat_V OP_up_Prep ; -- guess-p-verb
lin eatable_A = mkA "comestible" ; -- UWN
lin eatable_N = mkN "comestible" ; -- UWN
lin eater_N = mkN "mangeur" ; -- tocheck
lin eau_de_cologne_N = mkN "cologne" | mkN "eau_de_Cologne" | mkN "eau_de_cologne" ; -- UWN
lin eaves_N = mkN "avant-toit" masculine ; -- tocheck
lin ebb_N = mkN "reflux" masculine ; -- tocheck
lin ebb_V = mkV (mkV "refluer") ; -- tocheck
lin ebon_A = mkA "ébène" ; -- UWN
lin ebonite_N = mkN "ébonite" feminine ; -- tocheck
lin ebony_A = mkA "d'ébène" ; -- tocheck
lin ebony_N = mkN "ébène" | mkN "ébène" feminine | mkN "ébénier" ; -- tocheck
lin eccentric_A = mkA "excentrique" ; -- tocheck
lin eccentric_N = mkN "excentrique" ; -- tocheck
lin eccentricity_N = mkN "excentricité" feminine ; -- tocheck
lin eccles_PN = mkPN "Eccles" ; -- status=guess src=geonames
lin ecclesiastic_N = mkN "abbé" | mkN "divin" | mkN "ecclésiastique" ; -- UWN
lin ecclesiastical_A = mkA "ecclésiastique" ; -- tocheck
lin eccrine_A = mkA "eccrine" ; -- UWN
lin echelon_N = mkN "échelon" masculine ; -- tocheck
lin echidna_N = mkN "échidné" masculine ; -- tocheck
lin echinocactus_N = mkN "echinocactus" ; -- UWN
lin echinococcosis_N = mkN "échinococcose" ; -- UWN
lin echinococcus_N = mkN "echinococcus" | mkN "wagfadjur" ; -- UWN
lin echinoderm_N = mkN "échinoderme" masculine ; -- tocheck
lin echo_N = mkN "écho" masculine ; -- tocheck
lin echo_V = variants {} ; --
lin echo_V2 = variants {} ; --
lin echocardiography_N = mkN "échocardiographie" ; -- UWN
lin echoic_A = mkA "imitatif" | mkA "onomatopéique" ; -- UWN
lin echolalia_N = mkN "écholalie" feminine ; -- tocheck
lin echolocation_N = mkN "écholocation" feminine ; -- tocheck
lin echovirus_N = mkN "Echovirus" | mkN "echovirus" ; -- UWN
lin eclair_N = mkN "éclair" masculine ; -- tocheck
lin eclampsia_N = mkN "éclampsie" ; -- UWN
lin eclectic_A = mkA "éclectique" | mkA "hétérogène" ; -- tocheck
lin eclectic_N = mkN "éclectique" ; -- UWN
lin eclecticism_N = mkN "éclectisme" ; -- UWN
lin eclipse_N = mkN "éclipse" feminine ; -- tocheck
lin eclipse_V2 = mkV2 (mkV "éclipser") ; -- tocheck
lin ecliptic_N = mkN "écliptique" masculine ; -- tocheck
lin eclogue_N = mkN "églogue" feminine ; -- tocheck
lin ecological_A = mkA "écologique" ; -- tocheck
lin ecologist_N = mkN "écologue" ; -- tocheck
lin ecology_N = mkN "écologie" feminine ; -- tocheck
lin econometric_A = mkA "économétrique" ; -- UWN
lin econometrics_N = mkN "économétrie" feminine ; -- tocheck
lin economic_A = mkA "économique" ;
lin economical_A = variants {} ;
lin economics_N = mkN "économie" feminine ; -- tocheck
lin economist_N = mkN "économiste" masculine ; -- tocheck
lin economize_V = mkV "conserver" | mkV "économiser" ; -- UWN
lin economy_1_N = mkN "activité_économique" | mkN "régime_économique" | mkN "système_économique" | mkN "économie" ; -- UWN
lin economy_2_N = mkN "économie" | mkN "épargne" ; -- UWN
lin economy_N = mkN "économie" feminine ; -- tocheck
lin ecosystem_N = mkN "écosystème" masculine ; -- tocheck
lin ecotourism_N = mkN "écotourisme" masculine ; -- tocheck
lin ecphonesis_N = mkN "exclamation" ; -- UWN
lin ecstasy_N = mkN "ecstasy" masculine | mkN "extase" feminine ; -- tocheck
lin ectoderm_N = mkN "ectoderme" | mkN "exoderme" ; -- UWN
lin ectodermal_A = mkA "ectodermique" ; -- UWN
lin ectomorph_N = mkN "ectomorphe" ; -- UWN
lin ectopia_N = mkN "ectopie" ; -- UWN
lin ectoplasm_N = mkN "ectoplasme" ; -- tocheck
lin ectrodactyly_N = mkN "ectrodactylie" ; -- UWN
lin ecuador_PN = mkPN "Équateur" ; -- status=guess src=geonames
lin ecumenic_A = mkA "œcuménique" ; -- UWN
lin ecumenical_A = mkA "oecuménique" ; -- tocheck
lin ecumenism_N = mkN "oecuménisme" ; -- tocheck
lin eczema_N = mkN "eczéma" masculine ; -- tocheck
lin ed_PN = mkPN "Ed" ; -- status=guess src=geonames
lin edacious_A = mkA "rapace" | mkA "vorace" ; -- UWN
lin edaphosaurus_N = mkN "edaphosaurus" | mkN "édaphosaure" ; -- UWN
lin eddy_N = mkN "contre-courant" ; -- tocheck
lin edelweiss_N = mkN "edelweiss" masculine ; -- tocheck
lin edema_N = mkN "oedème" masculine ; -- tocheck
lin eden_PN = mkPN "Eden" ; -- status=guess src=geonames
lin edenbridge_PN = mkPN "Edenbridge" ; -- status=guess src=geonames
lin edentulous_A = mkA "édenté" ; -- UWN
lin edgar_PN = mkPN "Edgar" ; -- status=guess src=geonames
lin edge_N = mkN "bord" masculine | mkN "côté" masculine | mkN "arête" feminine | mkN "carre" feminine ; -- tocheck
lin edgy_A = mkA "nerveux" | mkA "limite" ; -- tocheck
lin edible_A = mkA "comestible" ; -- tocheck
lin edible_N = mkN "comestible" ; -- UWN
lin edict_N = mkN "édit" masculine ; -- tocheck
lin edification_N = mkN "édification" feminine ; -- tocheck
lin edifice_N = mkN "édifice" masculine ; -- tocheck
lin edify_V2 = mkV2 (mkV "édifier") ; -- tocheck
lin edifying_A = mkA "édifiant" ; -- UWN
lin edinburgh_PN = mkPN "Édimbourg" ; -- status=guess src=geonames
lin edit_V2 = mkV2 (mkV "modifier") ; -- tocheck
lin editing_N = mkN "rédaction" feminine ; -- tocheck
lin edition_N = mkN "édition" feminine ; -- tocheck
lin editor_N = mkN "rédacteur" masculine | mkN "monteuse" masculine | mkN "éditeur" masculine | mkN "monteur" masculine ; -- tocheck
lin editorial_A = mkA "éditorial" ; -- tocheck
lin editorial_N = mkN "colonne" | mkN "pilier" | mkN "rubrique" ; -- UWN
lin edmontosaurus_N = mkN "edmontosaurus" ; -- UWN
lin educate_V2 = mkV2 (mkV "éduquer") ; -- tocheck
lin education_N = mkN "formation" | mkN "éducation" feminine ;
lin educational_A = mkA "éducatif" ; -- tocheck
lin educationalist_N = mkN "pédagogue" ; -- UWN
lin educationist_N = mkN "pédagogue" ; -- UWN
lin educative_A = mkA "éducatif" ; -- tocheck
lin edutainment_N = mkN "éducation_par_le_jeu" ; -- UWN
lin eel_N = mkN "anguille" feminine ; -- tocheck
lin eerie_A = mkA "craintif" | mkA "étrange" ; -- tocheck
lin efface_V2 = mkV2 (mkV "effacer") | mkV2 (reflV (mkV "effacer")) ; -- tocheck
lin effaceable_A = mkA "effaçable" ; -- UWN
lin effect_N = mkN "effet" ;
lin effect_V2 = mkV2 (mkV "effectuer") ; -- tocheck
lin effective_A = mkA "efficace" ; -- tocheck
lin effectiveness_N = mkN "efficacité" ; -- tocheck
lin effects_N = mkN "bien_personnel" ; -- UWN
lin effectual_A = mkA "effectif" | mkA "efficace" ; -- UWN
lin effeminacy_N = mkN "efféminement" ; -- UWN
lin effeminate_A = mkA "efféminé" ; -- tocheck
lin effendi_N = mkN "effendi" masculine ; -- tocheck
lin effervescence_N = mkN "effervescence" feminine ; -- tocheck
lin effete_A = mkA "affaibli" ; -- tocheck
lin efficacy_N = mkN "efficience" feminine ; -- tocheck
lin efficiency_N = mkN "rendement" ; -- tocheck
lin efficient_A = mkA "efficace" ; -- tocheck
lin effigy_N = mkN "effigie" feminine ; -- tocheck
lin efflorescence_N = mkN "efflorescence" ; -- tocheck
lin effluent_N = mkN "eau_usée" | mkN "eaux_usées" | mkN "effluent" ; -- UWN
lin effluvium_N = mkN "effluvium" ; -- tocheck
lin efflux_N = mkN "effluent" ; -- UWN
lin effort_N = mkN "effort" ; -- tocheck
lin effrontery_N = mkN "effronterie" feminine ; -- tocheck
lin effulgent_A = mkA "radieux" ; -- UWN
lin effusion_N = mkN "effusion" feminine ; -- tocheck
lin effusive_A = mkA "excessif" ; -- tocheck
lin eg_PN = mkPN "Eg" ; -- status=guess src=geonames
lin egalitarian_A = mkA "égalitaire" ; -- tocheck
lin egalitarian_N = mkN "égalitaire" ; -- tocheck
lin egalitarianism_N = mkN "égalitarisme" masculine ; -- tocheck
lin egg_N = L.egg_N ;
lin egg_cup_N = mkN "coquetier" masculine ; -- tocheck
lin eggnog_N = mkN "lait_de_poule" | mkN "liqueur_aux_œufs" ; -- UWN
lin eggplant_N = mkN "aubergine" feminine ; -- tocheck
lin eggshell_N = mkN "coque" | mkN "coquille" ; -- UWN
lin eglantine_N = mkN "églantine" feminine ; -- tocheck
lin ego_N = mkN "moi" masculine ; -- tocheck
lin egocentric_A = mkA "égocentrique" | mkA "égocentriste" | mkA "égocentré" ; -- UWN
lin egocentric_N = mkN "égocentrique" ; -- UWN
lin egoism_N = mkN "égoïsme" masculine ; -- tocheck
lin egoist_N = mkN "égoïste" ; -- tocheck
lin egoistic_A = mkA "égocentrique" | mkA "égocentriste" | mkA "égocentré" ; -- UWN
lin egoistical_A = mkA "égocentrique" | mkA "égocentriste" | mkA "égocentré" ; -- UWN
lin egomania_N = mkN "égomanie" ; -- UWN
lin egomaniac_N = mkN "égomaniaque" ; -- UWN
lin egotist_N = mkN "égoïste" ; -- tocheck
lin egotistic_A = mkA "frivole" | mkA "vain" | mkA "vaniteux" ; -- UWN
lin egregious_A = mkA "flagrant" ; -- tocheck
lin egremont_PN = mkPN "Egremont" ; -- status=guess src=geonames
lin egress_N = mkN "sortie" feminine ; -- tocheck
lin egret_N = mkN "aigrette" feminine ; -- tocheck
lin egypt_PN = mkPN "Égypte" ; -- status=guess src=geonames
lin eider_N = mkN "eider" masculine ; -- tocheck
lin eiderdown_N = mkN "édredon" masculine ; -- tocheck
lin eidetic_A = mkA "eidétique" | mkA "éidétique" ; -- UWN
lin eindhoven_PN = mkPN "Eindhoven" ; -- status=guess src=geonames
lin einsteinium_N = mkN "einsteinium" masculine ; -- tocheck
lin either7or_DConj = S.either7or_DConj ;
lin either_Adv = mkAdv "non_plus" | mkAdv "ou" | mkAdv "soit" ; -- UWN
lin either_Det = mkDet "chaque" ; -- tocheck
lin ejaculate_V2 = mkV2 (mkV "éjaculer") ; -- tocheck
lin ejaculation_N = mkN "éjaculation" feminine ; -- tocheck
lin eject_V = mkV "excréter" | mkV "libérer" | mkV "renvoyer" ; -- UWN
lin eject_V2 = mkV2 (mkV "éjecter") ; -- tocheck
lin ejection_N = mkN "éjection" feminine ; -- tocheck
lin el_salvador_PN = mkPN "Salvador" ; -- status=guess src=geonames
lin elaborate_A = mkA "aléatoire" | mkA "autre" | mkA "minutieux" | mkA "préalable" | mkA "précis" | mkA "relatif" | mkA "semestriel" ; -- UWN
lin elaboration_N = mkN "élaboration" ; -- UWN
lin eland_N = mkN "éland" ; -- UWN
lin elapse_V = mkV (reflV (mkV "passer")) ; -- tocheck
lin elastance_N = mkN "élastance" ; -- UWN
lin elastic_A = mkA "élastique" ; -- tocheck
lin elastic_N = mkN "élastique" masculine ; -- tocheck
lin elasticity_N = mkN "élasticité" | mkN "élasticité" feminine ; -- tocheck
lin elation_N = mkN "allégresse" feminine | mkN "élation" feminine ; -- tocheck
lin elbow_N = mkN "coude" masculine ; -- tocheck
lin elder_A = mkA "aîné" ; -- tocheck
lin elder_N = mkN "sureau" masculine ; -- tocheck
lin elderberry_N = mkN "sureau" ; -- UWN
lin elderly_A = mkA "vieux" ; -- tocheck
lin elderslie_PN = mkPN "Elderslie" ; -- status=guess src=geonames
lin eldritch_A = mkA "bizarre" | mkA "déroutant" ; -- UWN
lin eleanor_PN = mkPN "Eleanor" ; -- status=guess src=geonames
lin elect_A = mkA "élu" ; -- tocheck
lin elect_V = mkV "adopter" | mkV "choisir" | mkV "élire" ; -- UWN
lin elect_V2 = variants {} ; -- mkV3 (mkV I.élire_V2) | mkV3 (mkV "choisir") ; -- tocheck
lin elect_V2V = variants {} ; -- variants {} ; -- mkV3 (mkV I.élire_V2) | mkV3 (mkV "choisir") ; -- tocheck
lin elect_V3 = mkV3 (mkV I.élire_V2) | mkV3 (mkV "choisir") ; -- tocheck
lin elected_A = variants {} ; --
lin election_N = mkN "élection" feminine ; -- tocheck
lin elector_N = mkN "électeur" masculine ; -- tocheck
lin electoral_A = mkA "électoral" ; -- tocheck
lin electorate_N = mkN "électorat" masculine ; -- tocheck
lin electric_A = mkA "électrique" ; -- tocheck
lin electric_N = mkN "voiture_électrique" | mkN "électrique" ; -- UWN
lin electrical_A = mkA "électrique" ; -- tocheck
lin electrician_N = mkN "électricien" masculine ; -- tocheck
lin electricity_N = mkN "électricité" feminine ; -- tocheck
lin electrification_N = mkN "électrification" feminine ; -- tocheck
lin electrocardiogram_N = mkN "électrocardiogramme" masculine ; -- tocheck
lin electrocardiograph_N = mkN "cardiographe" | mkN "électrocardiographe" ; -- UWN
lin electrochemical_A = mkA "électro-chimique" | mkA "électrochimique" ; -- UWN
lin electrochemistry_N = mkN "électrochimie" ; -- UWN
lin electrocute_V2 = mkV2 (mkV "électrocuter") ; -- tocheck
lin electrocution_N = mkN "électrocution" feminine ; -- tocheck
lin electrode_N = mkN "électrode" feminine ; -- tocheck
lin electrodynamometer_N = mkN "électrodynamomètre" ; -- UWN
lin electroencephalogram_N = mkN "électroencéphalogramme" masculine ; -- tocheck
lin electrolysis_N = mkN "électrolyse" feminine ; -- tocheck
lin electrolyte_N = mkN "électrolyte" masculine ; -- tocheck
lin electromagnet_N = mkN "électro-aimant" masculine ; -- tocheck
lin electromagnetic_A = mkA "électromagnétique" ; -- tocheck
lin electromagnetism_N = mkN "électromagnétisme" feminine ; -- tocheck
lin electromechanical_A = mkA "électromécanique" ; -- tocheck
lin electrometer_N = mkN "électromètre" ; -- UWN
lin electromyography_N = mkN "électromyogramme" ; -- UWN
lin electron_N = mkN "électron" masculine ; -- tocheck
lin electronegativity_N = mkN "électronégativité" feminine ; -- tocheck
lin electronic_A = mkA "électronique" ; -- tocheck
lin electronics_N = mkN "électronique" feminine ; -- tocheck
lin electrophoresis_N = mkN "électrophorèse" ; -- tocheck
lin electroscope_N = mkN "électroscope" ; -- tocheck
lin electrostatic_A = mkA "statique" | mkA "électro-statique" | mkA "électrostatique" ; -- UWN
lin electrostatics_N = mkN "électrostatique" feminine ; -- tocheck
lin electrum_N = mkN "électrum" masculine ; -- tocheck
lin eleemosynary_A = mkA "philanthropique" ; -- UWN
lin elegance_N = mkN "élégance" feminine ; -- tocheck
lin elegant_A = mkA "élégant" ; -- tocheck
lin elegy_N = mkN "élégie" feminine ; -- tocheck
lin element_N = mkN "élément" masculine | mkN "membre" masculine ; -- tocheck
lin elementary_A = mkA "élémentaire" ; -- tocheck
lin elephant_N = mkN "éléphantesque" | mkN "éléphant" masculine ; -- tocheck
lin elephantiasis_N = mkN "éléphantiasis" ; -- tocheck
lin elephantine_A = mkA "éléphantin" | mkA "éléphantesque" ; -- tocheck
lin elevate_V2 = mkV2 (mkV "augmenter") | mkV2 (mkV "élever") ; -- tocheck
lin elevation_N = mkN "élévation" feminine ; -- tocheck
lin elevator_N = mkN "ascenseur" ; -- UWN
lin elf_N = mkN "elfe" masculine ; -- tocheck
lin elgin_PN = mkPN "Elgin" ; -- status=guess src=geonames
lin elicit_V2 = mkV2 (mkV "causer") | mkV2 (mkV "raisonner") ; -- tocheck
lin elicitation_N = mkN "induction" | mkN "évocation" ; -- UWN
lin eligibility_N = mkN "éligibilité" feminine ; -- tocheck
lin eligible_A = variants {} ; --
lin eliminate_V2 = mkV2 (mkV "tuer") ; -- tocheck
lin elimination_N = mkN "élimination" feminine ; -- tocheck
lin eliminator_N = mkN "eliminator" ; -- UWN
lin elision_N = mkN "élision" feminine ; -- tocheck
lin elite_N = mkN "élite" feminine ; -- tocheck
lin elitism_N = mkN "élitisme" ; -- tocheck
lin elitistFem_N = variants {} ; ---- sense to be split
lin elitistMasc_N = variants {} ; ---- sense to be split
lin elixir_N = mkN "élixir" masculine ; -- tocheck
lin elizabeth_PN = mkPN "Elizabeth" ; -- status=guess src=geonames
lin ell_N = mkN "aile" feminine | mkN "aune" feminine ; -- tocheck
lin elland_PN = mkPN "Elland" ; -- status=guess src=geonames
lin ellesmere_PN = mkPN "Ellesmere" ; -- status=guess src=geonames
lin ellipse_N = mkN "ellipse" feminine ; -- tocheck
lin ellipsis_N = mkN "ellipse" feminine ; -- tocheck
lin ellipsoid_A = mkA "ellipsoïde" | mkA "sphéroïdique" ; -- UWN
lin ellipsoid_N = mkN "ellipsoïde" ; -- UWN
lin elliptical_A = mkA "elliptique" ; -- tocheck
lin elm_N = mkN "orme" masculine ; -- tocheck
lin elocution_N = mkN "élocution" ; -- UWN
lin elocutionistFem_N = variants {} ; ---- sense to be split
lin elocutionistMasc_N = variants {} ; ---- sense to be split
lin elongate_V2 = mkV2 (mkV "allonger") ; -- tocheck
lin eloquence_N = mkN "éloquence" feminine ; -- tocheck
lin eloquent_A = mkA "éloquent" ; -- tocheck
lin else_Adv = mkAdv "autrement" ;
lin elsewhere_Adv = mkAdv "ailleurs" ; -- tocheck
lin elstree_PN = mkPN "Elstree" ; -- status=guess src=geonames
lin elucidate_V2 = mkV2 (mkV "élucider") ; -- tocheck
lin elucidation_N = mkN "élucidation" feminine ; -- tocheck
lin elusive_A = mkA "évasif" ; -- tocheck
lin ely_PN = mkPN "Ely" ; -- status=guess src=geonames
lin emaciate_V2 = mkV2 (reflV (mkV "émacier")) | mkV2 (mkV "amaigrir") ; -- tocheck
lin emaciation_N = mkN "émaciation" feminine ; -- tocheck
lin emanate_V = mkV (mkV "émaner") ; -- tocheck
lin emanation_N = mkN "émanation" feminine ; -- tocheck
lin emancipation_N = mkN "émancipation" feminine ; -- tocheck
lin emancipator_N = mkN "émancipateur" ; -- UWN
lin emasculate_V2 = mkV2 (mkV "émasculer") ; -- tocheck
lin emasculation_N = mkN "émasculation" feminine ; -- tocheck
lin embalm_V2 = mkV2 (mkV "embaumer") ; -- tocheck
lin embankment_N = mkN "chaussée" feminine ; -- tocheck
lin embargo_N = mkN "embargo" masculine ; -- tocheck
lin embark_V = mkV "embarquer" ; -- UWN
lin embark_V2 = variants {} ; --
lin embarkation_N = mkN "embarquement" masculine ; -- tocheck
lin embarrass_V2 = mkV2 (mkV "embarrasser") ; -- tocheck
lin embarrassed_A = mkA "timide" ; -- UWN
lin embarrassing_A = mkA "embarrassant" ; -- tocheck
lin embarrassment_N = mkN "embarras" masculine ; -- tocheck
lin embassy_N = mkN "ambassade" feminine ; -- tocheck
lin embattled_A = mkA "contesté" | mkA "armé" ; -- tocheck
lin embed_V2 = mkV2 (mkV "insérer") ; -- tocheck
lin embellish_V2 = mkV2 (mkV "embellir") ; -- tocheck
lin ember_N = mkN "braise" feminine ; -- tocheck
lin embezzle_V2 = mkV2 (mkV "divertir") ; -- tocheck
lin embezzlement_N = mkN "détournement" masculine ; -- tocheck
lin embezzler_N = mkN "voleur" ; -- UWN
lin emblem_N = mkN "emblème" masculine ; -- tocheck
lin emblematic_A = mkA "emblématique" | mkA "symbolique" ; -- UWN
lin embodiment_N = mkN "incarnation" feminine ; -- tocheck
lin embody_V2 = mkV2 (mkV "représenter") | mkV2 (mkV "incarner") ; -- tocheck
lin embolden_V2 = mkV2 (mkV "encourager") ; -- tocheck
lin embolism_N = mkN "embolisme" masculine | mkN "embolie" feminine ; -- tocheck
lin embonpoint_N = mkN "embonpoint" ; -- UWN
lin emboss_V2 = mkV2 (mkV "estamper") ; -- tocheck
lin embrace_N = mkN "accolade" feminine ; -- tocheck
lin embrace_V = mkV "adopter" ; -- UWN
lin embrace_V2 = mkV2 (mkV I.étreindre_V2) ; -- tocheck
lin embrasure_N = mkN "embrasure" feminine ; -- tocheck
lin embrocation_N = mkN "embrocation" feminine ; -- tocheck
lin embroider_V2 = mkV2 (mkV "broder") ; -- tocheck
lin embroiderer_N = mkN "brodeur" masculine ; -- tocheck
lin embroideress_N = mkN "brodeuse" feminine ; -- tocheck
lin embroidery_N = mkN "broderie" feminine ; -- tocheck
lin embroil_V2 = mkV2 (mkV "embourber") ; -- tocheck
lin embryo_N = mkN "embryon" masculine ; -- tocheck
lin embryologist_N = mkN "embryologist" ; -- tocheck
lin embryology_N = mkN "embryologie" feminine ; -- tocheck
lin embryonic_A = mkA "embryonnaire" ; -- tocheck
lin emeer_N = mkN "émir" ; -- UWN
lin emendation_N = mkN "émendation" ; -- UWN
lin emerald_N = mkN "émeraude" feminine ; -- tocheck
lin emerge_V = variants {} ; -- mkV2V (mkV "émerger") ; -- tocheck
lin emergence_N = mkN "émergence" feminine ; -- tocheck
lin emergency_N = mkN "urgences" | mkN "urgence" feminine ; -- tocheck
lin emeritus_A = mkA "émérite" ; -- tocheck
lin emery_N = mkN "emery" | mkN "émeri" ; -- UWN
lin emetic_N = mkN "émétique" ; -- tocheck
lin emigrant_N = mkN "emigre" | mkN "émigrant" | mkN "émigré" ; -- UWN
lin emigrate_V2V = mkV2V (mkV "émigrer") ; -- tocheck
lin emigration_N = mkN "émigration" feminine ; -- tocheck
lin eminence_N = mkN "éminence" ; -- UWN
lin eminent_A = mkA "remarquable" | mkA "éminent" ; -- tocheck
lin emir_N = mkN "émir" masculine ; -- tocheck
lin emirate_N = mkN "émirat" masculine ; -- tocheck
lin emissary_N = mkN "émissaire" ; -- tocheck
lin emission_N = variants {} ; --
lin emit_V2 = mkV2 (mkV I.émettre_V2) ; -- tocheck
lin emitter_N = mkN "émetteur" masculine ; -- tocheck
lin emmenagogue_N = mkN "emménagogue" | mkN "emménagogues" ; -- UWN
lin emmer_N = mkN "amidonnier" masculine ; -- tocheck
lin emolument_N = mkN "émolument" masculine ; -- tocheck
lin emoticon_N = mkN "binette" feminine ; -- tocheck
lin emotion_N = mkN "émotion" feminine ; -- tocheck
lin emotional_A = mkA "émotionnel" ; -- tocheck
lin emotive_A = mkA "affectif" | mkA "émotif" ; -- UWN
lin empathic_A = mkA "empathique" ; -- tocheck
lin empathize_V = mkV (mkV "compatir") ; -- tocheck
lin empathy_N = mkN "empathie" feminine ; -- tocheck
lin emperor_N = mkN "empereur" masculine ; -- tocheck
lin emphasis_N = mkN "accent" masculine | mkN "graisse" feminine ; -- tocheck
lin emphasize_V2 = mkV2 (mkV "souligner") ; -- tocheck
lin emphasize_VS = mkvVS "souligner" ; -- UWN
lin emphatic_A = mkA "emphatique" ; -- tocheck
lin emphysema_N = mkN "emphysème" masculine ; -- tocheck
lin empire_N = mkN "empire" | mkN "empire" masculine ; -- tocheck
lin empirical_A = variants {} ; --
lin empiricism_N = mkN "empirisme" masculine ; -- tocheck
lin empiricist_N = mkN "empiriste" ; -- UWN
lin emplacement_N = mkN "emplacement" | mkN "endroit" | mkN "place" | mkN "placement" | mkN "position" | mkN "situation" ; -- UWN
lin employ_N = mkN "chômage" | mkN "emploi" | mkN "employer" | mkN "travail" ; -- UWN
lin employ_V2 = mkV2 (mkV "employer") ; -- tocheck
lin employable_A = mkA "employable" ; -- tocheck
lin employee_N = mkN "employé" masculine ; -- tocheck
lin employer_N = mkN "employeur" masculine ; -- tocheck
lin employment_N = mkN "emploi" masculine | mkN "travail" masculine ; -- tocheck
lin emporium_N = mkN "emporium" | mkN "grand_magasin" ; -- UWN
lin empower_V2V = mkV2V (mkV "autoriser") ; -- tocheck
lin empress_N = mkN "impératrice" feminine ; -- tocheck
lin emptiness_N = mkN "néant" | mkN "vide" masculine ; -- tocheck
lin empty_A = L.empty_A ;
lin empty_N = mkN "vide" ; -- UWN
lin empty_V = variants {} ; -- mkV2 (mkV "vider") ; -- tocheck
lin empty_V2 = mkV2 (mkV "vider") ; -- tocheck
lin empty_handed_A = mkA "bredouille" ; -- tocheck
lin emptying_N = mkN "vidage" | mkN "évacuation" ; -- UWN
lin empurpled_A = mkA "pourpre" | mkA "violet" ; -- UWN
lin empyrean_N = mkN "sphère_céleste" ; -- UWN
lin emsworth_PN = mkPN "Emsworth" ; -- status=guess src=geonames
lin emu_N = mkN "émeu" masculine ; -- tocheck
lin emulate_V2 = mkV2 (mkV "émuler") ; -- tocheck
lin emulation_N = mkN "émulation" ; -- UWN
lin emulsion_N = mkN "émulsion" feminine ; -- tocheck
lin en_N = mkN "en" | mkN "écrou" ; -- UWN
lin en_route_Adv = mkAdv "en_cours_de_route" | mkAdv "en_route" ; -- UWN
lin enable_V2 = variants {} ; -- mkV2V (mkV "activer") | mkV2V (mkV I.permettre_V2) ; -- tocheck
lin enable_V2V = mkV2V (mkV "activer") | mkV2V (mkV I.permettre_V2) ; -- tocheck
lin enable_VS = mkvVS "activer" | mkvVS "autoriser" | mkvVS "permettre" ; -- UWN
lin enact_V2V = mkV2V (mkV "jouer") | mkV2V (mkV "promulguer") ; -- tocheck
lin enactment_N = mkN "caractérisation" ; -- UWN
lin enamel_N = mkN "émail" masculine ; -- tocheck
lin enamel_V2 = mkV2 (mkV "émailler") ; -- tocheck
lin enamine_N = mkN "énamine" ; -- UWN
lin enamored_A = mkA "amoureuse" | mkA "amoureux" | mkA "fou" ; -- UWN
lin enantiomorph_N = mkN "Énantiomère" | mkN "énantiomère" | mkN "énantiomères" | mkN "éniantomère" ; -- UWN
lin enate_A = mkA "maternel" ; -- UWN
lin encamp_V = mkV "camper" ; -- UWN
lin encampment_N = mkN "camping" ; -- UWN
lin encapsulation_N = mkN "encapsulation" ; -- tocheck
lin encephalartos_N = mkN "encephalartos" ; -- UWN
lin encephalitis_N = mkN "encéphalite" feminine ; -- tocheck
lin encephalography_N = mkN "encéphalographie" ; -- UWN
lin enchant_V2 = mkV2 (mkV "enchanter") ; -- tocheck
lin enchanter_N = mkN "enchanteur" masculine ; -- tocheck
lin enchantment_N = mkN "enchantement" masculine ; -- tocheck
lin enchantress_N = mkN "enchanteresse" feminine ; -- tocheck
lin enchilada_N = mkN "enchilada" | mkN "enchiladas" ; -- UWN
lin encircle_V2 = mkV2 (mkV "encercler") ; -- tocheck
lin encirclement_N = mkN "blocus" | mkN "siège" ; -- UWN
lin enclave_N = mkN "enclave" | mkN "île" ; -- UWN
lin enclose_V2 = variants {} ; --
lin enclosure_N = mkN "enclos" masculine ; -- tocheck
lin encoding_N = mkN "codage" masculine ; -- tocheck
lin encomiastic_A = mkA "dithyrambique" | mkA "panégyrique" ; -- UWN
lin encompass_V2 = mkV2 (mkV "encercler") | mkV2 (mkV "englober") | mkV2 (mkV "entourer") ; -- tocheck
lin encopresis_N = mkN "Encoprésie" | mkN "encoprésie" ; -- UWN
lin encore_N = mkN "bis" | mkN "rappel" masculine ; -- tocheck
lin encounter_N = mkN "rencontre" | mkN "rencontre" feminine ; -- tocheck
lin encounter_V2 = mkV2 (mkV "rencontrer") ; -- tocheck
lin encourage_V2 = variants {} ; -- mkV2V (mkV "encourager") ; -- tocheck
lin encourage_V2V = mkV2V (mkV "encourager") ; -- tocheck
lin encouragement_N = mkN "encouragement" masculine ; -- tocheck
lin encouraging_A = variants {} ; --
lin encrypt_V2 = mkV2 (mkV "coder") ; -- tocheck
lin encyclical_A = mkA "encyclique" ; -- UWN
lin encyclical_N = mkN "encyclique" feminine ; -- tocheck
lin encyclopaedia_N = mkN "encyclopédie" ; -- UWN
lin encyclopaedic_A = mkA "encyclopédique" ; -- UWN
lin encyclopedia_N = mkN "encyclopédie" feminine ; -- tocheck
lin encyclopedic_A = mkA "encyclopédique" ; -- tocheck
lin encyclopedist_N = mkN "compilateur" | mkN "encyclopédiste" ; -- UWN
lin end_1_N = mkN "fin" feminine ;
lin end_2_N = mkN "bout" ;
lin end_N = mkN "fin" feminine ;
lin end_V = mkV "achever" | mkV "arrêter" | mkV "finir" | mkV "terminer" ; -- UWN
lin end_V2 = mkV2 (mkV "finir") ; -- tocheck
lin end_in_V2 = prepV2 OP_end_V OP_in_Prep ; -- guess-p-verb
lin end_tail_V2 = variants {} ; -- guess-p-verb
lin end_up_V2 = prepV2 OP_end_V OP_up_Prep ; -- guess-p-verb
lin end_up_with_V2 = prepV2 (advV OP_end_V OP_up_Adv ) OP_with_Prep ; -- guess-p-verb
lin endanger_V2 = mkV2 (mkV I.compromettre_V2) ; -- tocheck
lin endearingly_Adv = mkAdv "adorablement" ; -- UWN
lin endeavour_N = mkN "effort" ; -- tocheck
lin endeavour_V = mkV (mkV "tenter") ; -- tocheck
lin endemic_A = mkA "indigène" | mkA "endémique" ; -- tocheck
lin endermic_A = mkA "endermique" ; -- UWN
lin endgame_N = mkN "finale" feminine ; -- tocheck
lin ending_N = mkN "terminaison" feminine | mkN "fin" feminine ; -- tocheck
lin endive_N = mkN "endive" feminine ; -- tocheck
lin endless_A = mkA "infini" ; -- tocheck
lin endocarditis_N = mkN "endocardite" ; -- UWN
lin endocardium_N = mkN "endocarde" masculine ; -- tocheck
lin endocentric_A = mkA "endocentrique" ; -- UWN
lin endocranium_N = mkN "endocrane" | mkN "endocrâne" ; -- UWN
lin endocrine_A = mkA "endocrine" ; -- tocheck
lin endocrinologist_N = mkN "endocrinologue" ; -- tocheck
lin endocrinology_N = mkN "endocrinologie" ; -- UWN
lin endoderm_N = mkN "endoblaste" | mkN "endoderme" ; -- UWN
lin endodontics_N = mkN "endodontie" ; -- UWN
lin endogamous_A = mkA "endogamique" ; -- tocheck
lin endogamy_N = mkN "endogamie" feminine ; -- tocheck
lin endogenous_A = mkA "endogène" ; -- tocheck
lin endometriosis_N = mkN "adénomyose" | mkN "endométriose" ; -- UWN
lin endometrium_N = mkN "endomètre" masculine ; -- tocheck
lin endonuclease_N = mkN "endonucléase" ; -- UWN
lin endoparasite_N = mkN "endoparasite" masculine ; -- tocheck
lin endoplasm_N = mkN "endoplasme" ; -- UWN
lin endorphin_N = mkN "endorphine" feminine ; -- tocheck
lin endorse_V2 = mkV2 (mkV I.soutenir_V2) | mkV2 (mkV "endosser") ; -- tocheck
lin endoscopic_A = mkA "endoscopique" ; -- UWN
lin endoscopy_N = mkN "endoscopie" feminine ; -- tocheck
lin endoskeleton_N = mkN "endosquelette" masculine ; -- tocheck
lin endosperm_N = mkN "albumen" | mkN "albumen_;_endosperme" | mkN "endosperme" ; -- UWN
lin endospore_N = mkN "endospore" ; -- UWN
lin endothermic_A = mkA "endothermique" ; -- UWN
lin endotoxin_N = mkN "endotoxine" feminine ; -- tocheck
lin endow_V2 = mkV2 (mkV "doter") | mkV2 (mkV "enrichir") ; -- tocheck
lin endowment_N = mkN "dotation" feminine | mkN "zob" masculine ; -- tocheck
lin endurable_A = mkA "endurable" ; -- tocheck
lin endure_V = variants {} ; -- mkV2 (mkV "endurer") ; -- tocheck
lin endure_V2 = mkV2 (mkV "endurer") ; -- tocheck
lin enduring_A = variants {} ;
lin enema_N = mkN "lavement" masculine ; -- tocheck
lin enemy_N = L.enemy_N ;
lin energetic_A = mkA "énergétique" | mkA "énergique" ; -- tocheck
lin energizing_A = mkA "cinétique" ; -- UWN
lin energizing_N = mkN "activation" ; -- UWN
lin energy_N = mkN "énergie" feminine ; -- tocheck
lin enervate_V2 = mkV2 (mkV "affaiblir") ; -- tocheck
lin enfield_PN = mkPN "Enfield" ; -- status=guess src=geonames
lin enforce_V2 = variants {} ; --
lin enforcement_N = variants {} ; --
lin enfranchisement_N = mkN "certification" ; -- UWN
lin engage_V = variants {} ; -- mkV2 (mkV "engager") | mkV2 (mkV "embrayer") ; -- tocheck
lin engage_V2 = mkV2 (mkV "engager") | mkV2 (mkV "embrayer") ; -- tocheck
lin engagement_N = mkN "fiançailles" ; -- tocheck
lin engelmannia_N = mkN "engelmannia" ; -- UWN
lin engender_V2 = mkV2 (mkV "engendrer") ; -- tocheck
lin engine_N = mkN "moteur" masculine | mkN "locomotive" feminine ; -- tocheck
lin engineer_N = mkN "ingénieur" | mkN "machiniste" masculine ; -- tocheck
lin engineering_N = mkN "ingénierie" feminine ; -- tocheck
lin england_PN = mkPN "England" ; -- status=guess src=geonames
lin englishFem_N = mkN "anglaise" ;
lin englishMasc_N = mkN "anglais" ;
lin english_A = mkA "anglais" ;
lin engrave_V2 = mkV2 (mkV "graver") ; -- tocheck
lin engraving_N = mkN "gravure" feminine ; -- tocheck
lin engross_V2 = mkV2 (mkV "accaparer") | mkV2 (mkV "captiver") | mkV2 (mkV "engraisser") ; -- tocheck
lin engulf_V2 = mkV2 (mkV "engloutir") ; -- tocheck
lin enhance_V2 = mkV2 (mkV "améliorer") | mkV2 (mkV "augmenter") ; -- tocheck
lin enhanced_A = variants {} ; --
lin enhancement_N = mkN "amélioration" feminine ; -- tocheck
lin enigma_N = mkN "énigme" feminine ; -- tocheck
lin enigmatic_A = mkA "énigmatique" ; -- tocheck
lin enjambment_N = mkN "enjambement" masculine ; -- tocheck
lin enjoy_V2 = mkV2 (mkV "jouir") ; -- tocheck
lin enjoy_VV = variants {} ; -- mkV2 (mkV "jouir") ; -- tocheck
lin enjoyable_A = mkA "agréable" | mkA "drôle" ; -- UWN
lin enjoyment_N = variants {} ; --
lin enlarge_V2 = mkV2 (mkV "agrandir") ; -- tocheck
lin enlargement_N = mkN "élargissement" ; -- tocheck
lin enlighten_V2 = mkV2 (mkV "éclairer") ; -- tocheck
lin enlightenment_N = mkN "illumination" ; -- tocheck
lin enlist_V = mkV "recruter" ; -- UWN
lin enlist_V2 = mkV2 (mkV I.rejoindre_V2) | mkV2 (mkV "recruter") ; -- tocheck
lin enlistment_N = mkN "enrôlement" masculine ; -- tocheck
lin enmity_N = mkN "inimitié" feminine ; -- tocheck
lin ennoble_V2 = mkV2 (mkV "anoblir") ; -- tocheck
lin ennui_N = mkN "ennui" ; -- UWN
lin enoch_PN = mkPN "Enoch" ; -- status=guess src=geonames
lin enol_N = mkN "énol" masculine ; -- tocheck
lin enologist_N = mkN "oenologue" ; -- tocheck
lin enology_N = mkN "œnologie" ; -- UWN
lin enormity_N = mkN "énormité" ; -- UWN
lin enormous_A = mkA "énorme" ; -- tocheck
lin enormousness_N = mkN "immensité" | mkN "largeur" | mkN "énormité" ; -- UWN
lin enosis_N = mkN "enosis" ; -- UWN
lin enough_Predet = variants {} ; --
lin enquire_V = variants {} ; --
lin enquire_V2 = variants {} ; --
lin enquiry_N = mkN "enquête" feminine ; -- tocheck
lin enrich_V2 = mkV2 (mkV "enrichir") ; -- tocheck
lin enrichment_N = mkN "enrichissement" masculine ; -- tocheck
lin enroll_V2 = mkV2 (mkV "enrôler") | mkV2 (reflV (mkV I.inscrire_V2)) ; -- tocheck
lin enrolment_N = mkN "inscription" feminine ; -- tocheck
lin enschede_PN = mkPN "Enschede" ; -- status=guess src=geonames
lin ensemble_N = mkN "ensemble" masculine ; -- tocheck
lin enshrine_V2 = mkV2 (mkV "enchâsser") ; -- tocheck
lin ensign_N = mkN "pavillon" masculine | mkN "aspirant" masculine ; -- tocheck
lin ensilage_N = mkN "ensilage" | mkN "silage" | mkN "silotage" ; -- UWN
lin enslavement_N = mkN "asservissement" ; -- UWN
lin ensnare_V2 = mkV2 (mkV "empêtrer") | mkV2 (mkV "piéger") ; -- tocheck
lin ensue_V = mkV (mkV "résulter") ; -- tocheck
lin ensure_V = variants {} ; -- mkV2 (reflV (mkV "assurer")) ; -- tocheck
lin ensure_V2 = mkV2 (reflV (mkV "assurer")) ; -- tocheck
lin ensure_VS = variants {} ; -- mkV2 (reflV (mkV "assurer")) ; -- tocheck
lin entablature_N = mkN "Entablement" | mkN "entablement" ; -- UWN
lin entail_N = mkN "comporte" ; -- UWN
lin entail_V2 = mkV2 (mkV "comporter") ; -- tocheck
lin entangle_V2 = mkV2 (mkV "intriquer") ; -- tocheck
lin entelechy_N = mkN "entéléchie" feminine ; -- tocheck
lin enter_V = variants {} ; -- mkV2 (mkV "entrer") | mkV2 (mkV "taper") ; -- tocheck
lin enter_V2 = mkV2 (mkV "entrer") | mkV2 (mkV "taper") ; -- tocheck
lin enter_for_V2 = prepV2 OP_enter_V OP_for_Prep ; -- guess-p-verb
lin enter_into_V2 = prepV2 OP_enter_V OP_into_Prep ; -- guess-p-verb
lin enteric_A = mkA "intestinal" ; -- UWN
lin enteritis_N = mkN "entérite" feminine ; -- tocheck
lin enterobiasis_N = mkN "oxyurose" ; -- UWN
lin enterokinase_N = mkN "entérokinase" ; -- UWN
lin enteropathy_N = mkN "Entéropathie" | mkN "entéropathie" | mkN "entérothérapies" ; -- UWN
lin enterotoxemia_N = mkN "entérotoxémie" ; -- UWN
lin enterotoxin_N = mkN "entérotoxine" ; -- UWN
lin enterovirus_N = mkN "entérovirus" ; -- UWN
lin enterprise_N = mkN "entreprise" feminine | mkN "venture" feminine | mkN "initiative" feminine ; -- tocheck
lin enterprising_A = mkA "entreprenant" ; -- tocheck
lin entertain_V2 = mkV2 (mkV "divertir") | mkV2 (mkV I.recevoir_V2) ; -- tocheck
lin entertainer_N = mkN "amuseur" masculine ; -- tocheck
lin entertaining_A = mkA "divertissant" ; -- tocheck
lin entertainment_N = mkN "divertissement" masculine ; -- tocheck
lin enthrone_V2 = mkV2 (mkV "introniser") ; -- tocheck
lin enthuse_V = mkV (mkV "enthousiasmer") ; -- tocheck
lin enthusiasm_N = mkN "enthousiasme" masculine ; -- tocheck
lin enthusiast_N = mkN "enthousiaste" | mkN "passionné" ; -- tocheck
lin enthusiastic_A = mkA "enthousiaste" ; -- tocheck
lin entice_V2 = mkV2 (mkV "appâter") ; -- tocheck
lin entire_A = mkA "entier" ; -- tocheck
lin entirety_N = mkN "entièreté" feminine ; -- tocheck
lin entitle_V2V = variants {} ; --
lin entitle_VS = variants {} ; --
lin entitlement_N = mkN "allocation" feminine | mkN "revendication" feminine ; -- tocheck
lin entity_N = mkN "entité" ; -- tocheck
lin entomological_A = mkA "entomologique" ; -- tocheck
lin entomologist_N = mkN "entomologiste" ; -- tocheck
lin entomology_N = mkN "entomologie" feminine ; -- tocheck
lin entourage_N = mkN "entourage" masculine ; -- tocheck
lin entrance_N = mkN "entrée" | mkN "entrée" feminine ; -- tocheck
lin entrance_V2 = mkV2 (mkV "enchanter") ; -- tocheck
lin entrepot_N = mkN "dépôt" | mkN "entrepôt" | mkN "réserve" ; -- UWN
lin entrepreneur_N = mkN "entrepreneur" masculine ; -- tocheck
lin entrepreneurial_A = mkA "entreprenant" ; -- tocheck
lin entrust_V2 = mkV2 (mkV "confier") ; -- tocheck
lin entry_1_N = variants {} ; --
lin entry_2_N = variants {} ; --
lin entry_N = mkN "entrée" feminine | mkN "article" masculine | mkN "élément" masculine | mkN "coefficient" masculine ; -- tocheck
lin entwine_V2 = mkV2 (mkV "entrelacer") ; -- tocheck
lin enumerate_V2 = mkV2 (mkV "dénombrer") | mkV2 (mkV "énoncer") ; -- tocheck
lin enumeration_N = mkN "Compte" | mkN "calculer" | mkN "compte" | mkN "compte_somme" | mkN "compter" | mkN "comte" | mkN "érythrocyte" ; -- UWN
lin enunciation_N = mkN "énonciation" feminine ; -- tocheck
lin envelop_V2 = mkV2 (mkV "envelopper") ; -- tocheck
lin envelope_N = mkN "enveloppe" feminine ; -- tocheck
lin enviable_A = mkA "enviable" ; -- UWN
lin envious_A = mkA "envieux" | mkA "jaloux" ; -- UWN
lin environment_N = mkN "environnement" masculine ; -- tocheck
lin environmental_A = mkA "environnemental" ; -- tocheck
lin environmentalism_N = mkN "écologisme" masculine ; -- tocheck
lin environmentalist_N = mkN "environnementaliste" ; -- tocheck
lin envisage_V2 = mkV2 (mkV "envisager") ; -- tocheck
lin envision_V2 = mkV2 (mkV "envisager") ; -- tocheck
lin envoi_N = mkN "envoi" | mkN "envoyé" ; -- UWN
lin envoy_N = mkN "envoyé" masculine ; -- tocheck
lin envy_N = mkN "envie" feminine ; -- tocheck
lin envy_V2 = mkV2 (mkV "envier") ; -- tocheck
lin enzymatic_A = mkA "enzymatique" ; -- tocheck
lin enzyme_N = mkN "enzyme" ; -- tocheck
lin enzymology_N = mkN "enzymologie" ; -- UWN
lin eon_N = mkN "éon" masculine ; -- tocheck
lin eoraptor_N = mkN "eoraptor" ; -- UWN
lin eosin_N = mkN "éosine" ; -- UWN
lin eosinophil_N = mkN "éosinophile" ; -- UWN
lin eosinophilia_N = mkN "éosinophilie" ; -- UWN
lin eosinophilic_A = mkA "éosinophile" ; -- UWN
lin epacris_N = mkN "epacris" ; -- UWN
lin epanalepsis_N = mkN "épanalepse" ; -- UWN
lin epanaphora_N = mkN "anaphore" ; -- UWN
lin eparchy_N = mkN "exarchat" ; -- UWN
lin epaulet_N = mkN "épaulette" feminine ; -- tocheck
lin epaulette_N = mkN "épaulette" feminine ; -- tocheck
lin epee_N = mkN "épée" feminine ; -- tocheck
lin epenthesis_N = mkN "épenthèse" ; -- tocheck
lin epenthetic_A = mkA "épenthétique" ; -- UWN
lin ephedra_N = mkN "ephedra" | mkN "raisin_de_mer" | mkN "éphédrine" ; -- UWN
lin ephedrine_N = mkN "éphédrine" ; -- UWN
lin ephemeral_A = mkA "éphémère" ; -- tocheck
lin ephemeris_N = mkN "Éphéméride" | mkN "éphéméride" | mkN "éphémérides" ; -- UWN
lin epic_A = mkA "épique" ; -- tocheck
lin epic_N = mkN "épopée" ; -- tocheck
lin epicardium_N = mkN "épicarde" masculine ; -- tocheck
lin epicarp_N = mkN "exocarpe" | mkN "épicarpe" ; -- UWN
lin epicentre_N = mkN "épicentre" masculine ; -- tocheck
lin epicondyle_N = mkN "épicondyle" ; -- UWN
lin epicure_N = mkN "bon_vivant" | mkN "fine_gueule" | mkN "friandise" | mkN "gastronome" | mkN "gourmand" | mkN "gourmet" | mkN "épicurien" ; -- UWN
lin epicurean_N = mkN "bon_vivant" | mkN "fine_gueule" | mkN "friandise" | mkN "gastronome" | mkN "gourmand" | mkN "gourmet" | mkN "épicurien" ; -- UWN
lin epicureanism_N = mkN "épicurisme" ; -- UWN
lin epicycle_N = mkN "épicycle" ; -- tocheck
lin epicycloid_N = mkN "épicycloïde" feminine ; -- tocheck
lin epidemic_A = mkA "épidémique" ; -- tocheck
lin epidemic_N = mkN "épidémie" ; -- tocheck
lin epidemiologic_A = mkA "épidémiologique" ; -- tocheck
lin epidemiologist_N = mkN "épidémiologiste" ; -- UWN
lin epidemiology_N = mkN "épidémiologie" ; -- tocheck
lin epidermis_N = mkN "épiderme" masculine ; -- tocheck
lin epididymis_N = mkN "épididyme" masculine ; -- tocheck
lin epigenesis_N = mkN "épigénèse" ; -- UWN
lin epiglottis_N = mkN "épiglotte" feminine ; -- tocheck
lin epigram_N = mkN "épigramme" masculine ; -- tocheck
lin epigrammatic_A = mkA "épigrammatique" ; -- tocheck
lin epigraph_N = mkN "épigraphe" feminine ; -- tocheck
lin epigraphy_N = mkN "épigraphie" feminine ; -- tocheck
lin epilation_N = mkN "épilation" feminine ; -- tocheck
lin epilepsy_N = mkN "épilepsie" feminine ; -- tocheck
lin epilepticFem_N = mkN "épileptique" ; -- UWN
lin epilepticMasc_N = mkN "épileptique" ; -- UWN
lin epileptic_A = mkA "épileptique" ; -- tocheck
lin epilogue_N = mkN "épilogue" masculine ; -- tocheck
lin epiphany_N = mkN "illumination" | mkN "apparition" feminine ; -- tocheck
lin epiphenomenon_N = mkN "épiphénomène" masculine | mkN "épiphénomène" ; -- tocheck
lin epiphora_N = mkN "Epistrophe" | mkN "epiphora" | mkN "epistrophe" ; -- UWN
lin epiphyllum_N = mkN "cactus_orchidée" | mkN "epiphyllum" ; -- UWN
lin episcia_N = mkN "episcia" ; -- UWN
lin episcopal_A = mkA "épiscopal" ; -- UWN
lin episiotomy_N = mkN "épisiotomie" feminine ; -- tocheck
lin episode_N = mkN "épisode" masculine ; -- tocheck
lin episteme_N = mkN "épistémè" feminine | mkN "épistémè" ; -- tocheck
lin epistemic_A = mkA "épistémique" | mkA "épistémologique" ; -- UWN
lin epistle_N = mkN "épître" feminine ; -- tocheck
lin epitaph_N = mkN "épitaphe" feminine ; -- tocheck
lin epitaxy_N = mkN "épitaxie" ; -- UWN
lin epithalamium_N = mkN "épithalame" masculine ; -- tocheck
lin epithelium_N = mkN "épithélium" masculine ; -- tocheck
lin epithet_N = mkN "épithète" feminine ; -- tocheck
lin epitome_N = mkN "résumé" ; -- tocheck
lin epoch_N = mkN "moneto" masculine | mkN "époque" feminine | mkN "singularité" feminine ; -- tocheck
lin eponym_N = mkN "éponyme" masculine ; -- tocheck
lin eponymous_A = mkA "éponyme" ; -- tocheck
lin eponymy_N = mkN "éponymie" feminine ; -- tocheck
lin epoxy_N = mkN "époxy" masculine ; -- tocheck
lin epping_PN = mkPN "Epping" ; -- status=guess src=geonames
lin epsilon_N = mkN "epsilon" masculine ; -- tocheck
lin epsom_PN = mkPN "Epsom" ; -- status=guess src=geonames
lin eptatretus_N = mkN "eptatretus" ; -- UWN
lin equable_A = mkA "placide" ; -- UWN
lin equal_A = mkA "égal" ; -- tocheck
lin equal_N = mkN "égal" masculine ; -- tocheck
lin equal_V2 = variants {} ; --
lin equalitarian_N = mkN "égalitaire" | mkN "égalitariste" ; -- UWN
lin equality_N = mkN "égalité" feminine ; -- tocheck
lin equalization_N = mkN "égalisation" ; -- tocheck
lin equalize_V2 = mkV2 (mkV "égaliser") ; -- tocheck
lin equalizer_N = mkN "but_égalisateur" | mkN "égaliseur" ; -- UWN
lin equanimity_N = mkN "équanimité" ; -- tocheck
lin equation_N = mkN "équation" feminine ; -- tocheck
lin equator_N = mkN "équateur" masculine ; -- tocheck
lin equatorial_A = mkA "équatorial" ; -- tocheck
lin equestrian_A = mkA "hippique" ; -- tocheck
lin equestrian_N = mkN "cavalier" | mkN "hippique" ; -- UWN
lin equiangular_A = mkA "équiangle" ; -- tocheck
lin equilateral_A = mkA "équilatéral" ; -- UWN
lin equilibrium_N = mkN "équilibre" masculine ; -- tocheck
lin equine_A = mkA "chevalin" ; -- tocheck
lin equine_N = mkN "équin" ; -- UWN
lin equinox_N = mkN "équinoxe" masculine ; -- tocheck
lin equip_V2 = variants {} ; --
lin equipage_N = mkN "équipage" | mkN "bagages" ; -- tocheck
lin equipment_N = mkN "équipement" masculine ; -- tocheck
lin equipoise_N = mkN "équilibre" ; -- UWN
lin equiprobable_A = mkA "équiprobable" ; -- UWN
lin equitable_A = mkA "juste" | mkA "équitable" ; -- UWN
lin equity_N = mkN "action" feminine | mkN "impartialité" feminine ; -- tocheck
lin equivalence_N = mkN "équivalence" feminine ; -- tocheck
lin equivalent_A = mkA "équivalent" ; -- tocheck
lin equivalent_N = mkN "équivalent" masculine ; -- tocheck
lin equivocal_A = mkA "ambigu" | mkA "ambivalent" | mkA "amphibologique" | mkA "équivoque" ; -- UWN
lin equivocation_N = mkN "équivoque" feminine ; -- tocheck
lin era_N = mkN "ère" feminine ; -- tocheck
lin eradicate_V2 = mkV2 (mkV "éradiquer") ; -- tocheck
lin eradication_N = mkN "abrogation" | mkN "éradication" ; -- UWN
lin erase_V2 = mkV2 (mkV "effacer") | mkV2 (reflV (mkV "effacer")) ; -- tocheck
lin eraser_N = mkN "gomme" feminine ; -- tocheck
lin erbium_N = mkN "erbium" masculine ; -- tocheck
lin erect_A = mkA "droit" | mkA "vertical" ; -- UWN
lin erect_V2 = variants {} ; --
lin erectile_A = mkA "érectile" ; -- tocheck
lin erecting_N = mkN "montage" | mkN "érection" ; -- UWN
lin erection_N = mkN "érection" feminine | mkN "érection" ; -- tocheck
lin eremite_N = mkN "ermite" ; -- UWN
lin eremitic_A = mkA "érémitique" ; -- tocheck
lin eremitism_N = mkN "érémitisme" masculine ; -- tocheck
lin erfurt_PN = mkPN "Erfurt" ; -- status=guess src=geonames
lin erg_N = mkN "erg" ; -- UWN
lin ergo_Adv = mkAdv "donc" ; -- UWN
lin ergodicity_N = mkN "ergodicité" ; -- UWN
lin ergonomic_A = mkA "ergonomique" ; -- tocheck
lin ergonomics_N = mkN "ergonomie" feminine ; -- tocheck
lin ergosterol_N = mkN "ergosterol" | mkN "ergostérol" ; -- UWN
lin ergotamine_N = mkN "ergotamine" ; -- UWN
lin ergotism_N = mkN "ergotisme" ; -- UWN
lin erica_N = mkN "bruyères" | mkN "erica" ; -- UWN
lin erin_PN = mkPN "Erin" ; -- status=guess src=geonames
lin eriogonum_N = mkN "eriogonum" ; -- UWN
lin eritrea_PN = mkPN "Érythrée" ; -- status=guess src=geonames
lin erlangen_PN = mkPN "Erlangen" ; -- status=guess src=geonames
lin ermine_N = mkN "hermine" feminine ; -- tocheck
lin erode_V2 = mkV2 (mkV "éroder") ; -- tocheck
lin erogenous_A = mkA "érogène" ; -- tocheck
lin erosion_N = mkN "érosion" feminine ; -- tocheck
lin erosive_A = mkA "corrosif" ; -- UWN
lin erotic_A = mkA "érotique" ; -- tocheck
lin eroticism_N = mkN "érotisme" masculine ; -- tocheck
lin err_V = mkV (reflV (mkV "tromper")) ; -- tocheck
lin errand_N = mkN "course" ; -- tocheck
lin errant_A = mkA "errant" ; -- tocheck
lin erratic_A = mkA "erratique" | mkA "mercure" | mkA "vif-argent" ; -- UWN
lin erratum_N = mkN "coquille" | mkN "erratum" | mkN "erreur_de_frappe" | mkN "faute" | mkN "faute_de_frappe" | mkN "littéral" | mkN "typo" | mkN "typographe" | mkN "typote" ; -- UWN
lin errhine_A = mkA "errhin" ; -- tocheck
lin erroneous_A = mkA "erroné" ; -- tocheck
lin erroneousness_N = mkN "erreur" ; -- UWN
lin error_N = mkN "erreur" feminine ; -- tocheck
lin ersatz_A = mkA "ersatz" ; -- UWN
lin ersatz_N = mkN "ersatz" masculine ; -- tocheck
lin erudite_A = mkA "érudit" ; -- tocheck
lin erudition_N = mkN "érudition" feminine ; -- tocheck
lin eruption_N = mkN "éruption" feminine ; -- tocheck
lin erwinia_N = mkN "erwinia" | mkN "feu_bactérien" ; -- UWN
lin erysipelas_N = mkN "rose" | mkN "rouge-gorge" | mkN "érysipèle" | mkN "érésipèle" ; -- UWN
lin erythema_N = mkN "rougeur_congestive_de_la_peau" | mkN "s'effaçant_à_la_vitopression" | mkN "érythème" ; -- UWN
lin erythropoiesis_N = mkN "érythropoïèse" ; -- UWN
lin erythropoietin_N = mkN "érythropoïétine" ; -- UWN
lin escalate_V2 = mkV2 (mkV "intensifier") ; -- tocheck
lin escalation_N = mkN "escalade" feminine ; -- tocheck
lin escalator_N = mkN "escalator" masculine ; -- tocheck
lin escalope_N = mkN "escalope" feminine ; -- tocheck
lin escapade_N = mkN "escapade" feminine ; -- tocheck
lin escape_N = mkN "évasion" feminine ; -- tocheck
lin escape_V = variants {} ; -- mkV2 (mkV "échapper") | mkV2 (mkV "éviter") ; -- tocheck
lin escape_V2 = mkV2 (mkV "échapper") | mkV2 (mkV "éviter") ; -- tocheck
lin escape_VS = variants {} ; -- mkV2 (mkV "échapper") | mkV2 (mkV "éviter") ; -- tocheck
lin escapement_N = mkN "échappement" ; -- UWN
lin escapism_N = mkN "escapisme" ; -- tocheck
lin escargot_N = mkN "escargot" masculine ; -- tocheck
lin escarpment_N = mkN "escarpement" masculine ; -- tocheck
lin eschar_N = mkN "escarre" ; -- tocheck
lin eschatological_A = mkA "eschatologique" ; -- tocheck
lin eschatology_N = mkN "eschatologie" feminine ; -- tocheck
lin escherichia_N = mkN "escherichia" ; -- UWN
lin eschew_V2 = mkV2 (mkV "esquiver") ; -- tocheck
lin escort_N = mkN "escorte" feminine ; -- tocheck
lin escort_V2 = mkV2 (mkV "escorter") ; -- tocheck
lin escritoire_N = mkN "secrétaire" ; -- UWN
lin escrow_N = mkN "fiducie" ; -- tocheck
lin escutcheon_N = mkN "écusson" masculine ; -- tocheck
lin esker_N = mkN "esker" | mkN "ös" ; -- UWN
lin esophageal_A = mkA "oesophagien" ; -- tocheck
lin esophagitis_N = mkN "œsophagite" ; -- UWN
lin esophagus_N = mkN "gosier" | mkN "gueule" | mkN "sophage" | mkN "œsophage" ; -- UWN
lin esoteric_A = mkA "ésotérique" | mkA "cérébral" ; -- tocheck
lin espadrille_N = mkN "espadrille" feminine ; -- tocheck
lin espalier_N = mkN "espalier" ; -- UWN
lin especial_A = mkA "exceptionnel" | mkA "particulier" | mkA "spécial" ; -- UWN
lin espionage_N = mkN "espionnage" masculine ; -- tocheck
lin esplanade_N = mkN "esplanade" ; -- UWN
lin espousal_N = mkN "abord" | mkN "acceptation" | mkN "admission" | mkN "adoption" | mkN "soutien" ; -- UWN
lin espouse_V2 = mkV2 (mkV "épouser") ; -- tocheck
lin espresso_N = mkN "espresso" masculine ; -- tocheck
lin esprit_N = mkN "esprit" ; -- UWN
lin esprit_de_corps_N = mkN "esprit_de_corps" | mkN "moral" ; -- UWN
lin esquire_N = mkN "écuyer" masculine ; -- tocheck
lin essay_N = mkN "essai" masculine ; -- tocheck
lin essay_V = mkV "essayer" | mkV "tester" | mkV "vérifier" ; -- UWN
lin essayist_N = mkN "essayiste" ; -- tocheck
lin essen_PN = mkPN "Essen" ; -- status=guess src=geonames
lin essence_N = mkN "essence" feminine ; -- tocheck
lin essential_A = mkA "essentiel" | mkA "indispensable" ; -- tocheck
lin essential_N = mkN "besoin" | mkN "condition" | mkN "demande" | mkN "exigence" | mkN "nécessaire" | mkN "nécessité" | mkN "prescription" ; -- UWN
lin essex_PN = mkPN "Essex" ; -- status=guess src=geonames
lin establish_V2 = mkV2 (mkV "établir") ;
lin established_A = variants {} ; --
lin establishment_N = mkN "establishment" masculine | mkN "établissement" masculine ; -- tocheck
lin estate_N = mkN "domaine" | mkN "proprieté" feminine ; -- tocheck
lin esteem_N = mkN "estime" feminine ; -- tocheck
lin esteem_V2 = mkV2 (mkV "respecter") ; -- tocheck
lin ester_N = mkN "ester" masculine ; -- tocheck
lin esther_PN = mkPN "Esther" ; -- status=guess src=geonames
lin esthete_N = mkN "esthète" ; -- UWN
lin esthetic_N = mkN "esthétique" ; -- UWN
lin esthetical_A = mkA "esthétique" ; -- UWN
lin esthetics_N = mkN "esthéticien" | mkN "esthétique" ; -- UWN
lin estimate_N = mkN "estimation" feminine ; -- tocheck
lin estimate_V = variants {} ; -- mkV2V (mkV "estimer") ; -- tocheck
lin estimate_V2 = variants {} ; -- mkV2V (mkV "estimer") ; -- tocheck
lin estimate_V2V = mkV2V (mkV "estimer") ; -- tocheck
lin estimate_VS = variants {} ; -- mkV2V (mkV "estimer") ; -- tocheck
lin estimated_A = variants {} ; --
lin estivation_N = mkN "estivation" ; -- UWN
lin estradiol_N = mkN "estradiol" ; -- UWN
lin estrange_V2 = mkV2 (reflV (mkV "aliéner")) ; -- tocheck
lin estrangement_N = mkN "aliénation" ; -- UWN
lin estriol_N = mkN "estriol" ; -- UWN
lin estrogen_N = mkN "oestrogène" masculine ; -- tocheck
lin estrus_N = mkN "chaleur" | mkN "rut" ; -- UWN
lin estuarine_A = mkA "estuarien" ; -- UWN
lin estuary_N = mkN "estuaire" masculine ; -- tocheck
lin eta_N = mkN "êta" masculine ; -- tocheck
lin etcetera_N = mkN "et_cetera" ; -- UWN
lin etch_V2 = mkV2 (mkV "graver") | mkV2 (mkV "marquer") ; -- tocheck
lin etching_N = mkN "gravure" feminine ; -- tocheck
lin eternal_A = mkA "éternel" ; -- tocheck
lin eternity_N = mkN "éternité" feminine ; -- tocheck
lin ethane_N = mkN "éthane" masculine ; -- tocheck
lin ethereal_A = mkA "éthéré" ; -- tocheck
lin ethical_A = variants {} ; --
lin ethics_N = mkN "éthique" feminine ; -- tocheck
lin ethiopia_PN = mkPN "Éthiopie" ; -- status=guess src=geonames
lin ethmoid_N = mkN "os_éthmoïde" ; -- UWN
lin ethnic_A = mkA "ethnique" ; -- tocheck
lin ethnicity_N = mkN "ethnie" feminine | mkN "ethnicité" feminine ; -- tocheck
lin ethnocentric_A = mkA "ethnocentrique" ; -- tocheck
lin ethnocentrism_N = mkN "ethnocentrisme" masculine ; -- tocheck
lin ethnographer_N = mkN "ethnographe" ; -- tocheck
lin ethnographic_A = mkA "ethnographique" ; -- tocheck
lin ethnography_N = mkN "ethnographie" feminine ; -- tocheck
lin ethnological_A = mkA "ethnologique" ; -- tocheck
lin ethnologist_N = mkN "ethnologue" ; -- UWN
lin ethnology_N = mkN "ethnologie" ; -- UWN
lin ethology_N = mkN "éthologie" ; -- tocheck
lin ethos_N = mkN "èthos" ; -- UWN
lin ethyl_N = mkN "Groupe_éthyle" | mkN "groupe_éthyle" | mkN "groupement_éthyle" ; -- UWN
lin ethylene_N = mkN "éthylène" masculine ; -- tocheck
lin etiological_A = mkA "étiologique" ; -- tocheck
lin etiquette_N = mkN "étiquette" feminine ; -- tocheck
lin etude_N = mkN "étude" ; -- UWN
lin etui_N = mkN "ise" | mkN "étui" ; -- UWN
lin etymological_A = mkA "étymologique" ; -- tocheck
lin etymologist_N = mkN "étymologiste" ; -- tocheck
lin etymology_N = mkN "étymologie" feminine ; -- tocheck
lin etymon_N = mkN "étymon" masculine ; -- tocheck
lin eucalyptus_N = mkN "eucalyptus" ; -- tocheck
lin euchre_N = mkN "cinq_cents" ; -- UWN
lin euclidean_A = mkA "euclidien" ; -- UWN
lin eudiometer_N = mkN "eudiomètre" ; -- tocheck
lin eugene_PN = mkPN "Eugene" ; -- status=guess src=geonames
lin eugenic_A = mkA "eugénique" ; -- UWN
lin eugenics_N = mkN "eugénie" | mkN "eugénique" | mkN "eugénisme" ; -- UWN
lin euglena_N = mkN "euglena" | mkN "euglène" ; -- UWN
lin euglenoid_N = mkN "Euglenophyta" | mkN "Euglénophytes" | mkN "Euglénoïdes" | mkN "euglenoid" | mkN "euglenophyta" | mkN "euglénophytes" | mkN "euglénoïdes" ; -- UWN
lin eukaryote_N = mkN "eucaryote" ; -- tocheck
lin eulogistic_A = mkA "dithyrambique" | mkA "panégyrique" ; -- UWN
lin eunice_PN = mkPN "Eunice" ; -- status=guess src=geonames
lin eunuch_N = mkN "eunuque" masculine ; -- tocheck
lin euphemism_N = mkN "euphémisme" masculine ; -- tocheck
lin euphemistic_A = mkA "euphémique" ; -- tocheck
lin euphonic_A = mkA "euphonique" ; -- tocheck
lin euphonium_N = mkN "euphonium" ; -- UWN
lin euphony_N = mkN "euphonie" feminine ; -- tocheck
lin euphoria_N = mkN "euphorie" feminine ; -- tocheck
lin euphoric_A = mkA "euphorique" ; -- tocheck
lin euphuism_N = mkN "euphuisme" masculine ; -- tocheck
lin eurhythmics_N = mkN "eurythmie" ; -- UWN
lin euro_N = mkN "euro" masculine ; -- tocheck
lin europium_N = mkN "europium" masculine ; -- tocheck
lin eurypterid_N = mkN "eurypterida" | mkN "euryptérides" | mkN "gigantostracés" ; -- UWN
lin eurythmics_N = mkN "eurythmie" ; -- UWN
lin eurythmy_N = mkN "eurythmie" ; -- UWN
lin eutectic_N = mkN "eutectique" ; -- UWN
lin euthanasia_N = mkN "euthanasie" feminine ; -- tocheck
lin evacuate_V2 = mkV2 (mkV "évacuer") ; -- tocheck
lin evacuation_N = mkN "évacuation" feminine ; -- tocheck
lin evaluate_V = variants {} ; -- mkV2 (mkV "évaluer") ; -- tocheck
lin evaluate_V2 = mkV2 (mkV "évaluer") ; -- tocheck
lin evaluation_N = mkN "évaluation" feminine ; -- tocheck
lin evaluator_N = mkN "juge" | mkN "juger" | mkN "magistrat" ; -- UWN
lin evanescence_N = mkN "evanescence" | mkN "évanescence" ; -- UWN
lin evanescent_A = mkA "évanescent" ; -- UWN
lin evangelical_A = mkA "évangélique" ; -- tocheck
lin evangelicalism_N = mkN "protestantisme_évangélique" | mkN "évangélisme" ; -- UWN
lin evangelism_N = mkN "christianisation" | mkN "expansion_du_christianisme_du_ve_siècle_au_xve_siècle" ; -- UWN
lin evangelist_N = mkN "évangéliste" ; -- tocheck
lin evaporate_V2 = mkV2 (mkV "évaporer") ; -- tocheck
lin evaporation_N = mkN "évaporation" feminine | mkN "évaporation" ; -- tocheck
lin evaporative_A = mkA "évaporatoire" ; -- UWN
lin evaporite_N = mkN "Évaporite" | mkN "évaporite" | mkN "évaporites" ; -- UWN
lin even_A = mkA "pair" | mkA "plat" ; -- tocheck
lin even_Adv = mkAdv "même" ;
lin even_N = mkN "soir" | mkN "soirée" ; -- UWN
lin even_V2 = mkV2 (mkV "aplatir") ; -- tocheck
lin evening_N = mkN "soir" masculine ; -- tocheck
lin evensong_N = mkN "vêpres" ; -- UWN
lin event_N = mkN "événement" masculine ;
lin eventide_N = mkN "soir" | mkN "soirée" ; -- UWN
lin eventual_A = variants {} ; --
lin eventuality_N = mkN "possibilité" | mkN "éventualité" ; -- UWN
lin ever_Adv = mkAdv "jamais" ; --- negative
lin evergreen_A = mkA "sempervirent" ; -- tocheck
lin evergreen_N = mkN "sempervirent" ; -- UWN
lin everlasting_A = mkA "permanent" | mkA "éternel" ; -- tocheck
lin eversion_N = mkN "inversion" ; -- UWN
lin every_Det = S.every_Det ;
lin everybody_NP = S.everybody_NP ;
lin everyday_A = mkA "usuel" ; -- tocheck
lin everyone_NP = variants {} ; --
lin everything_NP = S.everything_NP ;
lin everywhere_Adv = S.everywhere_Adv ;
lin evesham_PN = mkPN "Evesham" ; -- status=guess src=geonames
lin evict_V2 = mkV2 (mkV "expulser") ; -- tocheck
lin eviction_N = mkN "expulsion" feminine ; -- tocheck
lin evidence_1_N = mkN "évidence" ;
lin evidence_2_N = mkN "évidence" | mkN "preuve" feminine ;
lin evidence_N = mkN "preuve" feminine ; -- tocheck
lin evident_A = mkA "évident" ; -- tocheck
lin evidential_A = mkA "probant" ; -- UWN
lin evil_A = mkA "mauvais" ; -- tocheck
lin evil_N = mkN "mal" masculine ; -- tocheck
lin evince_V2 = mkV2 (mkV "montrer") ; -- tocheck
lin eviscerate_V2 = mkV2 (mkV "éviscérer") ; -- tocheck
lin evisceration_N = mkN "étriper" ; -- UWN
lin evitable_A = mkA "évitable" ; -- UWN
lin evocation_N = mkN "évocation" ; -- UWN
lin evocative_A = mkA "évocateur" ; -- tocheck
lin evoke_V2 = variants {} ; --
lin evolution_N = mkN "évolution" feminine ; -- tocheck
lin evolutionary_A = mkA "évolutif" | mkA "évolutionnaire" | mkA "évolutionnel" ; -- UWN
lin evolutionistFem_N = mkN "évolutionniste" feminine ; -- tocheck
lin evolutionistMasc_N = mkN "évolutionniste" masculine ; -- tocheck
lin evolve_V = variants {} ; -- mkV2 (mkV "élaborer") | mkV2 (mkV "évoluer") ; -- tocheck
lin evolve_V2 = mkV2 (mkV "élaborer") | mkV2 (mkV "évoluer") ; -- tocheck
lin ewe_N = mkN "brebis" feminine ; -- tocheck
lin ewell_PN = mkPN "Ewell" ; -- status=guess src=geonames
lin ewer_N = mkN "pichet" masculine ; -- tocheck
lin exacerbate_V2 = mkV2 (mkV "irriter") | mkV2 (mkV "agraver") ; -- tocheck
lin exacerbation_N = mkN "exacerbation" ; -- UWN
lin exact_A = mkA "exact" ; -- tocheck
lin exaction_N = mkN "exaction" ; -- UWN
lin exactitude_N = mkN "exactitude" | mkN "ponctualité" | mkN "régularité" ; -- UWN
lin exactness_N = mkN "exactitude" feminine ; -- tocheck
lin exaggerate_V = mkV "agrandir" | mkV "augmenter" | mkV "exagérer" | mkV "étendre" ; -- UWN
lin exaggerate_V2 = mkV2 (mkV "exagérer") ; -- tocheck
lin exaggeration_N = mkN "exagération" feminine ; -- tocheck
lin exaltation_N = mkN "apothéose" | mkN "déification" | mkN "exaltation" ; -- UWN
lin exam_N = variants {} ; --
lin examination_N = mkN "examen" masculine ; -- tocheck
lin examine_V2 = mkV2 (mkV "examiner") ; -- tocheck
lin examiner_N = mkN "examinateur" masculine ; -- tocheck
lin example_N = mkN "exemple" masculine ;
lin exanthem_N = mkN "exanthème" ; -- UWN
lin exasperate_V2 = mkV2 (mkV "exaspérer") ; -- tocheck
lin exasperation_N = mkN "exaspération" feminine ; -- tocheck
lin excavate_V2 = mkV2 (mkV "excaver") ; -- tocheck
lin excavation_N = mkN "excavation" feminine ; -- tocheck
lin excavator_N = mkN "excavateur" masculine ; -- tocheck
lin exceed_V2 = mkV2 (mkV "excéder") ; -- tocheck
lin exceeding_A = mkA "exceptionnel" ; -- UWN
lin excel_V2 = mkV2 (mkV "dépasser") ; -- tocheck
lin excellence_N = mkN "excellence" feminine ; -- tocheck
lin excellent_A = mkA "excellent" ; -- tocheck
lin excelsior_N = mkN "excelsior" ; -- UWN
lin except_Conj = variants {} ; --
lin except_Prep = S.except_Prep ;
lin except_V2 = mkV2 (mkV "objecter") ; -- tocheck
lin exception_N = mkN "exception" feminine ; -- tocheck
lin exceptional_A = mkA "exceptionnel" ; -- tocheck
lin excerpt_N = mkN "extrait" masculine ; -- tocheck
lin excess_A = mkA "excédant" | mkA "redondant" | mkA "superflu" ; -- UWN
lin excess_N = mkN "excès" masculine | mkN "franchise" feminine ; -- tocheck
lin excessive_A = mkA "excessif" ; -- tocheck
lin exchange_N = mkN "échange" masculine | mkN "bourse" feminine ; -- tocheck
lin exchange_V2 = mkV2 (mkV "échanger") ; -- tocheck
lin exchangeability_N = mkN "interchangeabilité" ; -- UWN
lin exchequer_N = mkN "finance" | mkN "trésor" | mkN "trésorerie" ; -- UWN
lin excise_N = mkN "accise" | mkN "droit_d'accise" ; -- UWN
lin exciseman_N = mkN "accisien" masculine ; -- tocheck
lin excision_N = mkN "extirpation" ; -- UWN
lin excitable_A = mkA "excitable" ; -- UWN
lin excitation_N = mkN "excitation" ; -- tocheck
lin excite_V2 = mkV2 (mkV "exciter") ; -- tocheck
lin excited_A = variants {} ; --
lin excitement_N = mkN "excitation" feminine ; -- tocheck
lin exciting_A = variants {} ; --
lin exclaim_V2 = mkV2 (mkV "exclamer") ; -- tocheck
lin exclamation_N = mkN "exclamation" feminine ; -- tocheck
lin exclamatory_A = mkA "emphatique" | mkA "exclamatif" ; -- UWN
lin exclude_V2 = mkV2 (mkV I.exclure_V2) ; -- tocheck
lin exclusion_N = mkN "exclusion" ; -- tocheck
lin exclusive_A = mkA "exclusif" ; -- tocheck
lin exclusive_N = mkN "exclusif" ; -- UWN
lin excogitation_N = mkN "conception" | mkN "invention" ; -- UWN
lin excommunicate_V2 = mkV2 (mkV "excommunier") ; -- tocheck
lin excommunication_N = mkN "excommunication" feminine ; -- tocheck
lin excrement_N = mkN "excrément" masculine ; -- tocheck
lin excrescence_N = mkN "excès" masculine ; -- tocheck
lin excrete_V2 = mkV2 (mkV "excréter") ; -- tocheck
lin excretion_N = mkN "excrétion" | mkN "suppression" | mkN "élimination" | mkN "évacuation" ; -- UWN
lin excretory_A = mkA "excrétoire" ; -- tocheck
lin excursion_N = mkN "excursion" feminine ; -- tocheck
lin excuse_N = mkN "prétexte" masculine ; -- tocheck
lin excuse_V2 = mkV2 (mkV "excuser") ; -- tocheck
lin execrable_A = mkA "exécrable" ; -- tocheck
lin execration_N = mkN "exécration" feminine ; -- tocheck
lin execute_V2 = mkV2 (mkV "exécuter") ; -- tocheck
lin execution_N = mkN "exécution" feminine ; -- tocheck
lin executioner_N = mkN "bourreau" | mkN "tranche-tête" ; -- UWN
lin executive_A = mkA "exécutif" ; -- tocheck
lin executive_N = mkN "exécutif" masculine | mkN "cadre" ; -- tocheck
lin executor_N = mkN "exécuteur" ; -- UWN
lin exegesis_N = mkN "exégèse" feminine ; -- tocheck
lin exegete_N = mkN "exégète" ; -- tocheck
lin exemplar_N = mkN "exemple" feminine ; -- tocheck
lin exemplary_A = mkA "exemplaire" ; -- tocheck
lin exemplification_N = mkN "exemplification" ; -- UWN
lin exemption_N = mkN "exemption" feminine ; -- tocheck
lin exercise_N = mkN "exercice" masculine ; -- tocheck
lin exercise_V = variants {} ; -- mkV2 (mkV "exercer") ; -- tocheck
lin exercise_V2 = mkV2 (mkV "exercer") ; -- tocheck
lin exercise_VV = variants {} ; -- mkV2 (mkV "exercer") ; -- tocheck
lin exert_V2 = mkV2 (mkV "exercer") ; -- tocheck
lin exertion_N = mkN "effort" masculine ; -- tocheck
lin exeter_PN = mkPN "Exeter" ; -- status=guess src=geonames
lin exfoliation_N = mkN "exfoliation" feminine ; -- tocheck
lin exhale_V2 = mkV2 (mkV "expirer") ; -- tocheck
lin exhaust_N = mkN "échappement" ; -- UWN
lin exhaust_V2 = mkV2 (mkV "épuiser") ; -- tocheck
lin exhausting_A = mkA "épuisant" ; -- tocheck
lin exhaustion_N = mkN "épuisement" masculine | mkN "harassement" masculine ; -- tocheck
lin exhaustive_A = mkA "exhaustif" ; -- tocheck
lin exhibit_N = mkN "exposition" feminine ; -- tocheck
lin exhibit_V2 = mkV2 (mkV "exposer") ; -- tocheck
lin exhibition_N = mkN "exposition" feminine ; -- tocheck
lin exhibitioner_N = mkN "douche" ; -- UWN
lin exhibitionism_N = mkN "exhibitionnisme" masculine ; -- tocheck
lin exhibitionist_N = mkN "poseur" masculine | mkN "exhibitionniste" ; -- tocheck
lin exhibitor_N = mkN "douche" ; -- UWN
lin exhilarating_A = mkA "jubilatoire" ; -- tocheck
lin exhilaration_N = mkN "excitation" ; -- UWN
lin exhort_V2 = mkV2 (mkV "exhorter") ; -- tocheck
lin exhortation_N = mkN "exhortation" feminine ; -- tocheck
lin exhumation_N = mkN "exhumation" feminine ; -- tocheck
lin exhume_V2 = mkV2 (mkV "exhumer") ; -- tocheck
lin exigency_N = mkN "crise" | mkN "exigence" | mkN "urgence" ; -- UWN
lin exigent_A = mkA "exigeant" ; -- tocheck
lin exile_N = mkN "exil" masculine ; -- tocheck
lin exist_V = mkV "exister" ;
lin existence_N = mkN "existence" feminine ; -- tocheck
lin existent_A = mkA "existant" ; -- tocheck
lin existential_A = mkA "existentiel" ; -- tocheck
lin existentialism_N = mkN "existentialisme" masculine ; -- tocheck
lin existentialist_A = mkA "existentialiste" ; -- UWN
lin existentialist_N = mkN "existentialiste" ; -- tocheck
lin existing_A = variants {} ; --
lin exit_N = mkN "sortie" feminine ; -- tocheck
lin exit_V = mkV (mkV I.sortir_V) ; -- tocheck
lin exmouth_PN = mkPN "Exmouth" ; -- status=guess src=geonames
lin exobiology_N = mkN "exobiologie" feminine ; -- tocheck
lin exocentric_A = mkA "exocentrique" ; -- UWN
lin exocrine_A = mkA "exocrine" ; -- UWN
lin exodus_N = mkN "exode" masculine ; -- tocheck
lin exogamous_A = mkA "exogamique" ; -- tocheck
lin exogamy_N = mkN "exogamie" ; -- UWN
lin exoneration_N = mkN "apologie" | mkN "défense" | mkN "exonération" ; -- UWN
lin exonuclease_N = mkN "exonucléase" ; -- UWN
lin exophthalmos_N = mkN "exophtalmie" feminine ; -- tocheck
lin exorbitant_A = mkA "exorbitant" ; -- tocheck
lin exorcise_V2 = mkV2 (mkV "exorciser") ; -- tocheck
lin exorcism_N = mkN "exorcisme" masculine ; -- tocheck
lin exorcist_N = mkN "exorciste" ; -- tocheck
lin exoskeleton_N = mkN "exosquelette" masculine ; -- tocheck
lin exosphere_N = mkN "exosphère" feminine ; -- tocheck
lin exostosis_N = mkN "exostose" ; -- UWN
lin exoteric_A = mkA "exotérique" ; -- tocheck
lin exothermic_A = mkA "exothermique" ; -- UWN
lin exotic_A = mkA "exotique" ; -- tocheck
lin exoticism_N = mkN "exotisme" ; -- UWN
lin exotoxin_N = mkN "exotoxine" feminine ; -- tocheck
lin expand_V = variants {} ; -- mkV2V (mkV "agrandir") | mkV2V (mkV "élaborer") ; -- tocheck
lin expand_V2 = variants {} ; -- mkV2V (mkV "agrandir") | mkV2V (mkV "élaborer") ; -- tocheck
lin expanse_N = mkN "balayer" | mkN "étendue" ; -- UWN
lin expansion_N = mkN "expansion" feminine ; -- tocheck
lin expansionism_N = mkN "expansionnisme" ; -- UWN
lin expansionist_A = mkA "expansionniste" ; -- UWN
lin expansive_A = mkA "expansif" ; -- UWN
lin expatriate_N = mkN "expatrié" masculine ; -- tocheck
lin expect_V = mkV I.attendre_V2 ;
lin expect_V2 = mkV2 (mkV I.attendre_V2) ;
lin expect_V2V = mkV2V (mkV I.attendre_V2) ;
lin expect_VS = mkVS (reflV (mkV I.attendre_V2)) ;
lin expect_VV = mkVV (reflV (mkV I.attendre_V2)) ;
lin expectancy_N = mkN "attente" feminine ; -- tocheck
lin expectation_N = mkN "attente" ; -- tocheck
lin expected_A = variants {} ; --
lin expectorant_N = mkN "expectorant" ; -- UWN
lin expectorate_V = mkV "cracher" | mkV "expectorer" ; -- UWN
lin expectorate_V2 = mkV2 (mkV "expectorer") ; -- tocheck
lin expectoration_N = mkN "expectoration" feminine ; -- tocheck
lin expedience_N = mkN "opportunisme" ; -- UWN
lin expediency_N = mkN "efficacité" feminine ; -- tocheck
lin expedition_N = mkN "expédition" feminine ; -- tocheck
lin expeditious_A = mkA "rapide" ; -- UWN
lin expel_V2 = mkV2 (mkV "déporter") | mkV2 (mkV "expulser") ; -- tocheck
lin expenditure_N = mkN "dépense" feminine ; -- tocheck
lin expense_N = mkN "dépense" feminine ; -- tocheck
lin expensive_A = mkA "cher" ; -- tocheck
lin expensiveness_N = mkN "cherté" ; -- UWN
lin experience_N = mkN "expérience" feminine ;
lin experience_V2 = mkV2 (mkV "éprouver") ; -- tocheck
lin experienced_A = mkA "expérimenté" ; -- tocheck
lin experiential_A = mkA "expérientiel" ; -- tocheck
lin experiment_N = mkN "expérience" feminine ; -- tocheck
lin experiment_V = variants {} ; -- mkV2 (mkV "expérimenter") ; -- tocheck
lin experiment_V2 = mkV2 (mkV "expérimenter") ; -- tocheck
lin experimental_A = variants {} ; --
lin experimenterFem_N = mkN "expérimentatrice" feminine ; -- tocheck
lin experimenterMasc_N = mkN "expérimentateur" masculine ; -- tocheck
lin expert_A = variants {} ; --
lin expert_N = mkN "expert" masculine ; -- tocheck
lin expertise_N = mkN "expertise" feminine | mkN "compétence" feminine ; -- tocheck
lin expiatory_A = mkA "expiatoire" ; -- UWN
lin expiration_N = mkN "expiration" feminine ; -- tocheck
lin expire_V2 = mkV2 (mkV "expirer") ; -- tocheck
lin expire_VS = mkvVS "expirer" ; -- UWN
lin expiry_N = mkN "expiration" feminine ; -- tocheck
lin explain_V2 = mkV2 (mkV "expliquer") ;
lin explain_VS = mkVS (mkV "expliquer") ;
lin explain_away_V = advV (lin V OP_explain_V2) OP_away_Adv ; -- guess-p-verb
lin explainable_A = mkA "explicable" ; -- UWN
lin explanation_N = mkN "explication" feminine ; -- tocheck
lin explanatory_A = mkA "explicatif" ; -- UWN
lin expletive_N = mkN "explétif" masculine | mkN "juron" masculine ; -- tocheck
lin explicable_A = mkA "explicable" ; -- tocheck
lin explication_N = mkN "explication" ; -- UWN
lin explicit_A = variants {} ; --
lin explicitness_N = mkN "clarté" ; -- UWN
lin explode_V = mkV "exploser" ; -- UWN
lin exploit_N = mkN "exploit" masculine ; -- tocheck
lin exploit_V2 = mkV2 (mkV "exploiter") ; -- tocheck
lin exploitation_N = mkN "exploitation" feminine ; -- tocheck
lin exploiter_N = mkN "exploiteur" masculine ; -- tocheck
lin exploration_N = mkN "exploration" feminine ; -- tocheck
lin exploratory_A = mkA "exploratoire" ; -- UWN
lin explore_V2 = mkV2 (mkV "explorer") ; -- tocheck
lin explore_VS = variants {} ; -- mkV2 (mkV "explorer") ; -- tocheck
lin explorerFem_N = mkN "exploratrice" feminine ; -- tocheck
lin explorerMasc_N = mkN "explorateur" masculine ; -- tocheck
lin explosion_N = mkN "explosion" feminine ; -- tocheck
lin explosive_A = mkA "explosif" ; -- tocheck
lin explosive_N = mkN "explosif" masculine ; -- tocheck
lin expo_N = mkN "expo" | mkN "exposition" | mkN "salon" ; -- UWN
lin exponent_N = mkN "exposant" masculine ; -- tocheck
lin exponential_A = mkA "exponentiel" ; -- tocheck
lin exponential_N = mkN "exponentiel" | mkN "exponentielle" | mkN "fonction_exponentielle" ; -- UWN
lin exponentiation_N = mkN "exponentiation" feminine ; -- tocheck
lin export_N = mkN "exportation" ; -- UWN
lin export_V = variants {} ; -- mkV2 (mkV "exporter") ; -- tocheck
lin export_V2 = mkV2 (mkV "exporter") ; -- tocheck
lin exportable_A = mkA "exportable" ; -- UWN
lin exporterFem_N = mkN "exportatrice" feminine ; -- tocheck
lin exporterMasc_N = mkN "exportateur" masculine ; -- tocheck
lin exporting_N = mkN "exportation" ; -- UWN
lin expose_V = variants {} ; -- mkV2 (mkV "exposer") ; -- tocheck
lin expose_V2 = mkV2 (mkV "exposer") ; -- tocheck
lin exposition_N = mkN "exposition" feminine ; -- tocheck
lin expostulate_V = mkV "opposer" | mkV "renoncer" ; -- UWN
lin exposure_N = mkN "exposition" feminine ; -- tocheck
lin expound_V2 = mkV2 (mkV "exposer") ; -- tocheck
lin express_A = variants {} ; --
lin express_V2 = mkV2 (mkV "exprimer") ; -- tocheck
lin expressible_A = mkA "exprimable" ; -- tocheck
lin expression_N = mkN "expression" feminine ; -- tocheck
lin expressionism_N = mkN "expressionnisme" masculine ; -- tocheck
lin expressionistFem_N = mkN "expressionniste" ; -- UWN
lin expressionistMasc_N = mkN "expressionniste" ; -- UWN
lin expressionist_A = mkA "expressionniste" ; -- UWN
lin expressionless_A = mkA "atone" | mkA "impassible" ; -- UWN
lin expressive_A = mkA "expressif" ; -- tocheck
lin expressiveness_N = mkN "expressivité" ; -- UWN
lin expressway_N = mkN "autoroute" feminine ; -- tocheck
lin expropriate_V2 = mkV2 (mkV "exproprier") ; -- tocheck
lin expropriation_N = mkN "expropriation" feminine ; -- tocheck
lin expulsion_N = mkN "expulsion" feminine ; -- tocheck
lin expunge_V2 = mkV2 (mkV "éffacer") | mkV2 (mkV "éliminer") ; -- tocheck
lin expurgate_V2 = mkV2 (mkV "expurger") ; -- tocheck
lin expurgation_N = mkN "castration" | mkN "expurgation" ; -- UWN
lin exquisite_A = mkA "exquis" ; -- tocheck
lin extant_A = mkA "existant" ; -- tocheck
lin extempore_Adv = mkAdv "extemporanément" | mkAdv "à_la_volée" ; -- UWN
lin extemporization_N = mkN "improvisation" ; -- UWN
lin extend_V = variants {} ; -- mkV2 (mkV "prolonger") ; -- tocheck
lin extend_V2 = mkV2 (mkV "prolonger") ; -- tocheck
lin extended_A = variants {} ; --
lin extendible_A = mkA "prolongeable" ; -- UWN
lin extensile_A = mkA "extensible" ; -- UWN
lin extension_N = mkN "extension" feminine ; -- tocheck
lin extensive_A = mkA "étendu" ; -- tocheck
lin extent_N = mkN "étendue" | mkN "mesure" feminine ; -- tocheck
lin extenuation_N = mkN "atténuation" | mkN "mitigation" ; -- UWN
lin exterior_A = mkA "extérieur" ; -- UWN
lin exterior_N = mkN "dehors" | mkN "extérieur" | mkN "sortir" ; -- UWN
lin exterminate_V2 = mkV2 (mkV "exterminer") ; -- tocheck
lin extermination_N = mkN "extermination" | mkN "liquidation" ; -- UWN
lin exterminator_N = mkN "facteur_de_terminaison" | mkN "terminateur" | mkN "terminator" | mkN "éradicateur" ; -- UWN
lin external_A = mkA "externe" ; -- tocheck
lin external_N = mkN "externe" ; -- UWN
lin externalization_N = mkN "externalisation" ; -- tocheck
lin exterritorial_A = mkA "extraterritorial" ; -- UWN
lin extinct_A = mkA "éteint" ; -- tocheck
lin extinction_N = mkN "extinction" feminine ; -- tocheck
lin extinguish_V2 = mkV2 (mkV I.éteindre_V2) ; -- tocheck
lin extinguishable_A = mkA "extinguible" ; -- UWN
lin extinguisher_N = mkN "extincteur" ; -- UWN
lin extirpate_V2 = mkV2 (mkV "déraciner") | mkV2 (mkV "extirper") ; -- tocheck
lin extirpation_N = mkN "extirpation" ; -- UWN
lin extol_V2 = mkV2 (mkV "louer") ; -- tocheck
lin extort_V = mkV "extorquer" ; -- UWN
lin extortion_N = mkN "extorsion" feminine ; -- tocheck
lin extra_A = mkA "excédant" | mkA "redondant" | mkA "superflu" ; -- UWN
lin extra_Adv = mkAdv "particulièrement" ; -- tocheck
lin extra_N = mkN "hors-série" masculine ; -- tocheck
lin extract_N = variants {} ; --
lin extract_V2 = mkV2 (mkV I.extraire_V2) ; -- tocheck
lin extraction_N = mkN "extraction" ; -- tocheck
lin extracurricular_A = mkA "parascolaire" ; -- tocheck
lin extradite_V2 = mkV2 (mkV "extrader") ; -- tocheck
lin extradition_N = mkN "extradition" feminine ; -- tocheck
lin extragalactic_A = mkA "extragalactique" ; -- tocheck
lin extrajudicial_A = mkA "extrajudiciaire" ; -- tocheck
lin extraneous_A = mkA "étranger" ; -- tocheck
lin extraordinary_A = mkA "extraordinaire" ; -- tocheck
lin extrapolate_V2 = mkV2 (mkV "extrapoler") ; -- tocheck
lin extrapolation_N = mkN "extrapolation" feminine ; -- tocheck
lin extrasensory_A = mkA "extrasensoriel" ; -- tocheck
lin extraterrestrial_A = mkA "extraterrestre" ; -- tocheck
lin extraterritorial_A = mkA "extraterritorial" ; -- UWN
lin extravagance_N = mkN "faste" | mkN "highlife" ; -- UWN
lin extravagant_A = mkA "extravagant" ; -- tocheck
lin extraversion_N = mkN "extraversion" ; -- UWN
lin extreme_A = mkA "extrême" ; -- tocheck
lin extreme_N = mkN "extrême" masculine ; -- tocheck
lin extremism_N = mkN "extrémisme" masculine ; -- tocheck
lin extremist_A = mkA "extrémiste" | mkA "extrême" ; -- UWN
lin extremist_N = mkN "extrémiste" masculine ; -- tocheck
lin extremity_N = mkN "extrémité" feminine ; -- tocheck
lin extrinsic_A = mkA "extrinsèque" ; -- UWN
lin extroversion_N = mkN "extraversion" ; -- UWN
lin extrovert_A = mkA "extraverti" ; -- tocheck
lin extrusion_N = mkN "extrusion" feminine ; -- tocheck
lin extrusive_A = mkA "extrusif" ; -- tocheck
lin exuberant_A = mkA "exubérant" ; -- tocheck
lin exude_V2 = mkV2 (mkV "exsuder") ; -- tocheck
lin exult_V = mkV (mkV "exulter") ; -- tocheck
lin exultant_A = mkA "triomphal" | mkA "triomphant" ; -- UWN
lin exultation_N = mkN "exultation" feminine ; -- tocheck
lin eye_N = mkN "oeil" "yeux" masculine | mkN "œil" "yeux" masculine ;
lin eye_V2 = mkV2 (mkV "examiner") ; -- tocheck
lin eyeball_N = mkN "globe_oculaire" | mkN "orbe" ; -- UWN
lin eyebrow_N = mkN "sourcil" masculine ; -- tocheck
lin eyeglass_N = mkN "monocle" masculine ; -- tocheck
lin eyelash_N = mkN "cil" masculine ; -- tocheck
lin eyelet_N = mkN "oeillet" masculine ; -- tocheck
lin eyelid_N = mkN "paupière" feminine ; -- tocheck
lin eyeliner_N = mkN "eye-liner" | mkN "eyeliner" | mkN "pinceau-traceur" ; -- UWN
lin eyepatch_N = mkN "cache-œil" ; -- UWN
lin eyepiece_N = mkN "oculaire" masculine ; -- tocheck
lin eyeshot_N = mkN "moi" | mkN "opinion" | mkN "penser" | mkN "position" | mkN "vision" | mkN "vue" | mkN "œil" ; -- UWN
lin eyewitness_N = mkN "témoin_oculaire" ; -- UWN
lin eyrie_N = mkN "aire" feminine ; -- tocheck
lin eyry_N = mkN "aire" ; -- UWN
lin fa_N = mkN "fa" masculine ; -- tocheck
lin fable_N = mkN "conte" masculine ; -- tocheck
lin fabric_N = mkN "structure" | mkN "tissu" masculine | mkN "tissu" ; -- tocheck
lin fabricate_V2 = mkV2 (mkV "fabriquer") | mkV2 (mkV "controuver") ; -- tocheck
lin fabrication_N = mkN "fabrication" feminine ; -- tocheck
lin fabulist_N = mkN "fabuliste" ; -- UWN
lin fabulous_A = mkA "fabuleux" ; -- tocheck
lin facade_N = variants {} ; --
lin face_N = mkN "visage" masculine | mkN "face" feminine ;
lin face_V = mkV "affronter" ;
lin face_V2 = mkV2 (mkV "affronter") ;
lin face_off_V2 = prepV2 OP_face_V OP_off_Prep ; -- guess-p-verb
lin face_up_to_V2 = prepV2 (advV OP_face_V OP_up_Adv ) OP_to_Prep ; -- guess-p-verb
lin facet_N = mkN "facette" ; -- tocheck
lin facetious_A = mkA "facétieux" ; -- tocheck
lin facia_N = mkN "fascia" ; -- UWN
lin facial_A = mkA "facial" ; -- tocheck
lin facile_A = mkA "argent" | mkA "courant" | mkA "éloquent" ; -- UWN
lin facilitate_V2 = mkV2 (mkV "faciliter") ; -- tocheck
lin facilitation_N = mkN "facilitation" feminine ; -- tocheck
lin facilitator_N = mkN "facilitateur" masculine ; -- tocheck
lin facility_N = mkN "facilité" feminine | mkN "infrastructure" feminine ; -- tocheck
lin facing_N = mkN "parement" ; -- tocheck
lin facsimile_N = mkN "fax" | mkN "télécopieur" ; -- UWN
lin fact_N = mkN "fait" masculine ;
lin faction_N = mkN "faction" feminine ; -- tocheck
lin factious_A = mkA "factieux" | mkA "séparatif" ; -- UWN
lin factor_N = mkN "facteur" masculine ; -- tocheck
lin factorial_A = mkA "factorielle" ; -- UWN
lin factorial_N = mkN "factorielle" feminine ; -- tocheck
lin factorization_N = mkN "factorisation" feminine ; -- tocheck
lin factorize_V2 = mkV2 (mkV "factoriser") ; -- tocheck
lin factory_N = L.factory_N ;
lin factual_A = mkA "effectif" ; -- tocheck
lin facultative_A = mkA "facultatif" ; -- tocheck
lin faculty_N = mkN "faculté" feminine ; -- tocheck
lin fad_N = mkN "mode" feminine ; -- tocheck
lin fade_N = mkN "disparition" | mkN "estompement" ; -- UWN
lin fade_V = variants {} ; -- mkV2 (reflV (mkV "affadir")) | mkV2 (reflV (mkV "évanouir")) ; -- tocheck
lin fade_V2 = mkV2 (reflV (mkV "affadir")) | mkV2 (reflV (mkV "évanouir")) ; -- tocheck
lin fado_N = mkN "Fado" masculine ; -- tocheck
lin faecal_A = mkA "fécal" ; -- UWN
lin fag_N = mkN "clope" feminine | mkN "pédé" masculine ; -- tocheck
lin fag_V = mkV "fatiguer" | mkV "user" ; -- UWN
lin faggot_N = mkN "pédé" ; -- UWN
lin fagot_N = mkN "pédé" ; -- UWN
lin faience_N = mkN "faïence" feminine ; -- tocheck
lin fail_V = variants {} ; -- mkV2V (mkV "négliger") | mkV2V (mkV "recaler") | mkV2V (mkV "échouer") ; -- tocheck
lin fail_V2 = variants {} ; -- mkV2V (mkV "négliger") | mkV2V (mkV "recaler") | mkV2V (mkV "échouer") ; -- tocheck
lin fail_VV = variants {} ; -- mkV2V (mkV "négliger") | mkV2V (mkV "recaler") | mkV2V (mkV "échouer") ; -- tocheck
lin failure_N = mkN "échec" masculine | mkN "raté" masculine | mkN "panne" feminine ; -- tocheck
lin fain_Adv = mkAdv "volontiers" ; -- tocheck
lin faint_A = mkA "faible" | mkA "craintif" ; -- tocheck
lin faint_N = mkN "évanouissement" masculine | mkN "évanoui" masculine ; -- tocheck
lin faint_V = mkV (reflV (mkV "évanouir")) ; -- tocheck
lin faint_hearted_A = mkA "timoré" ; -- tocheck
lin fair_A = mkA "beau" | mkA "juste" ; -- tocheck
lin fair_Adv = variants {} ; --
lin fair_N = mkN "foire" feminine | mkN "marché" masculine ; -- tocheck
lin fairground_N = mkN "exposition" ; -- UWN
lin fairlead_N = mkN "chaumard" ; -- UWN
lin fairly_Adv = adjAdv fair_A ; -- -- derived
lin fairy_N = mkN "tapette" feminine | mkN "fée" feminine ; -- tocheck
lin fairytale_N = mkN "conte" ; -- UWN
lin faith_N = mkN "foi" feminine ; -- tocheck
lin faithful_A = mkA "fidèle" ; -- tocheck
lin faithful_N = mkN "fidèle" | mkN "plier" ; -- UWN
lin faithlessness_N = mkN "fausseté" | mkN "inconstance" ; -- UWN
lin fake_A = mkA "faux" ; -- tocheck
lin fake_V2 = mkV2 (mkV "fausser") ; -- tocheck
lin fakir_N = mkN "fakir" | mkN "faquir" ; -- UWN
lin falafel_N = mkN "falafel" ; -- UWN
lin falcate_A = mkA "falciforme" ; -- UWN
lin falchion_N = mkN "fauchon" ; -- tocheck
lin falcon_N = mkN "faucon" masculine ; -- tocheck
lin falconer_N = mkN "fauconnier" masculine ; -- tocheck
lin falconry_N = mkN "chasse_au_vol" | mkN "fauconnerie" ; -- UWN
lin falkirk_PN = mkPN "Falkirk" ; -- status=guess src=geonames
lin fall_1_N = variants {} ; --
lin fall_2_N = variants {} ; --
lin fall_N = mkN "chute" feminine | mkN "déclin" masculine ; -- tocheck
lin fall_V = etreV (mkV "tomber") ;
lin fall_about_V = advV OP_fall_V OP_about_Adv ; -- guess-p-verb
lin fall_apart_V = advV OP_fall_V OP_apart_Adv ; -- guess-p-verb
lin fall_back_V = advV OP_fall_V OP_back_Adv ; -- guess-p-verb
lin fall_back_on_V2 = prepV2 (advV OP_fall_V OP_back_Adv ) OP_on_Prep ; -- guess-p-verb
lin fall_behind_V = mkV "paumer" | mkV "perdre" | mkV "reculer" ; -- UWN
lin fall_behind_in_V2 = prepV2 (advV OP_fall_V OP_behind_Adv ) OP_in_Prep ; -- guess-p-verb
lin fall_down_V = advV OP_fall_V OP_down_Adv ; -- guess-p-verb
lin fall_for_V2 = prepV2 OP_fall_V OP_for_Prep ; -- guess-p-verb
lin fall_in_V = mkV "s'effondrer" | mkV "s'écrouler" ; -- UWN
lin fall_into_V2 = prepV2 OP_fall_V OP_into_Prep ; -- guess-p-verb
lin fall_off_V = advV OP_fall_V OP_off_Adv ; -- guess-p-verb
lin fall_out_V = advV OP_fall_V OP_out_Adv ; -- guess-p-verb
lin fall_out_with_V2 = prepV2 (advV OP_fall_V OP_out_Adv ) OP_with_Prep ; -- guess-p-verb
lin fall_over_V = advV OP_fall_V OP_over_Adv ; -- guess-p-verb
lin fall_through_V = advV OP_fall_V OP_through_Adv ; -- guess-p-verb
lin fall_under_V2 = prepV2 OP_fall_V OP_under_Prep ; -- guess-p-verb
lin fallacious_A = mkA "fallacieux" ; -- tocheck
lin fallacy_N = mkN "tromperie" feminine | mkN "sophisme" masculine ; -- tocheck
lin fallibility_N = mkN "faillibilité" feminine ; -- tocheck
lin fallible_A = mkA "faillible" ; -- tocheck
lin fallout_N = mkN "retombées" ; -- tocheck
lin fallow_N = mkN "jachère" feminine | mkN "friche" feminine ; -- tocheck
lin falls_N = mkN "cascade" | mkN "cataracte" | mkN "chute" | mkN "chute_d'eau" | mkN "chute_d’eau" | mkN "saut" ; -- UWN
lin falmouth_PN = mkPN "Falmouth" ; -- status=guess src=geonames
lin false_A = mkA "faux" ; -- tocheck
lin false_Adv = mkAdv "perfidement" | mkAdv "traîtreusement" ; -- UWN
lin falsehood_N = mkN "mensonge" masculine ; -- tocheck
lin falseness_N = mkN "fausseté" ; -- UWN
lin falsetto_N = mkN "fausset" masculine ; -- tocheck
lin falsification_N = mkN "falsification" feminine ; -- tocheck
lin fame_N = mkN "gloire" feminine ; -- tocheck
lin familial_A = mkA "familial" ; -- UWN
lin familiar_A = mkA "familier" ; -- tocheck
lin familiar_N = mkN "familier" masculine ; -- tocheck
lin familiarity_N = mkN "familiarité" feminine ; -- tocheck
lin familiarization_N = mkN "familiarisation" feminine ; -- tocheck
lin familiarize_V2 = mkV2 (mkV "familiariser") ; -- tocheck
lin family_N = mkN "famille" feminine ;
lin famine_N = mkN "famine" feminine ; -- tocheck
lin famous_A = mkA "célèbre" | mkA "fameux" ; -- tocheck
lin fan_1_N = mkN "ventilateur" masculine ; -- tocheck
lin fan_2_N = mkN "fan" ; -- tocheck
lin fan_3_N = mkN "éventail" masculine ; -- tocheck
lin fan_N = variants {} ; --
lin fan_V = variants {} ; -- mkV2 (mkV "éventer") | mkV2 (mkV "disperser") ; -- tocheck
lin fan_V2 = mkV2 (mkV "éventer") | mkV2 (mkV "disperser") ; -- tocheck
lin fanaticFem_N = mkN "fanatique" feminine ; -- tocheck
lin fanaticMasc_N = mkN "fanatique" masculine ; -- tocheck
lin fanatical_A = mkA "fanatique" ; -- tocheck
lin fanaticism_N = mkN "fanatisme" masculine ; -- tocheck
lin fancier_N = mkN "enthousiaste" ; -- UWN
lin fanciful_A = mkA "imaginaire" ; -- tocheck
lin fancy_V2 = variants {} ; --
lin fandango_N = mkN "fandango" ; -- UWN
lin fanfare_N = mkN "fanfare" feminine ; -- tocheck
lin fang_N = mkN "croc" masculine ; -- tocheck
lin fanjet_N = mkN "Turboréacteur#Simple_et_double_flux" | mkN "turboréacteur" | mkN "turboréacteur#simple_et_double_flux" ; -- UWN
lin fantail_N = mkN "rhipidura" | mkN "rhipidure" | mkN "rhipidures" | mkN "rhipiduridés" ; -- UWN
lin fantan_N = mkN "parlement" | mkN "son" | mkN "élu" ; -- UWN
lin fantasia_N = mkN "fantaisie" | mkN "fantasia" ; -- UWN
lin fantasize_V = mkV (mkV "fantasmer") ; -- tocheck
lin fantastic_A = mkA "fantastique" ; -- tocheck
lin fantastically_Adv = mkAdv "fantastiquement" ; -- tocheck
lin fantasy_N = mkN "fantasme" masculine | mkN "fantaisie" feminine ; -- tocheck
lin far_A = mkA "lointain" ;
lin far_fetched_A = mkA "abracadabrant" ; -- tocheck
lin farad_N = mkN "farad" masculine ; -- tocheck
lin farandole_N = mkN "farandole" ; -- tocheck
lin farce_N = mkN "farce" feminine ; -- tocheck
lin farcical_A = mkA "ridicule" ; -- tocheck
lin fare_N = mkN "tarif" masculine | mkN "passager" masculine | mkN "prix" masculine ; -- tocheck
lin fare_V = mkV "aller" ; -- UWN
lin farewell_N = mkN "adieu" masculine ; -- tocheck
lin farinaceous_A = mkA "sableux" ; -- UWN
lin farm_N = mkN "ferme" feminine ; -- tocheck
lin farmer_N = mkN "agriculteur" masculine ; -- tocheck
lin farming_N = variants {} ; --
lin farnham_PN = mkPN "Farnham" ; -- status=guess src=geonames
lin farnworth_PN = mkPN "Farnworth" ; -- status=guess src=geonames
lin faro_N = mkN "faro" ; -- UWN
lin farrier_N = mkN "maréchal-ferrant" masculine ; -- tocheck
lin far_seeing_A = mkA "long" ; -- UWN
lin far_sighted_A = mkA "hypermétrope" ; -- tocheck
lin fart_N = mkN "pet" masculine ; -- tocheck
lin fart_V = mkV (mkV "péter") ; -- tocheck
lin farthing_N = mkN "farthing" masculine ; -- tocheck
lin fartlek_N = mkN "fartlek" ; -- UWN
lin fasces_N = mkN "faisceau" masculine ; -- tocheck
lin fascia_N = mkN "panneau" | mkN "tableau" | mkN "tableau_de_bord" ; -- UWN
lin fascicle_N = mkN "fascicule" masculine ; -- tocheck
lin fasciculation_N = mkN "Fasciculation" | mkN "fasciculation" ; -- UWN
lin fascinate_V2 = mkV2 (mkV "fasciner") ; -- tocheck
lin fascinating_A = mkA "fascinant" ; -- tocheck
lin fascination_N = mkN "fascination" ; -- UWN
lin fascioliasis_N = mkN "fasciolose" ; -- UWN
lin fasciolopsiasis_N = mkN "Fasciolopsiase" | mkN "fasciolopsiase" ; -- UWN
lin fascism_N = mkN "fascisme" masculine ; -- tocheck
lin fascist_A = mkA "fasciste" ; -- tocheck
lin fascist_N = mkN "fasciste" masculine ; -- tocheck
lin fashion_N = mkN "mode" feminine | mkN "façon" feminine ; -- tocheck
lin fashion_V2 = mkV2 (mkV "façonner") ; -- tocheck
lin fashionable_A = variants {} ; --
lin fast_A = mkA "rapide" ;
lin fast_N = mkN "jeûne" ; -- UWN
lin fast_V = mkV "jeûner" ;
lin fastball_N = mkN "balle" | mkN "chauffage" | mkN "fumer" | mkN "fumée" | mkN "miracle" ; -- UWN
lin fasten_V = mkV "attacher" | mkV "fixer" | mkV "relier" ; -- UWN
lin fasten_V2 = mkV2 (mkV "attacher") ; -- tocheck
lin fastener_N = mkN "fermeture" feminine ; -- tocheck
lin fastidious_A = mkA "exigeant" | mkA "pointilleux" | mkA "méticuleux" ; -- tocheck
lin fat_A = mkA "gros" "grosse" | mkA "épais" "épaisse" ;
lin fat_N = L.fat_N ;
lin fat_V2 = mkV2 (mkV "engraisser") ; -- tocheck
lin fatal_A = mkA "fatal" ; -- tocheck
lin fatalism_N = mkN "fatalisme" masculine ; -- tocheck
lin fatalistFem_N = variants {} ; ---- sense to be split
lin fatalistMasc_N = variants {} ; ---- sense to be split
lin fate_N = mkN "destin" masculine ; -- tocheck
lin fateful_A = mkA "fatidique" | mkA "décisif" ; -- tocheck
lin father_N = mkN "père" masculine ;
lin father_N2 = L.father_N2 ;
lin father_V2 = mkV2 (mkV "paterner") ; -- tocheck
lin father_in_law_N = mkN "beau-père" masculine ; -- tocheck
lin fatherhood_N = mkN "paternité" feminine ; -- tocheck
lin fatherland_N = mkN "patrie" feminine ; -- tocheck
lin fathom_N = mkN "brasse" feminine ; -- tocheck
lin fathom_V2 = mkV2 (mkV "saisir") ; -- tocheck
lin fathomable_A = mkA "compréhensible" ; -- tocheck
lin fatigue_N = mkN "fatigue" feminine ; -- tocheck
lin fatigue_V2 = mkV2 (mkV "fatiguer") ; -- tocheck
lin fatless_A = mkA "light" ; -- UWN
lin fatten_V = mkV "engraisser" ; -- UWN
lin fatten_V2 = mkV2 (mkV "grossir") | mkV2 (mkV "engraisser") ; -- tocheck
lin fatuous_A = mkA "imbécile" ; -- tocheck
lin fatwa_N = mkN "fatwa" feminine ; -- tocheck
lin faubourg_N = mkN "faubourg" | mkN "faubourgs" ; -- UWN
lin faucet_N = mkN "robinet" ; -- UWN
lin fauldhouse_PN = mkPN "Fauldhouse" ; -- status=guess src=geonames
lin fault_N = mkN "défaut" | mkN "faille" feminine | mkN "faute" feminine ; -- tocheck
lin faultless_A = mkA "impeccable" ; -- tocheck
lin faun_N = mkN "faune" masculine ; -- tocheck
lin fauna_N = mkN "faune" feminine ; -- tocheck
lin fauteuil_N = mkN "fauteuil" ; -- UWN
lin fauvism_N = mkN "fauvisme" masculine ; -- tocheck
lin faux_pas_N = mkN "Solécisme" | mkN "bévue" | mkN "faux_pas" | mkN "gaffe" | mkN "impair" | mkN "solécisme" | mkN "soulier" ; -- UWN
lin faversham_PN = mkPN "Faversham" ; -- status=guess src=geonames
lin favoritism_N = mkN "discrimination" | mkN "distinction" ; -- UWN
lin favour_N = variants {} ; --
lin favour_V = variants {} ; --
lin favour_V2 = mkV2 (mkV "favoriser") ; --
lin favour_VS = variants {} ; --
lin favourable_A = mkA "favorable" ; -- tocheck
lin favouriteFem_N = mkN "favorite" feminine ; -- tocheck
lin favouriteMasc_N = mkN "favori" masculine ;
lin favourite_A = variants {} ; --
lin favouritism_N = mkN "favoritisme" masculine ; -- tocheck
lin favus_N = mkN "favus" masculine ; -- tocheck
lin fawn_N = mkN "faon" masculine ; -- tocheck
lin fawn_V = mkV (mkV "flagorner") ; -- tocheck
lin fax_N = variants {} ; --
lin fealty_N = mkN "fidélité" feminine | mkN "serment" masculine ; -- tocheck
lin fear_N = mkN "crainte" feminine | mkN "peur" feminine ; -- tocheck
lin fear_V = variants {} ; -- L.fear_V2 ;
lin fear_V2 = L.fear_V2 ;
lin fear_VS = L.fear_VS ;
lin fearful_A = mkA "effrayant" | mkA "peureux" | mkA "terrible" ; -- tocheck
lin fearless_A = mkA "courageux" ; -- tocheck
lin fearlessness_N = mkN "intrépidité" feminine ; -- tocheck
lin fearsome_A = mkA "effroyable" ; -- tocheck
lin feasibility_N = mkN "faisabilité" feminine ; -- tocheck
lin feasible_A = mkA "faisable" ; -- tocheck
lin feast_N = mkN "fête" feminine ; -- tocheck
lin feat_N = mkN "exploit" masculine ; -- tocheck
lin feather_N = L.feather_N ;
lin featherstone_PN = mkPN "Featherstone" ; -- status=guess src=geonames
lin feature_N = mkN "fonctionnalité" feminine | mkN "caractéristique" feminine | mkN "trait" ; -- tocheck
lin feature_V2 = variants {} ; --
lin febrile_A = mkA "fébrile" ; -- tocheck
lin feckless_A = mkA "irréfléchi" | mkA "incapable" ; -- tocheck
lin fecula_N = mkN "fécule" ; -- UWN
lin feculent_A = mkA "fécal" ; -- UWN
lin fecund_A = mkA "fécond" ; -- UWN
lin fecundity_N = mkN "fécondité" feminine ; -- tocheck
lin federal_A = variants {} ; --
lin federalism_N = mkN "fédéralisme" masculine ; -- tocheck
lin federation_N = mkN "fédération" feminine ; -- tocheck
lin fedora_N = mkN "borsalino" masculine ; -- tocheck
lin fee_N = mkN "honoraires" ; -- tocheck
lin feeble_A = mkA "faible" ; -- tocheck
lin feed_N = mkN "alimentation" feminine | mkN "flux" masculine ; -- tocheck
lin feed_V = variants {} ; -- mkV2 (mkV "nourrir") | mkV2 (mkV "manger") ; -- tocheck
lin feed_V2 = mkV2 (mkV "nourrir") | mkV2 (mkV "manger") ; -- tocheck
lin feed_off_V2 = prepV2 OP_feed_V OP_off_Prep ; -- guess-p-verb
lin feed_on_V2 = prepV2 OP_feed_V OP_on_Prep ; -- guess-p-verb
lin feed_up_V2 = prepV2 OP_feed_V OP_up_Prep ; -- guess-p-verb
lin feedback_N = mkN "évaluation" feminine | mkN "rétroaction" ; -- tocheck
lin feedlot_N = mkN "Feed_lots" | mkN "feed_lots" ; -- UWN
lin feel_N = variants {} ; --
lin feel_V = (mkV I.sentir_V2) ;
lin feel_V2 = mkV2 (mkV I.sentir_V2) ;
lin feel_VA = mkVA (reflV (mkV I.sentir_V2)) ;
lin feel_VS = mkVS I.sentir_V2 ;
lin feel_out_V = advV OP_feel_V OP_out_Adv ; -- guess-p-verb
lin feel_up_V2 = prepV2 OP_feel_V OP_up_Prep ; -- guess-p-verb
lin feel_up_to_V2 = prepV2 (advV OP_feel_V OP_up_Adv ) OP_to_Prep ; -- guess-p-verb
lin feeler_N = mkN "capteur" ; -- tocheck
lin feeling_N = mkN "sentiment" masculine | mkN "sentiments" | mkN "épreuve" feminine | mkN "sensation" feminine ; -- tocheck
lin feign_V2 = mkV2 (mkV I.feindre_V2) ; -- tocheck
lin feist_N = mkN "feist" ; -- UWN
lin feisty_A = mkA "tenace" ; -- tocheck
lin feldspar_N = mkN "feldspath" masculine ; -- tocheck
lin felicitation_N = mkN "félicitation" ; -- UWN
lin felicity_N = mkN "félicité" feminine | mkN "félicité" ; -- tocheck
lin feline_N = mkN "félidé" | mkN "félin" ; -- UWN
lin felixstowe_PN = mkPN "Felixstowe" ; -- status=guess src=geonames
lin fell_A = mkA "atroce" | mkA "cruel" | mkA "sauvage" ; -- UWN
lin fell_V2 = mkV2 (mkV I.abattre_V2) ; -- tocheck
lin fellah_N = mkN "fellah" ; -- UWN
lin fellatio_N = mkN "fellation" feminine ; -- tocheck
lin fellow_A = variants {} ; --
lin fellow_N = mkN "mec" ; -- tocheck
lin fellowship_N = mkN "famille" ; -- UWN
lin felonious_A = mkA "criminel" ; -- UWN
lin felony_N = mkN "crime" masculine ; -- tocheck
lin felspar_N = mkN "feldspath" ; -- UWN
lin felt_N = mkN "feutre" masculine ; -- tocheck
lin felucca_N = mkN "felouque" feminine ; -- tocheck
lin felwort_N = mkN "gentiane" ; -- UWN
lin female_A = mkA "femelle" ; -- tocheck
lin female_N = mkN "femelle" feminine ; -- tocheck
lin feminine_A = mkA "féminin" ; -- tocheck
lin feminine_N = mkN "féminin" masculine ; -- tocheck
lin femininity_N = mkN "féminité" feminine ; -- tocheck
lin feminism_N = mkN "féminisme" masculine ; -- tocheck
lin feministFem_N = mkN "féministe" feminine ; -- tocheck
lin feministMasc_N = mkN "féministe" masculine ;
lin feminist_A = mkA "féministe" ; -- tocheck
lin feminization_N = mkN "féminisation" ; -- UWN
lin femoral_A = mkA "fémoral" ; -- tocheck
lin femtochemistry_N = mkN "femtochimie" ; -- UWN
lin femtosecond_N = mkN "femtoseconde" ; -- UWN
lin femur_N = mkN "fémur" masculine ; -- tocheck
lin fen_N = mkN "marais" | mkN "marsh" | mkN "marécage" ; -- UWN
lin fence_N = mkN "clôture" feminine ; -- tocheck
lin fence_V2 = mkV2 (mkV "clôturer") ; -- tocheck
lin fencer_N = mkN "escrimeur" masculine ; -- tocheck
lin fencing_N = mkN "escrime" feminine ; -- tocheck
lin fender_N = mkN "garde-boue" masculine | mkN "aile" feminine | mkN "défense" ; -- tocheck
lin fennel_N = mkN "fenouil" masculine ; -- tocheck
lin fenugreek_N = mkN "fenugrec" ; -- tocheck
lin feoff_N = mkN "fief" ; -- UWN
lin feral_A = mkA "féral" ; -- tocheck
lin ferment_N = mkN "fermentation" | mkN "fermenter" ; -- UWN
lin fermentation_N = mkN "fermentation" | mkN "fermenter" ; -- UWN
lin fermion_N = mkN "fermion" masculine ; -- tocheck
lin fermium_N = mkN "fermium" masculine ; -- tocheck
lin fern_N = mkN "fougère" feminine ; -- tocheck
lin ferocious_A = mkA "féroce" ; -- tocheck
lin ferociousness_N = mkN "brutalité" | mkN "fureur" ; -- UWN
lin ferocity_N = mkN "acharnement" masculine ; -- tocheck
lin ferrara_PN = mkPN "Ferrare" ; -- status=guess src=geonames
lin ferret_N = mkN "furet" masculine ; -- tocheck
lin ferric_A = mkA "ferreux" ; -- UWN
lin ferrimagnetism_N = mkN "ferrimagnétisme" ; -- UWN
lin ferris_wheel_N = mkN "grande roue" "grandes roues" feminine ;
lin ferrite_N = mkN "ferrite" ; -- UWN
lin ferritin_N = mkN "ferritine" ; -- UWN
lin ferroconcrete_N = mkN "béton_armé" ; -- UWN
lin ferromagnetism_N = mkN "ferromagnétisme" masculine ; -- tocheck
lin ferrous_A = mkA "ferreux" ; -- tocheck
lin ferry_N = mkN "ferry" masculine ; -- tocheck
lin ferryhill_PN = mkPN "Ferryhill" ; -- status=guess src=geonames
lin ferryman_N = mkN "batelier" masculine ; -- tocheck
lin fertility_N = mkN "fertilité" ; -- tocheck
lin fertilizable_A = mkA "fécondable" ; -- UWN
lin fertilize_V2 = mkV2 (mkV "fertiliser") ; -- tocheck
lin fertilizer_N = mkN "fertilisant" | mkN "engrais" masculine ; -- tocheck
lin ferule_N = mkN "férule" feminine ; -- tocheck
lin fervent_A = mkA "fervent" ; -- tocheck
lin fervour_N = mkN "excitation" | mkN "ferveur" | mkN "inflammation" ; -- UWN
lin fescue_N = mkN "fétuque" feminine ; -- tocheck
lin fester_V = mkV (mkV "suppurer") ; -- tocheck
lin festival_N = mkN "festival" masculine ; -- tocheck
lin festivity_N = mkN "célébration" ; -- UWN
lin festoon_N = mkN "feston" masculine ; -- tocheck
lin festoon_V2 = mkV2 (mkV "enguirlander") ; -- tocheck
lin fetch_V2 = mkV2 (mkV "ramener") | mkV2 (mkV "rapporter") ; -- tocheck
lin fetid_A = mkA "fétide" ; -- tocheck
lin fetish_N = mkN "fétiche" masculine ; -- tocheck
lin fetishism_N = mkN "fétichisme" masculine ; -- tocheck
lin fetishist_N = mkN "fétichiste" ; -- tocheck
lin fetlock_N = mkN "boulet" ; -- tocheck
lin fetter_N = mkN "entrave" feminine ; -- tocheck
lin fetter_V2 = mkV2 (mkV "entraver") ; -- tocheck
lin fetus_N = mkN "foetus" masculine ; -- tocheck
lin feud_N = mkN "fief" | mkN "querelle" feminine | mkN "inimitié" ; -- tocheck
lin feudalism_N = mkN "féodalisme" masculine ; -- tocheck
lin feudatory_N = mkN "suzerain" | mkN "vassal" | mkN "vassalité" ; -- UWN
lin fever_N = mkN "fièvre" feminine ; -- tocheck
lin fevered_A = mkA "fiévreux" | mkA "enflammé" ; -- tocheck
lin feverish_A = mkA "fiévreux" ; -- tocheck
lin few_Det = S.few_Det ;
lin few_N = mkN "peu" ; ---- bad cat ? comes from "a few" ? "un peu" is OK in that case
lin fewer_Det = variants {} ; --
lin fey_A = mkA "magique" | mkA "envoûté" ; -- tocheck
lin fez_N = mkN "fez" masculine ; -- tocheck
lin fiasco_N = mkN "fiasco" masculine ; -- tocheck
lin fib_N = mkN "bobard" masculine ; -- tocheck
lin fibber_N = mkN "fabricateur" | mkN "fabricatrice" ; -- UWN
lin fiberboard_N = mkN "aggloméré" ; -- UWN
lin fiberglass_N = mkN "fibre_de_verre" ; -- UWN
lin fibre_N = mkN "fibre" feminine ; -- tocheck
lin fibreboard_N = mkN "aggloméré" ; -- UWN
lin fibreglass_N = mkN "fibre_de_verre" ; -- UWN
lin fibril_N = mkN "fibrille" feminine ; -- tocheck
lin fibrillation_N = mkN "fibrillation" feminine ; -- tocheck
lin fibrin_N = mkN "fibrine" ; -- UWN
lin fibrinase_N = mkN "facteur_laki-lorand" | mkN "facteur_xiii" ; -- UWN
lin fibrinogen_N = mkN "fibrinogène" ; -- UWN
lin fibrinolysis_N = mkN "Fibrinolyse" | mkN "fibrinolyse" ; -- UWN
lin fibroblast_N = mkN "fibroblaste" ; -- UWN
lin fibroma_N = mkN "Fibrome" | mkN "fibrome" ; -- UWN
lin fibrosis_N = mkN "fibrose" ; -- UWN
lin fibrous_A = mkA "fibreux" ; -- tocheck
lin fibula_N = mkN "fibule" feminine ; -- tocheck
lin fickle_A = mkA "inconstant" ; -- tocheck
lin fickleness_N = mkN "fausseté" | mkN "inconstance" ; -- UWN
lin fiction_N = mkN "fiction" feminine ; -- tocheck
lin fictional_A = mkA "fictif" ; -- tocheck
lin fictionalization_N = mkN "fabrication" ; -- UWN
lin fictitious_A = mkA "fictif" ; -- tocheck
lin fiddle_N = mkN "ajustement" | mkN "violon" | mkN "truc" ; -- tocheck
lin fiddle_V2 = mkV2 (mkV "traficoter") | mkV2 (mkV "tripoter") ; -- tocheck
lin fiddler_N = mkN "bricoleur" ; -- UWN
lin fidget_N = mkN "gigoter" ; -- tocheck
lin fidget_V2 = mkV2 (mkV "remuer") ; -- tocheck
lin fiducial_A = mkA "fiduciaire" ; -- tocheck
lin fiduciary_A = mkA "fiduciaire" ; -- tocheck
lin fiduciary_N = mkN "mandataire" ; -- tocheck
lin fief_N = mkN "fief" ; -- tocheck
lin fiefdom_N = mkN "seigneurie" feminine ; -- tocheck
lin field_1_N = mkN "champ" masculine ;
lin field_2_N = mkN "terrain" masculine ;
lin field_3_N = mkN "terrain" masculine ; ----
lin field_4_N = mkN "corps" masculine ;
lin field_N = mkN "champ" masculine | mkN "corps" masculine | mkN "terrain" masculine ;
lin field_V2 = mkV2 (mkV "attraper") ; -- tocheck
lin fielding_N = mkN "fielding" ; -- UWN
lin fiend_N = mkN "addict" masculine | mkN "démon" masculine | mkN "monstre" masculine ; -- tocheck
lin fiendish_A = mkA "diabolique" ; -- tocheck
lin fierce_A = mkA "féroce" ; -- tocheck
lin fierceness_N = mkN "acharnement" masculine ; -- tocheck
lin fiery_A = mkA "ardent" | mkA "enflammé" ; -- tocheck
lin fife_N = mkN "fifre" masculine ; -- tocheck
lin fife_PN = mkPN "Fife" ; -- status=guess src=geonames
lin fig_N = mkN "figue" feminine | mkN "figuier" masculine ; -- tocheck
lin fight_N = mkN "bataille" feminine | mkN "combativité" feminine | mkN "combat" masculine | mkN "lutte" feminine | mkN "bagarre" feminine ; -- tocheck
lin fight_V = mkV "batailler" | mkV "combattre" | mkV "lutter" ; -- UWN
lin fight_V2 = L.fight_V2 ;
lin fight_back_V = advV OP_fight_V OP_back_Adv ; -- guess-p-verb
lin fight_back_V2 = mkV2 (advV OP_fight_V OP_back_Adv ) ; -- guess-p-verb
lin fight_it_out_V2 = variants {} ; -- guess-p-verb
lin fight_off_V2 = prepV2 OP_fight_V OP_off_Prep ; -- guess-p-verb
lin fighter_N = mkN "chasseur" ; -- tocheck
lin figment_N = mkN "chimère" ; -- tocheck
lin figural_A = mkA "figuratif" ; -- UWN
lin figurative_A = mkA "figuratif" ; -- tocheck
lin figure_1_N = mkN "figure" ;
lin figure_2_N = mkN "chiffre" ;
lin figure_N = mkN "forme" feminine | mkN "personnage" masculine | mkN "figure" feminine ; ---
lin figure_V = mkV "comprendre" | mkV "imaginer" | mkV "prévoir" | mkV "visualiser" | mkV "voir" ; -- UWN
lin figure_VS = variants {} ; -- mkV2V (mkV I.comprendre_V2) | mkV2V (mkV I.résoudre_V2) ; -- tocheck
lin figure_on_V2 = prepV2 OP_figure_V OP_on_Prep ; -- guess-p-verb
lin figure_out_V2 = prepV2 OP_figure_V OP_out_Prep ; -- guess-p-verb
lin figure_up_V2 = prepV2 OP_figure_V OP_up_Prep ; -- guess-p-verb
lin figurine_N = mkN "figurine" feminine ; -- tocheck
lin fiji_PN = mkPN "Fidji" ; -- status=guess src=geonames
lin filament_N = mkN "filament" masculine ; -- tocheck
lin filamentous_A = mkA "filamenteux" ; -- tocheck
lin filariasis_N = mkN "filariose" | mkN "filarioses" ; -- UWN
lin filbert_N = mkN "aveline" | mkN "noisette" ; -- UWN
lin file_N = mkN "fichier" masculine | mkN "lime" feminine ; -- tocheck
lin file_V = mkV "fichier" ; -- UWN
lin file_V2 = mkV2 (mkV "limer") ; -- tocheck
lin file_away_V2 = mkV2 (advV OP_file_V OP_away_Adv ) ; -- guess-p-verb
lin file_for_V2 = prepV2 OP_file_V OP_for_Prep ; -- guess-p-verb
lin filefish_N = mkN "Monacanthidae" | mkN "monacanthidae" ; -- UWN
lin filial_A = mkA "filial" ; -- tocheck
lin filibuster_N = mkN "flibustier" masculine ; -- tocheck
lin filibuster_V = mkV "flibustier" ; -- UWN
lin filigree_N = mkN "filigrane" masculine | mkN "filigrane" ; -- tocheck
lin filing_N = mkN "limaille" ; -- tocheck
lin fill_V = mkV "combler" ; -- UWN
lin fill_V2 = mkV2 (mkV "remplir") | mkV2 (mkV "combler") ; -- tocheck
lin fill_in_V = advV OP_fill_V OP_in_Adv ; -- guess-p-verb
lin fill_in_V2 = prepV2 OP_fill_V OP_in_Prep ; -- guess-p-verb
lin fill_in_for_V2 = prepV2 (advV OP_fill_V OP_in_Adv ) OP_for_Prep ; -- guess-p-verb
lin fill_in_on_V3 = variants {} ; -- guess-p-verb
lin fill_out_V = advV OP_fill_V OP_out_Adv ; -- guess-p-verb
lin fill_out_V2 = prepV2 OP_fill_V OP_out_Prep ; -- guess-p-verb
lin fill_up_V2 = prepV2 OP_fill_V OP_up_Prep ; -- guess-p-verb
lin fillet_N = mkN "filet" masculine ; -- tocheck
lin fillet_V2 = mkV2 (mkV "désosser") ; -- tocheck
lin filling_N = mkN "plombage" masculine ; -- tocheck
lin fillip_N = mkN "pichenette" feminine ; -- tocheck
lin filly_N = mkN "pouliche" feminine ; -- tocheck
lin film_1_N = variants {} ; --
lin film_2_N = mkN "feuil" | mkN "film" | mkN "pellicule" ; -- UWN
lin film_N = mkN "pellicule" feminine | mkN "film" masculine ; -- tocheck
lin film_V = mkV "filmer" ; -- UWN
lin film_V2 = mkV2 (mkV "filmer") ; -- tocheck
lin filming_N = mkN "tournage" masculine ; -- tocheck
lin filovirus_N = mkN "filovirus" ; -- UWN
lin filter_N = mkN "filtre" masculine ; -- tocheck
lin filter_V = mkV "filtre" ; -- UWN
lin filter_V2 = mkV2 (mkV "filtrer") ; -- tocheck
lin filth_N = mkN "crasse" feminine ; -- tocheck
lin filthy_A = mkA "crasseux" ; -- tocheck
lin filtrate_N = mkN "filtrat" masculine ; -- tocheck
lin filtrate_V = mkV "filtre" | mkV "filtrer" ; -- UWN
lin filtrate_V2 = mkV2 (mkV "filtrer") ; -- tocheck
lin fimbria_N = mkN "Fimbria" | mkN "fimbria" ; -- UWN
lin fin_N = mkN "empennage" masculine | mkN "nageoire" feminine | mkN "palme" feminine ; -- tocheck
lin finagle_V2 = mkV2 (mkV "filouter") | mkV2 (mkV "intriguer") ; -- tocheck
lin finagler_N = mkN "resquilleur" ; -- UWN
lin final_A = mkA "dernier" | mkA "final" ; -- tocheck
lin final_N = mkN "dernier" ; -- UWN
lin finalist_N = mkN "finaliste" masculine ; -- tocheck
lin finality_N = mkN "finalité" ; -- UWN
lin finally_Adv = mkAdv "enfin" | mkAdv "finalement" | adjAdv final_A ; -- derived
lin finance_N = mkN "finance" feminine | mkN "finances" ; -- tocheck
lin finance_V2 = mkV2 (mkV "financer") ; -- tocheck
lin financial_A = mkA "financier" ;
lin financier_N = mkN "financier" masculine ; -- tocheck
lin finch_N = mkN "pinson" masculine ; -- tocheck
lin find_N = mkN "trouvaille" feminine ; -- tocheck
lin find_V = mkV "trouver" ;
lin find_V2 = L.find_V2 ;
lin find_V2A = mkV2A (mkV "trouver") ;
lin find_VS = mkVS (mkV "trouver") ;
lin find_out_V = advV OP_find_V OP_out_Adv ; -- guess-p-verb
lin find_out_V2 = prepV2 OP_find_V OP_out_Prep ; -- guess-p-verb
lin finding_N = mkN "conclusion" | mkN "résultat" ; -- UWN
lin fine_A = mkA "bien" | mkA "beau" | mkA "fin" ; -- tocheck
lin fine_N = mkN "amende" feminine ; -- tocheck
lin finesse_N = mkN "finesse" feminine ; -- tocheck
lin finger_N = mkN "doigt" masculine ; -- tocheck
lin finger_V2 = mkV2 (mkV "pointer") | mkV2 (mkV "doigter") | mkV2 (mkV "tripoter") ; -- tocheck
lin fingerboard_N = mkN "touche" feminine ; -- tocheck
lin fingering_N = mkN "doigtage" masculine ; -- tocheck
lin fingermark_N = mkN "empreinte_digitale" ; -- UWN
lin fingernail_N = L.fingernail_N ;
lin fingerstall_N = mkN "lit_de_camp" ; -- UWN
lin fingertip_N = mkN "bout_des_doigts" ; -- UWN
lin finial_N = mkN "fleuron" masculine ; -- tocheck
lin finical_A = mkA "tatasse" | mkA "tatillon" ; -- UWN
lin finicky_A = mkA "tatasse" | mkA "tatillon" ; -- UWN
lin finish_N = mkN "fin" feminine | mkN "fini" masculine ; -- tocheck
lin finish_V = mkV "achever" | mkV "finir" ; -- UWN
lin finish_V2 = mkV2 (mkV "finir") ; -- tocheck
lin finish_off_V2 = prepV2 OP_finish_V OP_off_Prep ; -- guess-p-verb
lin finish_up_V = advV OP_finish_V OP_up_Adv ; -- guess-p-verb
lin finish_up_with_V2 = prepV2 (advV OP_finish_V OP_up_Adv ) OP_with_Prep ; -- guess-p-verb
lin finish_with_V2 = prepV2 OP_finish_V OP_with_Prep ; -- guess-p-verb
lin finished_A = variants {} ; --
lin finite_A = mkA "fini" ; -- tocheck
lin finiteness_N = mkN "finité" feminine ; -- tocheck
lin fink_N = mkN "canari" | mkN "fink" ; -- UWN
lin finland_PN = mkPN "Finlande" ; -- status=guess src=geonames
lin finnishFem_N = mkN "finlandaise" ;
lin finnishMasc_N = mkN "finlandais" ;
lin finnish_A = mkA "finlandais" ;
lin fiord_N = mkN "Fjord" | mkN "fiord" | mkN "fjord" ; -- UWN
lin fir_N = mkN "sapin" masculine ; -- tocheck
lin fire_1_N = L.fire_N ;
lin fire_2_N = L.fire_N ;
lin fire_N = variants {} ; --
lin fire_V = variants {} ; -- mkV2 (mkV "tirer") | mkV2 (mkV I.cuire_V2) | mkV2 (mkV "licencier") ; -- tocheck
lin fire_V2 = mkV2 (mkV "tirer") | mkV2 (mkV I.cuire_V2) | mkV2 (mkV "licencier") ; -- tocheck
lin fire_away_V = advV OP_fire_V OP_away_Adv ; -- guess-p-verb
lin fire_back_V = advV OP_fire_V OP_back_Adv ; -- guess-p-verb
lin fire_off_V2 = prepV2 OP_fire_V OP_off_Prep ; -- guess-p-verb
lin fire_up_V = advV OP_fire_V OP_up_Adv ; -- guess-p-verb
lin fire_up_V2 = prepV2 OP_fire_V OP_up_Prep ; -- guess-p-verb
lin firearm_N = mkN "arme_à_feu" | mkN "feu" | mkN "part" ; -- UWN
lin fireball_N = mkN "bolide" masculine ; -- tocheck
lin fireboat_N = mkN "bateau-pompe" ; -- UWN
lin firebomb_N = mkN "incendiaire" ; -- UWN
lin firebrand_N = mkN "énergumène" | mkN "torche" feminine ; -- tocheck
lin firebug_N = mkN "gendarme" ; -- tocheck
lin firecracker_N = mkN "pétard" masculine ; -- tocheck
lin firedamp_N = mkN "grisou" masculine ; -- tocheck
lin firedog_N = mkN "chien" ; -- UWN
lin firefly_N = mkN "luciole" feminine ; -- tocheck
lin fireman_N = mkN "pompier" ; -- UWN
lin fireplace_N = mkN "foyer" feminine ; -- tocheck
lin fireplug_N = mkN "Hydrant" | mkN "borne_d’incendie" | mkN "bouche_d'incendie" | mkN "hydrant" | mkN "hydrants" ; -- UWN
lin fireproof_A = mkA "ignifuge" ; -- tocheck
lin firewall_N = mkN "pare-feu" masculine ; -- tocheck
lin firm_A = mkA "fort" | mkA "présent" | mkA "puissant" | mkA "robuste" | mkA "solide" ; -- UWN
lin firm_N = mkN "entreprise" | mkN "firme" ; -- UWN
lin firmament_N = mkN "sphère_céleste" ; -- UWN
lin firmness_N = mkN "fermeté" ; -- UWN
lin firmware_N = mkN "micrologiciel" masculine ; -- tocheck
lin first_A = variants {} ; --
lin first_Adv = variants {} ; -- tocheck
lin firstborn_N = mkN "premier-né" ; -- tocheck
lin firstly_Adv = variants {} ; --
lin fiscal_A = variants {} ; --
lin fish_N = L.fish_N ;
lin fish_V = variants {} ; --
lin fish_V2 = variants {} ; --
lin fishbone_N = mkN "arête" feminine ; -- tocheck
lin fisher_N = mkN "pékan" masculine | mkN "pêcheur" ; -- tocheck
lin fisherman_N = mkN "pêcheur" masculine ; -- tocheck
lin fishery_N = mkN "pêcherie" feminine ; -- tocheck
lin fisheye_A = mkA "grand-angle" ; -- UWN
lin fish_hook_N = mkN "hameçon" masculine ; -- tocheck
lin fishing_N = mkN "pêche" feminine ; -- tocheck
lin fishmonger_N = mkN "poissonnier" masculine ; -- tocheck
lin fishnet_N = mkN "filet" | mkN "filet_de_pêche" ; -- UWN
lin fishwife_N = mkN "poissarde" ; -- tocheck
lin fishy_A = mkA "suspect" ; -- tocheck
lin fissile_A = mkA "fissible" ; -- tocheck
lin fission_N = mkN "fission" | mkN "fission_nucléaire" ; -- UWN
lin fissionable_A = mkA "fissile" ; -- UWN
lin fissiparous_A = mkA "fissurant" | mkA "incohérent" ; -- tocheck
lin fissure_N = mkN "fissure" feminine ; -- tocheck
lin fist_N = mkN "poing" masculine ; -- tocheck
lin fistfight_N = mkN "pugilat" masculine ; -- tocheck
lin fistula_N = mkN "fistule" | mkN "sinus" ; -- UWN
lin fit_A = variants {} ; --
lin fit_N = mkN "crise" feminine ; -- tocheck
lin fit_V = variants {} ; -- mkV2 (mkV I.convenir_V2) | mkV2 (mkV "ajuster") ; -- tocheck
lin fit_V2 = mkV2 (mkV I.convenir_V2) | mkV2 (mkV "ajuster") ; -- tocheck
lin fit_in_V = mkV "correspondre" | mkV "harmoniser" | mkV "s'accorder" ; -- UWN
lin fit_in_V2 = prepV2 OP_fit_V OP_in_Prep ; -- guess-p-verb
lin fit_in_with_V2 = prepV2 (advV OP_fit_V OP_in_Adv ) OP_with_Prep ; -- guess-p-verb
lin fit_into_V2 = prepV2 OP_fit_V OP_into_Prep ; -- guess-p-verb
lin fit_out_V2 = prepV2 OP_fit_V OP_out_Prep ; -- guess-p-verb
lin fit_out_with_V2 = prepV2 (advV OP_fit_V OP_out_Adv ) OP_with_Prep ; -- guess-p-verb
lin fit_up_V2 = prepV2 OP_fit_V OP_up_Prep ; -- guess-p-verb
lin fitness_N = mkN "fitness" masculine ; -- tocheck
lin fitting_A = mkA "approprié" ; -- tocheck
lin fitting_N = mkN "essayage" masculine ; -- tocheck
lin fivefold_A = mkA "quintuple" ; -- UWN
lin fix_N = mkN "réparation" feminine | mkN "dose" feminine ; -- tocheck
lin fix_V = variants {} ; -- mkV2 (mkV "fixer") | mkV2 (mkV "réparer") ; -- tocheck
lin fix_V2 = mkV2 (mkV "fixer") | mkV2 (mkV "réparer") ; -- tocheck
lin fix_up_V2 = prepV2 OP_fix_V OP_up_Prep ; -- guess-p-verb
lin fixation_N = mkN "fixation" feminine ; -- tocheck
lin fixed_A = variants {} ; --
lin fixer_N = mkN "fixateur" masculine ; -- tocheck
lin fixture_N = mkN "réparation" ; -- UWN
lin fjord_N = mkN "fjord" masculine ; -- tocheck
lin flabbergast_V2 = mkV2 (mkV "époustoufler") ; -- tocheck
lin flabby_A = mkA "ramolli" ; -- tocheck
lin flaccid_A = mkA "flasque" ; -- tocheck
lin flag_N = mkN "option" feminine | mkN "drapeau" masculine | mkN "pavillon" masculine ; -- tocheck
lin flag_V2 = mkV2 (mkV "affaiblir") ; -- tocheck
lin flagellation_N = mkN "Flagellation" | mkN "flagellation" ; -- UWN
lin flageolet_N = mkN "flageolet" masculine ; -- tocheck
lin flagitious_A = mkA "atroce" | mkA "monstrueux" ; -- UWN
lin flagrant_A = mkA "flagrant" ; -- tocheck
lin flagstone_N = mkN "dalle" feminine ; -- tocheck
lin flail_N = mkN "fléau" masculine ; -- tocheck
lin flail_V2 = mkV2 (reflV (mkV I.débattre_V2)) ; -- tocheck
lin flair_N = mkN "style" masculine | mkN "don" masculine ; -- tocheck
lin flake_N = mkN "lâche" masculine | mkN "éclat" masculine ; -- tocheck
lin flake_V = mkV (mkV "peler") ; -- tocheck
lin flaky_A = mkA "lâcheur" ; -- tocheck
lin flamboyant_A = mkA "extravagant" ; -- tocheck
lin flame_N = mkN "polémique" feminine | mkN "flamme" feminine ; -- tocheck
lin flamen_N = mkN "flamine" masculine ; -- tocheck
lin flamethrower_N = mkN "lance-flamme" masculine ; -- tocheck
lin flamingo_N = mkN "flamant" masculine ; -- tocheck
lin flammable_A = mkA "inflammable" ; -- tocheck
lin flange_N = mkN "bride" feminine ; -- tocheck
lin flank_N = mkN "flanchet" masculine | mkN "flanc" masculine ; -- tocheck
lin flannel_N = mkN "flanelle" feminine ; -- tocheck
lin flap_N = mkN "abattant" masculine ; -- tocheck
lin flapper_N = mkN "garçonne" feminine ; -- tocheck
lin flare_N = mkN "atterrissage" masculine ; -- tocheck
lin flash_N = variants {} ; --
lin flash_V = variants {} ; -- mkV2 (mkV "clignoter") | mkV2 (reflV (mkV "exhiber")) ; -- tocheck
lin flashback_N = mkN "flashback" masculine ; -- tocheck
lin flasher_N = mkN "exhibitionniste" ; -- tocheck
lin flashgun_N = mkN "flash" ; -- tocheck
lin flashiness_N = mkN "culot" ; -- UWN
lin flashlight_N = mkN "lampe_de_poche" | mkN "torche" ; -- UWN
lin flashover_N = mkN "embrasement_généralisé_éclair" ; -- UWN
lin flask_N = mkN "flacon" masculine | mkN "fiole" feminine ; -- tocheck
lin flat_A = mkA "plan" | mkA "bémol" | mkA "bas" | mkA "ennuyeux" | mkA "plat" ; -- tocheck
lin flat_Adv = mkAdv "pile" ; -- tocheck
lin flat_N = mkN "bémol" masculine ; -- tocheck
lin flat_car_N = mkN "truc" ; -- UWN
lin flatmate_N = mkN "colocataire" ; -- tocheck
lin flatness_N = mkN "matité" feminine | mkN "platitude" feminine | mkN "planéité" feminine ; -- tocheck
lin flatten_V = mkV "baisser" | mkV "bémoliser" ; -- UWN
lin flatten_V2 = mkV2 (mkV "aplatir") ; -- tocheck
lin flatter_V2 = mkV2 (mkV "flatter") ; -- tocheck
lin flatterer_N = mkN "flatteur" masculine ; -- tocheck
lin flatulence_N = mkN "flatulence" feminine ; -- tocheck
lin flatworm_N = mkN "Platyhelminthes" | mkN "plathelminthe" | mkN "plathelminthes" | mkN "platodes" | mkN "platyhelminthes" | mkN "ténidé" | mkN "vers_plats" ; -- UWN
lin flaunt_V2 = mkV2 (mkV "étaler") ; -- tocheck
lin flautist_N = mkN "flûtiste" ; -- tocheck
lin flavivirus_N = mkN "flavivirus" ; -- UWN
lin flavourer_N = mkN "aromate" | mkN "aromatisant" | mkN "assaisonnement" | mkN "parfum" | mkN "épice" ; -- UWN
lin flavour_N = mkN "saveur" feminine | mkN "style" masculine | mkN "goût" ; -- tocheck
lin flavour_V2 = mkV2 (mkV "assaisonner") ; -- tocheck
lin flavouring_N = mkN "aromate" | mkN "aromatisant" | mkN "assaisonnement" | mkN "parfum" | mkN "épice" ; -- UWN
lin flaw_N = mkN "tumulte" masculine | mkN "faille" feminine | mkN "bourrasque" feminine | mkN "défaut" masculine ; -- tocheck
lin flawless_A = mkA "parfait" ; -- tocheck
lin flax_N = mkN "lin" masculine ; -- tocheck
lin flaxen_A = mkA "sableux" ; -- UWN
lin flay_V2 = mkV2 (mkV "écorcher") ; -- tocheck
lin flea_N = mkN "puce" feminine ; -- tocheck
lin fleck_N = mkN "flocon" | mkN "tache" feminine ; -- tocheck
lin fleck_V2 = mkV2 (mkV "tacheter") ; -- tocheck
lin fledgling_A = mkA "inexpérimenté" ; -- tocheck
lin fledgling_N = mkN "novice" | mkN "oisillon" masculine ; -- tocheck
lin flee_V = variants {} ; -- mkV2 (reflV (mkV I.enfuir_V)) | mkV2 (mkV I.fuir_V2) ; -- tocheck
lin flee_V2 = mkV2 (reflV (mkV I.enfuir_V)) | mkV2 (mkV I.fuir_V2) ; -- tocheck
lin fleece_N = mkN "toison" feminine | mkN "fleece" | mkN "polaire" ; -- tocheck
lin fleece_V2 = mkV2 (mkV "dévaliser") ; -- tocheck
lin fleeceable_A = mkA "crédule" | mkA "vert" ; -- UWN
lin fleet_N = mkN "flotte" feminine ; -- tocheck
lin fleet_PN = mkPN "Fleet" ; -- status=guess src=geonames
lin fleeting_A = mkA "fugace" ; -- tocheck
lin fleetwood_PN = mkPN "Fleetwood" ; -- status=guess src=geonames
lin flesh_N = mkN "chair" feminine | mkN "chair" | mkN "carnation" feminine | mkN "pulpe" | mkN "corps" | mkN "peau" ; -- tocheck
lin fleshiness_N = mkN "obésité" ; -- UWN
lin fleshy_A = mkA "viandeux" | mkA "carné" ; -- tocheck
lin flex_V2 = mkV2 (mkV "bander") ; -- tocheck
lin flexibility_N = mkN "souplesse" feminine ; -- tocheck
lin flexible_A = mkA "flexible" | mkA "souple" ; -- tocheck
lin flibbertigibbet_N = mkN "écervelé" masculine ; -- tocheck
lin flick_N = mkN "film" ; -- UWN
lin flick_V2 = mkV2 (mkV "défiler") ; -- tocheck
lin flicker_V = mkV (mkV "scintiller") ; -- tocheck
lin flies_N = mkN "flies" ; -- UWN
lin flight_N = mkN "fuite" feminine | mkN "vol" masculine | mkN "volée" feminine ; -- tocheck
lin flighty_A = mkA "nerveux" ; -- UWN
lin flimsy_A = mkA "fin" | mkA "mince" | mkA "ténu" ; -- UWN
lin flinch_V = mkV (mkV "broncher") ; -- tocheck
lin fling_N = mkN "aventure" feminine ; -- tocheck
lin fling_V = variants {} ; --
lin fling_V2 = variants {} ; --
lin flint_N = mkN "silex" masculine ; -- tocheck
lin flint_PN = mkPN "Flint" ; -- status=guess src=geonames
lin flip_A = mkA "impudent" | mkA "insolent" ; -- UWN
lin flippant_A = mkA "désinvolte" ; -- tocheck
lin flipper_N = mkN "aileron" masculine | mkN "palme" ; -- tocheck
lin flirt_N = mkN "flirt" masculine ; -- tocheck
lin flirt_V = mkV (mkV "draguer") ; -- tocheck
lin flirtatious_A = mkA "coquette" ; -- tocheck
lin flit_V = mkV (mkV "virevolter") ; -- tocheck
lin flitch_N = mkN "flèche" feminine ; -- tocheck
lin float_N = mkN "flotteur" masculine | mkN "flottant" masculine | mkN "char" masculine ; -- tocheck
lin float_V = L.float_V ;
lin flocculation_N = mkN "floculation" ; -- UWN
lin flock_N = mkN "vol" masculine | mkN "troupeau" masculine | mkN "congrégation" feminine ; -- tocheck
lin floe_N = mkN "banquise" feminine ; -- tocheck
lin flog_V2 = mkV2 (mkV "flageller") ; -- tocheck
lin flogging_N = mkN "flagellation" feminine ; -- tocheck
lin flood_N = mkN "inondation" feminine ; -- tocheck
lin flood_V = mkV "inonder" ; -- UWN
lin flood_V2 = mkV2 (mkV "inonder") | mkV2 (mkV "submerger") ; -- tocheck
lin floodgate_N = mkN "vanne" feminine ; -- tocheck
lin floor_N = L.floor_N ;
lin flooring_N = mkN "pays" | mkN "plancher" | mkN "sol" | mkN "étage" ; -- UWN
lin flop_Adv = mkAdv "droit" | mkAdv "à_droite" ; -- UWN
lin flop_N = mkN "effondrement" masculine | mkN "four" masculine ; -- tocheck
lin flop_V = mkV "tomber" ; -- UWN
lin flop_V2 = mkV2 (reflV (mkV "effondrer")) ; -- tocheck
lin floppy_A = mkA "souple" ; -- tocheck
lin flora_PN = mkPN "Flora" ; -- status=guess src=geonames
lin floral_A = mkA "floral" ; -- tocheck
lin florence_1_PN = mkPN "Florence" ; -- status=guess src=geonames
lin florence_2_PN = mkPN "Florence" ; -- status=guess src=geonames
lin floret_N = mkN "fleuron" masculine ; -- tocheck
lin floriculture_N = mkN "floriculture" ; -- UWN
lin florid_A = mkA "sanguine" ; -- UWN
lin florida_PN = mkPN "Florida" ; -- status=guess src=geonames
lin florist_N = mkN "fleuriste" ; -- tocheck
lin floss_N = mkN "fil_dentaire" ; -- UWN
lin flotilla_N = mkN "flottille" feminine ; -- tocheck
lin flotsam_N = mkN "épave" feminine ; -- tocheck
lin flounder_N = mkN "flet" masculine ; -- tocheck
lin flour_N = mkN "farine" feminine ; -- tocheck
lin flour_V2 = mkV2 (mkV "fariner") ; -- tocheck
lin flourish_N = mkN "gesticulation" | mkN "fioriture" ; -- tocheck
lin flourish_V = variants {} ; -- mkV2 (mkV "fleurir") ; -- tocheck
lin flout_V2 = mkV2 (mkV "mépriser") ; -- tocheck
lin flow_N = mkN "écoulement" masculine | mkN "flux" masculine ; -- tocheck
lin flow_V = L.flow_V ;
lin flowage_N = mkN "inondation" ; -- UWN
lin flower_N = L.flower_N ;
lin flower_V = mkV (mkV "fleurir") ; -- tocheck
lin flowerbed_N = mkN "parterre_de_fleurs" | mkN "planche" | mkN "plate-bande" ; -- UWN
lin flowered_A = mkA "floral" ; -- UWN
lin flowerpot_N = mkN "Pot_de_fleurs" | mkN "pot_de_fleurs" ; -- UWN
lin flu_N = mkN "grippe" feminine ; -- tocheck
lin fluctuate_V = mkV (mkV "onduler") | mkV (mkV "fluctuer") ; -- tocheck
lin fluctuation_N = mkN "fluctuation" feminine ; -- tocheck
lin flue_N = mkN "conduit" masculine ; -- tocheck
lin fluent_A = mkA "courant" ; -- tocheck
lin fluff_N = mkN "duvet" masculine ; -- tocheck
lin fluffy_A = mkA "pelucheux" ; -- tocheck
lin flugelhorn_N = mkN "bugle" ; -- tocheck
lin fluid_A = mkA "fluide" | mkA "instable" ; -- UWN
lin fluid_N = mkN "fluide" masculine ; -- tocheck
lin fluke_N = mkN "pelle" feminine | mkN "douve" feminine ; -- tocheck
lin flunk_V2 = mkV2 (mkV "louper") ; -- tocheck
lin fluorescein_N = mkN "fluorescéine" ; -- UWN
lin fluorescence_N = mkN "fluorescence" ; -- UWN
lin fluoride_N = mkN "fluorure" feminine ; -- tocheck
lin fluorine_N = mkN "fluor" masculine ; -- tocheck
lin fluorite_N = mkN "fluorite" feminine ; -- tocheck
lin fluorocarbon_N = mkN "fluorocarbone" ; -- tocheck
lin fluorouracil_N = mkN "fluorouracil" ; -- UWN
lin flush_N = mkN "flush" ; -- tocheck
lin flush_V = mkV "rougir" ; -- UWN
lin flush_V2 = mkV2 (mkV "rougir") ; -- tocheck
lin fluster_N = mkN "perturbation" ; -- UWN
lin flute_N = mkN "flûte" feminine ; -- tocheck
lin fluting_N = mkN "cannelure" | mkN "flûte" | mkN "rainure" | mkN "sillon" ; -- UWN
lin flutist_N = mkN "flutiste" | mkN "flûtiste" ; -- UWN
lin flutter_V2 = mkV2 (mkV "voleter") ; -- tocheck
lin fluvial_A = mkA "fluvial" ; -- tocheck
lin flux_N = mkN "décapant" masculine ; -- tocheck
lin fly_N = mkN "mouche" feminine | mkN "braguette" feminine ; -- tocheck
lin fly_V = L.fly_V ;
lin fly_V2 = mkV2 (mkV "voler") ; -- tocheck
lin fly_about_V = advV OP_fly_V OP_about_Adv ; -- guess-p-verb
lin fly_around_V = advV OP_fly_V OP_around_Adv ; -- guess-p-verb
lin fly_at_V2 = prepV2 OP_fly_V OP_at_Prep ; -- guess-p-verb
lin fly_by_V = advV OP_fly_V OP_by_Adv ; -- guess-p-verb
lin fly_fish_V = variants {} ; -- guess-p-verb
lin fly_into_V2 = prepV2 OP_fly_V OP_into_Prep ; -- guess-p-verb
lin fly_out_V = advV OP_fly_V OP_out_Adv ; -- guess-p-verb
lin flyblown_A = mkA "corrompu" | mkA "putride" ; -- tocheck
lin flyer_N = mkN "tract" | mkN "pilote" ; -- tocheck
lin flyleaf_N = mkN "flyleaf" | mkN "page_de_garde" ; -- UWN
lin flypaper_N = mkN "attrape-mouche" | mkN "papier_tue-mouche" | mkN "papier_tue-mouches" ; -- UWN
lin flywheel_N = mkN "volant" masculine ; -- tocheck
lin fo'c'sle_N = mkN "gaillard" ; -- UWN
lin foal_N = mkN "poulain" masculine ; -- tocheck
lin foal_V = mkV (mkV "pouliner") ; -- tocheck
lin foam_N = mkN "écume" feminine ; -- tocheck
lin foam_V = mkV (mkV "écumer") ; -- tocheck
lin foamy_A = mkA "mousseux" ; -- tocheck
lin fob_N = mkN "châtelaine" feminine ; -- tocheck
lin focus_N = mkN "attention" feminine | mkN "épicentre" masculine | mkN "foyer" masculine ; -- tocheck
lin focus_V = mkV "centrer" | mkV "concentrer" ; -- UWN
lin focus_V2 = mkV2 (mkV "focaliser") | mkV2 (reflV (mkV "concentrer")) | mkV2 (mkV "concentrer") ; -- tocheck
lin focus_on_V2 = prepV2 OP_focus_V OP_on_Prep ; -- guess-p-verb
lin fodder_N = mkN "fourrage" masculine ; -- tocheck
lin foetus_N = mkN "fruit" | mkN "fœtus" ; -- UWN
lin fog_N = L.fog_N ;
lin fogey_N = mkN "barbon" ; -- tocheck
lin foggia_PN = mkPN "Foggia" ; -- status=guess src=geonames
lin foggy_A = mkA "brumeux" ; -- tocheck
lin foible_N = mkN "faiblesse" feminine | mkN "travers" masculine | mkN "faible" masculine ; -- tocheck
lin foil_N = mkN "feuille" feminine | mkN "fleuret" masculine ; -- tocheck
lin foil_V2 = mkV2 (mkV "déjouer") ; -- tocheck
lin foist_V2 = mkV2 (mkV "imposer") ; -- tocheck
lin fold_N = mkN "pliage" | mkN "pli" | mkN "bercail" ; -- tocheck
lin fold_V = variants {} ; -- mkV2 (reflV (mkV "effondrer")) | mkV2 (mkV "plier") | mkV2 (reflV (mkV "replier")) | mkV2 (reflV (mkV "coucher")) ; -- tocheck
lin fold_V2 = mkV2 (reflV (mkV "effondrer")) | mkV2 (mkV "plier") | mkV2 (reflV (mkV "replier")) | mkV2 (reflV (mkV "coucher")) ; -- tocheck
lin folder_N = mkN "dossier" masculine ; -- tocheck
lin folderol_N = mkN "débris" | mkN "tripe" ; -- UWN
lin foliage_N = mkN "feuillage" masculine ; -- tocheck
lin foliation_N = mkN "feuilletage" masculine ; -- tocheck
lin folk_N = mkN "peuple" ; -- tocheck
lin folkestone_PN = mkPN "Folkestone" ; -- status=guess src=geonames
lin folklore_N = mkN "folklore" ; -- tocheck
lin folks_N = mkN "common_people" | mkN "peuple" ; -- UWN
lin folktale_N = mkN "conte" feminine ; -- tocheck
lin follicle_N = mkN "follicule" masculine ; -- tocheck
lin follow_V = mkV I.suivre_V2 ;
lin follow_V2 = I.suivre_V2 ;
lin follow_VS = mkVS (mkV I.suivre_V2) ;
lin follow_on_V = advV OP_follow_V OP_on_Adv ; -- guess-p-verb
lin follow_on_from_V2 = prepV2 (advV OP_follow_V OP_on_Adv ) OP_from_Prep ; -- guess-p-verb
lin follow_through_V = mkV "appliquer" | mkV "implémenter" | mkV "réaliser" | mkV "rédiger" | mkV "réviser" ; -- UWN
lin follow_up_N = mkN "suivi" masculine ; -- tocheck
lin follow_up_V2 = prepV2 OP_follow_V OP_up_Prep ; -- guess-p-verb
lin follower_N = mkN "poursuivant" masculine ; -- tocheck
lin following_A = mkA "suivant" | mkA "favorable" ; -- tocheck
lin following_N = mkN "mouvance" ; -- tocheck
lin following_Prep = variants {} ; --
lin folly_N = mkN "folie" ; -- tocheck
lin fomentation_N = mkN "fomentation" feminine ; -- tocheck
lin fomite_N = mkN "Fomite" | mkN "fomite" | mkN "véhicule" | mkN "«_fomites_»" ; -- UWN
lin fond_A = variants {} ; --
lin fondle_V2 = mkV2 (mkV "caresser") ; -- tocheck
lin fondue_N = mkN "fondue" feminine ; -- tocheck
lin font_N = mkN "fonte" feminine | mkN "fonts" ; -- tocheck
lin fontanelle_N = mkN "fontanelle" feminine ; -- tocheck
lin food_N = mkN "manger" | mkN "aliment" masculine | mkN "nourriture" feminine ;
lin fool_N = mkN "imbécile" masculine | mkN "fou" masculine ; -- tocheck
lin fool_V2 = mkV2 (mkV "duper") ; -- tocheck
lin foolish_A = mkA "sot" | mkA "idiot" ; -- tocheck
lin foolishness_N = mkN "bêtise" | mkN "stupidité" ; -- UWN
lin foot_N = L.foot_N ;
lin foot_V2 = mkV2 (mkV "payer") ; -- tocheck
lin football_N = mkN "football" masculine ; -- tocheck
lin footballer_N = mkN "footballeur" masculine ; -- tocheck
lin footbridge_N = mkN "passerelle" feminine ; -- tocheck
lin footer_N = mkN "foot" masculine ; -- tocheck
lin footfall_N = mkN "disposition" | mkN "mesure" | mkN "pas" | mkN "étape" ; -- UWN
lin foothill_N = mkN "contrefort" masculine ; -- tocheck
lin footman_N = mkN "laquais" masculine ; -- tocheck
lin footmark_N = mkN "empreinte" | mkN "pas" ; -- UWN
lin footnote_N = mkN "page" | mkN "supplément" ; -- UWN
lin footpath_N = mkN "trottoir" masculine ; -- tocheck
lin footprint_N = mkN "empreinte" ; -- UWN
lin foot_race_N = mkN "course" ; -- UWN
lin footslogger_N = mkN "fantassin" ; -- UWN
lin footstep_N = mkN "pas" masculine ; -- tocheck
lin footstool_N = mkN "repose-pied" masculine ; -- tocheck
lin footwear_N = mkN "souliers" ; -- tocheck
lin fop_N = mkN "bellâtre" masculine ; -- tocheck
lin foppish_A = mkA "soigné" ; -- tocheck
lin for_Adv = mkAdv "pour" ;
lin for_PConj = lin PConj (ss "for") ;
lin for_Prep = S.for_Prep ;
lin for_example_Adv = mkAdv "par_exemple" ; -- UWN
lin for_instance_Adv = mkAdv "par_exemple" ; -- UWN
lin forage_N = mkN "fourrager" | mkN "fourrage" masculine ; -- tocheck
lin forage_V = mkV (mkV "fourrager") ; -- tocheck
lin foramen_N = mkN "foramen" | mkN "hiatus" ; -- UWN
lin forbear_V = mkV "retenir" | mkV "s'empêcher" ; -- UWN
lin forbear_V2 = mkV2 (mkV "éviter") | mkV2 (reflV (mkV I.retenir_V2)) | mkV2 (mkV "refuser") | mkV2 (mkV "ajourner") ; -- tocheck
lin forbearance_N = mkN "longanimité" feminine ; -- tocheck
lin forbid_V2 = mkV2 (mkV I.interdire_V2) ; -- tocheck
lin forbidding_A = mkA "laid" | mkA "menaçant" | mkA "sinistre" | mkA "torve" ; -- UWN
lin force_N = mkN "force" feminine ;
lin force_V = variants {} ; -- mkV2V (mkV "forcer") ; -- tocheck
lin force_V2 = variants {} ; -- mkV2V (mkV "forcer") ; -- tocheck
lin force_V2V = mkV2V (mkV "forcer") ; -- tocheck
lin force_VS = variants {} ; -- mkV2V (mkV "forcer") ; -- tocheck
lin force_feed_V2 = mkV2 (mkV "gaver") ; -- tocheck
lin force_land_V = variants {} ; -- guess-p-verb
lin force_land_V2 = variants {} ; -- guess-p-verb
lin force_out_V = advV OP_force_V OP_out_Adv ; -- guess-p-verb
lin forceful_A = mkA "agissant" | mkA "puissant" ; -- UWN
lin forceless_A = mkA "faible" ; -- UWN
lin forceps_N = mkN "forceps" ; -- tocheck
lin forcible_A = mkA "forcé" | mkA "violent" | mkA "impressionnant" | mkA "puissant" ; -- tocheck
lin ford_N = mkN "gué" masculine ; -- tocheck
lin fore_Adv = mkAdv "en_avant" ; -- UWN
lin fore_N = mkN "arc" | mkN "bord" | mkN "proue" | mkN "étrave" ; -- UWN
lin forearm_N = mkN "avant-bras" masculine ; -- tocheck
lin forebear_N = mkN "ancêtre" masculine ; -- tocheck
lin forecast_N = mkN "prévision" feminine ; -- tocheck
lin forecast_V = variants {} ; -- mkV2 (mkV I.prévoir_V2) ; -- tocheck
lin forecast_V2 = mkV2 (mkV I.prévoir_V2) ; -- tocheck
lin forecast_VS = variants {} ; -- mkV2 (mkV I.prévoir_V2) ; -- tocheck
lin forecaster_N = mkN "devin" | mkN "prophète" | mkN "prophètesse" ; -- UWN
lin forecastle_N = mkN "gaillard" ; -- UWN
lin forefather_N = mkN "aïeul" masculine ; -- tocheck
lin forefinger_N = mkN "index" masculine ; -- tocheck
lin forefront_N = mkN "avant-garde" feminine ; -- tocheck
lin foregather_V = mkV "collectionner" | mkV "ramasser" | mkV "rassembler" | mkV "recueillir" | mkV "rencontrer" | mkV "réunir" ; -- UWN
lin forego_V2 = mkV2 (mkV "précéder") ; -- tocheck
lin foreground_N = mkN "avant-plan" ; -- UWN
lin forehand_N = mkN "coup_droit" ; -- UWN
lin forehead_N = mkN "front" masculine ; -- tocheck
lin foreign_1_A = variants {} ; --
lin foreign_2_A = variants {} ; --
lin foreign_A = mkA "étranger" ; -- tocheck
lin foreigner_N = mkN "étranger" masculine ; -- tocheck
lin foreignness_N = mkN "étrangeté" ; -- UWN
lin foreknow_V2 = mkV2 (mkV I.prévoir_V2) ; -- tocheck
lin foreknowledge_N = mkN "prescience" | mkN "précognition" ; -- UWN
lin foreman_N = mkN "chef" ; -- tocheck
lin foremast_N = mkN "mât_de_misaine" ; -- UWN
lin forename_N = mkN "prénom" masculine ; -- tocheck
lin forenoon_N = mkN "matinée" feminine ; -- tocheck
lin forensic_A = mkA "médicolégal" | mkA "légal" ; -- tocheck
lin foreplay_N = mkN "préliminaires" ; -- tocheck
lin foresee_V2 = mkV2 (mkV I.prévoir_V2) ; -- tocheck
lin foreshadow_V2 = mkV2 (mkV "présager") ; -- tocheck
lin foreshore_N = mkN "estran" ; -- tocheck
lin foresight_N = mkN "clairvoyance" feminine ; -- tocheck
lin forest_N = mkN "forêt" feminine ; -- tocheck
lin forestall_V2 = mkV2 (mkV "empêcher") ; -- tocheck
lin forested_A = mkA "forestier" ; -- tocheck
lin forester_N = mkN "forestier" masculine ; -- tocheck
lin forestiera_N = mkN "forestiera" ; -- UWN
lin forestry_N = mkN "sylviculture" feminine ; -- tocheck
lin foretaste_N = mkN "avant-goût" masculine ; -- tocheck
lin foretell_V2 = mkV2 (mkV I.prédire_V2) ; -- tocheck
lin forever_Adv = variants {} ; --
lin foreword_N = mkN "avant-propos" masculine ; -- tocheck
lin forfar_PN = mkPN "Forfar" ; -- status=guess src=geonames
lin forfeit_N = mkN "déchéance" | mkN "sacrifice" ; -- UWN
lin forfeit_V2 = mkV2 (mkV I.perdre_V2) | mkV2 (mkV "abandonner") ; -- tocheck
lin forfeiture_N = mkN "déchéance" | mkN "sacrifice" ; -- UWN
lin forgather_V = mkV "collectionner" | mkV "ramasser" | mkV "rassembler" | mkV "recueillir" | mkV "rencontrer" | mkV "réunir" ; -- UWN
lin forge_N = mkN "contrefaçon" feminine | mkN "forge" feminine ; -- tocheck
lin forge_V = variants {} ; -- mkV2 (mkV "falsifier") | mkV2 (mkV "forger") ; -- tocheck
lin forge_V2 = mkV2 (mkV "falsifier") | mkV2 (mkV "forger") ; -- tocheck
lin forger_N = mkN "faussaire" masculine | mkN "forgeron" masculine ; -- tocheck
lin forgery_N = mkN "contrefaçon" ; -- tocheck
lin forget_V = variants {} ; -- L.forget_V2 ;
lin forget_V2 = L.forget_V2 ;
lin forget_VS = variants {} ; -- L.forget_V2 ;
lin forget_me_not_N = mkN "ne-m'oubliez-pas" masculine ; -- tocheck
lin forgetful_A = mkA "oublieux" ; -- tocheck
lin forgettable_A = mkA "oubliable" ; -- tocheck
lin forgivable_A = mkA "excusable" ; -- UWN
lin forgive_V = variants {} ; -- mkV2 (mkV "pardonner") ; -- tocheck
lin forgive_V2 = mkV2 (mkV "pardonner") ; -- tocheck
lin forint_N = mkN "forint" ; -- UWN
lin fork_1_N = mkN "fourche" feminine | mkN "fourchette" feminine | mkN "fork" masculine ; -- tocheck
lin fork_3_N = variants {} ; --
lin fork_4_N = variants {} ; --
lin fork_N = variants {} ; --
lin forlorn_A = mkA "abandonné" | mkA "miserable" ; -- tocheck
lin forlornness_N = mkN "solitude" ; -- UWN
lin form_N = mkN "formulaire" masculine | mkN "forme" feminine ; --- split
lin form_V = reflV (mkV "former") ;
lin form_V2 = mkV2 (mkV "former") ;
lin formal_A = mkA "formel" ; -- tocheck
lin formaldehyde_N = mkN "formaldéhyde" masculine ; -- tocheck
lin formalin_N = mkN "formol" masculine ; -- tocheck
lin formalism_N = mkN "formalisme" masculine ; -- tocheck
lin formalization_N = mkN "formalisation" ; -- UWN
lin formalwear_N = mkN "tenue_de_soirée" ; -- UWN
lin format_N = mkN "format" masculine ; -- tocheck
lin formation_N = variants {} ; --
lin formby_PN = mkPN "Formby" ; -- status=guess src=geonames
lin former_A = mkA "premier" | mkA "précédent" ; -- tocheck
lin former_N = mkN "ancien" ; -- UWN
lin formidability_N = mkN "difficulté" ; -- UWN
lin formidable_A = mkA "formidable" ; -- tocheck
lin formosa_PN = mkPN "Formosa" ; -- status=guess src=geonames
lin formula_N = mkN "formule" feminine ; -- tocheck
lin formulate_V2 = mkV2 (mkV "formuler") ; -- tocheck
lin formulation_N = mkN "formulation" | mkN "élaboration" ; -- UWN
lin fornicate_V = mkV (mkV "forniquer") ; -- tocheck
lin fornication_N = mkN "fornication" feminine ; -- tocheck
lin forrader_Adv = mkAdv "en_avant" ; -- UWN
lin forsake_V2 = mkV2 (mkV "abandonner") ; -- tocheck
lin forswear_V2 = mkV2 (mkV "parjurer") | mkV2 (mkV "nier") ; -- tocheck
lin forsythia_N = mkN "forsythia" | mkN "forsythia_de_paris" ; -- UWN
lin fort_N = mkN "fort" masculine ; -- tocheck
lin fortaleza_PN = mkPN "Fortaleza" ; -- status=guess src=geonames
lin forte_A = mkA "molle" | mkA "mou" | mkA "piano" ; -- UWN
lin forth_Adv = variants {} ; --
lin forthcoming_A = mkA "prochain" | mkA "prévenant" ; -- tocheck
lin forthwith_Adv = mkAdv "aussitôt" ; -- tocheck
lin fortieth_A = mkA "quarantième" ; -- tocheck
lin fortieth_N = mkN "quarantième" masculine | mkN "quarantième" ; -- tocheck
lin fortification_N = mkN "fortification" feminine ; -- tocheck
lin fortify_V2 = mkV2 (mkV "fortifier") ; -- tocheck
lin fortnight_N = mkN "Quinzaine" | mkN "quinzaine" | mkN "quinze_jours" ; -- UWN
lin fortnightly_A = mkA "bimensuel" ; -- tocheck
lin fortnightly_Adv = mkAdv "bimensuellement" | adjAdv fortnightly_A ; -- tocheck -- derived
lin fortress_N = mkN "forteresse" feminine ; -- tocheck
lin fortuitous_A = mkA "fortuit" ; -- tocheck
lin fortunate_A = variants {} ; --
lin fortunately_Adv = adjAdv fortunate_A ; -- -- derived
lin fortune_N = mkN "destin" | mkN "fortune" ; -- tocheck
lin fortuneteller_N = mkN "coin-coin" | mkN "coincoin" | mkN "diseur_de_bonne_aventure" | mkN "diseuse_de_bonne_aventure" ; -- UWN
lin forum_N = mkN "forum" masculine ; -- tocheck
lin forward_A = mkA "avant" | mkA "osé" ; -- tocheck
lin forward_Adv = variants {} ; --
lin forwards_Adv = mkAdv "en_avant" ; -- UWN
lin fosse_N = mkN "Douve" | mkN "douve" | mkN "douves" | mkN "fossé" ; -- UWN
lin fossil_A = mkA "fossile" ; -- UWN
lin fossil_N = mkN "fossile" masculine ; -- tocheck
lin fossiliferous_A = mkA "fossilifère" ; -- tocheck
lin fossilization_N = mkN "fossilisation" feminine ; -- tocheck
lin foster_A = mkA "adoptif" ; -- tocheck
lin foster_V2 = mkV2 (mkV I.promouvoir_V2) | mkV2 (mkV "cultiver") | mkV2 (mkV "élever") ; -- tocheck
lin fostering_N = mkN "élevage" ; -- UWN
lin foul_A = mkA "souillé" ; -- tocheck
lin foul_N = mkN "faute" feminine ; -- tocheck
lin found_N = mkN "fonder" ; -- UWN
lin found_V2 = mkV2 (mkV "fonder") ; -- tocheck
lin foundation_N = mkN "fondation" feminine ; -- tocheck
lin founder_N = mkN "fondateur" masculine | mkN "fondeur" masculine ; -- tocheck
lin founder_V2 = mkV2 (mkV "couler") ; -- tocheck
lin foundling_N = mkN "enfant_trouvé" ; -- UWN
lin foundry_N = mkN "fonderie" feminine ; -- tocheck
lin fount_N = mkN "source" feminine ; -- tocheck
lin fountain_N = mkN "fontaine" feminine ; -- tocheck
lin foursome_N = mkN "quatuor" masculine ; -- tocheck
lin fovea_N = mkN "Fovéa" | mkN "fovéa" ; -- UWN
lin fowey_PN = mkPN "Fowey" ; -- status=guess src=geonames
lin fowl_N = mkN "oiseau" masculine | mkN "pintade" feminine | mkN "volaille" ; -- tocheck
lin fowler_N = mkN "fowler" ; -- UWN
lin fox_N = mkN "roublard" masculine | mkN "renard" masculine ; -- tocheck
lin foxglove_N = mkN "digitale" feminine ; -- tocheck
lin foxhound_N = mkN "fox_hound" ; -- UWN
lin foxhunt_N = mkN "chasse_à_courre" | mkN "vénerie" ; -- UWN
lin foxy_A = mkA "foxé" ; -- tocheck
lin foyer_N = mkN "foyer" masculine ; -- tocheck
lin fracas_N = mkN "bagarre" feminine ; -- tocheck
lin fractal_N = mkN "fractal" masculine ; -- tocheck
lin fraction_N = mkN "fraction" feminine ; -- tocheck
lin fracture_N = mkN "fracture" feminine ; -- tocheck
lin fragile_A = mkA "fragile" ; -- tocheck
lin fragility_N = mkN "fragilité" feminine ; -- tocheck
lin fragment_N = mkN "fragment" masculine ; -- tocheck
lin fragment_V2 = mkV2 (mkV "fragmenter") ; -- tocheck
lin fragmentation_N = mkN "fragmentation" ; -- tocheck
lin fragrance_N = mkN "parfum" masculine ; -- tocheck
lin fragrant_A = mkA "odorant" ; -- tocheck
lin frailty_N = mkN "vice" | mkN "vice-président" | mkN "étau" ; -- UWN
lin frame_N = mkN "trame" | mkN "manche" feminine | mkN "image" feminine | mkN "cadre" masculine | mkN "ossature" feminine ; -- tocheck
lin frame_V = mkV "rédiger" | mkV "écrire" ; -- UWN
lin frame_V2 = variants {} ; --
lin framework_N = mkN "charpente" | mkN "structure" ; -- tocheck
lin framing_N = mkN "encadrement" ; -- UWN
lin franc_N = mkN "franc" masculine ; -- tocheck
lin france_PN = mkPN "France" ; -- status=guess src=geonames
lin franchise_N = variants {} ; --
lin francis_PN = mkPN "Francis" ; -- status=guess src=geonames
lin francium_N = mkN "francium" masculine ; -- tocheck
lin frangible_A = mkA "brisable" | mkA "frangible" ; -- UWN
lin frangipane_N = mkN "frangipane" ; -- UWN
lin frangipani_N = mkN "frangipanier" | mkN "plumeria" ; -- UWN
lin frank_A = mkA "franc" ; -- tocheck
lin frank_N = mkN "chien" | mkN "franc" | mkN "hot-dog" ; -- UWN
lin frankfurter_N = mkN "chien" | mkN "franc" | mkN "hot-dog" ; -- UWN
lin frankincense_N = mkN "encens" masculine ; -- tocheck
lin franklin_N = mkN "franklin" ; -- UWN
lin frankly_Adv = adjAdv frank_A ; -- -- derived
lin frankness_N = mkN "franchise" feminine ; -- tocheck
lin frantic_A = mkA "éperdu" ; -- tocheck
lin fraserburgh_PN = mkPN "Fraserburgh" ; -- status=guess src=geonames
lin fraternal_A = mkA "fraternel" ; -- tocheck
lin fraternity_N = mkN "fraternité" feminine ; -- tocheck
lin fraternization_N = mkN "fraternisation" feminine ; -- tocheck
lin fraternize_V = mkV (mkV "fraterniser") ; -- tocheck
lin fratricide_N = mkN "fratricide" masculine ; -- tocheck
lin fraud_N = mkN "fraude" | mkN "imposteur" masculine ; -- tocheck
lin fraudulence_N = mkN "canular" | mkN "escroquerie" | mkN "fraude" | mkN "intox" ; -- UWN
lin fraudulent_A = mkA "frauduleux" ; -- tocheck
lin fray_N = mkN "bagarre" feminine ; -- tocheck
lin fray_V = mkV "frotter" | mkV "gratter" ; -- UWN
lin freak_N = mkN "caprice" masculine | mkN "original" masculine | mkN "monstre" masculine | mkN "fanatique" ; -- tocheck
lin freakishness_N = mkN "anormalité" ; -- UWN
lin freckle_N = mkN "tache_de_rousseur" | mkN "éphélide" ; -- UWN
lin freckleton_PN = mkPN "Freckleton" ; -- status=guess src=geonames
lin frederick_PN = mkPN "Frederick" ; -- status=guess src=geonames
lin frederiksberg_PN = mkPN "Frederiksberg" ; -- status=guess src=geonames
lin free_A = mkA "libre" | mkA "gratuit" ; ---- split: free world, free lunch
lin free_V2 = variants {} ; -- mkV2V (mkV "libérer") ; -- tocheck
lin free_V2V = mkV2V (mkV "libérer") ; -- tocheck
lin free_for_all_N = mkN "pagaille" feminine ; -- tocheck
lin free_up_V2 = prepV2 (lin V OP_free_V2) OP_up_Prep ; -- guess-p-verb
lin freebie_N = mkN "bonus" ; -- tocheck
lin freebooter_N = mkN "pillard" | mkN "pilleur" | mkN "saccageur" ; -- UWN
lin freedom_N = mkN "liberté" feminine ; -- tocheck
lin freelance_N = mkN "mercenaire" | mkN "pigiste" ; -- tocheck
lin freeloader_N = mkN "resquilleur" masculine ; -- tocheck
lin freemasonry_N = mkN "franc-maçonnerie" | mkN "maçonnerie" ; -- UWN
lin freesia_N = mkN "freesia" ; -- tocheck
lin free_standing_A = mkA "séparer" ; -- UWN
lin freetail_N = mkN "molossidae" ; -- UWN
lin freeware_N = mkN "graticiel" masculine ; -- tocheck
lin freeway_N = mkN "autoroute" ; -- tocheck
lin freeze_N = mkN "arrêt" | mkN "congeler" | mkN "geler" ; -- UWN
lin freeze_V = L.freeze_V ;
lin freeze_V2 = mkV2 (reflV (mkV "figer")) | mkV2 (mkV "geler") | mkV2 (mkV "congeler") ; -- tocheck
lin freezer_N = mkN "congélateur" ; -- tocheck
lin freiburg_PN = mkPN "Fribourg-en-Brisgau" ; -- status=guess src=geonames
lin freight_N = mkN "cargo" masculine | mkN "fret" ; -- tocheck
lin freighter_N = mkN "navire_marchand" ; -- UWN
lin frenchFem_N = mkN "française" ;
lin frenchMasc_N = variants {} ; ---- sense to be split
lin french_A = mkA "français" ;
lin frenetic_A = mkA "frénétique" ; -- tocheck
lin frenzy_N = mkN "frénésie" feminine ; -- tocheck
lin frequency_N = mkN "fréquence" feminine ; -- tocheck
lin frequent_A = mkA "fréquent" ; -- tocheck
lin frequent_V2 = mkV2 (mkV "fréquenter") ; -- tocheck
lin frequentative_N = mkN "fréquentatif" masculine ; -- tocheck
lin fresco_N = mkN "fresque" feminine ; -- tocheck
lin fresh_A = mkA "nouveau" | mkA "frais" | mkA "doux" ; -- tocheck
lin freshen_V = mkV "rafraîchir" ; -- UWN
lin freshen_up_V = mkV "rafraîchir" ; -- UWN
lin fresher_N = mkN "bizut" ; -- UWN
lin freshman_N = mkN "arpette" | mkN "bizut" | mkN "newbie" | mkN "nouveau_venu" ; -- UWN
lin freshness_N = mkN "fraîcheur" feminine ; -- tocheck
lin freshwater_PN = mkPN "Freshwater" ; -- status=guess src=geonames
lin fret_N = mkN "frette" feminine ; -- tocheck
lin fret_V2 = mkV2 (mkV "dévorer") | mkV2 (mkV "inquiéter") | mkV2 (mkV "ajourer") | mkV2 (reflV (mkV "inquiéter")) ; -- tocheck
lin fretful_A = mkA "irritable" | mkA "agité" ; -- tocheck
lin fretsaw_N = mkN "scie_sauteuse" ; -- UWN
lin friable_A = mkA "désagrégable" | mkA "friable" | mkA "lâche" ; -- tocheck
lin friar_N = mkN "frère" masculine ; -- tocheck
lin fricative_N = mkN "fricative" feminine ; -- tocheck
lin friction_N = mkN "friction" feminine | mkN "désaccord" masculine | mkN "frottement" masculine ; -- tocheck
lin fridge_N = L.fridge_N ;
lin friend_N = L.friend_N ;
lin friendliness_N = mkN "gentilesse" ; -- tocheck
lin friendly_A = mkA "amical" | mkA "allié" ; -- tocheck
lin friendly_N = mkN "ami" ; -- tocheck
lin friendship_N = mkN "amitié" | mkN "amitié" feminine ; -- tocheck
lin frieze_N = mkN "frise" masculine ; -- tocheck
lin frigate_N = mkN "frégate" feminine ; -- tocheck
lin fright_N = mkN "effroi" masculine ; -- tocheck
lin frighten_V2 = mkV2 (mkV "effrayer") ; -- tocheck
lin frighten_away_V2 = mkV2 (advV (lin V OP_frighten_V2) OP_away_Adv ) ; -- guess-p-verb
lin frighten_off_V2 = prepV2 (lin V OP_frighten_V2) OP_off_Prep ; -- guess-p-verb
lin frightened_A = variants {} ; --
lin frightening_A = mkA "effrayant" ; -- tocheck
lin frightful_A = mkA "effrayant" ; -- tocheck
lin frigid_A = mkA "frigide" ; -- tocheck
lin frigidity_N = mkN "frigidité" | mkN "froid" | mkN "froideur" ; -- UWN
lin frill_N = mkN "froufrou" masculine ; -- tocheck
lin frilly_A = mkA "crêpé" ; -- tocheck
lin fringe_N = mkN "frange" feminine | mkN "radicaux" masculine | mkN "périphérie" feminine ; -- tocheck
lin fringe_V2 = mkV2 (mkV "franger") ; -- tocheck
lin frisk_V2 = mkV2 (mkV "fouiller") ; -- tocheck
lin friskiness_N = mkN "sportivité" ; -- UWN
lin frisson_N = mkN "carquois" | mkN "frisson" | mkN "frissonner" | mkN "tremblement" ; -- UWN
lin fritillary_N = mkN "fritillaire" feminine ; -- tocheck
lin fritter_N = mkN "beignet" masculine ; -- tocheck
lin fritter_away_V = mkV "dissiper" | mkV "gaspiller" ; -- UWN
lin frivolity_N = mkN "frivolité" feminine ; -- tocheck
lin frivolous_A = mkA "frivole" | mkA "bagatelle" ; -- tocheck
lin frizzy_A = mkA "crépu" ; -- tocheck
lin frock_N = mkN "froc" masculine ; -- tocheck
lin frodsham_PN = mkPN "Frodsham" ; -- status=guess src=geonames
lin frog_N = mkN "talon" masculine | mkN "grenouille" feminine ; -- tocheck
lin frogfish_N = mkN "Antennariidae" | mkN "antennariidae" ; -- UWN
lin froghopper_N = mkN "cercopoidea" ; -- UWN
lin frogman_N = mkN "homme-grenouille" masculine ; -- tocheck
lin frogmouth_N = mkN "podarges" | mkN "podargidae" | mkN "podargidés" ; -- UWN
lin frolic_N = mkN "jeu" ; -- UWN
lin frolic_V = mkV (mkV "fôlatrer") ; -- tocheck
lin from_Prep = S.from_Prep ;
lin frome_PN = mkPN "Frome" ; -- status=guess src=geonames
lin front_A = variants {} ; --
lin front_N = mkN "avant" masculine | mkN "façade" feminine | mkN "front" masculine ; -- tocheck
lin frontal_A = mkA "frontal" ; -- tocheck
lin frontal_N = mkN "façade" ; -- UWN
lin frontier_N = mkN "frontière" feminine ; -- tocheck
lin frost_N = mkN "gel" masculine | mkN "givre" masculine ; -- tocheck
lin frostbite_N = mkN "gelure" feminine ; -- tocheck
lin frosting_N = mkN "glace" ; -- UWN
lin frosty_A = mkA "fissa" ; -- UWN
lin froth_N = mkN "mousse" feminine ; -- tocheck
lin frothy_A = mkA "mousseux" ; -- tocheck
lin frottage_N = mkN "frottage" ; -- UWN
lin frown_N = mkN "froncement" ; -- tocheck
lin frown_V = mkV (mkV "râler") ; -- tocheck
lin frozen_A = variants {} ; --
lin fructify_V2 = mkV2 (mkV "fructifier") ; -- tocheck
lin fructose_N = mkN "fructose" masculine ; -- tocheck
lin frugal_A = mkA "frugal" ; -- tocheck
lin frugality_N = mkN "frugalité" feminine ; -- tocheck
lin fruit_N = L.fruit_N ;
lin fruitcake_N = mkN "cake" masculine ; -- tocheck
lin fruiterer_N = mkN "fruitier" ; -- UWN
lin fruitful_A = mkA "fructueux" ; -- tocheck
lin fruition_N = mkN "réalisation" ; -- UWN
lin fruitless_A = mkA "vain" ; -- tocheck
lin frump_N = mkN "chien" ; -- UWN
lin frumpish_A = mkA "démodé" ; -- UWN
lin frumpy_A = mkA "démodé" ; -- tocheck
lin frustrate_V2 = variants {} ; --
lin frustrating_A = mkA "frustrant" ; -- tocheck
lin frustration_N = mkN "frustration" | mkN "frustration" feminine ; -- tocheck
lin frustum_N = mkN "tronc" ; -- UWN
lin fry_N = mkN "frite" feminine | mkN "frai" masculine ; -- tocheck
lin fry_V = mkV "frire" ; -- UWN
lin fry_V2 = mkV2 (mkV I.frire_V2) ; -- tocheck
lin frying_N = mkN "friture" ; -- UWN
lin fuchsia_N = mkN "fuchsia" masculine ; -- tocheck
lin fuck_N = mkN "baisage" masculine | mkN "connard" masculine | mkN "baiseuse" ; -- tocheck
lin fuck_V = variants {} ; -- mkV2 (mkV "baiser") | mkV2 (mkV "bousiller") | mkV2 (mkV "enculer") | mkV2 (mkV I.foutre_V2) ; -- tocheck
lin fuck_V2 = mkV2 (mkV "baiser") | mkV2 (mkV "bousiller") | mkV2 (mkV "enculer") | mkV2 (mkV I.foutre_V2) ; -- tocheck
lin fucker_N = mkN "baiseur" masculine ; -- tocheck
lin fucking_A = mkA "foutu" ;
lin fucking_Adv = variants {} ; --
lin fucus_N = mkN "fucus" ; -- UWN
lin fudge_N = mkN "caramel" masculine ; -- tocheck
lin fuel_N = mkN "carburant" masculine ; -- tocheck
lin fuel_V2 = mkV2 (mkV "alimenter") ; -- tocheck
lin fugitive_A = mkA "fuyant" | mkA "éphémère" ; -- tocheck
lin fugitive_N = mkN "fugitif" masculine ; -- tocheck
lin fugu_N = mkN "fugu" ; -- UWN
lin fugue_N = mkN "fugue" feminine ; -- tocheck
lin fulcrum_N = mkN "appui" | mkN "point" ; -- UWN
lin fulfil_V2 = mkV2 (mkV I.satisfaire_V2) ; -- tocheck
lin fulfillment_N = mkN "exécution" ; -- UWN
lin fulfilment_N = mkN "satisfaction" feminine ; -- tocheck
lin full_A = L.full_A ;
lin full_scale_A = mkA "complet" ; -- tocheck
lin full_time_A = variants {} ; --
lin fuller_N = mkN "tailleur" masculine ; -- tocheck
lin fullerene_N = mkN "Fullerène" | mkN "fullerène" | mkN "fullerènes" ; -- UWN
lin fully_Adv = adjAdv full_A ; -- -- derived
lin fulminate_N = mkN "fulminer" ; -- UWN
lin fulminate_V = mkV "fulminer" ; -- UWN
lin fulsome_A = mkA "huileux" | mkA "obséquieux" | mkA "oléagineux" | mkA "onctueux" ; -- UWN
lin fumble_V2 = mkV2 (mkV "tâtonner") | mkV2 (mkV "tripoter") ; -- tocheck
lin fumbler_N = mkN "boucher" ; -- UWN
lin fume_N = mkN "fumer" | mkN "fumée" ; -- UWN
lin fume_V2 = mkV2 (mkV "fulminer") ; -- tocheck
lin fumitory_N = mkN "fumeterre" feminine ; -- tocheck
lin fun_A = variants {} ; --
lin fun_AV = L.fun_AV ;
lin fun_N = mkN "amusement" masculine ; -- tocheck
lin funambulistFem_N = mkN "funambule" ; -- UWN
lin funambulistMasc_N = mkN "funambule" ; -- UWN
lin function_N = mkN "fonction" feminine ; -- tocheck
lin function_V = mkV (mkV "fonctionner") ; -- tocheck
lin functional_A = mkA "fonctionnel" ; -- tocheck
lin functionality_N = mkN "fonctionnalité" feminine ; -- tocheck
lin functionary_N = mkN "fonctionnaire" ; -- tocheck
lin fund_N = mkN "fonds" masculine ; -- tocheck
lin fund_V2 = mkV2 (mkV "financer") ; -- tocheck
lin fundamental_A = mkA "fondamental" ; -- tocheck
lin fundamental_N = mkN "fondement" ; -- tocheck
lin fundamentalism_N = mkN "fondamentalisme" masculine ; -- tocheck
lin fundamentalist_A = mkA "fondamentaliste" | mkA "intégriste" ; -- UWN
lin fundamentalist_N = mkN "fondamentaliste" ; -- tocheck
lin fundamentals_N = mkN "abc" | mkN "bases_de_l'économie" ; -- UWN
lin funding_N = variants {} ; --
lin funds_N = mkN "fonds" ; -- tocheck
lin funeral_N = mkN "funérailles" ; -- tocheck
lin funerary_A = mkA "funéraire" ; -- tocheck
lin fungible_A = mkA "fongible" ; -- tocheck
lin fungible_N = mkN "fongible" ; -- UWN
lin fungicidal_A = mkA "antifongique" ; -- UWN
lin fungicide_N = mkN "fongicide" masculine ; -- tocheck
lin fungus_N = mkN "fongus" masculine ; -- tocheck
lin funicular_A = mkA "funiculaire" ; -- UWN
lin funicular_N = mkN "funiculaire" masculine ; -- tocheck
lin funk_N = mkN "funk" masculine ; -- tocheck
lin funnel_N = mkN "entonnoir" masculine | mkN "cheminée" feminine ; -- tocheck
lin funnel_V2 = mkV2 (mkV "canaliser") ; -- tocheck
lin funniness_N = mkN "cocasserie" | mkN "comédie" ; -- UWN
lin funny_A = mkA "drôle" | mkA "étrange" ; -- tocheck
lin fur_N = mkN "fourrure" feminine | mkN "pelage" ; -- tocheck
lin furan_N = mkN "furane" masculine ; -- tocheck
lin furbelow_N = mkN "falbala" | mkN "volant" ; -- UWN
lin furcula_N = mkN "lunette" feminine ; -- tocheck
lin furious_A = mkA "furieux" ; -- tocheck
lin furl_V = mkV "ferler" ; -- UWN
lin furl_V2 = mkV2 (mkV "ferler") ; -- tocheck
lin furlong_N = mkN "furlong" masculine ; -- tocheck
lin furnace_N = mkN "four" masculine ; -- tocheck
lin furnish_V2 = mkV2 (mkV "fournir") ; -- tocheck
lin furniture_N = mkN "mobilier" masculine ; -- tocheck
lin furore_N = mkN "fureur" ; -- UWN
lin furred_A = mkA "poilu" | mkA "velu" ; -- UWN
lin furrier_N = mkN "fourreur" masculine ; -- tocheck
lin furring_N = mkN "tasseau" masculine | mkN "tassea" masculine ; -- tocheck
lin furrow_N = mkN "ride" feminine | mkN "sillon" masculine ; -- tocheck
lin furrow_V2 = mkV2 (mkV "sillonner") | mkV2 (mkV "froncer") ; -- tocheck
lin furry_A = mkA "poilu" ; -- tocheck
lin furth_PN = mkPN "Furth" ; -- status=guess src=geonames
lin further_Adv = mkAdv "plus loin" ;
lin furthermore_Adv = variants {} ; --
lin furtive_A = mkA "furtif" ; -- tocheck
lin fury_N = mkN "acharnement" masculine ; -- tocheck
lin furze_N = mkN "ajoncs" ; -- tocheck
lin fuse_N = mkN "détonateur" masculine | mkN "fusible" masculine | mkN "cordeau" masculine ; -- tocheck
lin fuselage_N = mkN "fuselage" masculine ; -- tocheck
lin fushun_PN = mkPN "Fushun" ; -- status=guess src=geonames
lin fusiform_A = mkA "fusiforme" ; -- tocheck
lin fusilier_N = mkN "fusilier" ; -- UWN
lin fusillade_N = mkN "salve" | mkN "tir" ; -- UWN
lin fusion_N = mkN "fusion" feminine ; -- tocheck
lin fuss_N = variants {} ; --
lin fusspot_N = mkN "chipoteur" ; -- UWN
lin fussy_A = mkA "pointilleux" ; -- tocheck
lin futile_A = mkA "futile" ; -- tocheck
lin futility_N = mkN "futilité" feminine ; -- tocheck
lin futon_N = mkN "futon" masculine ; -- tocheck
lin future_1_N = mkN "avenir" ;
lin future_3_N = mkN "futur" ;
lin future_A = mkA "futur" ; -- tocheck
lin futurism_N = mkN "futurisme" masculine ; -- tocheck
lin futuristFem_N = mkN "futuriste" feminine ; -- tocheck
lin futuristMasc_N = mkN "futuriste" masculine ; -- tocheck
lin futuristic_A = mkA "futuriste" ; -- tocheck
lin futurology_N = mkN "futurologie" feminine ; -- tocheck
lin fuzzy_A = mkA "flou" ; -- tocheck
lin gab_N = mkN "bagou" masculine ; -- tocheck
lin gabardine_N = mkN "gabardine" ; -- UWN
lin gabbro_N = mkN "gabbro" ; -- UWN
lin gaberdine_N = mkN "gabardine" ; -- UWN
lin gable_N = mkN "gâble" masculine ; -- tocheck
lin gabon_PN = mkPN "Gabon" ; -- status=guess src=geonames
lin gadfly_N = mkN "taon" ; -- UWN
lin gadget_N = mkN "gadget" ; -- tocheck
lin gadolinium_N = mkN "gadolinium" masculine ; -- tocheck
lin gaffe_N = mkN "gaffe" feminine ; -- tocheck
lin gaffer_N = mkN "éclairagiste" | mkN "contre-maître" masculine ; -- tocheck
lin gag_N = mkN "haut-le-coeur" | mkN "bâillon" masculine ; -- tocheck
lin gag_V2 = mkV2 (mkV "bâillonner") ; -- tocheck
lin gaga_A = mkA "gaga" ; -- tocheck
lin gaillardia_N = mkN "gaillardia" ; -- UWN
lin gain_N = mkN "gain" masculine ; -- tocheck
lin gain_V = mkV "acquérir" | mkV "gagner" | mkV "obtenir" ; -- UWN
lin gain_V2 = mkV2 (mkV "gagner") ; -- tocheck
lin gain_back_V = advV OP_gain_V OP_back_Adv ; -- guess-p-verb
lin gainsay_V2 = mkV2 (mkV I.contredire_V2) ; -- tocheck
lin gainsborough_PN = mkPN "Gainsborough" ; -- status=guess src=geonames
lin gait_N = mkN "démarche" feminine | mkN "allure" masculine ; -- tocheck
lin gaiter_N = mkN "guêtre" feminine ; -- tocheck
lin galactic_A = mkA "astronomique" | mkA "galactique" ; -- tocheck
lin galactose_N = mkN "galactose" masculine ; -- tocheck
lin galactosemia_N = mkN "galactosémie" ; -- UWN
lin galago_N = mkN "galago" | mkN "galagonidae" ; -- UWN
lin galangal_N = mkN "galangue" ; -- tocheck
lin galantine_N = mkN "Galantine" | mkN "galantine" ; -- UWN
lin galashiels_PN = mkPN "Galashiels" ; -- status=guess src=geonames
lin galaxy_N = mkN "galaxie" feminine ; -- tocheck
lin galbanum_N = mkN "férule_gommeuse" | mkN "galbanum" ; -- UWN
lin galea_N = mkN "casque" | mkN "galea" ; -- UWN
lin galena_N = mkN "galène" ; -- UWN
lin gall_N = mkN "culot" masculine | mkN "bile" feminine ; -- tocheck
lin gallant_A = mkA "brave" ; -- tocheck
lin gallant_N = mkN "bellâtre" | mkN "dandy" | mkN "gars" | mkN "mec" | mkN "mon_pote" | mkN "muguet" | mkN "pinpin" | mkN "pote" | mkN "sigisbée" | mkN "type" | mkN "étendoir" ; -- UWN
lin gallantry_N = mkN "galanterie" feminine | mkN "courage" masculine ; -- tocheck
lin gallbladder_N = mkN "vésicule_biliaire" ; -- UWN
lin galleon_N = mkN "galion" masculine ; -- tocheck
lin gallery_N = mkN "balcon" masculine | mkN "galerie" feminine ; -- tocheck
lin galley_N = mkN "cambuse" feminine | mkN "office" masculine | mkN "galère" masculine ; -- tocheck
lin gallicism_N = mkN "gallicisme" masculine ; -- tocheck
lin gallium_N = mkN "gallium" masculine ; -- tocheck
lin gallon_N = mkN "gallon" ; -- tocheck
lin gallop_N = mkN "galop" masculine ; -- tocheck
lin gallop_V2 = mkV2 (mkV "galoper") ; -- tocheck
lin gallows_N = mkN "gibet" masculine ; -- tocheck
lin gallstone_N = mkN "Calcul_biliaire" | mkN "calcul_biliaire" | mkN "calculs_biliaires" ; -- UWN
lin gallup_PN = mkPN "Gallup" ; -- status=guess src=geonames
lin galosh_N = mkN "arctique" | mkN "caoutchouc" | mkN "claque" | mkN "galoche" ; -- UWN
lin galvanic_A = mkA "galvanique" ; -- tocheck
lin galvanism_N = mkN "galvanisme" masculine ; -- tocheck
lin galvanization_N = mkN "galvanisation" feminine ; -- tocheck
lin galvanize_V2 = mkV2 (mkV "galvaniser") ; -- tocheck
lin galvanize_VS = mkvVS "galvaniser" ; -- UWN
lin galvanometer_N = mkN "galvanomètre" masculine ; -- tocheck
lin gambia_PN = mkPN "Gambie" ; -- status=guess src=geonames
lin gambit_N = mkN "gambit" masculine | mkN "statagème" masculine ; -- tocheck
lin gamble_N = mkN "pari" masculine ; -- tocheck
lin gamble_V2 = mkV2 (mkV "parier") ; -- tocheck
lin gambler_N = mkN "joueur" masculine ; -- tocheck
lin gambling_N = mkN "jeu" ; -- UWN
lin gamboge_N = mkN "citron" | mkN "citronnier" | mkN "maïs" ; -- UWN
lin gambol_N = mkN "jeu" ; -- UWN
lin game_1_N = mkN "jeu" ;
lin game_2_N = mkN "jeu" ;
lin game_3_N = mkN "gibier" masculine ;
lin game_A = mkA "jeu" ; -- UWN
lin game_N = mkN "jeu" masculine | mkN "gibier" masculine ; -- tocheck
lin game_V2 = mkV2 (mkV "jouer") ; -- tocheck
lin gamecock_N = mkN "sabreur" ; -- UWN
lin gamekeeper_N = mkN "garde-chasse" ; -- tocheck
lin gamelan_N = mkN "gamelan" ; -- UWN
lin gamete_N = mkN "gamète" masculine ; -- tocheck
lin gametophyte_N = mkN "gamétophyte" ; -- UWN
lin gamey_A = mkA "jeu" ; -- UWN
lin gaminess_N = mkN "piquant" ; -- UWN
lin gamma_N = mkN "gamme" feminine ; -- tocheck
lin gamut_N = mkN "gamme" feminine ; -- tocheck
lin gamy_A = mkA "jeu" ; -- UWN
lin gander_N = mkN "jars" masculine ; -- tocheck
lin gang_N = mkN "bande" feminine ; -- tocheck
lin ganglion_N = mkN "ganglion" masculine ; -- tocheck
lin gangrene_N = mkN "gangrène" feminine ; -- tocheck
lin gangster_N = mkN "gangster" masculine ; -- tocheck
lin gangway_N = mkN "passage" masculine | mkN "passavant" masculine | mkN "passerelle" feminine ; -- tocheck
lin gannet_N = mkN "fou" | mkN "fou_de_Bassan" | mkN "fou_de_bassan" ; -- UWN
lin gantry_N = mkN "portique" ; -- tocheck
lin gaolbreak_N = mkN "breakout" | mkN "casser" | mkN "jailbreak" ; -- UWN
lin gap_N = mkN "brèche" feminine | mkN "col" masculine | mkN "trouée" feminine ; -- tocheck
lin gape_N = mkN "bâiller" ; -- UWN
lin gape_V = mkV (mkV "bâiller") ; -- tocheck
lin garage_N = mkN "garage" masculine | mkN "garage" ; -- tocheck
lin garb_N = mkN "revêtir" | mkN "toilette" | mkN "vêtir" ; -- UWN
lin garbage_N = mkN "ordures" ; -- tocheck
lin garden_N = L.garden_N ;
lin garden_V = mkV (mkV "jardiner") ; -- tocheck
lin gardenerFem_N = mkN "jardinière" feminine ; -- tocheck
lin gardenerMasc_N = mkN "jardinier" masculine ;
lin gardenia_N = mkN "gardénia" masculine ; -- tocheck
lin gardening_N = mkN "jardinage" masculine ; -- tocheck
lin garforth_PN = mkPN "Garforth" ; -- status=guess src=geonames
lin gargantuan_A = mkA "gargantuesque" ; -- tocheck
lin gargle_N = mkN "gargarisme" masculine ; -- tocheck
lin gargle_V2 = mkV2 (reflV (mkV "gargariser")) ; -- tocheck
lin gargoyle_N = mkN "gargouille" feminine ; -- tocheck
lin garland_N = mkN "guirlande" | mkN "guirlande" feminine ; -- tocheck
lin garlic_N = mkN "ail" masculine ; -- tocheck
lin garment_N = mkN "vêtement" masculine ; -- tocheck
lin garner_N = mkN "grenier" masculine ; -- tocheck
lin garner_V2 = mkV2 (mkV "rassembler") | mkV2 (mkV "engranger") ; -- tocheck
lin garnet_N = mkN "grenat" ; -- tocheck
lin garnierite_N = mkN "garniérite" ; -- UWN
lin garret_N = mkN "galetas" masculine ; -- tocheck
lin garrison_N = mkN "garnison" feminine ; -- tocheck
lin garrulity_N = mkN "loquacité" ; -- UWN
lin garrulous_A = mkA "bavard" | mkA "loquace" ; -- UWN
lin garter_N = mkN "jarretière" feminine ; -- tocheck
lin gary_PN = mkPN "Gary" ; -- status=guess src=geonames
lin gas_N = mkN "gaz" masculine | mkN "essence" feminine ; -- tocheck
lin gasbag_N = mkN "enveloppe" ; -- UWN
lin gaseous_A = mkA "gazeux" ; -- tocheck
lin gash_N = mkN "entaille" ; -- tocheck
lin gasify_V2 = mkV2 (mkV "gazéifier") ; -- tocheck
lin gasket_N = mkN "joint" masculine ; -- tocheck
lin gas_mask_N = mkN "respirateur" ; -- UWN
lin gasohol_N = mkN "carburol" ; -- UWN
lin gasoline_N = mkN "essence" feminine ; -- tocheck
lin gasp_V = variants {} ; -- mkV2 (mkV "haleter") ; -- tocheck
lin gasp_V2 = mkV2 (mkV "haleter") ; -- tocheck
lin gassy_A = mkA "gaseux" ; -- tocheck
lin gastric_A = mkA "gastrique" ; -- tocheck
lin gastrin_N = mkN "gastrine" ; -- UWN
lin gastritis_N = mkN "gastrite" feminine ; -- tocheck
lin gastroenteritis_N = mkN "gastro-entérite" feminine ; -- tocheck
lin gastroenterologistFem_N = variants {} ; ---- sense to be split
lin gastroenterologistMasc_N = mkN "gastro-entérologue" ; -- UWN
lin gastroenterology_N = mkN "gastro-entérologie" feminine ; -- tocheck
lin gastronomic_A = mkA "gastronomique" ; -- tocheck
lin gastronomy_N = mkN "gastronomie" feminine ; -- tocheck
lin gastropod_N = mkN "gastéropode" masculine ; -- tocheck
lin gastroscopy_N = mkN "gastroscopie" ; -- tocheck
lin gastrula_N = mkN "gastrula" ; -- UWN
lin gastrulation_N = mkN "gastrulation" feminine ; -- tocheck
lin gat_N = mkN "flingue" masculine ; -- tocheck
lin gate_N = mkN "grille" feminine | mkN "portail" masculine | mkN "porte" feminine ; -- tocheck
lin gateau_N = mkN "gâteau" masculine ; -- tocheck
lin gatecrash_V2 = mkV2 (reflV (mkV "incruster")) ; -- tocheck
lin gatecrasher_N = mkN "incruste" ; -- tocheck
lin gatekeeper_N = mkN "portier" ; -- UWN
lin gateshead_PN = mkPN "Gateshead" ; -- status=guess src=geonames
lin gateway_N = mkN "gateway" masculine | mkN "porte" feminine | mkN "porte" ; -- tocheck
lin gather_N = mkN "collecte" | mkN "réunion" ; -- UWN
lin gather_V = variants {} ; -- mkV2 (mkV "rassembler") | mkV2 (mkV I.déduire_V2) ; -- tocheck
lin gather_V2 = mkV2 (mkV "rassembler") | mkV2 (mkV I.déduire_V2) ; -- tocheck
lin gatherer_N = mkN "cueilleur" masculine ; -- tocheck
lin gathering_N = mkN "rencontre" feminine | mkN "cahier" masculine | mkN "assemblée" ; -- tocheck
lin gauche_A = mkA "gauche" ; -- tocheck
lin gaucherie_N = mkN "Solécisme" | mkN "bévue" | mkN "faux_pas" | mkN "gaffe" | mkN "impair" | mkN "solécisme" | mkN "soulier" ; -- UWN
lin gaucho_N = mkN "gaucho" masculine ; -- tocheck
lin gaudy_A = mkA "voyant" ; -- tocheck
lin gauge_N = mkN "étalon" masculine | mkN "écartement" masculine | mkN "gabarit" masculine ; -- tocheck
lin gauge_V2 = mkV2 (mkV "mesurer") | mkV2 (mkV "estimer") ; -- tocheck
lin gaunt_A = mkA "émacié" ; -- tocheck
lin gauntlet_N = mkN "gantelet" masculine ; -- tocheck
lin gaur_N = mkN "gaur" masculine ; -- tocheck
lin gauze_N = mkN "gaze" masculine | mkN "gaze" feminine ; -- tocheck
lin gavel_N = mkN "marteau" | mkN "marteau_de_président" ; -- UWN
lin gawky_A = mkA "maladroit" ; -- UWN
lin gay_A = mkA "gai" | mkA "gay" ; -- tocheck
lin gay_N = mkN "gai" masculine ; -- tocheck
lin gayness_N = mkN "homosexualité" | mkN "homoérotisme" | mkN "vice_anglais" ; -- UWN
lin gazania_N = mkN "gazania" ; -- UWN
lin gaze_N = variants {} ; --
lin gaze_V = mkV (mkV "fixer") ; -- tocheck
lin gazebo_N = mkN "gazébo" masculine ; -- tocheck
lin gazelle_N = mkN "gazelle" feminine ; -- tocheck
lin gazette_N = mkN "journal" ; -- UWN
lin gazetteer_N = mkN "gazetier" masculine ; -- tocheck
lin gazpacho_N = mkN "gaspacho" masculine ; -- tocheck
lin gean_N = mkN "guigne" feminine ; -- tocheck
lin gear_N = mkN "engrenage" masculine | mkN "vitesse" feminine ; -- tocheck
lin gear_V = mkV "adapter" | mkV "axer" ; -- UWN
lin gearbox_N = mkN "boite_de_vitesse" | mkN "boîte_de_vitesses" ; -- UWN
lin gearing_N = mkN "train" ; -- UWN
lin gecko_N = mkN "Gekkonidae" | mkN "gecko" | mkN "gekkonidae" ; -- UWN
lin geek_N = mkN "geek" masculine ; -- tocheck
lin geezer_N = mkN "mec" masculine | mkN "vieillard" masculine ; -- tocheck
lin geisha_N = mkN "geisha" feminine ; -- tocheck
lin gel_N = mkN "gel" masculine ; -- tocheck
lin gelatin_N = mkN "gélatine" ; -- UWN
lin gelatine_N = mkN "gélatine" feminine ; -- tocheck
lin gelatinous_A = mkA "gélatineux" ; -- tocheck
lin geld_V2 = mkV2 (mkV "castrer") ; -- tocheck
lin gelding_N = mkN "hongre" masculine ; -- tocheck
lin gelligaer_PN = mkPN "Gelligaer" ; -- status=guess src=geonames
lin gelsenkirchen_PN = mkPN "Gelsenkirchen" ; -- status=guess src=geonames
lin gem_N = mkN "joyau" masculine ; -- tocheck
lin gemination_N = mkN "gémination" feminine ; -- tocheck
lin gemini_PN = mkPN "Gemini" ; -- status=guess src=geonames
lin gen_N = mkN "gén" ; -- UWN
lin gendarme_N = mkN "gendarme" ; -- UWN
lin gendarmerie_N = mkN "gendarmerie" ; -- tocheck
lin gender_N = mkN "sexe" masculine | mkN "genre" masculine ; -- tocheck
lin gene_N = mkN "gène" masculine ; -- tocheck
lin genealogic_A = mkA "généalogique" ; -- UWN
lin genealogical_A = mkA "généalogique" ; -- tocheck
lin genealogist_N = mkN "généalogiste" ; -- tocheck
lin genealogy_N = mkN "généalogie" feminine ; -- tocheck
lin general_A = mkA "général" ;
lin general_N = mkN "général" masculine ; -- tocheck
lin generalissimo_N = mkN "généralissime" masculine ; -- tocheck
lin generalize_V2 = mkV2 (mkV "généraliser") ; -- tocheck
lin generally_Adv = adjAdv general_A ; -- -- derived
lin generalship_N = mkN "prudence" ; -- UWN
lin generate_V2 = mkV2 (mkV "générer") | mkV2 (mkV "engendrer") ; -- tocheck
lin generation_N = mkN "création" | mkN "génération" | mkN "génération" feminine ; -- tocheck
lin generative_A = mkA "productif" ; -- UWN
lin generator_N = mkN "générateur" masculine ; -- tocheck
lin generic_A = mkA "générique" ; -- tocheck
lin generosity_N = mkN "générosité" | mkN "générosité" feminine ; -- tocheck
lin generous_A = mkA "généreux" ; -- tocheck
lin genesis_N = mkN "genèse" feminine ; -- tocheck
lin genet_N = mkN "ramet" | mkN "genette" feminine ; -- tocheck
lin genetic_A = mkA "génétique" ; -- tocheck
lin geneticist_N = mkN "généticien" masculine ; -- tocheck
lin genetics_N = mkN "génétique" feminine ; -- tocheck
lin geneva_PN = mkPN "Geneva" ; -- status=guess src=geonames
lin genial_A = mkA "génial" ; -- tocheck
lin geniality_N = mkN "amabilité" | mkN "aménité" | mkN "bonhomie" | mkN "obligeance" ; -- UWN
lin genic_A = mkA "génétique" ; -- UWN
lin genie_N = mkN "génie" masculine | mkN "jinn" masculine ; -- tocheck
lin genipa_N = mkN "genipa" ; -- UWN
lin genital_A = mkA "génital" ; -- tocheck
lin genitive_A = mkA "génitif" ; -- tocheck
lin genitive_N = mkN "génitif" masculine ; -- tocheck
lin genitor_N = mkN "géniteur" | mkN "vieux" ; -- UWN
lin genitourinary_A = mkA "génito-urinaire" ; -- tocheck
lin genius_N = mkN "génie" masculine ; -- tocheck
lin genlisea_N = mkN "genlisea" ; -- UWN
lin genoa_PN = mkPN "Gênes" ; -- status=guess src=geonames
lin genocide_N = mkN "génocide" masculine ; -- tocheck
lin genome_N = mkN "génome" masculine ; -- tocheck
lin genomics_N = mkN "génomique" ; -- UWN
lin genotype_N = mkN "génotype" masculine | mkN "génotype" ; -- tocheck
lin genre_N = mkN "genre" masculine ; -- tocheck
lin genteel_A = mkA "civilisé" | mkA "poli" ; -- UWN
lin gentian_N = mkN "gentiane" feminine ; -- tocheck
lin gentility_N = mkN "reproduction" | mkN "élevage" ; -- UWN
lin gentle_A = mkA "doux" | mkA "gentil" ; -- tocheck
lin gentleman_N = mkN "monsieur" "messieurs" masculine | mkN "gentilhomme" masculine ;
lin gentrification_N = mkN "embourgeoisement" masculine ; -- tocheck
lin gentry_N = mkN "aristocratie" | mkN "gentry" ; -- UWN
lin genuflection_N = mkN "génuflexion" feminine ; -- tocheck
lin genuflexion_N = mkN "génuflexion" ; -- UWN
lin genuine_A = mkA "authentique" ;
lin genus_N = mkN "genre" masculine ; -- tocheck
lin geocentric_A = mkA "géocentrique" ; -- tocheck
lin geochemistry_N = mkN "géochimie" ; -- UWN
lin geode_N = mkN "géode" feminine ; -- tocheck
lin geodesy_N = mkN "géodésie" feminine ; -- tocheck
lin geoduck_N = mkN "Panope_du_Pacifique" | mkN "Panopea_abrupta" | mkN "panope_du_pacifique" | mkN "panopea_abrupta" ; -- UWN
lin geographer_N = mkN "géographe" ; -- tocheck
lin geographic_A = mkA "géographique" ; -- tocheck
lin geographical_A = variants {} ; --
lin geography_N = mkN "géographie" feminine ; -- tocheck
lin geological_A = mkA "géologique" ; -- UWN
lin geologistFem_N = mkN "géologue" feminine ; -- tocheck
lin geologistMasc_N = mkN "géologue" masculine ; -- tocheck
lin geology_N = mkN "géologie" feminine ; -- tocheck
lin geomancy_N = mkN "géomancie" ; -- UWN
lin geometric_A = mkA "géométrique" ; -- tocheck
lin geometry_N = mkN "géométrie" feminine ; -- tocheck
lin geomorphologic_A = mkA "morphologique" | mkA "structurel" ; -- UWN
lin geophagy_N = mkN "géophagie" ; -- UWN
lin geophysical_A = mkA "géophysique" ; -- tocheck
lin geophysicist_N = mkN "géophysicien" masculine ; -- tocheck
lin geophysics_N = mkN "géophysique" feminine ; -- tocheck
lin geophyte_N = mkN "géophyte" ; -- UWN
lin geophytic_A = mkA "géophyte" ; -- UWN
lin geopolitical_A = mkA "géopolitique" ; -- UWN
lin geopolitics_N = mkN "géopolitique" feminine ; -- tocheck
lin george_PN = mkPN "George" ; -- status=guess src=geonames
lin georgia_PN = mkPN "Géorgie" ; -- status=guess src=geonames
lin geostationary_A = mkA "géostationnaire" ; -- tocheck
lin geostrategic_A = mkA "géostratégique" ; -- UWN
lin geostrategy_N = mkN "géostratégie" ; -- UWN
lin geothermal_A = mkA "géothermique" ; -- tocheck
lin geotropism_N = mkN "géotropisme" ; -- UWN
lin gerald_PN = mkPN "Gerald" ; -- status=guess src=geonames
lin geranium_N = mkN "géranium" masculine ; -- tocheck
lin gerbil_N = mkN "gerbille" feminine ; -- tocheck
lin geriatric_A = mkA "gériatrique" ; -- UWN
lin geriatrician_N = mkN "gérontologue" ; -- UWN
lin geriatrics_N = mkN "gériatrie" feminine ; -- tocheck
lin germ_N = mkN "germe" | mkN "insecte" | mkN "microbe" ; -- UWN
lin germanFem_N = mkN "allemande" ;
lin germanMasc_N = mkN "allemand" ;
lin german_A = mkA "allemand" ;
lin germanite_N = mkN "germanite" ; -- UWN
lin germanium_N = mkN "germanium" masculine ; -- tocheck
lin germany_PN = mkPN "Allemagne" ;
lin germinal_A = mkA "créatif" ; -- UWN
lin gerontocracy_N = mkN "gérontocratie" feminine ; -- tocheck
lin gerontologist_N = mkN "gérontologue" ; -- UWN
lin gerontology_N = mkN "gérontologie" feminine ; -- tocheck
lin gerund_N = mkN "gérondif" masculine ; -- tocheck
lin gesneria_N = mkN "gesneria" ; -- UWN
lin gestalt_N = mkN "profil" feminine ; -- tocheck
lin gesticulate_V = mkV (mkV "gesticuler") ; -- tocheck
lin gesture_N = mkN "geste" masculine ; -- tocheck
lin get_V2 = I.recevoir_V2 ;
lin get_V2V = mkV2V (mkV I.obtenir_V2) ;
lin get_VV = mkVV (mkV "arriver") ;
lin get_about_V = advV (lin V OP_get_V2) OP_about_Adv ; -- guess-p-verb
lin get_above_V2 = prepV2 (lin V OP_get_V2) OP_above_Prep ; -- guess-p-verb
lin get_across_V = advV (lin V OP_get_V2) OP_across_Adv ; -- guess-p-verb
lin get_across_V2 = prepV2 (lin V OP_get_V2) OP_across_Prep ; -- guess-p-verb
lin get_across_to_V2 = prepV2 (advV (lin V OP_get_V2) OP_across_Adv ) OP_to_Prep ; -- guess-p-verb
lin get_after_V2 = prepV2 (lin V OP_get_V2) OP_after_Prep ; -- guess-p-verb
lin get_ahead_V = advV (lin V OP_get_V2) OP_ahead_Adv ; -- guess-p-verb
lin get_ahead_of_V2 = prepV2 (advV (lin V OP_get_V2) OP_ahead_Adv ) OP_of_Prep ; -- guess-p-verb
lin get_along_V = advV (lin V OP_get_V2) OP_along_Adv ; -- guess-p-verb
lin get_along_in_V2 = prepV2 (advV (lin V OP_get_V2) OP_along_Adv ) OP_in_Prep ; -- guess-p-verb
lin get_along_with_V2 = prepV2 (advV (lin V OP_get_V2) OP_along_Adv ) OP_with_Prep ; -- guess-p-verb
lin get_around_V = advV (lin V OP_get_V2) OP_around_Adv ; -- guess-p-verb
lin get_around_V2 = prepV2 (lin V OP_get_V2) OP_around_Prep ; -- guess-p-verb
lin get_around_to_V2 = prepV2 (advV (lin V OP_get_V2) OP_around_Adv ) OP_to_Prep ; -- guess-p-verb
lin get_at_V2 = prepV2 (lin V OP_get_V2) OP_at_Prep ; -- guess-p-verb
lin get_away_V = advV (lin V OP_get_V2) OP_away_Adv ; -- guess-p-verb
lin get_away_from_V2 = prepV2 (advV (lin V OP_get_V2) OP_away_Adv ) OP_from_Prep ; -- guess-p-verb
lin get_away_with_V2 = prepV2 (advV (lin V OP_get_V2) OP_away_Adv ) OP_with_Prep ; -- guess-p-verb
lin get_back_V = advV (lin V OP_get_V2) OP_back_Adv ; -- guess-p-verb
lin get_back_V2 = mkV2 (advV (lin V OP_get_V2) OP_back_Adv ) ; -- guess-p-verb
lin get_back_at_V2 = prepV2 (advV (lin V OP_get_V2) OP_back_Adv ) OP_at_Prep ; -- guess-p-verb
lin get_back_into_V2 = prepV2 (advV (lin V OP_get_V2) OP_back_Adv ) OP_into_Prep ; -- guess-p-verb
lin get_back_to_V2 = prepV2 (advV (lin V OP_get_V2) OP_back_Adv ) OP_to_Prep ; -- guess-p-verb
lin get_back_together_V = variants {} ; -- guess-p-verb
lin get_behind_V2 = prepV2 (lin V OP_get_V2) OP_behind_Prep ; -- guess-p-verb
lin get_behind_with_V2 = prepV2 (advV (lin V OP_get_V2) OP_behind_Adv ) OP_with_Prep ; -- guess-p-verb
lin get_by_V = advV (lin V OP_get_V2) OP_by_Adv ; -- guess-p-verb
lin get_by_V2 = prepV2 (lin V OP_get_V2) OP_by_Prep ; -- guess-p-verb
lin get_by_on_V2 = prepV2 (advV (lin V OP_get_V2) OP_by_Adv ) OP_on_Prep ; -- guess-p-verb
lin get_by_with_V2 = prepV2 (advV (lin V OP_get_V2) OP_by_Adv ) OP_with_Prep ; -- guess-p-verb
lin get_down_V = advV (lin V OP_get_V2) OP_down_Adv ; -- guess-p-verb
lin get_down_V2 = prepV2 (lin V OP_get_V2) OP_down_Prep ; -- guess-p-verb
lin get_down_on_V2 = prepV2 (advV (lin V OP_get_V2) OP_down_Adv ) OP_on_Prep ; -- guess-p-verb
lin get_down_to_V2 = prepV2 (advV (lin V OP_get_V2) OP_down_Adv ) OP_to_Prep ; -- guess-p-verb
lin get_even_V = advV (lin V OP_get_V2) OP_even_Adv ; -- guess-p-verb
lin get_in_V = advV (lin V OP_get_V2) OP_in_Adv ; -- guess-p-verb
lin get_in_V2 = prepV2 (lin V OP_get_V2) OP_in_Prep ; -- guess-p-verb
lin get_in_on_V2 = prepV2 (advV (lin V OP_get_V2) OP_in_Adv ) OP_on_Prep ; -- guess-p-verb
lin get_in_with_V2 = prepV2 (advV (lin V OP_get_V2) OP_in_Adv ) OP_with_Prep ; -- guess-p-verb
lin get_into_V2 = prepV2 (lin V OP_get_V2) OP_into_Prep ; -- guess-p-verb
lin get_it_V = variants {} ; -- guess-p-verb
lin get_it_off_V = variants {} ; -- guess-p-verb
lin get_it_off_with_V2 = variants {} ; -- guess-p-verb
lin get_it_on_V = variants {} ; -- guess-p-verb
lin get_it_on_with_V2 = variants {} ; -- guess-p-verb
lin get_it_together_V = variants {} ; -- guess-p-verb
lin get_it_up_V = variants {} ; -- guess-p-verb
lin get_off_V = advV (lin V OP_get_V2) OP_off_Adv ; -- guess-p-verb
lin get_off_V2 = prepV2 (lin V OP_get_V2) OP_off_Prep ; -- guess-p-verb
lin get_off_it_V2 = variants {} ; -- guess-p-verb
lin get_off_on_V2 = prepV2 (advV (lin V OP_get_V2) OP_off_Adv ) OP_on_Prep ; -- guess-p-verb
lin get_off_with_V2 = prepV2 (advV (lin V OP_get_V2) OP_off_Adv ) OP_with_Prep ; -- guess-p-verb
lin get_on_1_V2 = variants {} ; -- guess-p-verb
lin get_on_2_V2 = variants {} ; -- guess-p-verb
lin get_on_V = advV (lin V OP_get_V2) OP_on_Adv ; -- guess-p-verb
lin get_on_at_V2 = prepV2 (advV (lin V OP_get_V2) OP_on_Adv ) OP_at_Prep ; -- guess-p-verb
lin get_on_for_V2 = prepV2 (advV (lin V OP_get_V2) OP_on_Adv ) OP_for_Prep ; -- guess-p-verb
lin get_on_to_V2 = prepV2 (advV (lin V OP_get_V2) OP_on_Adv ) OP_to_Prep ; -- guess-p-verb
lin get_on_with_V2 = prepV2 (advV (lin V OP_get_V2) OP_on_Adv ) OP_with_Prep ; -- guess-p-verb
lin get_onto_V2 = prepV2 (lin V OP_get_V2) OP_onto_Prep ; -- guess-p-verb
lin get_out_V = advV (lin V OP_get_V2) OP_out_Adv ; -- guess-p-verb
lin get_out_V2 = prepV2 (lin V OP_get_V2) OP_out_Prep ; -- guess-p-verb
lin get_out_of_V2 = prepV2 (advV (lin V OP_get_V2) OP_out_Adv ) OP_of_Prep ; -- guess-p-verb
lin get_over_V = advV (lin V OP_get_V2) OP_over_Adv ; -- guess-p-verb
lin get_over_V2 = prepV2 (lin V OP_get_V2) OP_over_Prep ; -- guess-p-verb
lin get_over_with_V2 = prepV2 (advV (lin V OP_get_V2) OP_over_Adv ) OP_with_Prep ; -- guess-p-verb
lin get_round_V = advV (lin V OP_get_V2) OP_round_Adv ; -- guess-p-verb
lin get_round_V2 = prepV2 (lin V OP_get_V2) OP_round_Prep ; -- guess-p-verb
lin get_round_to_V2 = prepV2 (advV (lin V OP_get_V2) OP_round_Adv ) OP_to_Prep ; -- guess-p-verb
lin get_through_V = advV (lin V OP_get_V2) OP_through_Adv ; -- guess-p-verb
lin get_through_V2 = prepV2 (lin V OP_get_V2) OP_through_Prep ; -- guess-p-verb
lin get_through_V3 = variants {} ; -- guess-p-verb
lin get_through_to_V2 = prepV2 (advV (lin V OP_get_V2) OP_through_Adv ) OP_to_Prep ; -- guess-p-verb
lin get_to_V2 = prepV2 (lin V OP_get_V2) OP_to_Prep ; -- guess-p-verb
lin get_together_V = advV (lin V OP_get_V2) OP_together_Adv ; -- guess-p-verb
lin get_up_V = advV (lin V OP_get_V2) OP_up_Adv ; -- guess-p-verb
lin get_up_V2 = prepV2 (lin V OP_get_V2) OP_up_Prep ; -- guess-p-verb
lin get_up_to_V2 = prepV2 (advV (lin V OP_get_V2) OP_up_Adv ) OP_to_Prep ; -- guess-p-verb
lin gettable_A = mkA "accessible" ; -- UWN
lin geyser_N = mkN "geyser" masculine ; -- tocheck
lin ghana_PN = mkPN "Ghana" ; -- status=guess src=geonames
lin ghee_N = mkN "ghî" masculine ; -- tocheck
lin gherkin_N = mkN "cornichon" masculine ; -- tocheck
lin ghetto_N = mkN "ghetto" masculine ; -- tocheck
lin ghost_N = mkN "fantôme" masculine ; -- tocheck
lin ghostly_A = mkA "fantomatique" ; -- tocheck
lin ghost_writer_N = mkN "fantasme" | mkN "fantôme" | mkN "nègre" ; -- UWN
lin ghoul_N = mkN "goule" feminine ; -- tocheck
lin giant_A = variants {} ; --
lin giant_N = mkN "géant" masculine | mkN "géant" ; -- tocheck
lin giantess_N = mkN "géante" feminine ; -- tocheck
lin giantism_N = mkN "gigantisme" ; -- UWN
lin giardiasis_N = mkN "lambliase" ; -- UWN
lin gib_N = mkN "gib" ; -- UWN
lin gibberellin_N = mkN "gibbérelline" ; -- UWN
lin gibberish_N = mkN "charabia" | mkN "baragouin" masculine ; -- tocheck
lin gibbet_N = mkN "gibet" masculine ; -- tocheck
lin gibbon_N = mkN "gibbon" masculine ; -- tocheck
lin gibbous_A = mkA "gibbeux" ; -- tocheck
lin gibbsite_N = mkN "gibbsite" ; -- UWN
lin gibibit_N = mkN "gibibit" masculine ; -- tocheck
lin giblet_N = mkN "abat" masculine ; -- tocheck
lin gibraltar_PN = mkPN "Gibraltar" ; -- status=guess src=geonames
lin giffnock_PN = mkPN "Giffnock" ; -- status=guess src=geonames
lin gift_N = mkN "don" masculine | mkN "présent" masculine ; -- tocheck
lin gift_V2 = mkV2 (mkV "régaler") ; -- tocheck
lin gig_N = mkN "concert" masculine ; -- tocheck
lin gigabyte_N = mkN "gigaoctet" ; -- tocheck
lin gigantic_A = mkA "gigantesque" ; -- tocheck
lin gigantism_N = mkN "gigantisme" ; -- UWN
lin giggle_N = mkN "ricanement" masculine ; -- tocheck
lin giggle_V = mkV (mkV "glousser") ; -- tocheck
lin gigolo_N = mkN "prostitué" masculine | mkN "gigolo" masculine ; -- tocheck
lin gilbert_PN = mkPN "Gilbert" ; -- status=guess src=geonames
lin gild_N = mkN "club" | mkN "corporation" | mkN "guilde" | mkN "ordre" | mkN "société" ; -- UWN
lin gild_V2 = mkV2 (mkV "dorer") ; -- tocheck
lin gilder_N = mkN "florin" masculine | mkN "doreur" masculine ; -- tocheck
lin gilding_N = mkN "Dorure" | mkN "dorure" ; -- UWN
lin gill_N = mkN "branchie" feminine | mkN "lamelle" feminine ; -- tocheck
lin gill_PN = mkPN "Gill" ; -- status=guess src=geonames
lin gillingham_PN = mkPN "Gillingham" ; -- status=guess src=geonames
lin gilt_N = mkN "Dorure" | mkN "dorure" ; -- UWN
lin gimbal_N = mkN "cardan" masculine ; -- tocheck
lin gimel_N = mkN "ghimel" | mkN "gimel" | mkN "guimel" ; -- UWN
lin gimlet_N = mkN "vrille" feminine ; -- tocheck
lin gin_N = mkN "gin" masculine ; -- tocheck
lin ginger_A = mkA "roux" ; -- tocheck
lin ginger_N = mkN "gingembre" masculine | mkN "rouquin" ; -- tocheck
lin gingery_A = mkA "gingembre" ; -- UWN
lin gingiva_N = mkN "gencive" ; -- UWN
lin gingivitis_N = mkN "gingivite" feminine ; -- tocheck
lin ginkgo_N = mkN "ginkgo" masculine ; -- tocheck
lin ginseng_N = mkN "ginseng" masculine ; -- tocheck
lin gipsyFem_N = variants {} ; ---- sense to be split
lin gipsyMasc_N = variants {} ; ---- sense to be split
lin giraffe_N = mkN "girafe" feminine ; -- tocheck
lin girder_N = mkN "poutrelle" feminine ; -- tocheck
lin girdle_N = mkN "gaine" feminine | mkN "enceinte" feminine ; -- tocheck
lin girl_N = L.girl_N ;
lin girlfriend_N = mkN "amie" | mkN "copine" ;
lin girlhood_N = mkN "virginité" ; -- UWN
lin girth_N = mkN "circonférence" feminine ; -- tocheck
lin girvan_PN = mkPN "Girvan" ; -- status=guess src=geonames
lin gitana_N = mkN "gitana" ; -- UWN
lin give_N = mkN "donner" | mkN "printemps" ; -- UWN
lin give_V = mkV "donner" ;
lin give_V2 = mkV2 "donner" ;
lin give_V3 = L.give_V3 ;
lin give_away_V = advV OP_give_V OP_away_Adv ; -- guess-p-verb
lin give_away_V2 = mkV2 (advV OP_give_V OP_away_Adv ) ; -- guess-p-verb
lin give_back_V2 = mkV2 (advV OP_give_V OP_back_Adv ) ; -- guess-p-verb
lin give_in_V = advV OP_give_V OP_in_Adv ; -- guess-p-verb
lin give_in_V2 = prepV2 OP_give_V OP_in_Prep ; -- guess-p-verb
lin give_in_to_V2 = prepV2 (advV OP_give_V OP_in_Adv ) OP_to_Prep ; -- guess-p-verb
lin give_it_to_V2 = variants {} ; -- guess-p-verb
lin give_it_up_for_V2 = variants {} ; -- guess-p-verb
lin give_it_up_to_V2 = variants {} ; -- guess-p-verb
lin give_of_V2 = prepV2 OP_give_V OP_of_Prep ; -- guess-p-verb
lin give_off_V = advV OP_give_V OP_off_Adv ; -- guess-p-verb
lin give_off_V2 = prepV2 OP_give_V OP_off_Prep ; -- guess-p-verb
lin give_onto_V2 = prepV2 OP_give_V OP_onto_Prep ; -- guess-p-verb
lin give_out_V = advV OP_give_V OP_out_Adv ; -- guess-p-verb
lin give_out_V2 = prepV2 OP_give_V OP_out_Prep ; -- guess-p-verb
lin give_over_V = advV OP_give_V OP_over_Adv ; -- guess-p-verb
lin give_over_V2 = prepV2 OP_give_V OP_over_Prep ; -- guess-p-verb
lin give_over_to_V3 = variants {} ; -- guess-p-verb
lin give_up_V = advV OP_give_V OP_up_Adv ; -- guess-p-verb
lin give_up_V2 = prepV2 OP_give_V OP_up_Prep ; -- guess-p-verb
lin give_up_on_V2 = prepV2 (advV OP_give_V OP_up_Adv ) OP_on_Prep ; -- guess-p-verb
lin give_up_to_V2 = prepV2 (advV OP_give_V OP_up_Adv ) OP_to_Prep ; -- guess-p-verb
lin give_way_V = advV OP_give_V OP_way_Adv ; -- guess-p-verb
lin give_way_to_V2 = prepV2 (advV OP_give_V OP_way_Adv ) OP_to_Prep ; -- guess-p-verb
lin give_yourself_up_V = variants {} ; -- guess-p-verb
lin give_yourself_up_to_V2 = variants {} ; -- guess-p-verb
lin given_A = variants {} ; --
lin given_N = mkN "postulat" masculine ; -- tocheck
lin gizzard_N = mkN "gésier" masculine ; -- tocheck
lin glacial_A = mkA "glaciaire" | mkA "glacial" ; -- UWN
lin glacier_N = mkN "glacier" masculine ; -- tocheck
lin glad_A = mkA "content" ; -- tocheck
lin gladden_V2 = mkV2 (mkV "réjouir") ; -- tocheck
lin glade_N = mkN "clairière" feminine ; -- tocheck
lin gladiator_N = mkN "gladiateur" masculine ; -- tocheck
lin gladiolus_N = mkN "glaïeul" masculine ; -- tocheck
lin gladness_N = mkN "allégresse" | mkN "joie" ; -- UWN
lin glamorize_V2 = mkV2 (mkV "glamouriser") ; -- tocheck
lin glamorous_A = mkA "glamoureux" ; -- tocheck
lin glance_N = mkN "coup" ; -- UWN
lin glance_V = variants {} ; --
lin glance_V2 = variants {} ; --
lin gland_N = mkN "glande" feminine ; -- tocheck
lin glanders_N = mkN "morve" feminine ; -- tocheck
lin glandular_A = mkA "glandulaire" ; -- tocheck
lin glans_N = mkN "gland" masculine ; -- tocheck
lin glare_V = variants {} ; --
lin glare_V2 = variants {} ; --
lin glaring_A = mkA "évident" ; -- tocheck
lin glasgow_PN = mkPN "Glasgow" ; -- status=guess src=geonames
lin glasnost_N = mkN "glasnost" feminine ; -- tocheck
lin glass_N = mkN "verre" masculine ; -- tocheck
lin glassful_N = mkN "rasade" feminine ; -- tocheck
lin glasshouse_N = mkN "serre" | mkN "serre|serres" ; -- UWN
lin glassmaker_N = mkN "verrier" ; -- UWN
lin glastonbury_PN = mkPN "Glastonbury" ; -- status=guess src=geonames
lin glaucoma_N = mkN "glaucome" masculine ; -- tocheck
lin glauconite_N = mkN "glauconite" ; -- UWN
lin glaucous_A = mkA "pruiné" | mkA "glauque" ; -- tocheck
lin glaze_N = mkN "glaçage" masculine | mkN "glacis" masculine | mkN "glaçure" feminine | mkN "givre" masculine ; -- tocheck
lin glaze_V = mkV "verre" ; -- UWN
lin glaze_V2 = mkV2 (mkV "glacer") | mkV2 (mkV "vitrer") | mkV2 (reflV (mkV "embuer")) ; -- tocheck
lin glazier_N = mkN "vitrier" masculine ; -- tocheck
lin gleam_N = mkN "rayon" masculine ; -- tocheck
lin gleam_V = mkV (mkV I.luire_V) ; -- tocheck
lin glean_V2 = mkV2 (mkV "glaner") ; -- tocheck
lin glebe_N = mkN "glèbe" ; -- UWN
lin glee_N = mkN "joie" feminine ; -- tocheck
lin glen_N = mkN "vallon" masculine ; -- tocheck
lin glenrothes_PN = mkPN "Glenrothes" ; -- status=guess src=geonames
lin glib_A = mkA "désinvolte" ; -- tocheck
lin glibness_N = mkN "désinvolture" feminine ; -- tocheck
lin glide_N = mkN "Le_vol_à_voile" | mkN "le_vol_à_voile" | mkN "vol_à_voile" ; -- UWN
lin glide_V = mkV (mkV "glisser") | mkV (mkV "planer") ; -- tocheck
lin glider_N = mkN "planeur" masculine ; -- tocheck
lin gliding_N = mkN "Le_vol_à_voile" | mkN "le_vol_à_voile" | mkN "vol_à_voile" ; -- UWN
lin glimmer_N = mkN "lueur" feminine ; -- tocheck
lin glimpse_N = mkN "aperçu" masculine ; -- tocheck
lin glioma_N = mkN "gliome" masculine ; -- tocheck
lin gliricidia_N = mkN "gliricidia" ; -- UWN
lin glisten_V = mkV (mkV I.reluire_V2) ; -- tocheck
lin glister_N = mkN "étinceler" ; -- UWN
lin glitter_V = mkV (mkV "briller") ; -- tocheck
lin gloaming_N = mkN "automne" | mkN "crépuscule" | mkN "tomber" | mkN "tombée_de_la_nuit" ; -- UWN
lin gloat_N = mkN "joie" ; -- UWN
lin global_A = mkA "global" | mkA "globulaire" ; -- tocheck
lin globe_N = mkN "Terre" feminine | mkN "globe" masculine ; -- tocheck
lin globeflower_N = mkN "trolle" masculine ; -- tocheck
lin globetrotter_N = mkN "globetrotteur" masculine ; -- tocheck
lin globin_N = mkN "globine" ; -- UWN
lin globule_N = mkN "globule" ; -- UWN
lin globulin_N = mkN "globuline" ; -- UWN
lin glochidium_N = mkN "glochide" ; -- UWN
lin glockenspiel_N = mkN "carillon" | mkN "glockenspiel" | mkN "jeu_de_timbres" ; -- UWN
lin glomerulonephritis_N = mkN "glomérulonéphrite" ; -- UWN
lin glomerulus_N = mkN "glomérule" ; -- UWN
lin gloom_N = mkN "morosité" feminine | mkN "obscurité" feminine ; -- tocheck
lin gloomy_A = mkA "morne" | mkA "sombre" ; -- tocheck
lin glop_N = mkN "mélasse" ; -- UWN
lin gloria_PN = mkPN "Gloria" ; -- status=guess src=geonames
lin glorification_N = mkN "glorification" feminine ; -- tocheck
lin glorify_V2 = mkV2 (mkV "glorifier") ; -- tocheck
lin glorious_A = mkA "glorieux" ; -- tocheck
lin glory_N = mkN "gloire" feminine ; -- tocheck
lin glory_V = mkV "glorifier" ; -- UWN
lin gloss_N = mkN "glose" feminine ; -- tocheck
lin glossary_N = mkN "glossaire" ; -- tocheck
lin glossiness_N = mkN "glose" | mkN "polir" ; -- UWN
lin glossitis_N = mkN "glossite" ; -- UWN
lin glossolalia_N = mkN "glossolalie" ; -- UWN
lin glossop_PN = mkPN "Glossop" ; -- status=guess src=geonames
lin glossy_A = mkA "luisant" ; -- tocheck
lin glottal_A = mkA "glottique" ; -- tocheck
lin glottis_N = mkN "glotte" feminine ; -- tocheck
lin gloucester_PN = mkPN "Gloucester" ; -- status=guess src=geonames
lin glove_N = L.glove_N ;
lin glow_N = variants {} ; --
lin glow_V = mkV (mkV "briller") ; -- tocheck
lin gloweringly_Adv = mkAdv "maussadement" | mkAdv "sombrement" ; -- UWN
lin glow_worm_N = mkN "ver luisant" ; -- UWN
lin gloxinia_N = mkN "gloxinia" ; -- UWN
lin glucagon_N = mkN "Glucagon" | mkN "glucagon" ; -- UWN
lin glucocorticoid_N = mkN "glucocorticoïde" masculine ; -- tocheck
lin glucose_N = mkN "glucose" masculine ; -- tocheck
lin glucoside_N = mkN "glucoside" masculine ; -- tocheck
lin glue_N = mkN "colle" feminine ; -- tocheck
lin glue_V2 = mkV2 (mkV "coller") ; -- tocheck
lin glum_A = mkA "morose" ; -- tocheck
lin gluon_N = mkN "gluon" masculine ; -- tocheck
lin glusburn_PN = mkPN "Glusburn" ; -- status=guess src=geonames
lin glutamate_N = mkN "glutamate" masculine ; -- tocheck
lin glutamine_N = mkN "glutamine" feminine ; -- tocheck
lin gluteal_A = mkA "glutéal" ; -- tocheck
lin glutelin_N = mkN "glutéline" ; -- UWN
lin gluten_N = mkN "gluten" masculine ; -- tocheck
lin glutinous_A = mkA "glutineux" ; -- tocheck
lin glutton_N = mkN "glouton" masculine | mkN "carcajou" masculine ; -- tocheck
lin gluttonous_A = mkA "glouton" | mkA "avide" ; -- tocheck
lin gluttony_N = mkN "gourmandise" feminine ; -- tocheck
lin glyceraldehyde_N = mkN "Glycéraldéhyde" | mkN "Glycérose" | mkN "glycéraldéhyde" | mkN "glycérose" ; -- UWN
lin glyceride_N = mkN "acylglycérol" masculine ; -- tocheck
lin glycerine_N = mkN "glycérine" feminine ; -- tocheck
lin glycerol_N = mkN "glycérine" | mkN "glycérol" ; -- UWN
lin glycine_N = mkN "glycine" feminine ; -- tocheck
lin glycogen_N = mkN "glycogène" masculine ; -- tocheck
lin glycolysis_N = mkN "glycolyse" feminine ; -- tocheck
lin glycoprotein_N = mkN "glycoprotéine" ; -- tocheck
lin glycoside_N = mkN "hétéroside" | mkN "hétérosides" ; -- UWN
lin glycosuria_N = mkN "glycosurie" ; -- UWN
lin glyph_N = mkN "glyphe" ; -- tocheck
lin gnarled_A = mkA "noueux" ; -- tocheck
lin gnat_N = mkN "moucheron" masculine ; -- tocheck
lin gnatcatcher_N = mkN "polioptilinae" ; -- UWN
lin gnathostome_N = mkN "gnathostomes" ; -- UWN
lin gnaw_V = mkV "ronger" | mkV "éroder" ; -- UWN
lin gnaw_V2 = mkV2 (mkV "ronger") ; -- tocheck
lin gneiss_N = mkN "gneiss" ; -- tocheck
lin gnocchi_N = mkN "gnocchis" ; -- tocheck
lin gnome_N = mkN "gnome" masculine ; -- tocheck
lin gnomon_N = mkN "style" masculine ; -- tocheck
lin gnosis_N = mkN "gnose" feminine ; -- tocheck
lin gnu_N = mkN "gnou" masculine ; -- tocheck
lin go_N = mkN "approbation" feminine | mkN "essai" masculine | mkN "go" masculine | mkN "tour" masculine ; -- tocheck
lin go_V = L.go_V ;
lin go_VA = mkVA (mkV I.devenir_V) ;
lin go_VV = mkVV I.aller_V ;
lin go_about_V = mkV "approcher" | mkV "entreprendre" ; -- UWN
lin go_about_V2 = prepV2 OP_go_V OP_about_Prep ; -- guess-p-verb
lin go_across_V = mkV "passer" | mkV "traverser" ; -- UWN
lin go_after_V2 = prepV2 OP_go_V OP_after_Prep ; -- guess-p-verb
lin go_against_V2 = prepV2 OP_go_V OP_against_Prep ; -- guess-p-verb
lin go_ahead_V = advV OP_go_V OP_ahead_Adv ; -- guess-p-verb
lin go_ahead_with_V2 = prepV2 (advV OP_go_V OP_ahead_Adv ) OP_with_Prep ; -- guess-p-verb
lin go_along_V = advV OP_go_V OP_along_Adv ; -- guess-p-verb
lin go_along_with_V2 = prepV2 (advV OP_go_V OP_along_Adv ) OP_with_Prep ; -- guess-p-verb
lin go_around_V = advV OP_go_V OP_around_Adv ; -- guess-p-verb
lin go_at_V2 = prepV2 OP_go_V OP_at_Prep ; -- guess-p-verb
lin go_away_V = advV OP_go_V OP_away_Adv ; -- guess-p-verb
lin go_back_V = mkV "récupérer" ; -- UWN
lin go_back_V2 = mkV2 (advV OP_go_V OP_back_Adv ) ; -- guess-p-verb
lin go_back_on_V2 = prepV2 (advV OP_go_V OP_back_Adv ) OP_on_Prep ; -- guess-p-verb
lin go_before_V = advV OP_go_V OP_before_Adv ; -- guess-p-verb
lin go_below_V = advV OP_go_V OP_below_Adv ; -- guess-p-verb
lin go_by_V = advV OP_go_V OP_by_Adv ; -- guess-p-verb
lin go_by_V2 = prepV2 OP_go_V OP_by_Prep ; -- guess-p-verb
lin go_cart_N = mkN "kart" masculine ; -- tocheck
lin go_down_V = advV OP_go_V OP_down_Adv ; -- guess-p-verb
lin go_down_on_V2 = prepV2 (advV OP_go_V OP_down_Adv ) OP_on_Prep ; -- guess-p-verb
lin go_down_to_V2 = prepV2 (advV OP_go_V OP_down_Adv ) OP_to_Prep ; -- guess-p-verb
lin go_down_with_V2 = prepV2 (advV OP_go_V OP_down_Adv ) OP_with_Prep ; -- guess-p-verb
lin go_for_V = advV OP_go_V OP_for_Adv ; -- guess-p-verb
lin go_for_V2 = prepV2 OP_go_V OP_for_Prep ; -- guess-p-verb
lin go_for_it_V = variants {} ; -- guess-p-verb
lin go_forth_V = advV OP_go_V OP_forth_Adv ; -- guess-p-verb
lin go_forward_V = mkV "avancer" | mkV "continuer" | mkV "progresser" ; -- UWN
lin go_in_V = mkV "entrer" | mkV "introduire" ; -- UWN
lin go_in_for_V2 = prepV2 (advV OP_go_V OP_in_Adv ) OP_for_Prep ; -- guess-p-verb
lin go_in_with_V2 = prepV2 (advV OP_go_V OP_in_Adv ) OP_with_Prep ; -- guess-p-verb
lin go_into_V2 = prepV2 OP_go_V OP_into_Prep ; -- guess-p-verb
lin go_it_V = variants {} ; -- guess-p-verb
lin go_it_alone_V = variants {} ; -- guess-p-verb
lin go_off_V = advV OP_go_V OP_off_Adv ; -- guess-p-verb
lin go_off_V2 = prepV2 OP_go_V OP_off_Prep ; -- guess-p-verb
lin go_off_with_V2 = prepV2 (advV OP_go_V OP_off_Adv ) OP_with_Prep ; -- guess-p-verb
lin go_on_V = advV OP_go_V OP_on_Adv ; -- guess-p-verb
lin go_on_V2 = prepV2 OP_go_V OP_on_Prep ; -- guess-p-verb
lin go_on_about_V2 = prepV2 (advV OP_go_V OP_on_Adv ) OP_about_Prep ; -- guess-p-verb
lin go_on_at_V2 = prepV2 (advV OP_go_V OP_on_Adv ) OP_at_Prep ; -- guess-p-verb
lin go_on_to_V2 = prepV2 (advV OP_go_V OP_on_Adv ) OP_to_Prep ; -- guess-p-verb
lin go_on_with_V2 = prepV2 (advV OP_go_V OP_on_Adv ) OP_with_Prep ; -- guess-p-verb
lin go_one_V = variants {} ; -- guess-p-verb
lin go_out_V = mkV "donner" | mkV "sortir" ; -- UWN
lin go_out_for_V2 = prepV2 (advV OP_go_V OP_out_Adv ) OP_for_Prep ; -- guess-p-verb
lin go_out_to_V2 = prepV2 (advV OP_go_V OP_out_Adv ) OP_to_Prep ; -- guess-p-verb
lin go_out_with_V2 = prepV2 (advV OP_go_V OP_out_Adv ) OP_with_Prep ; -- guess-p-verb
lin go_over_V = advV OP_go_V OP_over_Adv ; -- guess-p-verb
lin go_over_V2 = prepV2 OP_go_V OP_over_Prep ; -- guess-p-verb
lin go_over_to_V2 = prepV2 (advV OP_go_V OP_over_Adv ) OP_to_Prep ; -- guess-p-verb
lin go_past_V2 = prepV2 OP_go_V OP_past_Prep ; -- guess-p-verb
lin go_round_V = advV OP_go_V OP_round_Adv ; -- guess-p-verb
lin go_through_V = advV OP_go_V OP_through_Adv ; -- guess-p-verb
lin go_through_V2 = prepV2 OP_go_V OP_through_Prep ; -- guess-p-verb
lin go_through_with_V2 = prepV2 (advV OP_go_V OP_through_Adv ) OP_with_Prep ; -- guess-p-verb
lin go_to_V2 = prepV2 OP_go_V OP_to_Prep ; -- guess-p-verb
lin go_together_V = advV OP_go_V OP_together_Adv ; -- guess-p-verb
lin go_towards_V2 = prepV2 OP_go_V OP_towards_Prep ; -- guess-p-verb
lin go_under_V = advV OP_go_V OP_under_Adv ; -- guess-p-verb
lin go_up_V = advV OP_go_V OP_up_Adv ; -- guess-p-verb
lin go_up_to_V2 = prepV2 (advV OP_go_V OP_up_Adv ) OP_to_Prep ; -- guess-p-verb
lin go_with_V2 = prepV2 OP_go_V OP_with_Prep ; -- guess-p-verb
lin go_without_V2 = prepV2 OP_go_V OP_without_Prep ; -- guess-p-verb
lin goad_N = mkN "aiguillonner" ; -- UWN
lin goal_N = mkN "but" masculine | mkN "objectif" masculine ; -- tocheck
lin goalkeeper_N = variants {} ; --
lin goat_N = mkN "chèvre" feminine ; -- tocheck
lin goatee_N = mkN "barbiche" feminine ; -- tocheck
lin goatherd_N = mkN "chevrier" masculine ; -- tocheck
lin goatskin_N = mkN "outre" feminine ; -- tocheck
lin goatsucker_N = mkN "caprimulgidae" | mkN "caprimulgidés" | mkN "engoulevents" ; -- UWN
lin gob_N = mkN "gueule" | mkN "matelot" | mkN "crachat" ; -- tocheck
lin gobble_V2 = mkV2 (mkV "bouffer") | mkV2 (mkV "glousser") ; -- tocheck
lin gobbledygook_N = mkN "charabia" masculine | mkN "galimatias" masculine ; -- tocheck
lin gobbler_N = mkN "glouton" ; -- tocheck
lin goblet_N = mkN "gobelet" masculine ; -- tocheck
lin goblin_N = mkN "gobelin" masculine ; -- tocheck
lin go_by_N = mkN "gobie" masculine ; -- tocheck
lin god_N = mkN "dieu" masculine | mkN "idole" ; -- tocheck
lin godalming_PN = mkPN "Godalming" ; -- status=guess src=geonames
lin godchild_N = mkN "comte_cain" | mkN "filleul" ; -- UWN
lin goddaughter_N = mkN "filleule" ; -- tocheck
lin goddess_N = mkN "déesse" feminine ; -- tocheck
lin godfather_N = mkN "parrain" masculine ; -- tocheck
lin godforsaken_A = mkA "désert" | mkA "déserter" | mkA "sauvage" ; -- UWN
lin godfrey_PN = mkPN "Godfrey" ; -- status=guess src=geonames
lin godlike_A = mkA "divin" ; -- tocheck
lin godliness_N = mkN "piété" ; -- tocheck
lin godly_A = mkA "pieux" ; -- tocheck
lin godmanchester_PN = mkPN "Godmanchester" ; -- status=guess src=geonames
lin godmother_N = mkN "marraine" feminine ; -- tocheck
lin godparent_N = mkN "parrain" ; -- UWN
lin godson_N = mkN "filleul" masculine ; -- tocheck
lin godwit_N = mkN "barge" | mkN "barges" ; -- UWN
lin going_N = mkN "départ" ; -- UWN
lin goiter_N = mkN "goitre" ; -- UWN
lin goitre_N = mkN "goitre" masculine ; -- tocheck
lin gold_A = variants {} ; --
lin gold_N = L.gold_N ;
lin golden_A = mkA "doré" | mkA "d'or" ; -- tocheck
lin goldenrod_N = mkN "solidages" | mkN "solidago" | mkN "verge_d'or" ; -- UWN
lin goldfield_N = mkN "gisement" | mkN "goldfield" ; -- UWN
lin goldfinch_N = mkN "chardonneret" masculine ; -- tocheck
lin goldsmith_N = mkN "orfèvre" ; -- tocheck
lin golem_N = mkN "I" | mkN "automate" | mkN "robot" ; -- UWN
lin golf_N = mkN "golf" masculine ; -- tocheck
lin golf_V = mkV (mkV "golfer") ; -- tocheck
lin golf_club_N = mkN "club" | mkN "crosse" ; -- UWN
lin golfcart_N = mkN "Golfette" | mkN "golfette" ; -- UWN
lin golfer_N = mkN "golfeur" masculine ; -- tocheck
lin goliard_N = mkN "goliard" | mkN "les_goliards" ; -- UWN
lin goliath_N = mkN "colosse" | mkN "goliath" | mkN "géant" | mkN "monstre" ; -- UWN
lin golosh_N = mkN "arctique" | mkN "caoutchouc" | mkN "claque" | mkN "galoche" ; -- UWN
lin gonad_N = mkN "couille" feminine ; -- tocheck
lin gonadotropin_N = mkN "gonadotrophine" | mkN "gonadotrophines" | mkN "gonadotropines" ; -- UWN
lin gondola_N = mkN "gondole" feminine ; -- tocheck
lin gong_N = mkN "gong" masculine ; -- tocheck
lin goniometer_N = mkN "goniomètre" masculine ; -- tocheck
lin gonococcus_N = mkN "gonocoque" masculine ; -- tocheck
lin gonorrhea_N = mkN "gonorrhée" feminine ; -- tocheck
lin gonorrhoea_N = mkN "blennorragie" | mkN "chaude-pisse" | mkN "gonorrhée" ; -- UWN
lin goo_N = mkN "boue" | mkN "lie" ; -- UWN
lin good_A = L.good_A ;
lin good_N = mkN "bien" masculine | mkN "bon" masculine ; -- tocheck
lin good_looking_A = mkA "beau" ; -- tocheck
lin goodness_N = mkN "bonté" | mkN "bonté" feminine ; -- tocheck
lin goody_N = mkN "friandise" ; -- UWN
lin goof_N = mkN "gaffe" ; -- tocheck
lin googol_N = mkN "gogol" ; -- UWN
lin googolplex_N = mkN "gogolplex" ; -- UWN
lin goole_PN = mkPN "Goole" ; -- status=guess src=geonames
lin goose_N = mkN "oie" feminine ; -- tocheck
lin gooseberry_N = mkN "groseille" | mkN "groseille_à_maquereau" ; -- UWN
lin gopher_N = mkN "gaufre" masculine ; -- tocheck
lin goral_N = mkN "goral" masculine ; -- tocheck
lin gordon_PN = mkPN "Gordon" ; -- status=guess src=geonames
lin gore_N = mkN "godet" masculine ; -- tocheck
lin gore_V2 = mkV2 (mkV "encorner") ; -- tocheck
lin gorge_N = mkN "gosier" | mkN "gueule" | mkN "sophage" | mkN "œsophage" ; -- UWN
lin gorge_V = mkV "bâfrer" | mkV "goinfrer" | mkV "gueuletonner" | mkV "mettre" | mkV "s'empiffrer" ; -- UWN
lin gorge_V2 = mkV2 (mkV "gorger") ; -- tocheck
lin gorgeous_A = mkA "magnifique" ; -- tocheck
lin gorget_N = mkN "gorgerin" masculine | mkN "hausse-col" masculine | mkN "gorgerette" feminine ; -- tocheck
lin gorgon_N = mkN "gorgone" feminine ; -- tocheck
lin gorgonian_N = mkN "Gorgonacea" | mkN "coraux_cornés" | mkN "coraux_écorce" | mkN "gorgonacea" | mkN "gorgones" ; -- UWN
lin gorgonzola_N = mkN "gorgonzola" ; -- UWN
lin gorilla_N = mkN "gorille" masculine ; -- tocheck
lin gormandize_V = mkV "bâfrer" | mkV "goinfrer" | mkV "gueuletonner" | mkV "mettre" | mkV "s'empiffrer" ; -- UWN
lin gormless_A = mkA "puéril" | mkA "absurde" ; -- tocheck
lin gorse_N = mkN "ajonc" masculine ; -- tocheck
lin gorseinon_PN = mkPN "Gorseinon" ; -- status=guess src=geonames
lin gory_A = mkA "sanglant" ; -- tocheck
lin goshawk_N = mkN "autour" masculine ; -- tocheck
lin gosling_N = mkN "oison" masculine ; -- tocheck
lin gospel_N = mkN "évangile" feminine ; -- tocheck
lin gosport_PN = mkPN "Gosport" ; -- status=guess src=geonames
lin gossip_N = mkN "commérage" | mkN "commère" feminine ; -- tocheck
lin gossip_V = mkV (mkV "commérer") | mkV (mkV "bavarder") ; -- tocheck
lin gothenburg_PN = mkPN "Gothenburg" ; -- status=guess src=geonames
lin gothic_A = variants {} ; --
lin gouge_N = mkN "gouge" feminine | mkN "gougeure" feminine ; -- tocheck
lin gouge_V2 = mkV2 (mkV "arnaquer") | mkV2 (mkV "gouger") | mkV2 (mkV "éborgner") ; -- tocheck
lin gouger_N = mkN "arnaqueur" ; -- UWN
lin goulash_N = mkN "goulash" masculine ; -- tocheck
lin gourd_N = mkN "calebasse" feminine ; -- tocheck
lin gourde_N = mkN "gourde" ; -- UWN
lin gourmand_N = mkN "gourmet" masculine | mkN "glouton" masculine ; -- tocheck
lin gourmet_N = mkN "gourmet" masculine ; -- tocheck
lin gourock_PN = mkPN "Gourock" ; -- status=guess src=geonames
lin gout_N = mkN "goutte" feminine ; -- tocheck
lin govern_V = variants {} ; -- mkV2 (mkV "gouverner") ; -- tocheck
lin govern_V2 = mkV2 (mkV "gouverner") ; -- tocheck
lin governance_N = mkN "administration" | mkN "gestion" | mkN "gouvernement" ; -- UWN
lin governess_N = mkN "gouvernante" feminine ; -- tocheck
lin government_N = mkN "gouvernement" masculine ;
lin governor_N = mkN "gouverneur" masculine ; -- tocheck
lin gown_N = mkN "robe" feminine | mkN "toge" ; -- tocheck
lin grab_N = mkN "saisir" ; -- tocheck
lin grab_V = mkV "attraper" | mkV "capturer" | mkV "saisir" ; -- UWN
lin grab_V2 = mkV2 (mkV "attraper") ; -- tocheck
lin grace_N = mkN "grâce" feminine | mkN "bénédicité" masculine ; -- tocheck
lin graceful_A = mkA "gracieux" ; -- tocheck
lin gracefulness_N = mkN "grâce" feminine ; -- tocheck
lin graciousness_N = mkN "affabilité" ; -- UWN
lin gradation_N = mkN "gradation" | mkN "graduation" ; -- UWN
lin grade_N = mkN "mention" feminine | mkN "classe" feminine ; -- tocheck
lin grader_N = mkN "niveleuse" feminine ; -- tocheck
lin gradient_N = mkN "gradient" masculine | mkN "pente" | mkN "pente" feminine ; -- tocheck
lin gradual_A = mkA "progressif" ; -- UWN
lin graduate_N = mkN "licencié" masculine ; -- tocheck
lin graduate_V = mkV "calibrer" | mkV "obtenir" | mkV "étalonner" ; -- UWN
lin graduate_V2 = mkV2 (mkV "diplômer") ; -- tocheck
lin graduation_N = mkN "graduation" feminine ; -- tocheck
lin graffito_N = mkN "Graffiti" | mkN "graffiti" ; -- UWN
lin graft_N = mkN "greffon" masculine | mkN "corruption" feminine ; -- tocheck
lin grain_N = mkN "grain" masculine ; -- tocheck
lin gram_N = mkN "gramme" masculine ; -- tocheck
lin grammar_N = L.grammar_N ;
lin grammarian_N = mkN "grammairien" masculine ; -- tocheck
lin grammatical_A = mkA "grammatical" ; -- tocheck
lin gramme_N = mkN "gramme" ; -- UWN
lin gramophone_N = mkN "gramophone" masculine ; -- tocheck
lin granada_PN = mkPN ("Granada" | "Grenade") ;
lin granary_N = mkN "grenier" masculine ; -- tocheck
lin grand_A = variants {} ; --
lin grandad_N = mkN "aïeul" | mkN "bon-papa" | mkN "grand-papa" | mkN "grand-père" | mkN "papi" | mkN "papy" | mkN "pépé" ; -- UWN
lin grandaunt_N = mkN "grand-tante" feminine ; -- tocheck
lin grandchild_N = mkN "petit-enfant" masculine ; -- tocheck
lin granddad_N = mkN "aïeul" | mkN "bon-papa" | mkN "grand-papa" | mkN "grand-père" | mkN "papi" | mkN "papy" | mkN "pépé" ; -- UWN
lin granddaughter_N = mkN "petite-fille" feminine ; -- tocheck
lin grandee_N = mkN "grand_d'espagne" ; -- UWN
lin grandeur_N = mkN "pompe" | mkN "splendeur" ; -- UWN
lin grandfather_N = mkN "grand-père" masculine ; -- tocheck
lin grandiloquence_N = mkN "rhétorique" ; -- UWN
lin grandiloquent_A = mkA "grandiloquent" ; -- tocheck
lin grandiose_A = mkA "grandiose" ; -- tocheck
lin grandiosity_N = mkN "rhétorique" ; -- UWN
lin grandma_N = mkN "mamie" ; -- tocheck
lin grandmaster_N = mkN "grand_maître" ; -- UWN
lin grandmother_N = mkN "grand-mère" feminine ; -- tocheck
lin grandnephew_N = mkN "petit-neveu" ; -- tocheck
lin grandniece_N = mkN "petite-nièce" ; -- tocheck
lin grandpa_N = mkN "aïeul" | mkN "bon-papa" | mkN "grand-papa" | mkN "grand-père" | mkN "papi" | mkN "papy" | mkN "pépé" ; -- UWN
lin grandparent_N = mkN "grand-parent" masculine ; -- tocheck
lin grandson_N = mkN "petit-fils" masculine ; -- tocheck
lin grandstand_N = mkN "tribune" feminine ; -- tocheck
lin granduncle_N = mkN "grand-oncle" ; -- tocheck
lin grangemouth_PN = mkPN "Grangemouth" ; -- status=guess src=geonames
lin granite_N = mkN "granite" masculine ; -- tocheck
lin granitic_A = mkA "granitique" ; -- tocheck
lin granny_N = mkN "mémé" feminine ; -- tocheck
lin granola_N = mkN "granola" ; -- UWN
lin grant_N = mkN "subvention" ; -- UWN
lin grant_V2 = variants {} ; -- mkV3 (mkV "accorder") ; -- tocheck
lin grant_V3 = mkV3 (mkV "accorder") ; -- tocheck
lin grantham_PN = mkPN "Grantham" ; -- status=guess src=geonames
lin granular_A = mkA "granuleux" ; -- tocheck
lin granularity_N = mkN "granularité" ; -- UWN
lin granulate_V2 = mkV2 (mkV "grainer") ; -- tocheck
lin granule_N = mkN "granule" feminine ; -- tocheck
lin granulocyte_N = mkN "Granulocyte" | mkN "granulocyte" | mkN "granulocytes" ; -- UWN
lin granuloma_N = mkN "granulome" ; -- UWN
lin grape_N = mkN "raisin" masculine ; -- tocheck
lin grapefruit_N = mkN "pamplemousse" masculine ; -- tocheck
lin grapevine_N = mkN "vigne" feminine ; -- tocheck
lin graph_N = mkN "graphique" masculine | mkN "graphe" masculine ; -- tocheck
lin graphic_A = mkA "graphique" ; -- tocheck
lin graphics_N = mkN "graphiques" | mkN "graphisme" masculine ; -- tocheck
lin graphite_N = mkN "graphite" masculine ; -- tocheck
lin graphologist_N = mkN "graphologue" ; -- tocheck
lin graphology_N = mkN "graphologie" ; -- tocheck
lin grappa_N = mkN "grappa" ; -- tocheck
lin grasp_N = mkN "embrayage" | mkN "portée" | mkN "prise" | mkN "serrer" ; -- UWN
lin grasp_V = mkV "appréhender" | mkV "comprendre" | mkV "saisir" ; -- UWN
lin grasp_V2 = mkV2 (mkV "saisir") | mkV2 (mkV I.comprendre_V2) ; -- tocheck
lin grass_N = L.grass_N ;
lin grass_V2 = mkV2 (mkV "moucharder") ; -- tocheck
lin grasshopper_N = mkN "sauterelle" feminine ; -- tocheck
lin grassland_N = mkN "prairie" | mkN "pré" | mkN "surface_en_herbe" ; -- UWN
lin grassroots_A = mkA "local" ; -- tocheck
lin grassy_A = mkA "herbu" ; -- UWN
lin grate_V = mkV "râper" ; -- UWN
lin grate_V2 = mkV2 (mkV "râper") ; -- tocheck
lin grateful_A = mkA "reconnaissant" ; -- tocheck
lin gratefulness_N = mkN "reconnaissance" ; -- tocheck
lin grater_N = mkN "râpe" feminine ; -- tocheck
lin gratification_N = mkN "satisfaction" ; -- UWN
lin gratify_V2 = mkV2 (mkV "gratifier") ; -- tocheck
lin gratifying_A = mkA "agréable" | mkA "drôle" ; -- UWN
lin grating_N = mkN "Réseau_de_diffraction_optique" | mkN "réseau_de_diffraction" | mkN "réseau_de_diffraction_optique" ; -- UWN
lin gratis_A = mkA "gratuit" ; -- tocheck
lin gratis_Adv = mkAdv "gratuit" | mkAdv "gratuitement" ; -- UWN
lin gratitude_N = mkN "gratitude" feminine ; -- tocheck
lin gratuity_N = mkN "pourboire" ; -- UWN
lin grave_A = mkA "considérable" | mkA "dangereux" | mkA "grave" | mkA "sérieux" | mkA "sévère" ; -- UWN
lin grave_N = mkN "tombe" feminine ; -- tocheck
lin grave_V2 = mkV2 (mkV "graver") | mkV2 (mkV "tailler") ; -- tocheck
lin gravedigger_N = mkN "fossoyeur" ; -- tocheck
lin gravel_N = mkN "graviers" ; -- tocheck
lin gravelly_A = mkA "gravier" ; -- UWN
lin graveness_N = mkN "gravité" ; -- UWN
lin graver_N = mkN "ciseau" ; -- UWN
lin graverobber_N = mkN "goule" ; -- UWN
lin gravesend_PN = mkPN "Gravesend" ; -- status=guess src=geonames
lin gravestone_N = mkN "faire-part_de_clôture" | mkN "pierre" | mkN "pierre_tombale" | mkN "tombale" ; -- UWN
lin graveyard_N = mkN "cimetière" masculine ; -- tocheck
lin gravidity_N = mkN "gestation" ; -- UWN
lin graving_dock_N = mkN "cale_sèche" ; -- UWN
lin gravitate_V = mkV (mkV "graviter") ; -- tocheck
lin gravitation_N = mkN "gravitation" feminine ; -- tocheck
lin gravitational_A = mkA "gravitationnel" ; -- tocheck
lin graviton_N = mkN "graviton" masculine ; -- tocheck
lin gravity_N = mkN "gravité" feminine ; -- tocheck
lin graz_PN = mkPN "Graz" ; -- status=guess src=geonames
lin graze_N = mkN "éraflure" ; -- tocheck
lin graze_V2 = mkV2 (mkV "brouter") ; -- tocheck
lin grease_N = mkN "graisse" feminine ; -- tocheck
lin grease_V2 = mkV2 (mkV "graisser") | mkV2 (mkV "lubrifier") ; -- tocheck
lin great_A = mkA "grand" | mkA "excellent" ;
lin greatcoat_N = mkN "pardessus" masculine ; -- tocheck
lin greatest_A = mkA "superlatif" ; -- UWN
lin greathearted_A = mkA "magnanime" ; -- UWN
lin greatly_Adv = adjAdv great_A ; -- -- derived
lin greatness_N = mkN "immensité" | mkN "largeur" | mkN "énormité" ; -- UWN
lin greave_N = mkN "Cnémide" | mkN "cnémide" ; -- UWN
lin greaves_N = mkN "cretons" masculine ; -- tocheck
lin grebe_N = mkN "grèbe" masculine ; -- tocheck
lin greece_PN = mkPN "Grèce" ; -- status=guess src=geonames
lin greed_N = mkN "avarice" feminine ; -- tocheck
lin greedy_A = mkA "avaricieux" ; -- tocheck
lin greekFem_N = variants {} ; ---- sense to be split
lin greekMasc_N = variants {} ; ---- sense to be split
lin green_A = L.green_A ;
lin green_N = mkN "vert" masculine ; -- tocheck
lin greenbelt_N = mkN "greenway" ; -- UWN
lin greenfly_N = mkN "puceron" ; -- UWN
lin greengage_N = mkN "reine-claude" ; -- UWN
lin greenhorn_N = mkN "béjaune" ; -- tocheck
lin greenhouse_A = mkA "serre" ; -- UWN
lin greenhouse_N = mkN "serre" feminine ; -- tocheck
lin greenish_A = mkA "verdâtre" ; -- tocheck
lin greenness_N = mkN "vert" ; -- UWN
lin greenock_PN = mkPN "Greenock" ; -- status=guess src=geonames
lin greens_N = mkN "légumes_verts" | mkN "vert" ; -- UWN
lin greensward_N = mkN "gazon" | mkN "gazonner" | mkN "herbe" | mkN "pelouse" ; -- UWN
lin greenwich_PN = mkPN "Greenwich" ; -- status=guess src=geonames
lin greet_V2 = mkV2 (mkV "saluer") ; -- tocheck
lin greeting_N = mkN "salutation" feminine ; -- tocheck
lin gregarious_A = mkA "grégaire" | mkA "sociable" ; -- tocheck
lin gregory_PN = mkPN "Gregory" ; -- status=guess src=geonames
lin grenada_PN = mkPN "Grenade" ; -- status=guess src=geonames
lin grenade_N = mkN "grenade" feminine ; -- tocheck
lin grenadier_N = mkN "Macrouridae" | mkN "macrouridae" ; -- UWN
lin grevillea_N = mkN "grevillea" ; -- UWN
lin grey_A = mkA "gris" | mkA "grisonner" | mkA "grisâtre" ; -- UWN
lin grey_N = mkN "gris" ; -- UWN
lin grey_V2 = mkV2 (mkV "griser") ; -- tocheck
lin greyhound_N = mkN "lévrier" masculine ; -- tocheck
lin greyish_A = mkA "gris" | mkA "grisonner" | mkA "grisâtre" ; -- UWN
lin grid_N = mkN "grille" feminine | mkN "réseau" masculine ; -- tocheck
lin gridlock_N = mkN "impasse" masculine | mkN "embouteillage" masculine ; -- tocheck
lin grief_N = mkN "douleur" feminine ; -- tocheck
lin grievance_N = mkN "plainte" ; -- UWN
lin grievous_A = mkA "considérable" | mkA "dangereux" | mkA "grave" | mkA "sérieux" | mkA "sévère" ; -- UWN
lin griffin_N = mkN "griffon" ; -- tocheck
lin grigri_N = mkN "grigri" ; -- UWN
lin grill_N = mkN "grill" masculine | mkN "grille" feminine | mkN "calandre" feminine ; -- tocheck
lin grillroom_N = mkN "gril" ; -- UWN
lin grim_A = mkA "sinistre" ; -- tocheck
lin grimace_N = mkN "grimace" feminine ; -- tocheck
lin grimace_V = mkV (mkV "grimacer") ; -- tocheck
lin grime_N = mkN "dechet" ; -- tocheck
lin grimethorpe_PN = mkPN "Grimethorpe" ; -- status=guess src=geonames
lin grimness_N = mkN "austérité" | mkN "rigueur" | mkN "souffrance" | mkN "épreuve" ; -- UWN
lin grimoire_N = mkN "grimoire" masculine ; -- tocheck
lin grimsby_PN = mkPN "Grimsby" ; -- status=guess src=geonames
lin grimy_A = mkA "grunge" ; -- UWN
lin grin_N = mkN "sourire" ; -- UWN
lin grin_V = variants {} ; --
lin grind_N = mkN "moulin" | mkN "pulvérisation" | mkN "égrugeage" ; -- UWN
lin grind_V = mkV "broyer" | mkV "moudre" ; -- UWN
lin grind_V2 = mkV2 (mkV I.moudre_V2) ; -- tocheck
lin grinder_N = mkN "molaire" feminine | mkN "moulin" masculine | mkN "aiguisoir" masculine ; -- tocheck
lin grindstone_N = mkN "meule" feminine ; -- tocheck
lin griot_N = mkN "griot" ; -- UWN
lin grip_N = mkN "poignée" feminine ; -- tocheck
lin grip_V2 = mkV2 (mkV "saisir") ; -- tocheck
lin gripe_N = mkN "bœuf" | mkN "coup_de_pied" | mkN "garce" | mkN "viande" ; -- UWN
lin grippe_N = mkN "grippe" | mkN "influenza" ; -- UWN
lin grisaille_N = mkN "grisaille" ; -- UWN
lin grisly_A = mkA "épouvantable" ; -- tocheck
lin gristle_N = mkN "cartilage" masculine ; -- tocheck
lin gristmill_N = mkN "minoterie" ; -- UWN
lin grit_N = mkN "cran" | mkN "gravillon" ; -- tocheck
lin grit_V2 = mkV2 (mkV "Grincer") ; -- tocheck
lin gritty_A = mkA "jeu" ; -- UWN
lin groan_N = mkN "grognement" masculine | mkN "râle" masculine ; -- tocheck
lin groan_V = variants {} ; -- mkV2 (mkV "râler") ; -- tocheck
lin groan_V2 = mkV2 (mkV "râler") ; -- tocheck
lin groats_N = mkN "gruau" ; -- UWN
lin grocer_N = mkN "épicier" ; -- tocheck
lin grocery_N = mkN "épicerie" feminine ; -- tocheck
lin grog_N = mkN "grog" masculine ; -- tocheck
lin grogginess_N = mkN "stupéfaction" ; -- UWN
lin groggy_A = mkA "chancelant(e)" ; -- tocheck
lin groin_N = mkN "aine" feminine ; -- tocheck
lin groningen_PN = mkPN "Groningue" ; -- status=guess src=geonames
lin groom_N = mkN "fiancé" masculine | mkN "palefrenier" masculine ; -- tocheck
lin groom_V2 = mkV2 (mkV "préparer") ; -- tocheck
lin groove_N = mkN "rainure" feminine ; -- tocheck
lin grooving_N = mkN "cannelure" | mkN "rainure" | mkN "sillon" ; -- UWN
lin groovy_A = mkA "pavaner" ; -- UWN
lin grope_V2 = mkV2 (mkV "tâtonner") | mkV2 (mkV "tripoter") ; -- tocheck
lin grosbeak_N = mkN "pinicola" ; -- UWN
lin groschen_N = mkN "groschen" masculine ; -- tocheck
lin gross_A = mkA "grossier" | mkA "dégoûtant" | mkA "brut" ; -- tocheck
lin gross_N = mkN "recette" | mkN "rente" | mkN "revenu" ; -- UWN
lin grossness_N = mkN "vulgarité" ; -- UWN
lin grot_N = mkN "Grotte#Culture" | mkN "grotte" | mkN "grotte#culture" ; -- UWN
lin grotesque_A = mkA "grotesque" ; -- tocheck
lin grotesque_N = mkN "grotesque" ; -- UWN
lin grotesqueness_N = mkN "grotesquerie" ; -- UWN
lin grotto_N = mkN "grotte" feminine ; -- tocheck
lin grouch_N = mkN "grincheux" ; -- tocheck
lin grouchy_A = mkA "grincheux" ; -- tocheck
lin ground_1_N = mkN "base" feminine | mkN "fond" masculine ;
lin ground_2_N = mkN "sol" masculine | mkN "terre" feminine ;
lin ground_N = mkN "sol" masculine | mkN "base" feminine | mkN "fond" masculine | mkN "terre" feminine ; -- tocheck
lin ground_V = mkV "baser" | mkV "fonder" | mkV "fonder|fondre" | mkV "motiver" | mkV "établir" ; -- UWN
lin ground_V2 = mkV2 (mkV "gronder") ; -- tocheck
lin groundless_A = mkA "infondé" ; -- tocheck
lin groundnut_N = mkN "arachide" | mkN "cacahuète" ; -- UWN
lin grounds_N = mkN "cour" | mkN "yard" ; -- UWN
lin groundwork_N = mkN "fondation" feminine ; -- tocheck
lin group_N = mkN "groupe" masculine ;
lin group_V = variants {} ; -- mkV2 (mkV "grouper") ; -- tocheck
lin group_V2 = mkV2 (mkV "grouper") ; -- tocheck
lin grouper_N = mkN "mérou" masculine ; -- tocheck
lin groupie_N = mkN "groupie" ; -- UWN
lin grouping_N = mkN "ensemble" | mkN "groupe" | mkN "groupement" ; -- UWN
lin groupthink_N = mkN "GroupThink" | mkN "groupthink" | mkN "pensée_de_groupe" ; -- UWN
lin groupware_N = mkN "groupiciel" | mkN "logiciel_de_groupe_de_travail" ; -- UWN
lin grouse_N = mkN "tétras" ; -- UWN
lin grove_N = mkN "bosquet" masculine ; -- tocheck
lin grovel_V = mkV (reflV (mkV "abaisser")) ; -- tocheck
lin groveller_N = mkN "lèche-bottes" | mkN "lèche-cul" ; -- UWN
lin grow_V = I.croître_V | mkV "pousser" | mkV "grandir" ;
lin grow_V2 = mkV2 (mkV "cultiver") ;
lin grow_VA = mkVA (mkV I.croître_V) ;
lin grow_apart_V = advV OP_grow_V OP_apart_Adv ; -- guess-p-verb
lin grow_away_from_V2 = prepV2 (advV OP_grow_V OP_away_Adv ) OP_from_Prep ; -- guess-p-verb
lin grow_back_V = advV OP_grow_V OP_back_Adv ; -- guess-p-verb
lin grow_from_V2 = prepV2 OP_grow_V OP_from_Prep ; -- guess-p-verb
lin grow_into_V2 = prepV2 OP_grow_V OP_into_Prep ; -- guess-p-verb
lin grow_on_V2 = prepV2 OP_grow_V OP_on_Prep ; -- guess-p-verb
lin grow_out_V = advV OP_grow_V OP_out_Adv ; -- guess-p-verb
lin grow_out_of_V2 = prepV2 (advV OP_grow_V OP_out_Adv ) OP_of_Prep ; -- guess-p-verb
lin grow_to_V = advV OP_grow_V OP_to_Adv ; -- guess-p-verb
lin grow_together_V = advV OP_grow_V OP_together_Adv ; -- guess-p-verb
lin grow_under_V = advV OP_grow_V OP_under_Adv ; -- guess-p-verb
lin grow_up_V = mkV "grandir" ; -- UWN
lin grow_up_on_V2 = prepV2 (advV OP_grow_V OP_up_Adv ) OP_on_Prep ; -- guess-p-verb
lin grow_upon_V2 = prepV2 OP_grow_V OP_upon_Prep ; -- guess-p-verb
lin grower_N = mkN "maraîcher" ; -- tocheck
lin growing_A = variants {} ; --
lin growl_N = mkN "feulement" masculine | mkN "borborygme" masculine ; -- tocheck
lin growl_V2 = mkV2 (mkV "grogner") ; -- tocheck
lin growth_N = mkN "croissance" feminine ; -- tocheck
lin groyne_N = mkN "aine" | mkN "brise-lames" | mkN "digue" | mkN "embarcadère" | mkN "jetée" | mkN "mole" | mkN "taupe" ; -- UWN
lin grub_N = mkN "larve" feminine | mkN "boue" | mkN "bouffe" feminine ; -- tocheck
lin grubby_A = mkA "crasseux" ; -- tocheck
lin grudge_N = mkN "rancune" ; -- tocheck
lin grudging_A = mkA "mesquinement" ; -- UWN
lin gruel_N = mkN "gruau" masculine ; -- tocheck
lin gruelling_A = mkA "éreintant" ; -- tocheck
lin gruesome_A = mkA "horrible" ; -- tocheck
lin gruff_A = mkA "bourru" ; -- tocheck
lin grumble_N = mkN "grondement" masculine | mkN "gargouillement" masculine ; -- tocheck
lin grumble_V = mkV "râler" ; -- UWN
lin grumble_V2 = mkV2 (mkV "gronder") | mkV2 (mkV "gargouiller") | mkV2 (mkV "ronchonner") ; -- tocheck
lin grumble_VS = mkvVS "râler" ; -- UWN
lin grumbler_N = mkN "pleureur" | mkN "quérulent" ; -- UWN
lin grumpy_A = mkA "grognon" ; -- tocheck
lin grunt_N = mkN "bidasse" feminine | mkN "grognement" ; -- tocheck
lin grunt_V2 = mkV2 (mkV "grogner") ; -- tocheck
lin gryphon_N = mkN "griffon" ; -- UWN
lin guacamole_N = mkN "guacamole" ; -- UWN
lin guadalajara_PN = mkPN "Guadalajara" ; -- status=guess src=geonames
lin guaiacum_N = mkN "gaïac" masculine ; -- tocheck
lin guanaco_N = mkN "guanaco" masculine ; -- tocheck
lin guanine_N = mkN "guanine" feminine ; -- tocheck
lin guano_N = mkN "guano" masculine ; -- tocheck
lin guarantee_N = mkN "garantie" feminine | mkN "garant" ; -- tocheck
lin guarantee_V = variants {} ; -- mkV2 (mkV "garantir") ; -- tocheck
lin guarantee_V2 = mkV2 (mkV "garantir") ; -- tocheck
lin guarantee_VS = variants {} ; -- mkV2 (mkV "garantir") ; -- tocheck
lin guarantor_N = mkN "caution" | mkN "garant" ; -- UWN
lin guard_N = mkN "garde" | mkN "garde" feminine | mkN "gardien" masculine ; -- tocheck
lin guard_V = variants {} ; -- mkV2 (mkV "garder") ; -- tocheck
lin guard_V2 = mkV2 (mkV "garder") ; -- tocheck
lin guardian_N = mkN "boss" masculine | mkN "gardien" masculine | mkN "tuteur" masculine ; -- tocheck
lin guardianship_N = mkN "tutelle" feminine ; -- tocheck
lin guardrail_N = mkN "garde-fou" masculine ; -- tocheck
lin guatemala_PN = mkPN "Guatemala" ; -- status=guess src=geonames
lin guava_N = mkN "goyave" feminine | mkN "goyavier" masculine ; -- tocheck
lin guayaquil_PN = mkPN "Guayaquil" ; -- status=guess src=geonames
lin gubernatorial_A = mkA "gouvernoral" ; -- UWN
lin gudgeon_N = mkN "goujon" masculine ; -- tocheck
lin guenon_N = mkN "guenon" feminine ; -- tocheck
lin guerrilla_N = mkN "guérilla" feminine | mkN "guérillero" masculine ; -- tocheck
lin guess_N = mkN "conjecture" feminine ; -- tocheck
lin guess_V = variants {} ; -- mkV2 (mkV "deviner") | mkV2 (mkV I.déduire_V2) | mkV2 (mkV "supposer") ; -- tocheck
lin guess_V2 = mkV2 (mkV "deviner") | mkV2 (mkV I.déduire_V2) | mkV2 (mkV "supposer") ; -- tocheck
lin guess_VS = variants {} ; -- mkV2 (mkV "deviner") | mkV2 (mkV I.déduire_V2) | mkV2 (mkV "supposer") ; -- tocheck
lin guesswork_N = mkN "extrapolation" masculine ; -- tocheck
lin guest_N = mkN "invité(e)" | mkN "invité(e)" masculine | mkN "client(e)" masculine ; -- tocheck
lin guesthouse_N = mkN "auberge" ; -- UWN
lin guidance_N = mkN "conseils" masculine ; -- tocheck
lin guide_N = mkN "guide" | mkN "guide" masculine ; -- tocheck
lin guide_V2 = mkV2 (mkV "guider") ; -- tocheck
lin guidebook_N = mkN "guide" ; -- UWN
lin guideline_N = mkN "directive" | mkN "directive" feminine ; -- tocheck
lin guidepost_N = mkN "directive" | mkN "règle_empirique" | mkN "règle_générale" ; -- UWN
lin guild_N = mkN "guilde" ; -- tocheck
lin guildford_PN = mkPN "Guildford" ; -- status=guess src=geonames
lin guile_N = mkN "ruse" feminine ; -- tocheck
lin guileless_A = mkA "transparent" ; -- UWN
lin guillotine_N = mkN "massicot" masculine | mkN "guillotine" feminine ; -- tocheck
lin guillotine_V2 = mkV2 (mkV "guillotiner") ; -- tocheck
lin guilt_N = mkN "culpabilité" feminine ; -- tocheck
lin guiltiness_N = mkN "culpabilité" ; -- UWN
lin guiltless_A = mkA "innocent" ; -- UWN
lin guilty_A = mkA "coupable" ; -- tocheck
lin guinea_N = mkN "guinée" feminine ; -- tocheck
lin guinea_PN = mkPN "Guinée-Conakry" ; -- status=guess src=geonames
lin guisborough_PN = mkPN "Guisborough" ; -- status=guess src=geonames
lin guise_N = mkN "allure" | mkN "guise" | mkN "prétention" | mkN "prétexte" ; -- UWN
lin guitar_N = mkN "guitare" feminine ; -- tocheck
lin guitarfish_N = mkN "Rhinobatidae" | mkN "rhinobatidae" ; -- UWN
lin guitarist_N = mkN "guitariste" ; -- tocheck
lin gulag_N = mkN "Goulag" masculine ; -- tocheck
lin gulf_N = mkN "golfe" masculine ; -- tocheck
lin gull_N = mkN "goéland" masculine ; -- tocheck
lin gullet_N = mkN "oesophage" masculine ; -- tocheck
lin gullibility_N = mkN "crédulité" ; -- UWN
lin gullible_A = mkA "crédule" ; -- tocheck
lin gully_N = mkN "ravine" ; -- UWN
lin gulp_N = mkN "gorgée" feminine ; -- tocheck
lin gulper_N = mkN "bambocheur" ; -- UWN
lin gum_N = mkN "gencive" feminine | mkN "chewing-gum" masculine | mkN "gomme" feminine ; -- tocheck
lin gumption_N = mkN "cran" | mkN "culot" | mkN "entrailles" | mkN "estomac" | mkN "nerf" | mkN "sable" | mkN "tripes" | mkN "épine_dorsale" ; -- UWN
lin gumshoe_N = mkN "arctique" | mkN "caoutchouc" | mkN "claque" | mkN "galoche" ; -- UWN
lin gun_N = mkN "fusil" masculine | mkN "canon" | mkN "pistolet" masculine ; -- tocheck
lin gunboat_N = mkN "canonnière" feminine ; -- tocheck
lin guncotton_N = mkN "coton-poudre" | mkN "fulmi-coton" | mkN "fulmicoton" | mkN "nitrocellulose" | mkN "pyroxyle" ; -- UWN
lin gunfire_N = mkN "coup_de_feu" | mkN "tir" ; -- UWN
lin gunite_N = mkN "gunite" ; -- UWN
lin gunner_N = mkN "artilleur" masculine ; -- tocheck
lin gunny_N = mkN "Jute#Toile_de_jute" | mkN "jute#toile_de_jute" ; -- UWN
lin gunpoint_N = mkN "point" ; -- UWN
lin gunpowder_N = mkN "poudre" | mkN "poudre_noire" | mkN "poudre_à_canon" ; -- UWN
lin gunshot_N = mkN "coup_de_feu" | mkN "tir" ; -- UWN
lin gunsmith_N = mkN "armurier" masculine ; -- tocheck
lin gunwale_N = mkN "plat-bord" masculine ; -- tocheck
lin gurgle_N = mkN "gargouillis" masculine ; -- tocheck
lin gurgle_V = mkV (mkV "gargouiller") ; -- tocheck
lin gurney_N = mkN "brancard" masculine ; -- tocheck
lin guru_N = mkN "gourou" masculine ; -- tocheck
lin gush_N = mkN "jaillissement" ; -- tocheck
lin gush_V = mkV (mkV "jaillir") ; -- tocheck
lin gusset_N = mkN "gousset" ; -- tocheck
lin gust_N = mkN "souffle" masculine ; -- tocheck
lin gustation_N = mkN "goût" | mkN "saveur" ; -- UWN
lin gusto_N = mkN "relish" | mkN "vigueur" ; -- UWN
lin gut_N = mkN "panse" | mkN "boyaux" | mkN "intestin" ; -- tocheck
lin gut_V2 = mkV2 (mkV "vider") ; -- tocheck
lin guts_N = L.guts_N ;
lin gutter_N = mkN "gouttière" | mkN "dalot" masculine | mkN "caniveau" masculine ; -- tocheck
lin guttural_A = mkA "gutturale" ; -- UWN
lin guttural_N = mkN "gutturale" ; -- UWN
lin guy_N = mkN "hauban" masculine | mkN "gars" | mkN "mec" masculine ; -- tocheck
lin guyana_PN = mkPN "Guyane britannique" ; -- status=guess src=geonames
lin guyot_N = mkN "guyot" ; -- UWN
lin guzzle_V2 = mkV2 (mkV "engloutir") ; -- tocheck
lin guzzler_N = mkN "bambocheur" ; -- UWN
lin gymkhana_N = mkN "gymkhana" ; -- UWN
lin gymnasium_N = mkN "gymnase" masculine | mkN "lycée" masculine ; -- tocheck
lin gymnast_N = mkN "gymnaste" ; -- tocheck
lin gymnastics_N = mkN "gymnastique" feminine ; -- tocheck
lin gymnosperm_N = mkN "gymnospermes" ; -- UWN
lin gynaecological_A = mkA "gynécologique" ; -- UWN
lin gynaecologistFem_N = mkN "gynécologue" ; -- tocheck
lin gynaecologistMasc_N = mkN "gynécologue" ; -- tocheck
lin gynaecologist_N = mkN "gynécologue" ; -- UWN
lin gynaecology_N = mkN "gynécologie" ; -- UWN
lin gynecological_A = mkA "gynécologique" ; -- tocheck
lin gynecologistFem_N = variants {} ; ---- sense to be split
lin gynecologistMasc_N = mkN "gynécologue" ; -- UWN
lin gynecology_N = mkN "gynécologie" feminine ; -- tocheck
lin gynecomastia_N = mkN "gynécomastie" feminine ; -- tocheck
lin gynophobia_N = mkN "gynophobie" feminine ; -- tocheck
lin gypsum_N = mkN "gypse" masculine ; -- tocheck
lin gypsy_N = mkN "gitan" masculine ; -- tocheck
lin gyrfalcon_N = mkN "gerfaut" masculine ; -- tocheck
lin gyro_N = mkN "gyros" ; -- tocheck
lin gyroscope_N = mkN "gyroscope" masculine ; -- tocheck
lin ha_Interj = variants {} ; --
lin haarlem_PN = mkPN "Haarlem" ; -- status=guess src=geonames
lin haberdashery_N = mkN "mercerie" feminine ; -- tocheck
lin habit_N = mkN "habitude" feminine ; -- tocheck
lin habitat_N = mkN "habitat" masculine ; -- tocheck
lin habitual_A = mkA "habituel" | mkA "usuel" ; -- UWN
lin habitus_N = mkN "appuyer" | mkN "bâtir" | mkN "construction" | mkN "construire" | mkN "physique" ; -- UWN
lin hacek_N = mkN "croc" ; -- UWN
lin hackberry_N = mkN "micocoulier" ; -- tocheck
lin hacker_N = mkN "hacker" masculine ; -- tocheck
lin hackney_PN = mkPN "Hackney" ; -- status=guess src=geonames
lin hackneyed_A = mkA "banal" | mkA "fatigué" | mkA "mineur" | mkA "trivial" ; -- UWN
lin hadal_A = mkA "hadal" ; -- tocheck
lin haddington_PN = mkPN "Haddington" ; -- status=guess src=geonames
lin haddock_N = mkN "aiglefin" masculine ; -- tocheck
lin hadron_N = mkN "hadron" masculine ; -- tocheck
lin hadrosaur_N = mkN "hadrosaurus" ; -- UWN
lin haematite_N = mkN "hématite" | mkN "oligiste" ; -- UWN
lin haemophilia_N = mkN "hémophilie" feminine ; -- tocheck
lin haemorrhage_N = mkN "hémorragie" feminine ; -- tocheck
lin hafnium_N = mkN "hafnium" masculine ; -- tocheck
lin hag_N = mkN "sorcière" feminine ; -- tocheck
lin hagen_PN = mkPN "Hagen" ; -- status=guess src=geonames
lin hagfish_N = mkN "Myxinidae" | mkN "myxines" | mkN "myxinidae" | mkN "myxiniformes" ; -- UWN
lin haggard_A = mkA "hagard" ; -- tocheck
lin haggle_N = mkN "marchander" ; -- UWN
lin haggle_V = mkV (mkV "marchander") ; -- tocheck
lin haggler_N = mkN "marchandeur" ; -- UWN
lin hagiography_N = mkN "hagiographie" feminine ; -- tocheck
lin hagley_PN = mkPN "Hagley" ; -- status=guess src=geonames
lin haiku_N = mkN "haïku" masculine ; -- tocheck
lin hail_N = mkN "grêle" feminine ; -- tocheck
lin hail_V2 = mkV2 (mkV "grêler") | mkV2 (mkV "héler") | mkV2 (mkV "saluer") ; -- tocheck
lin hailsham_PN = mkPN "Hailsham" ; -- status=guess src=geonames
lin hailstone_N = mkN "grêlon" masculine ; -- tocheck
lin haiphong_PN = mkPN "Hải Phòng" ; -- status=guess src=geonames
lin hair_N = L.hair_N ;
lin hairball_N = mkN "bézoard" | mkN "trichobézoard" ; -- UWN
lin hairbrush_N = mkN "brosse_à_cheveux" ; -- UWN
lin haircloth_N = mkN "chevelure" | mkN "cheveu" | mkN "poil" ; -- UWN
lin haircut_N = mkN "coupe" feminine | mkN "coiffure" feminine ; -- tocheck
lin hairdo_N = mkN "coiffure" ; -- UWN
lin hairdresser_N = mkN "coiffeur" masculine ; -- tocheck
lin hairless_A = mkA "glabre" ; -- tocheck
lin hairnet_N = mkN "filet_à_cheveux" ; -- UWN
lin hairstyle_N = mkN "coiffure" feminine ; -- tocheck
lin hairstylist_N = mkN "coiffeur" | mkN "coiffeuse" ; -- UWN
lin hairy_A = mkA "poilu" ; -- tocheck
lin haiti_PN = mkPN "Haïti" ; -- status=guess src=geonames
lin hajj_N = mkN "hajj" masculine ; -- tocheck
lin halal_A = mkA "halal" ; -- tocheck
lin halberd_N = mkN "hallebarde" feminine ; -- tocheck
lin halberdier_N = mkN "hallebardier" masculine ; -- tocheck
lin halcyon_A = mkA "doré" | mkA "martin-pêcheur" | mkA "prospère" ; -- UWN
lin halcyon_N = mkN "halcyon" masculine ; -- tocheck
lin halesowen_PN = mkPN "Halesowen" ; -- status=guess src=geonames
lin half_Adv = mkAdv "demi" | mkAdv "moitié" ; -- UWN
lin half_N = mkN "moitié" feminine | mkN "demi" masculine ; -- tocheck
lin half_Predet = M.mkPredet "un moitié" "un moitié" P.genitive True ;
lin half_brother_N = mkN "beau-frère" | mkN "demi-frère" ; -- UWN
lin half_hour_N = mkN "demi-heure" feminine ; -- tocheck
lin half_sister_N = mkN "demi-sœur" ; -- UWN
lin halfway_Adv = mkAdv "mi-chemin" ; -- UWN
lin halibut_N = mkN "flétan" masculine ; -- tocheck
lin halide_N = mkN "halogénure" | mkN "ion_halogénure" ; -- UWN
lin halifax_PN = mkPN "Halifax" ; -- status=guess src=geonames
lin halite_N = mkN "halite" ; -- UWN
lin halitosis_N = mkN "halitose" ; -- tocheck
lin halitus_N = mkN "exhalation" ; -- UWN
lin hall_N = mkN "foyer" masculine | mkN "hall" masculine | mkN "couloir" masculine | mkN "manoir" masculine | mkN "salle" feminine ; -- tocheck
lin halle_PN = mkPN "Halle" ; -- status=guess src=geonames
lin hallelujah_N = mkN "alléluia" ; -- tocheck
lin halliard_N = mkN "drisse" ; -- UWN
lin hallmark_N = mkN "poinçon" masculine ; -- tocheck
lin hallow_N = mkN "saint" masculine ; -- tocheck
lin hallow_V2 = mkV2 (mkV "sanctifier") ; -- tocheck
lin hallucination_N = mkN "hallucination" feminine ; -- tocheck
lin hallucinatory_A = mkA "hallucinatoire" ; -- UWN
lin hallucinogen_N = mkN "psychédélique" ; -- UWN
lin hallucinogenic_A = mkA "hallucinogène" ; -- tocheck
lin halo_N = mkN "halo" masculine | mkN "auréole" feminine ; -- tocheck
lin halobacteria_N = mkN "archéobactérie_halophile" | mkN "halobacteria" ; -- UWN
lin halogen_N = mkN "halogène" masculine ; -- tocheck
lin halon_N = mkN "cfc" ; -- UWN
lin halophile_N = mkN "halophile" | mkN "organisme_halophile" ; -- UWN
lin halophyte_N = mkN "halophyte" | mkN "plante_halophile" | mkN "plante_halophyte" ; -- UWN
lin halstead_PN = mkPN "Halstead" ; -- status=guess src=geonames
lin halt_A = mkA "boiteux" | mkA "estropié" | mkA "jeu" ; -- UWN
lin halt_N = variants {} ; --
lin halt_V = variants {} ; -- mkV2 (mkV "halter") ; -- tocheck
lin halt_V2 = mkV2 (mkV "halter") ; -- tocheck
lin halter_N = mkN "licou" masculine ; -- tocheck
lin halyard_N = mkN "drisse" ; -- UWN
lin ham_N = mkN "jambon" masculine ; -- tocheck
lin ham_fisted_A = mkA "maladroit" ; -- tocheck
lin hamadryad_N = mkN "hamadryade" feminine ; -- tocheck
lin hamartoma_N = mkN "hamartome" ; -- UWN
lin hamate_N = mkN "Hamatum" | mkN "hamatum" ; -- UWN
lin hamburg_PN = mkPN "Hambourg" ; -- status=guess src=geonames
lin hamburger_N = mkN "hamburger" masculine ; -- tocheck
lin hamilton_PN = mkPN "Hamilton" ; -- status=guess src=geonames
lin hamlet_N = mkN "hameau" masculine ; -- tocheck
lin hammer_N = mkN "marteau" masculine | mkN "chien" masculine ; -- tocheck
lin hammer_V2 = mkV2 (mkV "marteler") ; -- tocheck
lin hammerhead_N = mkN "Requin-marteau" | mkN "requin-marteau" | mkN "sphyrnidae" ; -- UWN
lin hammersmith_PN = mkPN "Hammersmith" ; -- status=guess src=geonames
lin hammock_N = mkN "hamac" masculine | mkN "hammock" masculine ; -- tocheck
lin hamper_N = mkN "obstacle" masculine ; -- tocheck
lin hampshire_PN = mkPN "Hampshire" ; -- status=guess src=geonames
lin hamster_N = mkN "hamster" masculine ; -- tocheck
lin hand_N = L.hand_N ;
lin hand_V2 = mkV2 (mkV "donner") ; -- tocheck
lin hand_back_V2 = mkV2 (advV (lin V OP_hand_V2) OP_back_Adv ) ; -- guess-p-verb
lin hand_carry_V2 = variants {} ; -- guess-p-verb
lin hand_down_V2 = prepV2 (lin V OP_hand_V2) OP_down_Prep ; -- guess-p-verb
lin hand_in_V2 = prepV2 (lin V OP_hand_V2) OP_in_Prep ; -- guess-p-verb
lin hand_on_V2 = prepV2 (lin V OP_hand_V2) OP_on_Prep ; -- guess-p-verb
lin hand_out_V2 = prepV2 (lin V OP_hand_V2) OP_out_Prep ; -- guess-p-verb
lin hand_over_V2 = prepV2 (lin V OP_hand_V2) OP_over_Prep ; -- guess-p-verb
lin handbag_N = mkN "porte-monnaie" | mkN "sac" | mkN "sac_à_main" ; -- UWN
lin handball_N = mkN "main" feminine | mkN "handball" masculine ; -- tocheck
lin handbill_N = mkN "prospectus" masculine ; -- tocheck
lin handbook_N = mkN "manuel" masculine ; -- tocheck
lin handcuff_N = mkN "menotte" feminine ; -- tocheck
lin handcuff_V2 = mkV2 (mkV "enchaîner") ; -- tocheck
lin handedness_N = mkN "chiralité" ; -- UWN
lin handful_N = mkN "manipule" | mkN "poignée" feminine ; -- tocheck
lin handhold_N = mkN "prise" ; -- UWN
lin handicap_N = mkN "handicap" masculine ; -- tocheck
lin handicap_V2 = variants {} ; --
lin handicapped_A = variants {} ; --
lin handicraft_N = mkN "artisanat" masculine ; -- tocheck
lin handiness_N = mkN "accessibilité" | mkN "disponibilité" ; -- UWN
lin handiwork_N = mkN "artisanat" | mkN "main-d’œuvre" | mkN "produit" ; -- UWN
lin handkerchief_N = mkN "foulard" masculine | mkN "mouchoir" masculine ; -- tocheck
lin handle_N = mkN "indicateur" masculine | mkN "paris" | mkN "poignée" feminine | mkN "indicatif" masculine | mkN "outil" masculine | mkN "anse" feminine ; -- tocheck
lin handle_V = variants {} ; -- mkV2 (mkV "tâter") | mkV2 (mkV "gérer") | mkV2 (mkV "manipuler") | mkV2 (mkV "traiter") | mkV2 (mkV "manier") ; -- tocheck
lin handle_V2 = mkV2 (mkV "tâter") | mkV2 (mkV "gérer") | mkV2 (mkV "manipuler") | mkV2 (mkV "traiter") | mkV2 (mkV "manier") ; -- tocheck
lin handlebar_N = mkN "guidon" ; -- tocheck
lin handling_N = mkN "manipulation" feminine ; -- tocheck
lin handmaid_N = mkN "bonne" | mkN "domestique" | mkN "servante" ; -- UWN
lin handoff_N = mkN "handover" ; -- UWN
lin hand_out_N = mkN "aumône" feminine | mkN "polycopié" masculine ; -- tocheck
lin handover_N = mkN "passation" feminine ; -- tocheck
lin handrail_N = mkN "rambarde" feminine ; -- tocheck
lin hands_N = mkN "garde" ; -- UWN
lin handsaw_N = mkN "égoïne" feminine ; -- tocheck
lin handshake_N = mkN "foi" | mkN "poignée" | mkN "poignée_de_main" ; -- UWN
lin handshaking_N = mkN "foi" | mkN "poignée" | mkN "poignée_de_main" ; -- UWN
lin handsome_A = mkA "beau" ; -- tocheck
lin handstand_N = mkN "équilibre" masculine ; -- tocheck
lin handwork_N = mkN "artisanat" | mkN "main-d’œuvre" | mkN "produit" ; -- UWN
lin handwritten_A = mkA "manuscrit" ; -- UWN
lin handy_A = mkA "pratique" | mkA "maniable" ; -- tocheck
lin handyman_N = mkN "homme-orchestre" | mkN "homme_à_tout_faire" | mkN "touche-à-tout" ; -- UWN
lin hang_V = variants {} ; -- mkV2 (mkV I.pendre_V2) | mkV2 (mkV "rôder") | mkV2 (mkV "orner") | mkV2 (mkV "exposer") | mkV2 (mkV "peser") | mkV2 (mkV "baisser") | mkV2 (mkV "accrocher") ; -- tocheck
lin hang_V2 = mkV2 (mkV I.pendre_V2) | mkV2 (mkV "rôder") | mkV2 (mkV "orner") | mkV2 (mkV "exposer") | mkV2 (mkV "peser") | mkV2 (mkV "baisser") | mkV2 (mkV "accrocher") ; -- tocheck
lin hang_about_V = advV OP_hang_V OP_about_Adv ; -- guess-p-verb
lin hang_around_V = advV OP_hang_V OP_around_Adv ; -- guess-p-verb
lin hang_around_V2 = prepV2 OP_hang_V OP_around_Prep ; -- guess-p-verb
lin hang_back_V = mkV "entraîner" | mkV "suivre" | mkV "traîner" ; -- UWN
lin hang_back_from_V2 = prepV2 (advV OP_hang_V OP_back_Adv ) OP_from_Prep ; -- guess-p-verb
lin hang_in_there_V = variants {} ; -- guess-p-verb
lin hang_it_up_V = variants {} ; -- guess-p-verb
lin hang_on_V = mkV "continuer" | mkV "persister" | mkV "persévérer" ; -- UWN
lin hang_onto_V2 = prepV2 OP_hang_V OP_onto_Prep ; -- guess-p-verb
lin hang_out_V = advV OP_hang_V OP_out_Adv ; -- guess-p-verb
lin hang_out_V2 = prepV2 OP_hang_V OP_out_Prep ; -- guess-p-verb
lin hang_out_for_V2 = prepV2 (advV OP_hang_V OP_out_Adv ) OP_for_Prep ; -- guess-p-verb
lin hang_over_V2 = prepV2 OP_hang_V OP_over_Prep ; -- guess-p-verb
lin hang_together_V = advV OP_hang_V OP_together_Adv ; -- guess-p-verb
lin hang_up_V = advV OP_hang_V OP_up_Adv ; -- guess-p-verb
lin hang_up_V2 = prepV2 OP_hang_V OP_up_Prep ; -- guess-p-verb
lin hang_up_on_V2 = prepV2 (advV OP_hang_V OP_up_Adv ) OP_on_Prep ; -- guess-p-verb
lin hang_with_V2 = prepV2 OP_hang_V OP_with_Prep ; -- guess-p-verb
lin hangar_N = mkN "hangar" masculine ; -- tocheck
lin hanger_N = mkN "cintre" masculine ; -- tocheck
lin hanging_N = mkN "pendaison" feminine ; -- tocheck
lin hangman_N = mkN "bourreau" masculine | mkN "pendu" masculine ; -- tocheck
lin hangnail_N = mkN "envie" feminine ; -- tocheck
lin hanky_N = mkN "mouchoir" ; -- UWN
lin hanoi_PN = mkPN "Hanoï" ; -- status=guess src=geonames
lin hanover_PN = mkPN "Hanover" ; -- status=guess src=geonames
lin hao_N = mkN "hao" ; -- UWN
lin haphazard_A = mkA "désordonné" ; -- tocheck
lin hapless_A = mkA "malheureux" ; -- tocheck
lin haploid_A = mkA "haploïde" ; -- tocheck
lin haploid_N = mkN "haploïde" ; -- UWN
lin haploidy_N = mkN "haploïdie" ; -- UWN
lin happen_V = mkV "arriver" ;
lin happen_VV = aVV (mkV I.advenir_V) ; ---- sense
lin happening_N = mkN "happening" ; -- tocheck
lin happiness_N = mkN "bonheur" masculine ; -- tocheck
lin happy_A = mkA "satisfait" | mkA "heureux" ; -- tocheck
lin haptic_A = mkA "haptique" ; -- tocheck
lin harakiri_N = mkN "hara-kiri" masculine ; -- tocheck
lin harangue_N = mkN "sermon" ; -- tocheck
lin harangue_V2 = mkV2 (mkV "sermonner") ; -- tocheck
lin harass_V2 = mkV2 (mkV "harceler") ; -- tocheck
lin harassment_N = mkN "harcèlement" masculine ; -- tocheck
lin harbin_PN = mkPN "Harbin" ; -- status=guess src=geonames
lin harbinger_N = mkN "présage" masculine ; -- tocheck
lin harbour_N = L.harbour_N ;
lin harbour_V = mkV "entretenir" | mkV "nourrir" ; -- UWN
lin harbour_V2 = mkV2 (mkV "abriter") ; -- tocheck
lin hard_1_A = mkA "dur" | mkA "fort" | mkA "dure" | mkA "irréfutable" ; -- tocheck
lin hard_2_A = mkA "dur" | mkA "fort" | mkA "dure" | mkA "irréfutable" | {-UWN-} mkA "ardu" | mkA "difficile" ; -- UWN -- tocheck
lin hardboard_N = mkN "aggloméré" ; -- tocheck
lin harden_V2 = mkV2 (mkV "durcir") | mkV2 (mkV "endurcir") ; -- tocheck
lin hard_headed_A = mkA "pragmatique" | mkA "pratique" ; -- UWN
lin hardly_AdV = adjAdv hard_2_A ; -- derived
lin hardly_Adv = mkAdv "difficilement" | mkAdv "guère" | mkAdv "pratiquement" | mkAdv "à_peine" ; -- UWN
lin hardness_N = mkN "dureté" feminine ; -- tocheck
lin hardscrabble_A = mkA "pauvre" ; -- UWN
lin hardship_N = mkN "difficultés" ; -- tocheck
lin hardware_N = mkN "matériel" masculine ; -- tocheck
lin hardwood_N = mkN "bois_dur" ; -- UWN
lin hardworking_A = mkA "industrieux" ; -- tocheck
lin hardy_A = mkA "audacieux" | mkA "brave" | mkA "courageux" | mkA "intrépide" ; -- UWN
lin hare_N = mkN "lièvre" masculine ; -- tocheck
lin harebrained_A = mkA "aberrant" | mkA "farfelu" | mkA "fou" | mkA "insane" | mkA "insensé" ; -- UWN
lin harelip_N = mkN "bec-de-lièvre" | mkN "bec_de_lièvre" ; -- UWN
lin harem_N = mkN "harem" masculine ; -- tocheck
lin haricot_N = mkN "flageolet" ; -- UWN
lin harlequin_N = mkN "arlequin" ; -- tocheck
lin harlot_N = mkN "prostituée" feminine ; -- tocheck
lin harlow_PN = mkPN "Harlow" ; -- status=guess src=geonames
lin harm_N = mkN "mal" masculine ; -- tocheck
lin harm_V2 = variants {} ; --
lin harmattan_N = mkN "harmattan" ; -- UWN
lin harmful_A = mkA "dangereux" ; -- tocheck
lin harmonic_A = mkA "harmonique" | mkA "harmonieux" ; -- tocheck
lin harmonica_N = mkN "harmonica" masculine ; -- tocheck
lin harmonious_A = mkA "harmonieux" ; -- tocheck
lin harmonium_N = mkN "harmonium" masculine ; -- tocheck
lin harmonize_V2 = mkV2 (mkV "harmoniser") ; -- tocheck
lin harmony_N = mkN "harmonie" feminine ; -- tocheck
lin harness_N = mkN "harnais" masculine ; -- tocheck
lin harness_V2 = mkV2 (mkV "harnacher") ; -- tocheck
lin harp_N = mkN "harpe" feminine ; -- tocheck
lin harpenden_PN = mkPN "Harpenden" ; -- status=guess src=geonames
lin harper_N = mkN "harper" | mkN "harpiste" ; -- UWN
lin harpist_N = mkN "harpiste" ; -- tocheck
lin harpoon_N = mkN "harpon" masculine ; -- tocheck
lin harpoon_V2 = mkV2 (mkV "harponner") ; -- tocheck
lin harpooner_N = mkN "harponneur" masculine ; -- tocheck
lin harpsichord_N = mkN "clavecin" masculine ; -- tocheck
lin harpsichordist_N = mkN "claveciniste" ; -- tocheck
lin harpullia_N = mkN "harpullia" ; -- UWN
lin harpy_N = mkN "harpie" feminine ; -- tocheck
lin harridan_N = mkN "harpie" feminine ; -- tocheck
lin harrier_N = mkN "busard" masculine ; -- tocheck
lin harrogate_PN = mkPN "Harrogate" ; -- status=guess src=geonames
lin harrow_N = mkN "herse" feminine ; -- tocheck
lin harrow_PN = mkPN "Harrow" ; -- status=guess src=geonames
lin harsh_A = mkA "dur" ; -- tocheck
lin harshness_N = mkN "austérité" | mkN "gravité" | mkN "pénibilité" | mkN "rigueur" | mkN "sévérité" ; -- UWN
lin hart_N = mkN "cerf" masculine ; -- tocheck
lin hartebeest_N = mkN "alcelaphus_buselaphus" | mkN "bubale" | mkN "hartebeest" | mkN "le_bubale_roux" ; -- UWN
lin hartlepool_PN = mkPN "Hartlepool" ; -- status=guess src=geonames
lin hartley_PN = mkPN "Hartley" ; -- status=guess src=geonames
lin harvest_N = mkN "récolte" feminine ; -- tocheck
lin harvest_V2 = mkV2 (mkV "récolter") ; -- tocheck
lin harvester_N = mkN "moissonneuse" feminine | mkN "moissonneur" masculine ; -- tocheck
lin harvestman_N = mkN "faucheur" masculine ; -- tocheck
lin harvey_PN = mkPN "Harvey" ; -- status=guess src=geonames
lin harwich_PN = mkPN "Harwich" ; -- status=guess src=geonames
lin has_been_N = mkN "has-been" ; -- tocheck
lin hash_N = mkN "shit" masculine | mkN "hachis" masculine | mkN "croisillon" masculine ; -- tocheck
lin hash_V2 = mkV2 (mkV "hacher") ; -- tocheck
lin hashish_N = mkN "haschich" masculine ; -- tocheck
lin haslemere_PN = mkPN "Haslemere" ; -- status=guess src=geonames
lin haslingden_PN = mkPN "Haslingden" ; -- status=guess src=geonames
lin hassium_N = mkN "hassium" masculine ; -- tocheck
lin hassle_N = mkN "dispute" | mkN "tracas" ; -- tocheck
lin hassle_V2 = mkV2 (mkV "provoquer") | mkV2 (mkV "harceler") ; -- tocheck
lin hassock_N = mkN "pouf" masculine ; -- tocheck
lin haste_N = mkN "hâte" feminine ; -- tocheck
lin hasten_V2 = mkV2 (reflV (mkV "dépêcher")) | mkV2 (mkV "hâter") ; -- tocheck
lin hastings_PN = mkPN "Hastings" ; -- status=guess src=geonames
lin hasty_A = variants {} ;
lin hat_N = L.hat_N ;
lin hatch_N = mkN "couvée" feminine | mkN "trappe" feminine | mkN "écoutille" feminine | mkN "passe-plat" masculine ; -- tocheck
lin hatch_V = mkV "couver" | mkV "couvrir" | mkV "incuber" ; -- UWN
lin hatch_V2 = mkV2 (mkV I.éclore_V2) ; -- tocheck
lin hatchback_N = mkN "hayon" masculine ; -- tocheck
lin hatchery_N = mkN "couvoir" masculine ; -- tocheck
lin hatchet_N = mkN "hache" ; -- UWN
lin hatchway_N = mkN "écoutille" feminine ; -- tocheck
lin hate_N = mkN "haine" ; -- UWN
lin hate_V2 = L.hate_V2 ;
lin hate_VV = variants {} ; -- mkV2V (mkV I.haïr_V2) ; -- tocheck
lin hate_on_V2 = prepV2 (lin V OP_hate_V2) OP_on_Prep ; -- guess-p-verb
lin hateful_A = mkA "haineux" ; -- tocheck
lin hater_N = mkN "haïsseur" masculine ; -- tocheck
lin hatfield_PN = mkPN "Hatfield" ; -- status=guess src=geonames
lin hatmaker_N = mkN "chapelier" | mkN "modiste" ; -- UWN
lin hatred_N = mkN "haine" feminine ; -- tocheck
lin hatter_N = mkN "chapelier" ; -- tocheck
lin hauberk_N = mkN "Haubert" | mkN "haubert" ; -- UWN
lin haughty_A = mkA "hautain" ; -- tocheck
lin haul_N = mkN "capture" | mkN "haler" ; -- UWN
lin haul_V = variants {} ; -- mkV2 (mkV "trainer") | mkV2 (mkV "haler") ; -- tocheck
lin haul_V2 = mkV2 (mkV "trainer") | mkV2 (mkV "haler") ; -- tocheck
lin hauler_N = mkN "transporteur" masculine | mkN "porteur" masculine ; -- tocheck
lin haulier_N = mkN "transporteur" ; -- UWN
lin haulm_N = mkN "fane" feminine ; -- tocheck
lin haunt_N = mkN "recours" | mkN "ressort" | mkN "terrain_favori" ; -- UWN
lin haunt_V2 = mkV2 (mkV "hanter") | mkV2 (mkV "habiter") | mkV2 (mkV "effrayer") | mkV2 (mkV I.poursuivre_V2) ; -- tocheck
lin haunting_A = mkA "hantise" ; -- UWN
lin hautboy_N = mkN "hautbois" ; -- UWN
lin havana_PN = mkPN "La Havane" ; -- status=guess src=geonames
lin have_V = mkV S.have_V2 ;
lin have_V2 = S.have_V2 ;
lin have_VV = mkVV (mkV I.devoir_V2) ;
lin have_against_V2 = prepV2 OP_have_V OP_against_Prep ; -- guess-p-verb
lin have_around_V2 = prepV2 OP_have_V OP_around_Prep ; -- guess-p-verb
lin have_down_as_V3 = variants {} ; -- guess-p-verb
lin have_in_V2 = prepV2 OP_have_V OP_in_Prep ; -- guess-p-verb
lin have_it_away_V = variants {} ; -- guess-p-verb
lin have_it_in_for_V2 = variants {} ; -- guess-p-verb
lin have_it_off_V = variants {} ; -- guess-p-verb
lin have_it_out_with_V2 = variants {} ; -- guess-p-verb
lin have_off_V2 = prepV2 OP_have_V OP_off_Prep ; -- guess-p-verb
lin have_on_V = advV OP_have_V OP_on_Adv ; -- guess-p-verb
lin have_on_V2 = prepV2 OP_have_V OP_on_Prep ; -- guess-p-verb
lin have_over_V2 = prepV2 OP_have_V OP_over_Prep ; -- guess-p-verb
lin have_round_V2 = prepV2 OP_have_V OP_round_Prep ; -- guess-p-verb
lin have_up_V2 = prepV2 OP_have_V OP_up_Prep ; -- guess-p-verb
lin havelock_N = mkN "havelock" ; -- UWN
lin haven_N = mkN "port" masculine | mkN "asile" masculine ; -- tocheck
lin haverfordwest_PN = mkPN "Haverfordwest" ; -- status=guess src=geonames
lin haverhill_PN = mkPN "Haverhill" ; -- status=guess src=geonames
lin haversack_N = mkN "havresac" | mkN "sac_à_dos" ; -- UWN
lin havoc_N = mkN "chaos" masculine ; -- tocheck
lin haw_N = mkN "haie" feminine ; -- tocheck
lin hawala_N = mkN "Hawala" | mkN "Hundi" | mkN "hawala" | mkN "hundi" ; -- UWN
lin hawick_PN = mkPN "Hawick" ; -- status=guess src=geonames
lin hawk_N = mkN "faucon" masculine ; -- tocheck
lin hawk_V2 = mkV2 (mkV I.vendre_V2) ; -- tocheck
lin hawkbit_N = mkN "pissenlit" ; -- UWN
lin hawker_N = mkN "colporteur" masculine ; -- tocheck
lin hawthorn_N = mkN "aubépine" feminine ; -- tocheck
lin hay_N = mkN "foin" masculine ; -- tocheck
lin hayfield_N = mkN "prairie" | mkN "pré" | mkN "pâturage" | mkN "pâture" ; -- UWN
lin hayloft_N = mkN "fenil" ; -- UWN
lin haymaking_N = mkN "fenaison" ; -- UWN
lin haymow_N = mkN "fenil" ; -- UWN
lin hayrick_N = mkN "meule_de_foin" ; -- UWN
lin haystack_N = mkN "meule_de_foin" ; -- UWN
lin hazard_N = mkN "hasard" masculine | mkN "hasard" | mkN "danger" masculine ; -- tocheck
lin hazard_V2 = mkV2 (mkV "tenter") ; -- tocheck
lin hazardous_A = mkA "dangereux" ; -- tocheck
lin haze_N = mkN "brume" feminine ; -- tocheck
lin haze_V2 = mkV2 (mkV "bizuter") ; -- tocheck
lin hazel_A = mkA "noisette" ; -- tocheck
lin hazel_N = mkN "noisette" feminine | mkN "noisetier" masculine ; -- tocheck
lin hazelnut_N = mkN "noisette" feminine ; -- tocheck
lin hazy_A = mkA "brumeux" ; -- tocheck
lin he_Pron = S.he_Pron ;
lin he_goat_N = mkN "bouc" masculine ; -- tocheck
lin head_A = mkA "principal" ;
lin head_N = L.head_N ;
lin head_V = variants {} ; -- mkV2 (mkV "commander") ; -- tocheck
lin head_V2 = mkV2 (mkV "commander") ; -- tocheck
lin head_for_V2 = prepV2 OP_head_V OP_for_Prep ; -- guess-p-verb
lin head_off_V = advV OP_head_V OP_off_Adv ; -- guess-p-verb
lin head_off_V2 = prepV2 OP_head_V OP_off_Prep ; -- guess-p-verb
lin head_out_V = advV OP_head_V OP_out_Adv ; -- guess-p-verb
lin head_up_V2 = prepV2 OP_head_V OP_up_Prep ; -- guess-p-verb
lin headache_N = mkN "ennui" | mkN "inquiétude" | mkN "souci" | mkN "tracas" ; -- UWN
lin headband_N = mkN "bandeau" | mkN "tranchefile" | mkN "bandeau" masculine ; -- tocheck
lin headdress_N = mkN "couvre-chef" masculine ; -- tocheck
lin header_N = mkN "boutisse" feminine | mkN "en-tête" masculine | mkN "linteau" masculine | mkN "tête" feminine | mkN "chapeau" masculine ; -- tocheck
lin headgear_N = mkN "couvre-chef" masculine ; -- tocheck
lin heading_N = mkN "galerie" ; -- UWN
lin headlamp_N = mkN "phare" feminine ; -- tocheck
lin headland_N = mkN "cap" | mkN "promontoire" | mkN "récif" ; -- UWN
lin headlight_N = mkN "phare" ; -- UWN
lin headline_N = mkN "titre" masculine ; -- tocheck
lin headliner_N = mkN "star" | mkN "étoile" ; -- UWN
lin headlock_N = mkN "cravate" feminine ; -- tocheck
lin headman_N = mkN "chef" ; -- UWN
lin headmaster_N = mkN "maître" ; -- UWN
lin headquarters_N = mkN "quartier_général" | mkN "siège_social" ; -- UWN
lin headrest_N = mkN "appui-tête" masculine ; -- tocheck
lin headscarf_N = mkN "foulard" masculine ; -- tocheck
lin headset_N = mkN "casque" masculine ; -- tocheck
lin headshot_N = mkN "en" ; -- UWN
lin headstall_N = mkN "licol" masculine | mkN "têtière" feminine ; -- tocheck
lin headstone_N = mkN "faire-part_de_clôture" | mkN "pierre" | mkN "pierre_tombale" | mkN "tombale" ; -- UWN
lin headway_N = mkN "chef" | mkN "tête" ; -- UWN
lin headword_N = mkN "entrée" feminine ; -- tocheck
lin heal_V = variants {} ; -- mkV2 (mkV "guérir") ; -- tocheck
lin heal_V2 = mkV2 (mkV "guérir") ; -- tocheck
lin healer_N = mkN "thérapeute" ; -- UWN
lin healing_N = mkN "guérison" feminine ; -- tocheck
lin health_N = mkN "santé" feminine ;
lin healthy_A = mkA "sain" ; -- tocheck
lin heanor_PN = mkPN "Heanor" ; -- status=guess src=geonames
lin heap_N = mkN "tas" masculine ; -- tocheck
lin hear_V = mkV I.entendre_V2 ;
lin hear_V2 = L.hear_V2 ;
lin hear_V2V = mkV2V (mkV I.entendre_V2) ;
lin hear_VS = mkVS (mkV I.entendre_V2) ;
lin hear_about_V2 = prepV2 OP_hear_V OP_about_Prep ; -- guess-p-verb
lin hear_from_V2 = prepV2 OP_hear_V OP_from_Prep ; -- guess-p-verb
lin hear_of_V2 = prepV2 OP_hear_V OP_of_Prep ; -- guess-p-verb
lin hear_of_V3 = variants {} ; -- guess-p-verb
lin hear_out_V2 = prepV2 OP_hear_V OP_out_Prep ; -- guess-p-verb
lin hearer_N = mkN "auditeur" | mkN "écouteur" ; -- UWN
lin hearing_N = mkN "ouïe" feminine | mkN "audience" feminine ; -- tocheck
lin hearsay_A = mkA "on-dit" | mkA "ouï-dire" ; -- UWN
lin hearsay_N = mkN "ouï-dire" masculine ; -- tocheck
lin hearse_N = mkN "corbillard" masculine ; -- tocheck
lin heart_N = mkN "coeur" | mkN "cœur" ;
lin heartache_N = mkN "crève-cœur" | mkN "deuil" | mkN "peine_de_cœur" ; -- UWN
lin heartbeat_N = mkN "pulsation" feminine ; -- tocheck
lin heartbreak_N = mkN "crève-coeur" ; -- tocheck
lin heartbreaker_N = mkN "casse-coeur" ; -- tocheck
lin heartburn_N = mkN "pyrosis" ; -- UWN
lin heartening_A = mkA "encourageant" ; -- tocheck
lin heartfelt_A = mkA "sincère" ; -- tocheck
lin hearth_N = mkN "foyer" masculine ; -- tocheck
lin hearts_N = mkN "coeur" masculine | mkN "coeur" ; -- tocheck
lin heartwood_N = mkN "duramen" ; -- UWN
lin hearty_A = mkA "cordial" ; -- tocheck
lin heat_N = mkN "piquant" masculine | mkN "chaleur" feminine | mkN "chauffe" feminine | mkN "excitation" feminine | mkN "artillerie" feminine | mkN "flicaille" feminine ; -- tocheck
lin heat_V = mkV "chauffer" | mkV "réchauffer" ; -- UWN
lin heat_V2 = mkV2 (mkV "exciter") | mkV2 (mkV "chauffer") ; -- tocheck
lin heater_N = mkN "radiateur" masculine ; -- tocheck
lin heath_N = mkN "bruyère" feminine | mkN "lande" feminine ; -- tocheck
lin heathen_A = mkA "païen" ; -- tocheck
lin heathen_N = mkN "infidèle" ; -- tocheck
lin heathenish_A = mkA "ethnique" | mkA "païen" ; -- UWN
lin heather_N = mkN "bruyère" feminine ; -- tocheck
lin heating_N = mkN "chauffage" masculine ; -- tocheck
lin heave_N = mkN "hisser" ; -- tocheck
lin heaven_N = mkN "paradis" masculine | mkN "ciel" masculine ; -- tocheck
lin heavenly_A = mkA "céleste" ; -- tocheck
lin heavily_Adv = adjAdv heavy_A ; -- -- derived
lin heaviness_N = mkN "lourdeur" feminine ; -- tocheck
lin heavy_A = L.heavy_A ;
lin heavy_Adv = mkAdv "gauchement" | mkAdv "lourd" | mkAdv "lourdement" ; -- UWN
lin heavy_N = mkN "lourd" ; -- UWN
lin heavyweight_N = mkN "colosse" | mkN "géant" | mkN "titan" ; -- UWN
lin hebdomadal_A = mkA "hebdomadaire" ; -- UWN
lin hebephrenia_N = mkN "hébéphrénie" ; -- UWN
lin hebephrenic_A = mkA "schizophrène" ; -- UWN
lin hebetude_N = mkN "abrutissement" | mkN "abêtissement" | mkN "hébétude" ; -- UWN
lin hecatomb_N = mkN "hécatombe" ; -- UWN
lin heckelphone_N = mkN "heckelphone" ; -- UWN
lin hectare_N = mkN "hectare" masculine ; -- tocheck
lin hectogram_N = mkN "hectogramme" masculine ; -- tocheck
lin hectoliter_N = mkN "hectolitre" | mkN "hl" ; -- UWN
lin hectometer_N = mkN "hectomètre" ; -- UWN
lin hector_V = mkV "tourmenter" ; -- UWN
lin hedge_N = mkN "haie" feminine ; -- tocheck
lin hedgehog_N = mkN "hérisson" masculine ; -- tocheck
lin hedgerow_N = mkN "h" | mkN "haie" ; -- UWN
lin hedonic_A = mkA "hédonique" | mkA "hédoniste" | mkA "épicurien" ; -- UWN
lin hedonism_N = mkN "hédonisme" masculine ; -- tocheck
lin hedonist_N = mkN "hédoniste" ; -- tocheck
lin hedonistic_A = mkA "hédonique" | mkA "hédoniste" | mkA "épicurien" ; -- UWN
lin heed_N = mkN "attention" feminine ; -- tocheck
lin heed_V2 = mkV2 (mkV "surveiller") | mkV2 (mkV "observer") ; -- tocheck
lin heedless_A = mkA "insouciant" ; -- tocheck
lin heel_N = mkN "croûton" masculine | mkN "talon" masculine ; -- tocheck
lin heel_V2 = mkV2 (mkV "talonner") ; -- tocheck
lin heelbone_N = mkN "Calcanéum" | mkN "calcanéum" ; -- UWN
lin heft_N = mkN "poids" masculine ; -- tocheck
lin hegemony_N = mkN "hégémonie" feminine ; -- tocheck
lin hegira_N = mkN "exode" | mkN "hégire" ; -- UWN
lin heifer_N = mkN "génisse" feminine ; -- tocheck
lin height_N = mkN "hauteur" feminine | mkN "taille" feminine ; -- tocheck
lin heinous_A = mkA "atroce" ; -- tocheck
lin heinousness_N = mkN "atrocité" | mkN "barbarie" ; -- UWN
lin heir_N = mkN "héritier" masculine ; -- tocheck
lin heiress_N = mkN "héritière" feminine ; -- tocheck
lin heirloom_N = mkN "patrimoine" masculine ; -- tocheck
lin heist_N = mkN "casse" masculine ; -- tocheck
lin hejira_N = mkN "exode" | mkN "hégire" ; -- UWN
lin helensburgh_PN = mkPN "Helensburgh" ; -- status=guess src=geonames
lin helianthemum_N = mkN "helianthemum" | mkN "hélianthème" | mkN "hélianthèmes" ; -- UWN
lin helicon_N = mkN "hélicon" ; -- UWN
lin helicopter_N = mkN "hélicoptère" masculine ; -- tocheck
lin heliocentric_A = mkA "héliocentrique" ; -- tocheck
lin heliolatry_N = mkN "héliolâtrie" ; -- UWN
lin heliometer_N = mkN "héliomètre" masculine ; -- tocheck
lin heliopause_N = mkN "héliopause" feminine ; -- tocheck
lin heliopsis_N = mkN "heliopsis" ; -- UWN
lin heliosphere_N = mkN "héliosphère" feminine ; -- tocheck
lin heliotrope_N = mkN "héliotrope" ; -- UWN
lin heliotropism_N = mkN "héliotropisme" masculine ; -- tocheck
lin heliport_N = mkN "héliport" masculine ; -- tocheck
lin helium_N = mkN "hélium" masculine ; -- tocheck
lin helix_N = mkN "hélice" feminine ; -- tocheck
lin hell_N = mkN "enfer" masculine ; -- tocheck
lin hellcat_N = mkN "chipie" | mkN "garce" | mkN "renarde" | mkN "rosse" | mkN "salope" | mkN "sirène" ; -- UWN
lin hellebore_N = mkN "hellébore" masculine ; -- tocheck
lin helleborine_N = mkN "céphalanthère" ; -- tocheck
lin hellion_N = mkN "Diable" | mkN "Satan" ; -- UWN
lin hellish_A = mkA "infernal" ; -- tocheck
lin hello_Interj = mkInterj "allô" ; -- tocheck
lin helm_N = mkN "barre" feminine ; -- tocheck
lin helmet_N = mkN "casque" masculine ; -- tocheck
lin helminth_N = mkN "Ver_parasite" | mkN "ver_parasite" | mkN "vers_parasites" ; -- UWN
lin helmsman_N = mkN "barreur" masculine ; -- tocheck
lin helot_N = mkN "ilote" ; -- tocheck
lin help_N = mkN "aide" feminine | mkN "secours" | mkN "auxiliaire" ;
lin help_V = mkV "aider" ;
lin help_V2 = mkV2 "aider" ;
lin help_V2V = mkV2V (mkV "aider") P.accusative P.dative ;
lin help_out_V2 = prepV2 OP_help_V OP_out_Prep ; -- guess-p-verb
lin help_to_VV = variants {} ; -- guess-p-verb
lin helperFem_N = mkN "assistante" feminine ; -- tocheck
lin helperMasc_N = mkN "assistant" masculine ; -- tocheck
lin helpful_A = mkA "utile" ; -- tocheck
lin helpfulness_N = mkN "obligeance" ; -- UWN
lin helping_N = mkN "portion" ; -- UWN
lin helpless_A = mkA "désemparé" ; -- tocheck
lin helplessness_N = mkN "faiblesse" ; -- UWN
lin helpmate_N = mkN "mat_aidé" ; -- UWN
lin helpmeet_N = mkN "mat_aidé" ; -- UWN
lin helsinki_PN = mkPN "Helsinki" ; -- status=guess src=geonames
lin helston_PN = mkPN "Helston" ; -- status=guess src=geonames
lin hem_N = mkN "ourlet" masculine | mkN "marge" feminine ; -- tocheck
lin hem_V2 = mkV2 (mkV "ourler") ; -- tocheck
lin hemagglutination_N = mkN "hémagglutination" ; -- UWN
lin hemangioma_N = mkN "Hémangiome" | mkN "hémangiome" ; -- UWN
lin hematemesis_N = mkN "hématémèse" ; -- UWN
lin hematite_N = mkN "hématite" | mkN "oligiste" ; -- UWN
lin hematochezia_N = mkN "hématochézie" ; -- UWN
lin hematology_N = mkN "hématologie" ; -- UWN
lin hematoma_N = mkN "hématome" masculine ; -- tocheck
lin hematopoiesis_N = mkN "hématopoïèse" feminine ; -- tocheck
lin hematopoietic_A = mkA "hématopoïétique" ; -- UWN
lin hematuria_N = mkN "hématurie" ; -- UWN
lin heme_N = mkN "hème" ; -- UWN
lin hemianopia_N = mkN "hémianopsie" ; -- UWN
lin hemimorphite_N = mkN "calamine" | mkN "hémimorphite" ; -- UWN
lin hemiparasite_N = mkN "hémiparasite" ; -- UWN
lin hemiplegia_N = mkN "hémiplégie" ; -- UWN
lin hemisphere_N = mkN "hémisphère" feminine | mkN "hémisphère" masculine ; -- tocheck
lin hemline_N = mkN "ourlet" masculine | mkN "ourlet" ; -- tocheck
lin hemlock_N = mkN "ciguë" feminine | mkN "pruche" feminine ; -- tocheck
lin hemochromatosis_N = mkN "hématochromatose" feminine ; -- tocheck
lin hemodialysis_N = mkN "hémodialyse" ; -- UWN
lin hemodynamics_N = mkN "hémodynamique" ; -- tocheck
lin hemoglobin_N = mkN "hémoglobine" feminine ; -- tocheck
lin hemolysin_N = mkN "hémolysine" ; -- UWN
lin hemolysis_N = mkN "hématolyse" | mkN "hémolyse" ; -- UWN
lin hemophilia_N = mkN "hémophilie" ; -- UWN
lin hemoprotein_N = mkN "hémoprotéine" | mkN "protéine_à_hème" ; -- UWN
lin hemorrhoid_N = mkN "hémorroïde" feminine ; -- tocheck
lin hemothorax_N = mkN "hémothorax" ; -- UWN
lin hemp_N = mkN "chanvre" masculine ; -- tocheck
lin hempen_A = mkA "fibreux" ; -- UWN
lin hemsworth_PN = mkPN "Hemsworth" ; -- status=guess src=geonames
lin hen_N = mkN "poule" feminine ; -- tocheck
lin henbane_N = mkN "jusquiame" feminine ; -- tocheck
lin hence_Adv = mkAdv "ainsi" | mkAdv "d'où" | mkAdv "d'ici" ; -- tocheck
lin henceforth_Adv = mkAdv "dorénavant" ; -- tocheck
lin henchman_N = mkN "sbire" masculine ; -- tocheck
lin hencoop_N = mkN "poulailler" ; -- UWN
lin hendiadys_N = mkN "hendiadys" ; -- tocheck
lin henhouse_N = mkN "poulailler" masculine ; -- tocheck
lin henna_N = mkN "henné" ; -- UWN
lin henpecked_A = mkA "jobard" ; -- tocheck
lin henry_N = mkN "henry" masculine ; -- tocheck
lin henry_PN = mkPN "Henry" ; -- status=guess src=geonames
lin hep_A = mkA "hanche" ; -- UWN
lin heparin_N = mkN "héparine" feminine ; -- tocheck
lin hepatitis_N = mkN "hépatite" feminine ; -- tocheck
lin hepatoma_N = mkN "carcinome_hépatocellulaire" ; -- UWN
lin hepatomegaly_N = mkN "hépatomégalie" ; -- UWN
lin heptagon_N = mkN "heptagone" masculine ; -- tocheck
lin heptane_N = mkN "heptane" masculine ; -- tocheck
lin herald_N = mkN "annonciateur" masculine | mkN "héraut" masculine | mkN "héraut" | mkN "découpure" feminine ; -- tocheck
lin herald_V2 = mkV2 (mkV "annoncer") ; -- tocheck
lin heraldry_N = mkN "héraldique" feminine ; -- tocheck
lin herb_N = mkN "herbe" feminine ; -- tocheck
lin herbarium_N = mkN "herbier" masculine ; -- tocheck
lin herbicide_N = mkN "herbicide" masculine ; -- tocheck
lin herbivore_N = mkN "herbivore" masculine ; -- tocheck
lin herbivorous_A = mkA "herbivore" ; -- tocheck
lin herculean_A = mkA "herculéen" | mkA "herculéenne" ; -- UWN
lin herd_N = mkN "troupeau" ; -- tocheck
lin herd_V2 = mkV2 (mkV "rassembler") ; -- tocheck
lin here7from_Adv = S.here7from_Adv ;
lin here7to_Adv = S.here7to_Adv ;
lin here_Adv = mkAdv "ici" | mkAdv "voici" ; ---- voici
lin hereafter_N = mkN "avenir" | mkN "futur" ; -- UWN
lin hereditary_A = mkA "héréditaire" ; -- tocheck
lin hereford_PN = mkPN "Hereford" ; -- status=guess src=geonames
lin herein_Adv = mkAdv "ci-dedans" ; -- tocheck
lin hereinafter_Adv = mkAdv "ci-après" ; -- UWN
lin heresy_N = mkN "hérésie" feminine ; -- tocheck
lin heretic_N = mkN "hérétique" ; -- tocheck
lin heretical_A = mkA "hérétique" ; -- tocheck
lin heretofore_Adv = mkAdv "alors" | mkAdv "encore" | mkAdv "jusqu'" | mkAdv "jusqu'alors" | mkAdv "jusqu'ici" | mkAdv "jusqu'à_maintenant" | mkAdv "jusqu'à_présent" ; -- UWN
lin heritage_N = mkN "héritage" masculine ; -- tocheck
lin herm_N = mkN "herm" ; -- UWN
lin hermaphrodite_N = mkN "hermaphrodite" ; -- tocheck
lin hermaphroditic_A = mkA "hermaphrodite" ; -- tocheck
lin hermaphroditism_N = mkN "hermaphrodisme" masculine ; -- tocheck
lin hermeneutics_N = mkN "herméneutique" feminine ; -- tocheck
lin hermetic_A = mkA "hermétique" ; -- tocheck
lin hermit_N = mkN "ermite" ; -- tocheck
lin hermitage_N = mkN "ermitage" masculine ; -- tocheck
lin herne_PN = mkPN "Herne" ; -- status=guess src=geonames
lin hernia_N = mkN "hernie" feminine ; -- tocheck
lin hero_N = mkN "héros" masculine | mkN "protagoniste" masculine ; -- tocheck
lin heroic_A = mkA "héroïque" ; -- tocheck
lin heroin_N = mkN "héroïne" feminine ; -- tocheck
lin heroine_N = mkN "héroïne" feminine ; -- tocheck
lin heroism_N = mkN "héroïsme" masculine ; -- tocheck
lin heron_N = mkN "héron" masculine ; -- tocheck
lin herpes_N = mkN "herpès" masculine ; -- tocheck
lin herpetologist_N = mkN "herpétologiste" | mkN "herpétologue" ; -- UWN
lin herpetology_N = mkN "herpétologie" feminine ; -- tocheck
lin herrerasaur_N = mkN "herrerasaurus" ; -- UWN
lin herring_N = mkN "hareng" masculine ; -- tocheck
lin hertford_PN = mkPN "Hertford" ; -- status=guess src=geonames
lin hertz_N = mkN "hertz" ; -- tocheck
lin hesitancy_N = mkN "hésitation" | mkN "réticence" ; -- UWN
lin hesitant_A = mkA "hésitant" ; -- tocheck
lin hesitate_V = mkV (mkV "hésiter") ; -- tocheck
lin hesitate_VV = variants {} ; -- mkV (mkV "hésiter") ; -- tocheck
lin hesitation_N = mkN "barguigner" | mkN "hésitation" | mkN "hésiter" ; -- UWN
lin heterodox_A = mkA "hétérodoxe" ; -- tocheck
lin heterogeneous_A = mkA "hétérogène" ; -- tocheck
lin heterograft_N = mkN "hétérogreffe" ; -- UWN
lin heterologous_A = mkA "hétérologue" ; -- tocheck
lin heteronym_N = mkN "hétéronyme" masculine ; -- tocheck
lin heterosexism_N = mkN "hétérosexisme" ; -- tocheck
lin heterosexual_A = mkA "hétérosexuel" ; -- tocheck
lin heterosexual_N = mkN "hétérosexuel" ; -- tocheck
lin heterosexuality_N = mkN "hétérosexualité" feminine ; -- tocheck
lin heterotroph_N = mkN "Hétérotrophie" | mkN "hétérotrophie" ; -- UWN
lin heterozygote_N = mkN "hétérozygote" ; -- tocheck
lin heterozygous_A = mkA "hétérozygote" ; -- UWN
lin heth_N = mkN "het" | mkN "heth" ; -- UWN
lin heuristic_A = mkA "euristique" ; -- tocheck
lin heuristic_N = mkN "heuristique" feminine ; -- tocheck
lin hew_V2 = mkV2 (mkV "tailler") | mkV2 (reflV (mkV "conformer")) | mkV2 (mkV "façonner") ; -- tocheck
lin hex_N = mkN "sortilège" masculine | mkN "sorcière" feminine ; -- tocheck
lin hexachlorophene_N = mkN "hexachlorophène" ; -- UWN
lin hexadecimal_A = mkA "hexadécimal" ; -- tocheck
lin hexagon_N = mkN "hexagone" masculine ; -- tocheck
lin hexagonal_A = mkA "hexagonal" ; -- tocheck
lin hexahedron_N = mkN "hexaèdre" masculine ; -- tocheck
lin hexameter_N = mkN "hexamètre" masculine ; -- tocheck
lin hexane_N = mkN "hexane" masculine ; -- tocheck
lin hexangular_A = mkA "hexagonal" | mkA "hexagone" ; -- UWN
lin hexham_PN = mkPN "Hexham" ; -- status=guess src=geonames
lin hexose_N = mkN "hexose" | mkN "hexoses" ; -- UWN
lin hey_Interj = mkInterj "hé" | mkInterj "coucou" ; -- tocheck
lin heyday_N = mkN "fleur" | mkN "fleurir" | mkN "floraison" | mkN "nombre_premier" | mkN "pic" | mkN "pointe" ; -- UWN
lin heywood_PN = mkPN "Heywood" ; -- status=guess src=geonames
lin hiatus_N = mkN "hiatus" masculine ; -- tocheck
lin hibernate_V = mkV (mkV "hiberner") ; -- tocheck
lin hibernation_N = mkN "hibernation" feminine ; -- tocheck
lin hibiscus_N = mkN "hibiscus" ; -- UWN
lin hiccough_N = mkN "hoquet" | mkN "hoqueter" ; -- UWN
lin hiccup_N = mkN "hoquet" masculine | mkN "accroc" masculine ; -- tocheck
lin hiccup_V = mkV (mkV "hoqueter") ; -- tocheck
lin hick_A = mkA "plouc" ; -- UWN
lin hick_N = mkN "plouc" ; -- tocheck
lin hickey_N = mkN "suçon" masculine | mkN "truc" masculine ; -- tocheck
lin hidden_A = variants {} ; --
lin hide_N = mkN "cache" feminine | mkN "cuir" masculine ; -- tocheck
lin hide_V = variants {} ; -- mkV2 (mkV "cacher") | mkV2 (reflV (mkV "cacher")) ; -- tocheck
lin hide_V2 = mkV2 (mkV "cacher") | mkV2 (reflV (mkV "cacher")) ; -- tocheck
lin hide_away_V = advV OP_hide_V OP_away_Adv ; -- guess-p-verb
lin hide_away_V2 = mkV2 (advV OP_hide_V OP_away_Adv ) ; -- guess-p-verb
lin hide_out_V = advV OP_hide_V OP_out_Adv ; -- guess-p-verb
lin hideaway_N = mkN "antre" | mkN "cache" | mkN "recul" | mkN "reculer" ; -- UWN
lin hideous_A = mkA "hideux" ; -- tocheck
lin hide_out_N = mkN "cachette" feminine ; -- tocheck
lin hiding_N = mkN "dissimulation" ; -- UWN
lin hie_V = mkV (reflV (mkV "hâter")) ; -- tocheck
lin hierarch_N = mkN "archiprêtre" | mkN "hiérarque" | mkN "primat" | mkN "primate" | mkN "prélat" | mkN "prélature" ; -- UWN
lin hierarchic_A = mkA "hiérarchique" ; -- UWN
lin hierarchical_A = mkA "hiérarchique" ; -- tocheck
lin hierarchy_N = mkN "hiérarchie" feminine ; -- tocheck
lin hieratic_A = mkA "hiératique" ; -- tocheck
lin hieroglyph_N = mkN "hiéroglyphe" masculine ; -- tocheck
lin hieroglyphic_A = mkA "hiéroglyphique" ; -- tocheck
lin higgledy_piggledy_A = mkA "pêle-mêle" ; -- tocheck
lin higgledy_piggledy_Adv = mkAdv "pêle-mêle" ; -- tocheck
lin high_A = mkA "haut" ;
lin high_Adv = mkAdv "haut" ; -- UWN
lin high_N = mkN "haut" ; -- UWN
lin high_priced_A = mkA "cher" | mkA "chérot" | mkA "coûteuse" | mkA "coûteux" ; -- UWN
lin highball_N = mkN "tumbler" ; -- UWN
lin highchair_N = mkN "chaise_haute" ; -- UWN
lin highland_N = mkN "hauts-plateaux" ; -- tocheck
lin highland_PN = mkPN "Highland" ; -- status=guess src=geonames
lin highlander_N = mkN "highlander" masculine ; -- tocheck
lin highlight_N = mkN "rehaut" masculine ; -- tocheck
lin highlight_V2 = mkV2 (mkV "surligner") ; -- tocheck
lin highlighter_N = mkN "surligneur" ; -- tocheck
lin highly_Adv = adjAdv high_A ; -- -- derived
lin highway_N = mkN "autoroute" | mkN "chaussée" | mkN "grande_route" | mkN "route" | mkN "routier" ; -- UWN
lin highwayman_N = mkN "bandit_de_grand_chemin" | mkN "brigand" ; -- UWN
lin hijab_N = mkN "hidjab" masculine ; -- tocheck
lin hijack_N = mkN "détournement" masculine ; -- tocheck
lin hijack_V2 = mkV2 (mkV "détourner") ; -- tocheck
lin hike_N = mkN "randonnée" feminine ; -- tocheck
lin hike_V = mkV "randonner" ; -- UWN
lin hiker_N = mkN "randonneur" | mkN "trekkeur" ; -- UWN
lin hilarious_A = mkA "hilarant" ; -- tocheck
lin hilarity_N = mkN "hilarité" feminine ; -- tocheck
lin hill_N = L.hill_N ;
lin hill_billy_N = mkN "Hillbilly" | mkN "hillbilly" | mkN "péquenaud" ; -- UWN
lin hillock_N = mkN "butte" | mkN "colline" | mkN "hamac" | mkN "monticule" ; -- UWN
lin hilltop_N = mkN "front" ; -- UWN
lin hilly_A = mkA "vallonné" ; -- tocheck
lin hilt_N = mkN "poignée" feminine ; -- tocheck
lin hin_N = mkN "hin" masculine ; -- tocheck
lin hinckley_PN = mkPN "Hinckley" ; -- status=guess src=geonames
lin hind_N = mkN "biche" feminine ; -- tocheck
lin hinder_V2 = mkV2 (mkV "entraver") ; -- tocheck
lin hindquarter_N = mkN "derrière" ; -- tocheck
lin hindrance_N = mkN "entrave" feminine ; -- tocheck
lin hindsight_N = mkN "recul" masculine ; -- tocheck
lin hinge_N = mkN "gond" masculine ; -- tocheck
lin hinny_N = mkN "bardot" ; -- tocheck
lin hint_N = mkN "soupçon" masculine | mkN "indication" ; -- tocheckç
lin hint_V = variants {} ; --
lin hint_V2 = variants {} ; --
lin hint_VS = variants {} ; --
lin hinterland_N = mkN "arrière-pays" ; -- tocheck
lin hip_A = mkA "hanche" ; -- UWN
lin hip_N = mkN "hanche" feminine | mkN "cynorrhodon" masculine ; -- tocheck
lin hippie_N = mkN "Hippie" | mkN "babacool" | mkN "hippie" | mkN "hippies" | mkN "hipster" ; -- UWN
lin hippocampus_N = mkN "hippocampe" masculine ; -- tocheck
lin hippodrome_N = mkN "hippodrome" masculine ; -- tocheck
lin hippopotamus_N = mkN "hippopotame" masculine ; -- tocheck
lin hippy_N = mkN "Hippie" | mkN "babacool" | mkN "hippie" | mkN "hippies" | mkN "hipster" ; -- UWN
lin hire_N = variants {} ; --
lin hire_V2 = variants {} ; -- mkV2V (mkV "louer") | mkV2V (mkV "embaucher") ; -- tocheck
lin hire_V2V = mkV2V (mkV "louer") | mkV2V (mkV "embaucher") ; -- tocheck
lin hirsute_A = mkA "hirsute" ; -- tocheck
lin hirsuteness_N = mkN "hirsutisme" ; -- UWN
lin hiss_N = mkN "siffler" ; -- tocheck
lin hiss_V2 = mkV2 (mkV "siffler") ; -- tocheck
lin histamine_N = mkN "histamine" feminine ; -- tocheck
lin histidine_N = mkN "histidine" feminine ; -- tocheck
lin histocompatibility_N = mkN "histocompatibilité" ; -- UWN
lin histogram_N = mkN "histogramme" ; -- UWN
lin histologist_N = mkN "histologiste" ; -- tocheck
lin histology_N = mkN "histologie" feminine ; -- tocheck
lin histone_N = mkN "histone" | mkN "histones" ; -- UWN
lin historian_N = mkN "historien" masculine ; -- tocheck
lin historic_A = mkA "historique" ; -- tocheck
lin historical_A = mkA "historique" ; -- tocheck
lin historiography_N = mkN "historiographie" feminine ; -- tocheck
lin history_N = mkN "histoire" feminine ;
lin histrionic_A = mkA "histrionique" | mkA "théâtral" ; -- tocheck
lin histrionics_N = mkN "histrionisme" ; -- tocheck
lin hit_N = mkN "frappe" feminine | mkN "coup" masculine | mkN "hit" masculine | mkN "taffe" feminine | mkN "contrat" masculine ; -- tocheck
lin hit_V = variants {} ; -- L.hit_V2 ;
lin hit_V2 = L.hit_V2 ;
lin hit_back_V2 = mkV2 (advV OP_hit_V OP_back_Adv ) ; -- guess-p-verb
lin hit_for_V3 = variants {} ; -- guess-p-verb
lin hit_it_off_V = variants {} ; -- guess-p-verb
lin hit_it_off_with_V2 = variants {} ; -- guess-p-verb
lin hit_on_V2 = prepV2 OP_hit_V OP_on_Prep ; -- guess-p-verb
lin hit_out_at_V2 = prepV2 (advV OP_hit_V OP_out_Adv ) OP_at_Prep ; -- guess-p-verb
lin hit_up_V = advV OP_hit_V OP_up_Adv ; -- guess-p-verb
lin hit_up_V2 = prepV2 OP_hit_V OP_up_Prep ; -- guess-p-verb
lin hit_up_on_V2 = prepV2 (advV OP_hit_V OP_up_Adv ) OP_on_Prep ; -- guess-p-verb
lin hit_upon_V2 = prepV2 OP_hit_V OP_upon_Prep ; -- guess-p-verb
lin hit_with_V3 = variants {} ; -- guess-p-verb
lin hitch_N = mkN "hic" masculine | mkN "dispositif" | mkN "noeud" | mkN "accroc" masculine ; -- tocheck
lin hitchhiker_N = mkN "autostoppeur" ; -- tocheck
lin hitchin_PN = mkPN "Hitchin" ; -- status=guess src=geonames
lin hither_Adv = mkAdv "ici" ; -- tocheck
lin hitherto_Adv = mkAdv "jusqu'ici" ; -- tocheck
lin hitter_N = mkN "gréviste" ; -- UWN
lin hoar_A = mkA "gris" | mkA "grisonner" ; -- UWN
lin hoard_N = mkN "trésor" | mkN "magot" ; -- tocheck
lin hoard_V2 = mkV2 (mkV "accumuler") ; -- tocheck
lin hoarding_N = mkN "accaparement" | mkN "collectionnisme" | mkN "panneau" | mkN "panneau_d'affichage" | mkN "thésaurisation" ; -- UWN
lin hoarfrost_N = mkN "givre" feminine ; -- tocheck
lin hoarse_A = mkA "rauque" ; -- tocheck
lin hoary_A = mkA "chenu" ; -- tocheck
lin hoax_N = mkN "canular" masculine ; -- tocheck
lin hoax_V2 = mkV2 (mkV "duper") ; -- tocheck
lin hoaxer_N = mkN "espiègle" | mkN "farceur" | mkN "mystificateur" ; -- UWN
lin hobbit_N = mkN "hobbit" masculine ; -- tocheck
lin hobble_N = mkN "entrave" feminine ; -- tocheck
lin hobby_N = mkN "passe-temps" masculine | mkN "hobereau" masculine ; -- tocheck
lin hobbyhorse_N = mkN "cheval_à_bascule" | mkN "hobby" | mkN "passe-temps" ; -- UWN
lin hobo_N = mkN "clochard" masculine | mkN "vagabond" masculine | mkN "saisonnier" masculine ; -- tocheck
lin hockley_PN = mkPN "Hockley" ; -- status=guess src=geonames
lin hocus_pocus_N = mkN "abracadabra" masculine ; -- tocheck
lin hod_N = mkN "hotte" feminine ; -- tocheck
lin hoddesdon_PN = mkPN "Hoddesdon" ; -- status=guess src=geonames
lin hodgepodge_N = mkN "salmigondis" ; -- tocheck
lin hoe_N = mkN "binette" feminine ; -- tocheck
lin hoe_V2 = mkV2 (mkV "houer") ; -- tocheck
lin hog_N = mkN "cochon" masculine ; -- tocheck
lin hogan_N = mkN "hogan-Navajo" masculine ; -- tocheck
lin hogback_N = mkN "à_cheval" ; -- UWN
lin hoist_V2 = mkV2 (mkV "hisser") ; -- tocheck
lin hold_N = mkN "soute" feminine ; -- tocheck
lin hold_V = mkV I.tenir_V2 ;
lin hold_V2 = L.hold_V2 ;
lin hold_VS = mkVS (mkV I.tenir_V2) ;
lin hold_against_V3 = variants {} ; -- guess-p-verb
lin hold_back_V = advV OP_hold_V OP_back_Adv ; -- guess-p-verb
lin hold_back_V2 = mkV2 (advV OP_hold_V OP_back_Adv ) ; -- guess-p-verb
lin hold_back_from_V2 = prepV2 (advV OP_hold_V OP_back_Adv ) OP_from_Prep ; -- guess-p-verb
lin hold_down_V2 = prepV2 OP_hold_V OP_down_Prep ; -- guess-p-verb
lin hold_forth_V = advV OP_hold_V OP_forth_Adv ; -- guess-p-verb
lin hold_off_V = advV OP_hold_V OP_off_Adv ; -- guess-p-verb
lin hold_off_V2 = prepV2 OP_hold_V OP_off_Prep ; -- guess-p-verb
lin hold_off_on_V2 = prepV2 (advV OP_hold_V OP_off_Adv ) OP_on_Prep ; -- guess-p-verb
lin hold_on_V = mkV "continuer" | mkV "persister" | mkV "persévérer" ; -- UWN
lin hold_on_to_V2 = prepV2 (advV OP_hold_V OP_on_Adv ) OP_to_Prep ; -- guess-p-verb
lin hold_onto_V = variants {} ; -- guess-p-verb
lin hold_onto_V2 = prepV2 OP_hold_V OP_onto_Prep ; -- guess-p-verb
lin hold_out_V = mkV "transmettre" | mkV "étendre" ; -- UWN
lin hold_out_V2 = prepV2 OP_hold_V OP_out_Prep ; -- guess-p-verb
lin hold_out_against_V2 = prepV2 (advV OP_hold_V OP_out_Adv ) OP_against_Prep ; -- guess-p-verb
lin hold_out_for_V2 = prepV2 (advV OP_hold_V OP_out_Adv ) OP_for_Prep ; -- guess-p-verb
lin hold_out_on_V2 = prepV2 (advV OP_hold_V OP_out_Adv ) OP_on_Prep ; -- guess-p-verb
lin hold_over_V2 = prepV2 OP_hold_V OP_over_Prep ; -- guess-p-verb
lin hold_together_V = advV OP_hold_V OP_together_Adv ; -- guess-p-verb
lin hold_up_N = mkN "hold-up" ; -- tocheck
lin hold_up_V2 = prepV2 OP_hold_V OP_up_Prep ; -- guess-p-verb
lin hold_with_V2 = prepV2 OP_hold_V OP_with_Prep ; -- guess-p-verb
lin holdall_N = mkN "fourre-tout" ; -- UWN
lin holder_N = mkN "porteur" masculine ; -- tocheck
lin holding_N = mkN "possession" ; -- tocheck
lin hole_N = mkN "creux" masculine | mkN "trou" masculine | mkN "faille" feminine ; -- tocheck
lin hole_V2 = mkV2 (mkV "trouer") ; -- tocheck
lin holey_A = mkA "poreux" ; -- UWN
lin holiday_N = mkN "fête" feminine | mkN "vacances" | mkN "congé" masculine | mkN "vacance" feminine ; -- tocheck
lin holiness_N = mkN "sainteté" ; -- UWN
lin holism_N = mkN "holisme" masculine ; -- tocheck
lin holistic_A = mkA "holistique" ; -- tocheck
lin holland_PN = mkPN "Holland" ; -- status=guess src=geonames
lin hollow_A = mkA "vide" | mkA "insignifiant" ; -- tocheck
lin hollow_N = mkN "creux" | mkN "trou" ; -- UWN
lin hollowness_N = mkN "fausseté" ; -- UWN
lin holly_N = mkN "houx" masculine ; -- tocheck
lin hollyhock_N = mkN "rose_trémière" ; -- UWN
lin hollywood_PN = mkPN "Hollywood" ; -- status=guess src=geonames
lin holmfirth_PN = mkPN "Holmfirth" ; -- status=guess src=geonames
lin holmium_N = mkN "holmium" masculine ; -- tocheck
lin holocaust_N = mkN "holocauste" masculine ; -- tocheck
lin holograph_N = mkN "holographe" ; -- tocheck
lin holographic_A = mkA "holographique" ; -- tocheck
lin holography_N = mkN "holographie" feminine ; -- tocheck
lin holometabola_N = mkN "holometabola" ; -- UWN
lin holonym_N = mkN "holonyme" masculine ; -- tocheck
lin holonymy_N = mkN "holonymie" ; -- tocheck
lin holster_N = mkN "holster" masculine ; -- tocheck
lin holy_A = mkA "saint" ; -- tocheck
lin holy_N = mkN "sacré" | mkN "saint" ; -- UWN
lin holyhead_PN = mkPN "Holyhead" ; -- status=guess src=geonames
lin homage_N = mkN "hommage" masculine ; -- tocheck
lin home_Adv = mkAdv "à la maison" ;
lin home_N = mkN "maison" feminine ;
lin homecoming_N = mkN "retour" ; -- UWN
lin homeland_N = mkN "patrie" feminine ; -- tocheck
lin homeless_A = variants {} ; --
lin homelessness_N = mkN "itinérance" ; -- tocheck
lin home_made_A = mkA "maison" ; -- UWN
lin homeobox_N = mkN "Homéoboîte_et_homéodomaine" | mkN "homéoboîte" | mkN "homéoboîte_et_homéodomaine" ; -- UWN
lin homeopathy_N = mkN "homéopathie" feminine ; -- tocheck
lin homeostasis_N = mkN "homéostasie" feminine ; -- tocheck
lin homeostatic_A = mkA "homéostatique" ; -- tocheck
lin homer_N = mkN "coup_de_circuit" ; -- UWN
lin homesick_A = mkA "nostalgique" ; -- UWN
lin homesickness_N = mkN "mal_du_pays" | mkN "nostalgie" ; -- UWN
lin homework_N = mkN "devoirs" ; -- tocheck
lin homicide_N = mkN "homicide" ; -- tocheck
lin homily_N = mkN "homélie" feminine ; -- tocheck
lin homo_N = mkN "homme" | mkN "homo_sapien" | mkN "homo_sapiens_sapiens" | mkN "humain" | mkN "humaine" | mkN "être_humain" ; -- UWN
lin homoeopathy_N = mkN "Homéopathie" | mkN "homéopathie" ; -- UWN
lin homoerotic_A = mkA "homoérotique" ; -- UWN
lin homogeneity_N = mkN "homogénéité" feminine ; -- tocheck
lin homogeneous_A = mkA "homogène" ; -- tocheck
lin homogenization_N = mkN "homogénéisation" feminine ; -- tocheck
lin homograft_N = mkN "Allogreffe" | mkN "allogreffe" | mkN "allogreffes" ; -- UWN
lin homograph_N = mkN "homographe" masculine ; -- tocheck
lin homologic_A = mkA "autologique" ; -- UWN
lin homologous_A = mkA "homologue" ; -- tocheck
lin homology_N = mkN "homologie" ; -- tocheck
lin homomorphism_N = mkN "homomorphisme" masculine ; -- tocheck
lin homonym_N = mkN "homonyme" ; -- tocheck
lin homonymy_N = mkN "homonymie" feminine ; -- tocheck
lin homophobe_N = mkN "homophobe" ; -- tocheck
lin homophobia_N = mkN "homophobie" feminine ; -- tocheck
lin homophobic_A = mkA "homophobe" ; -- tocheck
lin homophone_N = mkN "homophone" masculine ; -- tocheck
lin homophonous_A = mkA "homophone" ; -- UWN
lin homophony_N = mkN "homophonie" feminine ; -- tocheck
lin homosexual_A = mkA "homosexuel" ; -- tocheck
lin homosexual_N = mkN "homosexuel" masculine ; -- tocheck
lin homosexuality_N = mkN "homosexualité" feminine ; -- tocheck
lin homozygote_N = mkN "homozygote" ; -- tocheck
lin honduras_PN = mkPN "Honduras" ; -- status=guess src=geonames
lin hone_V2 = mkV2 (mkV "affiner") | mkV2 (mkV "aiguiser") ; -- tocheck
lin honest_A = mkA "honnête" ; -- tocheck
lin honesty_N = mkN "honnêteté" feminine ; -- tocheck
lin honey_A = mkA "miel" ; -- UWN
lin honey_N = mkN "miel" masculine | mkN "chéri" masculine ; -- tocheck
lin honeydew_N = mkN "miellat" feminine ; -- tocheck
lin honeymoon_N = mkN "Lune_de_miel" | mkN "voyage_de_noces" ; -- UWN
lin honeysuckle_N = mkN "chèvrefeuille" masculine ; -- tocheck
lin hong_kong_PN = mkPN "Hong Kong" ; -- status=guess src=geonames
lin honiton_PN = mkPN "Honiton" ; -- status=guess src=geonames
lin honk_N = mkN "klaxon" masculine ; -- tocheck
lin honk_V = mkV (mkV "klaxonner") ; -- tocheck
lin honkytonk_N = mkN "trou" ; -- UWN
lin honorarium_N = mkN "honoraires" ; -- UWN
lin honorary_A = mkA "honoraire" | mkA "honorifique" ; -- UWN
lin honoring_N = mkN "respect" ; -- UWN
lin honour_N = mkN "honneur" masculine ; -- tocheck
lin honour_V2 = variants {} ; --
lin honourable_A = mkA "honorable" ; -- UWN
lin hoo_PN = mkPN "Hoo" ; -- status=guess src=geonames
lin hooch_N = mkN "gnole" | mkN "gnôle" ; -- UWN
lin hood_N = mkN "hotte" feminine | mkN "capot" masculine | mkN "capuche" | mkN "capote" feminine ; -- tocheck
lin hoodlum_N = mkN "voyou" masculine | mkN "bandit" masculine ; -- tocheck
lin hooey_N = mkN "non-sens" ; -- UWN
lin hoof_N = mkN "sabot" ; -- tocheck
lin hook_N = mkN "hameçon" masculine | mkN "crochet" masculine ; -- tocheck
lin hook_V = variants {} ; -- mkV2 (mkV "accrocher") ; -- tocheck
lin hook_V2 = mkV2 (mkV "accrocher") ; -- tocheck
lin hookah_N = mkN "houka" feminine ; -- tocheck
lin hooker_N = mkN "putain" feminine | mkN "talonneur" masculine ; -- tocheck
lin hooky_N = mkN "absentéisme" | mkN "faire_l'école_buissonière" ; -- UWN
lin hooligan_N = mkN "hooligan" masculine ; -- tocheck
lin hooliganism_N = mkN "hooliganisme" masculine ; -- tocheck
lin hoop_N = mkN "cercle" masculine ; -- tocheck
lin hoopoe_N = mkN "huppe" feminine ; -- tocheck
lin hoopskirt_N = mkN "crinoline" ; -- UWN
lin hoosegow_N = mkN "trou" ; -- UWN
lin hoot_N = mkN "hululement" masculine | mkN "huées" ; -- tocheck
lin hoot_V2 = mkV2 (mkV "huer") | mkV2 (mkV "hululer") ; -- tocheck
lin hooter_N = mkN "klaxon" masculine | mkN "robert" masculine ; -- tocheck
lin hop_N = mkN "houblon" masculine ; -- tocheck
lin hope_N = mkN "espoir" masculine ; -- tocheck
lin hope_PN = mkPN "Hope" ; -- status=guess src=geonames
lin hope_V = mkV (mkV "espérer") ;
lin hope_VS = L.hope_VS ;
lin hope_VV = deVV (mkV "espérer") ;
lin hopeful_A = mkA "encourageant" ; -- tocheck
lin hopeless_A = mkA "désespéré" ; -- tocheck
lin hopelessness_N = mkN "désespérance" feminine ; -- tocheck
lin hopscotch_N = mkN "marelle" feminine ; -- tocheck
lin horace_PN = mkPN "Horace" ; -- status=guess src=geonames
lin horde_N = mkN "horde" feminine ; -- tocheck
lin horizon_N = mkN "horizon" masculine ; -- tocheck
lin horizontal_A = mkA "horizontal" ; -- tocheck
lin horizontal_N = mkN "horizontal" ; -- UWN
lin horley_PN = mkPN "Horley" ; -- status=guess src=geonames
lin hormonal_A = mkA "hormonal" ; -- tocheck
lin hormone_N = mkN "hormone" feminine ; -- tocheck
lin horn_N = L.horn_N ;
lin hornbeam_N = mkN "charme" masculine ; -- tocheck
lin hornbill_N = mkN "calao" masculine ; -- tocheck
lin hornblende_N = mkN "hornblende" ; -- UWN
lin horned_A = mkA "cornu" ; -- tocheck
lin hornet_N = mkN "frelon" masculine ; -- tocheck
lin hornless_A = mkA "écorné" ; -- tocheck
lin hornsea_PN = mkPN "Hornsea" ; -- status=guess src=geonames
lin horny_A = mkA "cornu" | mkA "corné" | mkA "excité" | mkA "excitant" ; -- tocheck
lin horology_N = mkN "horologie" feminine ; -- tocheck
lin horoscope_N = mkN "horoscope" masculine ; -- tocheck
lin horrible_A = mkA "horrible" ; -- tocheck
lin horrific_A = mkA "horrifique" ; -- tocheck
lin horrifyingly_Adv = mkAdv "abjectement" | mkAdv "abominablement" | mkAdv "affreusement" | mkAdv "atrocement" | mkAdv "effroyablement" | mkAdv "hideusement" | mkAdv "horriblement" | mkAdv "épouvantablement" ; -- UWN
lin horror_N = mkN "horreur" masculine | mkN "dégoût" ; -- tocheck
lin horse_N = L.horse_N ;
lin horseback_Adv = mkAdv "à_cheval" ; -- UWN
lin horseback_N = mkN "à_cheval" ; -- UWN
lin horseflesh_N = mkN "viande_chevaline" | mkN "viande_de_cheval" ; -- UWN
lin horsefly_N = mkN "taon" masculine ; -- tocheck
lin horsehair_N = mkN "crin" masculine ; -- tocheck
lin horseman_N = mkN "cavalier" masculine ; -- tocheck
lin horsemeat_N = mkN "viande_chevaline" | mkN "viande_de_cheval" ; -- UWN
lin horseplay_N = mkN "chahut" masculine ; -- tocheck
lin horsepower_N = mkN "cheval-vapeur" ; -- tocheck
lin horseradish_N = mkN "raifort" masculine ; -- tocheck
lin horseshoe_N = mkN "chaussure" | mkN "fer_à_cheval" | mkN "soulier" ; -- UWN
lin horsetail_N = mkN "prêle" feminine ; -- tocheck
lin horsewoman_N = mkN "écuyère" feminine ; -- tocheck
lin horsham_PN = mkPN "Horsham" ; -- status=guess src=geonames
lin horsley_PN = mkPN "Horsley" ; -- status=guess src=geonames
lin horst_N = mkN "horst" ; -- UWN
lin horsy_A = mkA "chevalin" ; -- tocheck
lin hortative_A = mkA "hortatif" ; -- tocheck
lin horticulture_N = mkN "horticulture" feminine ; -- tocheck
lin horticulturist_N = mkN "horticulteur" | mkN "jardinier" ; -- UWN
lin horwich_PN = mkPN "Horwich" ; -- status=guess src=geonames
lin hosanna_N = mkN "hosanna" ; -- UWN
lin hose_N = mkN "tuyau" ; -- tocheck
lin hosepipe_N = mkN "arrosage" | mkN "manche" | mkN "raccordement" | mkN "tuyau" | mkN "tuyau_d'" | mkN "tuyau_d'arrosage" ; -- UWN
lin hospice_N = mkN "hospice" masculine ; -- tocheck
lin hospitable_A = mkA "hospitalier" ; -- UWN
lin hospital_N = mkN "hôpital" masculine ;
lin hospitality_N = mkN "hospitalité" feminine ; -- tocheck
lin hospitalization_N = mkN "hospitalisation" feminine ; -- tocheck
lin hospitalize_V2 = mkV2 (mkV "hospitaliser") ; -- tocheck
lin host_N = mkN "hôte" masculine | mkN "hostie" feminine | mkN "hôte" | mkN "armée" | mkN "organisateur" masculine ; -- tocheck
lin host_V2 = mkV2 (mkV "héberger") | mkV2 (mkV I.recevoir_V2) ; -- tocheck
lin hostage_N = mkN "otage" masculine ; -- tocheck
lin hostel_N = mkN "auberge" feminine ; -- tocheck
lin hostelry_N = mkN "auberge" | mkN "posada" ; -- UWN
lin hostess_N = mkN "hôtesse" feminine ; -- tocheck
lin hostile_A = mkA "hostile" ; -- tocheck
lin hostilities_N = mkN "hostilité" ; -- UWN
lin hostility_N = mkN "hostilité" feminine ; -- tocheck
lin hot_A = L.hot_A ;
lin hotbed_N = mkN "foyer" ; -- UWN
lin hotdog_N = mkN "chien" | mkN "franc" | mkN "hot-dog" ; -- UWN
lin hotel_N = mkN "hôtel" masculine ; -- tocheck
lin hotelier_N = mkN "hôtelier" masculine ; -- tocheck
lin hotplate_N = mkN "plaque_chauffante" ; -- UWN
lin houghton_PN = mkPN "Houghton" ; -- status=guess src=geonames
lin hound_N = mkN "chien" | mkN "chien_de_chasse" ; -- UWN
lin hounslow_PN = mkPN "Hounslow" ; -- status=guess src=geonames
lin hour_N = mkN "heure" feminine ;
lin hourglass_N = mkN "sablier" masculine ; -- tocheck
lin houri_N = mkN "houri" feminine ; -- tocheck
lin hourly_A = variants {} ;
lin hourly_Adv = adjAdv hourly_A ; -- derived
lin house_N = L.house_N ;
lin house_V2 = mkV2 (mkV "héberger") | mkV2 (mkV "garer") ; -- tocheck
lin housebreaking_N = mkN "effraction" ; -- UWN
lin housecoat_N = mkN "déshabillé" | mkN "peignoir" ; -- UWN
lin household_N = mkN "foyer" masculine ; -- tocheck
lin housekeeper_N = mkN "gouvernante" | mkN "ménagère" ; -- tocheck
lin housemaid_N = mkN "bonne" | mkN "domestique" ; -- UWN
lin houseplant_N = mkN "plante_d'appartement" ; -- UWN
lin housewife_N = mkN "femme_au_foyer" | mkN "maîtresse_de_maison" | mkN "personne_au_foyer" ; -- UWN
lin housing_N = mkN "logement" | mkN "logement" masculine ; -- tocheck
lin houston_PN = mkPN "Houston" ; -- status=guess src=geonames
lin hove_PN = mkPN "Hove" ; -- status=guess src=geonames
lin hover_V = mkV (mkV "planer") | mkV (mkV "hésiter") ; -- tocheck
lin hovercraft_N = mkN "aéroglisseur" masculine ; -- tocheck
lin how8many_IDet = S.how8many_IDet ;
lin how8much_IAdv = S.how8much_IAdv ;
lin how_IAdv = S.how_IAdv ;
lin howard_PN = mkPN "Howard" ; -- status=guess src=geonames
lin however_Adv = mkAdv "cependant" ;
lin howitzer_N = mkN "obusier" masculine ; -- tocheck
lin howl_N = mkN "hurlement" ; -- tocheck
lin howl_V2 = mkV2 (mkV "hurler") ; -- tocheck
lin howler_N = mkN "hurleur" masculine | mkN "bourde" feminine ; -- tocheck
lin hoyden_N = mkN "garçon_manqué" | mkN "garçonne" ; -- UWN
lin hoylake_PN = mkPN "Hoylake" ; -- status=guess src=geonames
lin hryvnia_N = mkN "hryvnia" feminine ; -- tocheck
lin hub_N = mkN "hub" masculine | mkN "pôle" masculine | mkN "moyeu" | mkN "moyeu" masculine ; -- tocheck
lin hubbub_N = mkN "brouhaha" masculine ; -- tocheck
lin hubcap_N = mkN "chapeau_de_roue" | mkN "enjoliveur" ; -- UWN
lin hubris_N = mkN "hybris" ; -- tocheck
lin huck_N = mkN "huck" ; -- UWN
lin huckaback_N = mkN "huck" ; -- UWN
lin hucknall_PN = mkPN "Hucknall" ; -- status=guess src=geonames
lin huddersfield_PN = mkPN "Huddersfield" ; -- status=guess src=geonames
lin huddle_V2 = mkV2 (reflV (mkV "blottir")) ; -- tocheck
lin hudud_N = mkN "hudud" | mkN "hudûd" ; -- UWN
lin hue_N = mkN "teinte" feminine | mkN "nuance" feminine ; -- tocheck
lin huffish_A = mkA "boudeur" ; -- UWN
lin huffy_A = mkA "vexé" | mkA "susceptible" ; -- tocheck
lin hug_N = mkN "étreinte" feminine ; -- tocheck
lin hug_V2 = mkV2 (mkV I.étreindre_V2) ; -- tocheck
lin huge_A = mkA "énorme" ; -- tocheck
lin hugely_Adv = adjAdv huge_A ; -- derived -- derived
lin huitre_N = mkN "huître" ; -- UWN
lin hulk_N = mkN "épave" feminine ; -- tocheck
lin hull_N = mkN "coque" feminine ; -- tocheck
lin hullabaloo_N = mkN "tintamarre" masculine ; -- tocheck
lin hum_V2 = mkV2 (mkV "fredonner") ; -- tocheck
lin human_A = mkA "humain" ; -- tocheck
lin human_N = mkN "humain" masculine ; -- tocheck
lin humanism_N = mkN "humanisme" masculine ; -- tocheck
lin humanitarian_A = mkA "humanitaire" ; -- tocheck
lin humanitarianism_N = mkN "humanitarisme" masculine ; -- tocheck
lin humanity_N = mkN "humanité" feminine ; -- tocheck
lin humankind_N = mkN "humanité" feminine ; -- tocheck
lin humanness_N = mkN "humanité" ; -- UWN
lin humberston_PN = mkPN "Humberston" ; -- status=guess src=geonames
lin humble_A = mkA "humble" ; -- tocheck
lin humdrum_A = mkA "monotone" ; -- tocheck
lin humerus_N = mkN "humérus" masculine ; -- tocheck
lin humid_A = mkA "mouillé" ; -- tocheck
lin humidity_N = mkN "humidité" feminine ; -- tocheck
lin humiliate_V2 = mkV2 (mkV "humilier") ; -- tocheck
lin humiliation_N = mkN "humiliation" feminine ; -- tocheck
lin humility_N = mkN "humilité" feminine ; -- tocheck
lin hummer_N = mkN "balle" | mkN "chauffage" | mkN "fumer" | mkN "fumée" | mkN "miracle" ; -- UWN
lin hummingbird_N = mkN "colibri" ; -- tocheck
lin hummock_N = mkN "butte" | mkN "colline" | mkN "hamac" | mkN "monticule" ; -- UWN
lin humongous_A = mkA "gigantesque" ; -- tocheck
lin humorous_A = mkA "humoristique" ; -- tocheck
lin humour_N = mkN "humour" masculine | mkN "humeur" masculine ; -- tocheck
lin humour_V2 = mkV2 (mkV "amadouer") ; -- tocheck
lin hump_N = mkN "sauterie" feminine | mkN "cafard" feminine | mkN "bosse" feminine ; -- tocheck
lin hump_V2 = mkV2 (mkV "trimballer") | mkV2 (mkV "sauter") | mkV2 (mkV "arrondir") ; -- tocheck
lin humpback_N = mkN "bossu" masculine | mkN "bosse" feminine ; -- tocheck
lin humpbacked_A = mkA "bossu" ; -- tocheck
lin humus_N = mkN "humus" masculine ; -- tocheck
lin hunch_N = mkN "intuition" ; -- tocheck
lin hunch_V2 = mkV2 (reflV (mkV "voûter")) ; -- tocheck
lin hunchback_N = mkN "bossu" masculine ; -- tocheck
lin hungary_PN = mkPN "Hongrie" ; -- status=guess src=geonames
lin hunger_N = mkN "faim" feminine | mkN "soif" feminine ; -- tocheck
lin hungry_A = variants {} ; --
lin hunt_N = mkN "chasse" feminine ; -- tocheck
lin hunt_V = variants {} ; -- L.hunt_V2 ;
lin hunt_V2 = L.hunt_V2 ;
lin hunter_N = mkN "chasseur" masculine | mkN "chercheur" masculine ; -- tocheck
lin hunting_N = mkN "chasse" feminine ; -- tocheck
lin huntingdon_PN = mkPN "Huntingdon" ; -- status=guess src=geonames
lin huntress_N = mkN "chasseresse" feminine ; -- tocheck
lin huntsman_N = mkN "chasseur" ; -- UWN
lin hurdle_N = mkN "obstacle" masculine ; -- tocheck
lin hurdles_N = mkN "course_de_haies" | mkN "hurdler" ; -- UWN
lin hurdy_gurdy_N = mkN "orgue_de_Barbarie" | mkN "vielle_à_roue" ; -- UWN
lin hurl_V2 = mkV2 (mkV "projeter") | mkV2 (mkV "débecter") ; -- tocheck
lin hurrah_N = mkN "hourra" ; -- UWN
lin hurricane_N = mkN "ouragan" masculine ; -- tocheck
lin hurried_A = mkA "hâtif" ; -- UWN
lin hurry_N = mkN "précipitation" feminine ; -- tocheck
lin hurry_V = variants {} ; -- mkV2V (reflV (mkV "dépêcher")) ; -- tocheck
lin hurstpierpoint_PN = mkPN "Hurstpierpoint" ; -- status=guess src=geonames
lin hurt_N = mkN "dommage" | mkN "dégât" | mkN "détériorer" | mkN "préjudice" ; -- UWN
lin hurt_V = variants {} ; -- mkV2 (mkV "blesser") ; -- tocheck
lin hurt_V2 = mkV2 (mkV "blesser") ; -- tocheck
lin hurtful_A = mkA "délétère" | mkA "injurieux" ; -- UWN
lin hurtle_V = mkV (reflV (mkV "élancer")) ; -- tocheck
lin husband_N = L.husband_N ;
lin husband_V2 = mkV2 (mkV "économiser") ; -- tocheck
lin husbandry_N = mkN "agriculture" feminine ; -- tocheck
lin hush_N = mkN "silence" feminine ; -- tocheck
lin husk_N = mkN "écale" feminine ; -- tocheck
lin husky_A = mkA "enroué" | mkA "rauque" ; -- tocheck
lin husky_N = mkN "husky" masculine ; -- tocheck
lin hussar_N = mkN "hussard" masculine ; -- tocheck
lin hustler_N = mkN "giton" masculine | mkN "mac" ; -- tocheck
lin hut_N = mkN "hutte" feminine ; -- tocheck
lin hyacinth_N = mkN "jacinthe" feminine ; -- tocheck
lin hyaena_N = mkN "Hyaenidae" | mkN "hyaena" | mkN "hyaenidae" | mkN "hyène" | mkN "hyènes" | mkN "hyénidés" ; -- UWN
lin hybrid_A = mkA "hybride" ; -- tocheck
lin hybrid_N = mkN "hybride" ; -- tocheck
lin hybridization_N = mkN "croisement" | mkN "croix" | mkN "franchissement" | mkN "hybridation" | mkN "traversée" ; -- UWN
lin hybridoma_N = mkN "hybridome" ; -- UWN
lin hydatid_N = mkN "hydatide" ; -- UWN
lin hyde_PN = mkPN "Hyde" ; -- status=guess src=geonames
lin hyderabad_PN = mkPN "Hyderabad" ; -- status=guess src=geonames
lin hydra_N = mkN "hydre" feminine ; -- tocheck
lin hydrangea_N = mkN "hortensia" ; -- tocheck
lin hydrate_N = mkN "hydrate" masculine ; -- tocheck
lin hydraulic_A = mkA "hydraulique" ; -- tocheck
lin hydraulics_N = mkN "hydraulique" feminine ; -- tocheck
lin hydrazine_N = mkN "hydrazine" ; -- UWN
lin hydride_N = mkN "hydrure" masculine ; -- tocheck
lin hydrocarbon_N = mkN "hydrocarbure" masculine ; -- tocheck
lin hydrocele_N = mkN "hydrocèle" ; -- UWN
lin hydrocephalic_A = mkA "hydrocéphale" | mkA "hydrocéphalique" ; -- UWN
lin hydrocephalus_N = mkN "hydrocéphalie" feminine ; -- tocheck
lin hydrochloric_A = mkA "chlorhydrique" ; -- tocheck
lin hydrochloride_N = mkN "chlorhydrate" masculine ; -- tocheck
lin hydrocracking_N = mkN "hydrocraquage" ; -- UWN
lin hydrodynamic_A = mkA "hydrodynamique" ; -- UWN
lin hydrodynamics_N = mkN "hydrodynamique" ; -- UWN
lin hydroelectric_A = mkA "hydroélectrique" ; -- UWN
lin hydrofoil_N = mkN "hydroptère" masculine ; -- tocheck
lin hydrogen_N = mkN "hydrogène" masculine ; -- tocheck
lin hydrogenation_N = mkN "hydrogénation" feminine ; -- tocheck
lin hydrographic_A = mkA "hydrographique" ; -- UWN
lin hydrography_N = mkN "hydrographie" feminine ; -- tocheck
lin hydrologist_N = mkN "hydrogiste" ; -- tocheck
lin hydrology_N = mkN "hydrologie" feminine ; -- tocheck
lin hydrolysis_N = mkN "hydrolyse" ; -- UWN
lin hydromancy_N = mkN "hydromancie" ; -- UWN
lin hydrometer_N = mkN "Hydromètre" | mkN "hydromètre" ; -- UWN
lin hydrometry_N = mkN "hydrométrie" ; -- UWN
lin hydropathy_N = mkN "crénothérapie" | mkN "thermalisme" ; -- UWN
lin hydrophilic_A = mkA "hydrophile" ; -- UWN
lin hydrophobia_N = mkN "folie" | mkN "rage" ; -- UWN
lin hydrophobic_A = mkA "hydrophobe" ; -- tocheck
lin hydroplane_N = mkN "hydroptère" | mkN "planeur" ; -- UWN
lin hydroponics_N = mkN "Hydroponie" | mkN "aquiculture" | mkN "culture_sans_terre" | mkN "hydroponie" ; -- UWN
lin hydrosphere_N = mkN "hydrosphère" feminine ; -- tocheck
lin hydroxide_N = mkN "hydroxyde" masculine ; -- tocheck
lin hydroxyl_N = mkN "groupement_hydroxyle" ; -- UWN
lin hydroxyproline_N = mkN "hydroxyproline" ; -- UWN
lin hyena_N = mkN "hyène" feminine ; -- tocheck
lin hygiene_N = mkN "hygiène" feminine ; -- tocheck
lin hygienic_A = mkA "hygiénique" ; -- tocheck
lin hygrometer_N = mkN "hygromètre" ; -- UWN
lin hygroscope_N = mkN "hygroscope" masculine ; -- tocheck
lin hygroscopic_A = mkA "hygroscopique" ; -- tocheck
lin hymen_N = mkN "hymen" masculine ; -- tocheck
lin hymeneal_A = mkA "hyménéen" | mkA "hyménal" ; -- tocheck
lin hymenium_N = mkN "hyménium" ; -- UWN
lin hymn_N = mkN "hymne" ; -- tocheck
lin hymnal_N = mkN "hymnaire" ; -- UWN
lin hyoid_N = mkN "os_hyoïde" | mkN "os_lingual" ; -- UWN
lin hyoscyamine_N = mkN "hyoscyamine" ; -- UWN
lin hypallage_N = mkN "hypallage" feminine ; -- tocheck
lin hypanthium_N = mkN "hypanthe" masculine ; -- tocheck
lin hyperacidity_N = mkN "hyperacidité" ; -- UWN
lin hyperactive_A = mkA "hyperactif" ; -- tocheck
lin hyperactivity_N = mkN "hyperactivité" feminine ; -- tocheck
lin hyperbaton_N = mkN "hyperbate" feminine ; -- tocheck
lin hyperbola_N = mkN "hyperbole" feminine ; -- tocheck
lin hyperbole_N = mkN "hyperbole" feminine ; -- tocheck
lin hyperbolic_A = mkA "hyperbolique" ; -- tocheck
lin hyperboloid_N = mkN "hyperboloïde" ; -- UWN
lin hypercalcemia_N = mkN "calcémie" | mkN "hypercalcémie" ; -- UWN
lin hypercapnia_N = mkN "hypercapnie" ; -- UWN
lin hypercatalectic_A = mkA "hypercatalectique" ; -- tocheck
lin hypercholesterolemia_N = mkN "hypercholestérolémie" ; -- UWN
lin hypercoaster_N = mkN "hypercoaster" ; -- UWN
lin hyperglycemia_N = mkN "hyperglycémie" ; -- UWN
lin hyperhidrosis_N = mkN "hyperhidrose" ; -- tocheck
lin hyperkalemia_N = mkN "hyperkaliémie" ; -- UWN
lin hyperlink_N = mkN "lien" masculine | mkN "hyperlien" masculine ; -- tocheck
lin hypermarket_N = mkN "hypermarché" ; -- tocheck
lin hypermedia_N = mkN "hypermédia" | mkN "hypermédias" ; -- UWN
lin hypernatremia_N = mkN "hypernatrémie" ; -- UWN
lin hypernym_N = mkN "hyperonyme" masculine ; -- tocheck
lin hypernymy_N = mkN "hyperonymie" feminine ; -- tocheck
lin hyperon_N = mkN "hypéron" masculine ; -- tocheck
lin hyperopia_N = mkN "hypermétropie" ; -- UWN
lin hyperparathyroidism_N = mkN "hyperparathyroïdie" ; -- UWN
lin hyperplasia_N = mkN "Hyperplasie" | mkN "hyperplasie" ; -- UWN
lin hypersensitive_A = mkA "allergique" | mkA "hypersensible" ; -- UWN
lin hypersomnia_N = mkN "Hypersomnie" | mkN "hypersomnie" ; -- UWN
lin hypertensive_A = mkA "hypertendu" ; -- UWN
lin hypertensive_N = mkN "hypertendu" masculine ; -- tocheck
lin hypertext_N = mkN "document" | mkN "hypertexte" masculine ; -- tocheck
lin hyperthermia_N = mkN "hyperthermie" ; -- tocheck
lin hyperthyroidism_N = mkN "Hyperthyroïdie" | mkN "hyperthyroïdie" | mkN "thyrotoxicose" ; -- UWN
lin hypertonia_N = mkN "Hypertonie_musculaire" | mkN "hypertonie" | mkN "hypertonie_musculaire" ; -- UWN
lin hypertonicity_N = mkN "Hypertonie_musculaire" | mkN "hypertonie" | mkN "hypertonie_musculaire" ; -- UWN
lin hypertrophy_N = mkN "hypertrophie" feminine ; -- tocheck
lin hyperventilation_N = mkN "hyperventilation" ; -- UWN
lin hypervolemia_N = mkN "hypervolémie" ; -- UWN
lin hyphenation_N = mkN "césure" feminine ; -- tocheck
lin hypnosis_N = mkN "hypnose" feminine ; -- tocheck
lin hypnotism_N = mkN "hypnotisme" ; -- tocheck
lin hypnotist_N = mkN "hypnotiseur" | mkN "magnétiseur" ; -- UWN
lin hypo_N = mkN "hypodermique" ; -- UWN
lin hypocalcemia_N = mkN "Hypocalcémie" | mkN "hypocalcémie" ; -- UWN
lin hypochlorite_N = mkN "hypochlorite" ; -- UWN
lin hypochondria_N = mkN "hypocondrie" feminine ; -- tocheck
lin hypochondriac_A = mkA "hypocondriaque" ; -- tocheck
lin hypochondriac_N = mkN "hypocondriaque" ; -- tocheck
lin hypochondriacal_A = mkA "hypocondriaque" ; -- UWN
lin hypochondrium_N = mkN "hypocondre" masculine ; -- tocheck
lin hypocrisy_N = mkN "hypocrisie" feminine ; -- tocheck
lin hypocrite_N = mkN "hypocrite" ; -- tocheck
lin hypocritical_A = mkA "hypocrite" ; -- tocheck
lin hypocycloid_N = mkN "hypocycloïde" feminine ; -- tocheck
lin hypodermic_A = mkA "hypodermique" ; -- tocheck
lin hypodermic_N = mkN "hypodermique" ; -- UWN
lin hypoglycemic_A = mkA "hypoglycémiant" ; -- UWN
lin hypogonadism_N = mkN "hypogonadisme" ; -- UWN
lin hypokalemia_N = mkN "hypokaliémie" ; -- UWN
lin hyponatremia_N = mkN "hyponatrémie" ; -- tocheck
lin hyponym_N = mkN "hyponyme" masculine ; -- tocheck
lin hyponymy_N = mkN "hyponymie" feminine ; -- tocheck
lin hypoparathyroidism_N = mkN "hypoparathyroïdie" ; -- UWN
lin hypophyseal_A = mkA "hypophysaire" ; -- UWN
lin hypoplasia_N = mkN "Hypoplasie" | mkN "hypoplasie" ; -- UWN
lin hypopnea_N = mkN "hypopnée" ; -- UWN
lin hypospadias_N = mkN "Hypospadias" | mkN "hypospadias" ; -- UWN
lin hypostasis_N = mkN "hypostase" feminine ; -- tocheck
lin hypostatization_N = mkN "réification" ; -- UWN
lin hypotension_N = mkN "hypotension" feminine ; -- tocheck
lin hypotensive_A = mkA "hypotendu" ; -- UWN
lin hypotenuse_N = mkN "hypoténuse" feminine ; -- tocheck
lin hypothalamus_N = mkN "Hypothalamus" | mkN "hypothalamus" ; -- UWN
lin hypothermia_N = mkN "hypothermie" feminine ; -- tocheck
lin hypothermic_A = mkA "hypothermique" ; -- tocheck
lin hypothesis_N = mkN "hypothèse" feminine ; -- tocheck
lin hypothetical_A = mkA "hypothétique" ; -- tocheck
lin hypothyroidism_N = mkN "hypothyroïdisme" masculine ; -- tocheck
lin hypotonia_N = mkN "hypotonie" | mkN "hypotonie_musculaire" ; -- UWN
lin hypotonicity_N = mkN "hypotonie" | mkN "hypotonie_musculaire" ; -- UWN
lin hypovolemia_N = mkN "hypovolémie" ; -- UWN
lin hypoxia_N = mkN "hypoxie" ; -- tocheck
lin hypsometer_N = mkN "hypsomètre" ; -- UWN
lin hyrax_N = mkN "hyracoïde" masculine ; -- tocheck
lin hyssop_N = mkN "hysope" | mkN "hyssopus" ; -- UWN
lin hysterectomy_N = mkN "hystérectomie" feminine ; -- tocheck
lin hysteresis_N = mkN "hystérèse" feminine ; -- tocheck
lin hysteria_N = mkN "hystérie" feminine ; -- tocheck
lin hysteric_A = mkA "hystérique" ; -- UWN
lin hysteric_N = mkN "hystérique" ; -- tocheck
lin hysteroscopy_N = mkN "hystéroscopie" ; -- UWN
lin hythe_PN = mkPN "Hythe" ; -- status=guess src=geonames
lin iFem_Pron = E.i8fem_Pron ;
lin i_Pron = S.i_Pron ;
lin iamb_N = mkN "ïambe" masculine ; -- tocheck
lin iambic_A = mkA "iambique" ; -- tocheck
lin iambus_N = mkN "iambe" | mkN "ïambe" ; -- UWN
lin iatrogenic_A = mkA "iatrogène" ; -- tocheck
lin ibadan_PN = mkPN "Ibadan" ; -- status=guess src=geonames
lin ibex_N = mkN "bouquetin" masculine ; -- tocheck
lin ibis_N = mkN "ibis" ; -- tocheck
lin ibuprofen_N = mkN "ibuprofène" ; -- tocheck
lin ice_N = L.ice_N ;
lin ice_V2 = mkV2 (mkV "glacer") | mkV2 (mkV "congeler") ; -- tocheck
lin iceberg_N = mkN "iceberg" masculine ; -- tocheck
lin iceboat_N = mkN "scooter" ; -- UWN
lin icebox_N = mkN "glacière" feminine | mkN "congélateur" masculine ; -- tocheck
lin icebreaker_N = mkN "brise-glace" masculine ; -- tocheck
lin icehouse_N = mkN "glacière" ; -- tocheck
lin iceland_PN = mkPN "Islande" ; -- status=guess src=geonames
lin ichthyologist_N = mkN "ichthyologiste" | mkN "ichthyologue" ; -- UWN
lin ichthyology_N = mkN "ichtyologie" feminine ; -- tocheck
lin ichthyosaur_N = mkN "ichtyosaure" masculine ; -- tocheck
lin ichthyosis_N = mkN "ichtyose" feminine ; -- tocheck
lin icicle_N = mkN "glaçon" masculine ; -- tocheck
lin icing_N = mkN "glaçage" masculine ; -- tocheck
lin icon_N = mkN "icône" feminine | mkN "icon" masculine ; -- tocheck
lin iconic_A = mkA "iconique" ; -- UWN
lin iconoclasm_N = mkN "iconoclasme" masculine ; -- tocheck
lin iconography_N = mkN "iconographie" ; -- UWN
lin iconology_N = mkN "iconologie" ; -- UWN
lin iconoscope_N = mkN "iconoscope" ; -- UWN
lin icosahedron_N = mkN "icosaèdre" masculine ; -- tocheck
lin id_N = mkN "id" ; -- UWN
lin idea_N = mkN "idée" feminine ;
lin ideal_A = mkA "idéal" ; -- tocheck
lin ideal_N = mkN "idéal" masculine ; -- tocheck
lin idealism_N = mkN "idéalisme" masculine ; -- tocheck
lin idealist_N = mkN "idéaliste" ; -- tocheck
lin idealistic_A = mkA "idéaliste" ; -- tocheck
lin ideality_N = mkN "idéalité" feminine ; -- tocheck
lin idealization_N = mkN "glorification" ; -- UWN
lin ideally_Adv = adjAdv ideal_A ; -- -- derived
lin ideation_N = mkN "idéation" feminine ; -- tocheck
lin identical_A = mkA "identique" | mkA "monozygote" ; -- tocheck
lin identifiable_A = mkA "Identifiable" ; -- tocheck
lin identification_N = mkN "identification" feminine ; -- tocheck
lin identifier_N = mkN "identificateur" masculine | mkN "identifiant" masculine ; -- tocheck
lin identify_V = variants {} ; -- mkV2 (mkV "identifier") ; -- tocheck
lin identify_V2 = mkV2 (mkV "identifier") ; -- tocheck
lin identikit_N = mkN "portrait-robot" masculine ; -- tocheck
lin identity_N = mkN "identité" feminine ; -- tocheck
lin ideogram_N = mkN "idéogramme" masculine ; -- tocheck
lin ideograph_N = mkN "idéographe" masculine ; -- tocheck
lin ideographic_A = mkA "idéographique" ; -- tocheck
lin ideological_A = mkA "idéologique" ; -- tocheck
lin ideology_N = mkN "idéologie" feminine ; -- tocheck
lin ides_N = mkN "ides" feminine ; -- tocheck
lin idiocy_N = mkN "idiotie" feminine ; -- tocheck
lin idiographic_A = mkA "idiographique" ; -- UWN
lin idiolect_N = mkN "idiolecte" masculine ; -- tocheck
lin idiom_N = mkN "idiotisme" masculine | mkN "idiome" masculine ; -- tocheck
lin idiomatic_A = mkA "idiomatique" ; -- tocheck
lin idiosyncrasy_N = mkN "idiosyncrasie" feminine ; -- tocheck
lin idiot_N = mkN "idiot" masculine ; -- tocheck
lin idiotic_A = mkA "idiot" ; -- tocheck
lin idle_A = mkA "oisif" | mkA "inactif" ; -- tocheck
lin idle_V2 = mkV2 (mkV "fainéanter") ; -- tocheck
lin idler_N = mkN "fainéant" masculine ; -- tocheck
lin idol_N = mkN "idole" masculine ; -- tocheck
lin idolater_N = mkN "idolâtre" ; -- UWN
lin idolatress_N = mkN "idolâtre" ; -- UWN
lin idolatrous_A = mkA "idolâtre" ; -- UWN
lin idolatry_N = mkN "idolâtrie" ; -- UWN
lin idolizer_N = mkN "idolâtre" ; -- UWN
lin idyll_N = mkN "idylle" feminine ; -- tocheck
lin if_Subj = S.if_Subj ;
lin if_then_Conj = S.if_then_Conj ;
lin igloo_N = mkN "igloo" masculine ; -- tocheck
lin igneous_A = mkA "igné" ; -- tocheck
lin ignition_N = mkN "ignition" feminine | mkN "allumage" masculine ; -- tocheck
lin ignominious_A = mkA "honteux" | mkA "ignominieux" | mkA "noir" ; -- UWN
lin ignominy_N = mkN "ignominie" feminine ; -- tocheck
lin ignoramus_N = mkN "know_nothing" ; -- UWN
lin ignorance_N = mkN "ignorance" feminine ; -- tocheck
lin ignorant_A = mkA "ignorant" ; -- tocheck
lin ignore_V = mkV "méconnaître" ; -- UWN
lin ignore_V2 = variants {} ; --
lin iguana_N = mkN "iguane" feminine ; -- tocheck
lin iguanodon_N = mkN "iguanodon" ; -- UWN
lin ijtihad_N = mkN "Ijtihad" | mkN "ijtihad" | mkN "ijtihâd" ; -- UWN
lin ikon_N = mkN "icône" ; -- UWN
lin ileum_N = mkN "iléon" ; -- UWN
lin ilfracombe_PN = mkPN "Ilfracombe" ; -- status=guess src=geonames
lin ilium_N = mkN "ilium" ; -- UWN
lin ilkeston_PN = mkPN "Ilkeston" ; -- status=guess src=geonames
lin ilkley_PN = mkPN "Ilkley" ; -- status=guess src=geonames
lin ill_A = mkA "mauvais" | mkA "écoeuré" | mkA "malade" ; -- tocheck
lin ill_Adv = mkAdv "mal" ; -- tocheck
lin ill_N = mkN "infirmité" | mkN "mal" | mkN "maladie" | mkN "malaise" ; -- UWN
lin ill_mannered_A = mkA "malappris" ; -- tocheck
lin illegal_A = mkA "illégal" ; -- tocheck
lin illegality_N = mkN "illégalité" feminine ; -- tocheck
lin illegible_A = mkA "illisible" ; -- tocheck
lin illegitimate_A = mkA "illégitime" ; -- tocheck
lin illicit_A = mkA "illicite" ; -- tocheck
lin illiteracy_N = mkN "analphabétisme" ; -- tocheck
lin illiterate_A = mkA "analphabète" | mkA "illettré" ; -- tocheck
lin illiterate_N = mkN "analphabète" | mkN "illettré" ; -- UWN
lin illness_N = mkN "maladie" feminine ; -- tocheck
lin illogical_A = mkA "illogique" ; -- tocheck
lin illuminance_N = mkN "éclairement" | mkN "éclairement_lumineux" ; -- UWN
lin illuminate_V2 = mkV2 (mkV "illuminer") ; -- tocheck
lin illumination_N = mkN "enluminure" | mkN "illumination" feminine ; -- tocheck
lin illusion_N = mkN "illusion" feminine ; -- tocheck
lin illusionist_N = mkN "mage" | mkN "magicien" | mkN "prestidigitateur" | mkN "sorcier" ; -- UWN
lin illusive_A = mkA "illusoire" ; -- UWN
lin illusory_A = mkA "illusoire" ; -- tocheck
lin illustrate_V = mkV "causer" | mkV "distinguer" | mkV "décrire" | mkV "illustrer" | mkV "inclure" | mkV "provoquer" | mkV "reposer" | mkV "sembler" | mkV "éviter" ; -- UWN
lin illustrate_V2 = mkV2 (mkV "illustrer") ; -- tocheck
lin illustrate_VS = mkvVS "causer" | mkvVS "distinguer" | mkvVS "décrire" | mkvVS "illustrer" | mkvVS "inclure" | mkvVS "provoquer" | mkvVS "reposer" | mkvVS "sembler" | mkvVS "éviter" ; -- UWN
lin illustration_N = mkN "illustration" feminine ; -- tocheck
lin illustrator_N = mkN "illustrateur" masculine ; -- tocheck
lin illustrious_A = mkA "illustre" ; -- tocheck
lin ilmenite_N = mkN "ilménite" feminine ; -- tocheck
lin image_N = mkN "image" feminine ; -- tocheck
lin imagery_N = mkN "illustration" | mkN "imagerie" | mkN "imagination" ; -- UWN
lin imaginable_A = mkA "imaginable" | mkA "possible" | mkA "éventuel" ; -- UWN
lin imagination_N = mkN "imagination" feminine ; -- tocheck
lin imaginative_A = mkA "imaginaire" | mkA "imaginatif" ; -- tocheck
lin imagine_V = mkV "contempler" | mkV "envisager" | mkV "imaginer" | mkV "prévoir" ; -- UWN
lin imagine_V2 = mkV2 (mkV "imaginer") ; -- tocheck
lin imagine_VS = mkvVS "contempler" | mkvVS "envisager" | mkvVS "imaginer" | mkvVS "prévoir" ; -- UWN
lin imaging_N = mkN "imagerie" | mkN "tomographie" ; -- UWN
lin imagism_N = mkN "imagisme" ; -- UWN
lin imam_N = mkN "imam" masculine ; -- tocheck
lin imbalance_N = mkN "déséquilibre" masculine ; -- tocheck
lin imbecile_A = mkA "stupide" ; -- UWN
lin imbecile_N = mkN "imbécile" ; -- tocheck
lin imbecility_N = mkN "imbécilité" feminine ; -- tocheck
lin imbrication_N = mkN "rodage" ; -- UWN
lin imbroglio_N = mkN "embrouille" feminine ; -- tocheck
lin imidazole_N = mkN "imidazole" | mkN "imidazoles" ; -- UWN
lin imide_N = mkN "imide" ; -- UWN
lin imitation_N = mkN "imitation" feminine ; -- tocheck
lin imitator_N = mkN "imitateur" masculine ; -- tocheck
lin immaculate_A = mkA "immaculé" ; -- tocheck
lin immanence_N = mkN "immanence" ; -- UWN
lin immanent_A = mkA "subjectif" ; -- UWN
lin immaterial_A = mkA "immatériel" ; -- tocheck
lin immateriality_N = mkN "immatérialité" feminine ; -- tocheck
lin immature_A = mkA "immature" ; -- tocheck
lin immaturity_N = mkN "immaturité" feminine ; -- tocheck
lin immediate_A = mkA "proche" | mkA "immédiat" ; -- tocheck
lin immemorial_A = mkA "immémorial" ; -- UWN
lin immense_A = mkA "immense" ; -- tocheck
lin immensity_N = mkN "immensité" | mkN "largeur" | mkN "énormité" ; -- UWN
lin immerse_V2 = mkV2 (mkV "immerger") ; -- tocheck
lin immersion_N = mkN "immersion" feminine ; -- tocheck
lin immigrant_N = mkN "immigrant" masculine ; -- tocheck
lin immigrate_V = mkV (mkV "immigrer") ; -- tocheck
lin immigration_N = mkN "immigration" feminine ; -- tocheck
lin imminent_A = mkA "imminent" ; -- tocheck
lin immingham_PN = mkPN "Immingham" ; -- status=guess src=geonames
lin immobile_A = mkA "immobile" ; -- tocheck
lin immodesty_N = mkN "exhibitionnisme" ; -- UWN
lin immolate_V2 = mkV2 (mkV "immoler") ; -- tocheck
lin immolation_N = mkN "immolation" feminine ; -- tocheck
lin immoral_A = mkA "immoral" ; -- tocheck
lin immorality_N = mkN "immoralité" feminine ; -- tocheck
lin immortal_A = mkA "immortel" ; -- tocheck
lin immortality_N = mkN "immortalité" feminine ; -- tocheck
lin immune_A = variants {} ; --
lin immunity_N = mkN "immunité" | mkN "résistance" ; -- UWN
lin immunochemistry_N = mkN "immunochimie" feminine ; -- tocheck
lin immunodeficiency_N = mkN "immunodéficience" | mkN "immunodépression" ; -- UWN
lin immunofluorescence_N = mkN "immunofluorescence" ; -- UWN
lin immunohistochemistry_N = mkN "immunohistochimie" ; -- UWN
lin immunologist_N = mkN "immunologiste" ; -- tocheck
lin immunology_N = mkN "immunologie" ; -- tocheck
lin immunosuppressant_N = mkN "immunosuppresseur" | mkN "immunosuppresseurs" ; -- UWN
lin immunosuppression_N = mkN "immuno-inhibition" | mkN "immunosuppression" ; -- UWN
lin imp_N = mkN "diablotin" masculine ; -- tocheck
lin impact_N = mkN "impact" masculine ; -- tocheck
lin impair_V2 = mkV2 (mkV "détériorer") ; -- tocheck
lin impairment_N = mkN "handicap" masculine ; -- tocheck
lin impala_N = mkN "impala" masculine ; -- tocheck
lin impale_V2 = mkV2 (mkV "empaler") ; -- tocheck
lin impalement_N = mkN "empalement" masculine ; -- tocheck
lin impart_V2 = mkV2 (mkV "donner") ; -- tocheck
lin impartial_A = mkA "impartial" ; -- tocheck
lin impartiality_N = mkN "impartialité" feminine ; -- tocheck
lin impasse_N = mkN "impasse" feminine ; -- tocheck
lin impassioned_A = mkA "fervent" | mkA "torride" ; -- UWN
lin impassive_A = mkA "impassible" ; -- tocheck
lin impatience_N = mkN "impatience" feminine ; -- tocheck
lin impatient_A = mkA "impatient" ; -- tocheck
lin impeachment_N = mkN "impeachment" masculine ; -- tocheck
lin impeccable_A = mkA "impeccable" ; -- tocheck
lin impeccant_A = mkA "innocent" ; -- UWN
lin impecunious_A = mkA "impécunieux" ; -- tocheck
lin impede_V2 = mkV2 (mkV "entraver") ; -- tocheck
lin impediment_N = mkN "empêchement" masculine ; -- tocheck
lin impel_V2 = mkV2 (mkV "motiver") | mkV2 (mkV "propulser") ; -- tocheck
lin impenetrable_A = mkA "impénétrable" ; -- tocheck
lin imperative_A = mkA "impératif" ; -- tocheck
lin imperative_N = mkN "impératif" masculine ; -- tocheck
lin imperceptible_A = mkA "imperceptible" ; -- tocheck
lin imperfect_N = mkN "imparfait" masculine ; -- tocheck
lin imperfective_N = mkN "imparfait" | mkN "imperfectif" ; -- UWN
lin imperial_A = mkA "impérial" | mkA "royal" ; -- tocheck
lin imperial_N = mkN "impérial" ; -- UWN
lin imperialism_N = mkN "impérialisme" masculine ; -- tocheck
lin imperil_V2 = mkV2 (mkV "menacer") | mkV2 (mkV "risquer") ; -- tocheck
lin imperious_A = mkA "altier" | mkA "dédaigneux" | mkA "hautain" | mkA "orgueilleux" ; -- UWN
lin impermanence_N = mkN "Anitya" | mkN "anitya" | mkN "finitude" | mkN "impermanence" ; -- UWN
lin impermeability_N = mkN "imperméabilité" feminine ; -- tocheck
lin impermeable_A = mkA "imperméable" ; -- tocheck
lin impersonal_A = mkA "impersonnel" ; -- tocheck
lin impertinent_A = mkA "frais" | mkA "impertinent" | mkA "impudent" | mkA "insolent" ; -- UWN
lin impervious_A = mkA "intouchable" | mkA "immunisé" | mkA "impénétrable" ; -- tocheck
lin impetigo_N = mkN "impétigo" ; -- UWN
lin impetuosity_N = mkN "impétuosité" ; -- UWN
lin impetuous_A = mkA "impétueux" | mkA "impulsif" ; -- tocheck
lin impetuousness_N = mkN "impétuosité" ; -- UWN
lin impetus_N = mkN "impulsion" | mkN "incitation" ; -- UWN
lin impiety_N = mkN "impiété" feminine ; -- tocheck
lin impinge_V = mkV (mkV "toucher") | mkV (mkV "influencer") ; -- tocheck
lin impious_A = mkA "impie" ; -- tocheck
lin impish_A = mkA "espiègle" ; -- tocheck
lin implacable_A = mkA "implacable" ; -- UWN
lin implant_N = mkN "implant" masculine ; -- tocheck
lin implant_V2 = mkV2 (mkV "implanter") ; -- tocheck
lin implantation_N = mkN "implantation" feminine ; -- tocheck
lin implement_N = mkN "instrument" masculine ; -- tocheck
lin implement_V2 = mkV2 (mkV "appliquer") ; -- tocheck
lin implementation_N = mkN "mise_en_œuvre" ; -- UWN
lin implicate_V2 = mkV2 (mkV "impliquer") ; -- tocheck
lin implication_N = mkN "implication" ; -- tocheck
lin implicative_A = mkA "suggestif" ; -- UWN
lin implicit_A = mkA "inhérent" | mkA "implicite" | mkA "absolu" ; -- tocheck
lin implosion_N = mkN "implosion" feminine ; -- tocheck
lin imply_V = variants {} ; -- mkV2 (mkV "impliquer") | mkV2 (mkV "insinuer") ; -- tocheck
lin imply_V2 = mkV2 (mkV "impliquer") | mkV2 (mkV "insinuer") ; -- tocheck
lin imply_VS = variants {} ; -- mkV2 (mkV "impliquer") | mkV2 (mkV "insinuer") ; -- tocheck
lin impolite_A = mkA "impoli" ; -- tocheck
lin impoliteness_N = mkN "impolitesse" feminine ; -- tocheck
lin import_N = mkN "importation" | mkN "importer" ; -- UWN
lin import_V2 = mkV2 (mkV "importer") ; -- tocheck
lin importance_N = mkN "importance" feminine ; -- tocheck
lin important_A = L.important_A ;
lin importerFem_N = mkN "importatrice" feminine ; -- tocheck
lin importerMasc_N = mkN "importateur" masculine ; -- tocheck
lin importing_N = mkN "importation" ; -- UWN
lin importunity_N = mkN "urgence" ; -- UWN
lin impose_V = variants {} ; -- mkV2 (mkV "imposer") | mkV2 (reflV (mkV "imposer")) ; -- tocheck
lin impose_V2 = mkV2 (mkV "imposer") | mkV2 (reflV (mkV "imposer")) ; -- tocheck
lin impossibility_N = mkN "impossibilité" feminine ; -- tocheck
lin impossible_A = mkA "impossible" | mkA "insupportable" ; -- tocheck
lin impossible_N = mkN "impossible" ; -- UWN
lin imposter_N = mkN "Imposteur" | mkN "imposteur" | mkN "impostrice" | mkN "tromperie" ; -- UWN
lin impostor_N = mkN "imposteur" masculine ; -- tocheck
lin impotence_N = mkN "impuissance" ; -- tocheck
lin impotent_A = mkA "impuissant" ; -- tocheck
lin impound_V2 = mkV2 (mkV "confisquer") ; -- tocheck
lin impoverish_V2 = mkV2 (mkV "appauvrir") ; -- tocheck
lin impoverishment_N = mkN "paupérisation" ; -- UWN
lin impracticable_A = mkA "impraticable" ; -- tocheck
lin imprecation_N = mkN "imprécation" | mkN "exécrer" ; -- tocheck
lin impreciseness_N = mkN "imprécision" ; -- UWN
lin imprecision_N = mkN "imprécision" feminine ; -- tocheck
lin impregnable_A = mkA "imprenable" | mkA "inexpugnable" ; -- UWN
lin impregnate_V2 = mkV2 (mkV "féconder") | mkV2 (mkV "imbiber") ; -- tocheck
lin impregnation_N = mkN "fécondation" | mkN "imprégnation" ; -- UWN
lin impresario_N = mkN "imprésario" masculine ; -- tocheck
lin impress_V = variants {} ; -- mkV2 (mkV "impressionner") ; -- tocheck
lin impress_V2 = mkV2 (mkV "impressionner") ; -- tocheck
lin impression_N = mkN "impression" feminine ; -- tocheck
lin impressionism_N = mkN "impressionnisme" masculine ; -- tocheck
lin impressionist_A = mkA "impressionniste" ; -- UWN
lin impressionist_N = mkN "impressionniste" ; -- tocheck
lin impressive_A = mkA "impressionnant" ; -- tocheck
lin imprimatur_N = mkN "imprimatur" masculine ; -- tocheck
lin imprint_N = mkN "empreinte" | mkN "ours" masculine ; -- tocheck
lin imprison_V2 = mkV2 (mkV "emprisonner") ; -- tocheck
lin imprisonment_N = mkN "emprisonnement" masculine ; -- tocheck
lin improbable_A = mkA "improbable" ; -- tocheck
lin impromptu_A = mkA "impromptu" ; -- tocheck
lin impromptu_Adv = mkAdv "impromptu" | mkAdv "spontanément" ; -- UWN
lin impromptu_N = mkN "impromptu" ; -- UWN
lin improper_A = mkA "impropre" ; -- tocheck
lin impropriety_N = mkN "liberté" ; -- UWN
lin improvable_A = mkA "améliorable" ; -- UWN
lin improve_V = mkV "amender" | mkV "améliorer" | mkV "réformer" ; -- UWN
lin improve_V2 = mkV2 (mkV "améliorer") ; -- tocheck
lin improved_A = variants {} ; --
lin improvement_N = mkN "amélioration" feminine ; -- tocheck
lin improver_N = mkN "addition" | mkN "adjonction" | mkN "ajout" ; -- UWN
lin improvisation_N = mkN "improvisation" feminine ; -- tocheck
lin improvise_V2 = mkV2 (mkV "improviser") ; -- tocheck
lin imprudent_A = mkA "imprudent" ; -- UWN
lin impudence_N = mkN "impudence" feminine ; -- tocheck
lin impudent_A = mkA "impudent" ; -- tocheck
lin impugn_V2 = mkV2 (mkV "attaquer") | mkV2 (mkV "contester") | mkV2 (mkV I.contredire_V2) ; -- tocheck
lin impulse_N = mkN "impulsion" ; -- tocheck
lin impulsion_N = mkN "impulsion" | mkN "incitation" ; -- UWN
lin impulsive_A = mkA "impulsif" ; -- tocheck
lin impulsiveness_N = mkN "impulsivité" feminine ; -- tocheck
lin impunity_N = mkN "impunité" feminine ; -- tocheck
lin impure_A = mkA "impur" ; -- tocheck
lin impurity_N = mkN "impureté" feminine ; -- tocheck
lin imputation_N = mkN "imputation" feminine ; -- tocheck
lin in8front_Prep = S.in8front_Prep ;
lin in_1_Adv = mkAdv "dedans" ;
lin in_2_Adv = mkAdv "dedans" ;
lin in_A = mkA "intérieur" ; -- UWN
lin in_Adv = mkAdv "dedans" ;
lin in_Prep = mkPrep "dans" | mkPrep "en" | complDat ;
lin in_situ_Adv = mkAdv "in_situ" ; -- UWN
lin inability_N = mkN "incapacité" feminine ; -- tocheck
lin inaccessibility_N = mkN "inaccessibilité" ; -- UWN
lin inaccessible_A = mkA "inaccessible" ; -- UWN
lin inaccuracy_N = mkN "erreur" ; -- tocheck
lin inaccurate_A = mkA "imprécis" ; -- tocheck
lin inaction_N = mkN "inaction" | mkN "inactivité" ; -- UWN
lin inactive_A = mkA "inactif" ; -- tocheck
lin inactiveness_N = mkN "inactivité" | mkN "inertie" ; -- UWN
lin inadequate_A = mkA "inadéquat" ; -- tocheck
lin inadmissible_A = mkA "inadmissible" ; -- tocheck
lin inadvertent_A = mkA "involontaire" ; -- tocheck
lin inaesthetic_A = mkA "inesthétique" ; -- UWN
lin inane_A = mkA "inepte" ; -- tocheck
lin inanimate_A = mkA "inanimé" ; -- UWN
lin inanimateness_N = mkN "abattement" ; -- UWN
lin inanity_N = mkN "imprudence" | mkN "inanité" ; -- UWN
lin inapplicability_N = mkN "inapplicabilité" feminine ; -- tocheck
lin inapplicable_A = mkA "inapplicable" ; -- UWN
lin inappropriate_A = mkA "inapproprié" ; -- tocheck
lin inapt_A = mkA "encombrant" | mkA "maladroit" ; -- UWN
lin inaptitude_N = mkN "inaptitude" ; -- UWN
lin inarticulate_A = mkA "inarticulé" ; -- UWN
lin inattention_N = mkN "inattention" ; -- UWN
lin inaudible_A = mkA "inaudible" ; -- tocheck
lin inauguration_N = mkN "investiture" feminine ; -- tocheck
lin inauspicious_A = mkA "infortuné" ; -- UWN
lin inauthentic_A = mkA "apocryphe" | mkA "inauthentique" ; -- UWN
lin inborn_A = mkA "inné" ; -- tocheck
lin inbred_A = mkA "consanguin" ; -- tocheck
lin inbreeding_N = mkN "consanguinité" ; -- UWN
lin incalculable_A = mkA "incalculable" ; -- UWN
lin incandescent_A = mkA "incandescent" | mkA "éblouissant" | mkA "resplendissant" ; -- tocheck
lin incantation_N = mkN "incantation" feminine ; -- tocheck
lin incapable_A = mkA "incapable" ; -- tocheck
lin incapacity_N = mkN "incapacité" feminine ; -- tocheck
lin incarcerate_V2 = mkV2 (mkV "incarcérer") ; -- tocheck
lin incarceration_N = mkN "incarcération" feminine ; -- tocheck
lin incarnation_N = mkN "incarnation" feminine ; -- tocheck
lin incendiary_A = mkA "incendiaire" ; -- tocheck
lin incendiary_N = mkN "incendiaire" ; -- UWN
lin incense_N = mkN "encens" masculine ; -- tocheck
lin incentive_N = mkN "récompense" feminine | mkN "intérêt" masculine ; -- tocheck
lin inception_N = mkN "commencement" masculine ; -- tocheck
lin incertitude_N = mkN "doute" | mkN "incertitude" ; -- UWN
lin incest_N = mkN "inceste" masculine ; -- tocheck
lin incestuous_A = mkA "incestueux" ; -- tocheck
lin inch_N = mkN "pouce" masculine | mkN "poil" masculine ; -- tocheck
lin inchoate_A = mkA "embryonnaire" ; -- tocheck
lin inchoative_A = mkA "inchoatif" ; -- UWN
lin incidence_N = mkN "incidence" ; -- UWN
lin incident_A = mkA "incident" ; -- UWN
lin incident_N = mkN "incident" masculine ; -- tocheck
lin incidental_A = mkA "incident" ; -- UWN
lin incipient_A = mkA "incipient" ; -- tocheck
lin incision_N = mkN "incision" feminine ; -- tocheck
lin incisive_A = mkA "incisif" ; -- tocheck
lin incisor_N = mkN "incisive" feminine ; -- tocheck
lin incitation_N = mkN "incitation" ; -- tocheck
lin incite_V2 = mkV2 (mkV "inciter") ; -- tocheck
lin incivility_N = mkN "incivilité" ; -- UWN
lin inclemency_N = mkN "austérité" | mkN "gravité" | mkN "pénibilité" | mkN "rigueur" | mkN "sévérité" ; -- UWN
lin inclination_N = mkN "inclinaison" feminine ; -- tocheck
lin incline_N = mkN "rampe" ; -- UWN
lin incline_V = mkV "tendre" ; -- UWN
lin inclined_A = variants {} ; --
lin include_V = mkV I.inclure_V2 ;
lin include_V2 = mkV2 (mkV I.inclure_V2) ;
lin including_Prep = mkPrep "inclus" ; ---- postposition, agreement
lin inclusion_N = mkN "inclusion" feminine ; -- tocheck
lin inclusive_A = mkA "inclusif" ; -- UWN
lin incognito_Adv = mkAdv "incognito" ; -- UWN
lin incoherence_N = mkN "incohérence" ; -- tocheck
lin incoherent_A = mkA "incohérent" ; -- tocheck
lin incombustible_A = mkA "incombustible" ; -- UWN
lin income_N = mkN "revenu" masculine ; -- tocheck
lin incoming_A = mkA "entrant" ; -- tocheck
lin incommensurable_A = mkA "incommensurable" ; -- UWN
lin incomparable_A = mkA "incomparable" ; -- tocheck
lin incompatible_A = mkA "incompatible" ; -- tocheck
lin incompetence_N = mkN "incompétence" ; -- tocheck
lin incompetent_N = mkN "incompétent" ; -- UWN
lin incomplete_A = mkA "incomplet" ; -- tocheck
lin incompleteness_N = mkN "incomplétude" feminine ; -- tocheck
lin incomprehensible_A = mkA "incompréhensible" ; -- tocheck
lin incomputable_A = mkA "inestimable" ; -- UWN
lin inconceivable_A = mkA "inconcevable" ; -- tocheck
lin incongruity_N = mkN "incongruité" ; -- UWN
lin incongruous_A = mkA "incongru" ; -- tocheck
lin inconsistent_A = mkA "incohérent" ; -- tocheck
lin inconsolable_A = mkA "inconsolable" ; -- tocheck
lin inconspicuous_A = mkA "invisible" ; -- UWN
lin inconstancy_N = mkN "inconstance" feminine ; -- tocheck
lin inconstant_A = mkA "volubile" ; -- tocheck
lin incontinence_N = mkN "incontinence" feminine ; -- tocheck
lin incontinent_A = mkA "incontinent" ; -- UWN
lin incontrovertible_A = mkA "irréfutable" ; -- tocheck
lin inconvenience_N = mkN "dérangement" masculine ; -- tocheck
lin inconvenient_A = mkA "inconvenant" ; -- tocheck
lin incorporate_A = mkA "incorporer" | mkA "intégré" ; -- UWN
lin incorporate_V2 = mkV2 (mkV "incorporer") ; -- tocheck
lin incorporeal_A = mkA "incorporel" ; -- UWN
lin incorrect_A = variants {} ;
lin incorrigible_A = mkA "incorrigible" ; -- tocheck
lin incorruptibility_N = mkN "incorruptibilité" ; -- UWN
lin increase_N = mkN "augmentation" feminine ; -- tocheck
lin increase_V = reflV (mkV "augmenter") ;
lin increase_V2 = mkV2 (mkV "augmenter") ;
lin increased_A = variants {} ; --
lin increasing_A = variants {} ; --
lin increasingly_Adv = variants {} ; --
lin incredible_A = mkA "incroyable" ; -- tocheck
lin incredulity_N = mkN "incrédulité" ; -- tocheck
lin incubate_V = mkV "couver" | mkV "couvrir" | mkV "incuber" ; -- UWN
lin incubate_V2 = mkV2 (mkV "incuber") ; -- tocheck
lin incubation_N = mkN "incubation" feminine ; -- tocheck
lin incubator_N = mkN "incubateur" masculine | mkN "couveuse" feminine ; -- tocheck
lin incubus_N = mkN "cauchemar" masculine | mkN "incube" masculine | mkN "fardeau" ; -- tocheck
lin inculcate_V2 = mkV2 (mkV "inculquer") ; -- tocheck
lin inculcation_N = mkN "inculcation" ; -- UWN
lin incumbent_N = mkN "administrateur" masculine ; -- tocheck
lin incur_V2 = mkV2 (mkV "impliquer") ; -- tocheck
lin incurable_A = mkA "incurable" ; -- tocheck
lin incurable_N = mkN "incurable" ; -- UWN
lin incursion_N = mkN "incursion" feminine ; -- tocheck
lin incursive_A = mkA "envahissant" | mkA "invasif" ; -- UWN
lin incus_N = mkN "incus" masculine ; -- tocheck
lin indebted_A = mkA "endetté" ; -- tocheck
lin indebtedness_N = mkN "engagement" | mkN "obligation" ; -- UWN
lin indecent_A = mkA "indécent" ; -- tocheck
lin indecipherable_A = mkA "indéchiffrable" ; -- tocheck
lin indecision_N = mkN "indécision" feminine ; -- tocheck
lin indecisive_A = mkA "incertain" | mkA "indécis" ; -- tocheck
lin indecorum_N = mkN "liberté" ; -- UWN
lin indeed_AdV = mkAdV "certes" | mkAdV "vraiment" ; -- UWN
lin indeed_Adv = mkAdv "effectivement" ;
lin indefatigable_A = mkA "infatigable" ; -- tocheck
lin indefinable_A = mkA "indéfinissable" ; -- tocheck
lin indefinite_A = variants {} ;
lin indehiscent_A = mkA "indéhiscent" ; -- tocheck
lin indelible_A = mkA "indélébile" ; -- tocheck
lin indemnification_N = mkN "dédommagement" masculine ; -- tocheck
lin indemnity_N = mkN "Dommages_et_intérêts" | mkN "dommages_et_intérêts" | mkN "restitution" ; -- UWN
lin indentation_N = mkN "indentation" feminine ; -- tocheck
lin independence_N = mkN "indépendance" feminine ; -- tocheck
lin independent_1_A = mkA "indépendant" ; -- UWN
lin independent_2_A = variants {} ; --
lin independent_A = mkA "indépendant" ; -- tocheck
lin indescribable_A = mkA "indescriptible" ; -- tocheck
lin indestructibility_N = mkN "indestructibilité" ; -- UWN
lin indestructible_A = mkA "indestructible" ; -- tocheck
lin indeterminate_A = mkA "indéterminé" ; -- tocheck
lin index_N = mkN "index" masculine ; -- tocheck
lin index_V2 = mkV2 (mkV "indexer") ; -- tocheck
lin indexation_N = mkN "indexation" ; -- UWN
lin indexing_N = mkN "indexation" ; -- UWN
lin india_PN = mkPN "Inde" ; -- status=guess src=geonames
lin indianFem_1_N = mkN "indienne" ;
lin indianFem_2_N = mkN "indienne" ;
lin indianMasc_1_N = mkN "indien" ;
lin indianMasc_2_N = mkN "indien" ;
lin indian_A = mkA "indien" ;
lin indiana_PN = mkPN "Indiana" ; -- status=guess src=geonames
lin indianapolis_PN = mkPN "Indianapolis" ; -- status=guess src=geonames
lin indicate_V2 = mkV2 (mkV "indiquer") ; -- tocheck
lin indicate_VS = variants {} ; -- mkV2 (mkV "indiquer") ; -- tocheck
lin indication_N = mkN "indication" feminine ; -- tocheck
lin indicative_A = mkA "indicatif" ; -- tocheck
lin indicator_N = mkN "indicateur" masculine | mkN "aiguille" feminine | mkN "clignotant" masculine ; -- tocheck
lin indict_V = mkV "accuser" | mkV "inculper" ; -- UWN
lin indict_V2 = mkV2 (mkV "accuser") | mkV2 (mkV "inculper") ; -- tocheck
lin indictable_A = mkA "facturable" ; -- UWN
lin indiction_N = mkN "indiction" ; -- UWN
lin indictment_N = mkN "inculpation" feminine ; -- tocheck
lin indifference_N = mkN "indifférence" feminine ; -- tocheck
lin indifferent_A = mkA "indifférent" ; -- tocheck
lin indigence_N = mkN "besoin" | mkN "manque" | mkN "nécessité" | mkN "paupérisme" | mkN "requérir" ; -- UWN
lin indigenous_A = mkA "inné" | mkA "indigène" ; -- tocheck
lin indigenousness_N = mkN "endémisme" ; -- UWN
lin indigestible_A = mkA "indigeste" ; -- UWN
lin indigestion_N = mkN "Dyspepsie" | mkN "dyspepsie" | mkN "indigestion" | mkN "malaise_épigastrique" | mkN "tractus_gastro-intestinal" ; -- UWN
lin indignant_A = mkA "indigné" ; -- tocheck
lin indignation_N = mkN "indignation" feminine ; -- tocheck
lin indignity_N = mkN "indignité" ; -- UWN
lin indigo_A = mkA "indigo" ; -- tocheck
lin indigo_N = mkN "indigo" masculine ; -- tocheck
lin indirect_A = variants {} ; --
lin indiscreet_A = mkA "indiscret" ; -- tocheck
lin indiscretion_N = mkN "indiscrétion" feminine ; -- tocheck
lin indispensable_A = mkA "indispensable" ; -- tocheck
lin indisposed_A = mkA "antipathique" ; -- UWN
lin indisposition_N = mkN "hésitation" | mkN "réticence" ; -- UWN
lin indisputability_N = mkN "incontestabilité" ; -- UWN
lin indisputable_A = mkA "indiscutable" ; -- tocheck
lin indissoluble_A = mkA "insoluble" ; -- UWN
lin indistinct_A = mkA "indistinct" | mkA "touffu" ; -- UWN
lin indistinctness_N = mkN "flou" ; -- UWN
lin indistinguishable_A = mkA "indistinguable" ; -- tocheck
lin indium_N = mkN "indium" masculine ; -- tocheck
lin individual_A = mkA "individuel" ; -- tocheck
lin individual_N = mkN "individu" masculine ; -- tocheck
lin individualism_N = mkN "individualisme" masculine ; -- tocheck
lin indivisible_A = mkA "indivisible" ; -- UWN
lin indoctrinate_V2 = mkV2 (mkV "endoctriner") ; -- tocheck
lin indoctrination_N = mkN "endoctrinement" masculine ; -- tocheck
lin indolence_N = mkN "abattement" | mkN "indolence" | mkN "oisiveté" | mkN "paresse" ; -- UWN
lin indolent_A = mkA "indolent" ; -- tocheck
lin indomitability_N = mkN "invincibilité" ; -- UWN
lin indomitable_A = mkA "indomptable" ; -- tocheck
lin indonesia_PN = mkPN "Indes orientales néerlandaises" ; -- status=guess src=geonames
lin indoor_A = mkA "intérieur" ; -- tocheck
lin indoors_Adv = mkAdv "dedans" ; -- UWN
lin indore_PN = mkPN "Indore" ; -- status=guess src=geonames
lin induce_V2 = variants {} ; --
lin inducer_N = mkN "persuader" ; -- UWN
lin induct_V2 = mkV2 (mkV "initier") | mkV2 (mkV "incorporer") | mkV2 (mkV "introniser") | mkV2 (mkV "présenter") ; -- tocheck
lin inductee_N = mkN "appelé" ; -- UWN
lin induction_N = mkN "amorçage" | mkN "induction" | mkN "initiation" ; -- UWN
lin inductive_A = mkA "inductif" ; -- tocheck
lin indulge_V = variants {} ; -- mkV2 (mkV "céder") | mkV2 (mkV "dorloter") ; -- tocheck
lin indulge_V2 = mkV2 (mkV "céder") | mkV2 (mkV "dorloter") ; -- tocheck
lin indulgence_N = mkN "indulgence" ; -- tocheck
lin industrial_A = mkA "industriel" ; -- tocheck
lin industrialism_N = mkN "industrialisme" ; -- UWN
lin industrialist_N = mkN "industriel" masculine ; -- tocheck
lin industrialization_N = mkN "industrialisation" feminine ; -- tocheck
lin industrialize_V2 = mkV2 (mkV "industrialiser") ; -- tocheck
lin industrious_A = mkA "industrieux" ; -- tocheck
lin industry_N = L.industry_N ;
lin indweller_N = mkN "habitant" | mkN "habitante" ; -- UWN
lin inebriate_V2 = mkV2 (mkV "enivrer") ; -- tocheck
lin inebriation_N = mkN "intoxication" | mkN "ivresse" | mkN "ébriété" ; -- UWN
lin inebriety_N = mkN "intoxication" | mkN "ivresse" | mkN "ébriété" ; -- UWN
lin ineffable_A = mkA "ineffable" ; -- tocheck
lin inefficiency_N = mkN "inefficacité" feminine ; -- tocheck
lin inefficient_A = mkA "inefficace" ; -- tocheck
lin inelasticity_N = mkN "inélasticité" feminine ; -- tocheck
lin ineligible_A = mkA "inéligible" ; -- tocheck
lin ineluctable_A = mkA "inéluctable" ; -- tocheck
lin inept_A = mkA "inepte" ; -- tocheck
lin inequality_N = mkN "inéquation" feminine | mkN "inégalité" feminine ; -- tocheck
lin inequitable_A = mkA "injuste" ; -- UWN
lin inertia_N = mkN "inertie" feminine ; -- tocheck
lin inertial_A = mkA "inertiel" ; -- tocheck
lin inertness_N = mkN "inertie" ; -- UWN
lin inescapable_A = mkA "inévitable" ; -- tocheck
lin inestimable_A = mkA "inestimable" ; -- UWN
lin inevitable_A = mkA "inévitable" ; -- tocheck
lin inevitable_N = mkN "inéluctable" ; -- UWN
lin inexhaustible_A = mkA "inépuisable" ; -- tocheck
lin inexperience_N = mkN "inexpérience" ; -- UWN
lin inexperienced_A = mkA "inexpérimenté" ; -- tocheck
lin inexpert_A = mkA "amateur" | mkA "amateuriste" ; -- UWN
lin inexplicable_A = mkA "inexplicable" ; -- tocheck
lin inexpressible_A = mkA "inexprimable" ; -- UWN
lin inextricable_A = mkA "inextricable" ; -- tocheck
lin infallibility_N = mkN "infaillibilité" feminine ; -- tocheck
lin infallible_A = mkA "infaillible" ; -- tocheck
lin infamous_A = mkA "infâme" ; -- tocheck
lin infamy_N = mkN "infamie" ; -- tocheck
lin infant_N = mkN "nourrisson" masculine ; -- tocheck
lin infanticide_N = mkN "infanticide" masculine ; -- tocheck
lin infantile_A = mkA "enfantin" ; -- UWN
lin infantry_N = mkN "infanterie" ; -- tocheck
lin infantryman_N = mkN "fantassin" masculine ; -- tocheck
lin infarct_N = mkN "infarctus" ; -- tocheck
lin infatuation_N = mkN "béguin" | mkN "engouement" masculine ; -- tocheck
lin infeasibility_N = mkN "infaisabilité" ; -- UWN
lin infect_V = mkV "infecter" ; -- UWN
lin infect_V2 = mkV2 (mkV "infecter") ; -- tocheck
lin infection_N = mkN "infection" feminine ; -- tocheck
lin infective_A = mkA "pathogène" ; -- UWN
lin infelicitous_A = mkA "malheureux" | mkA "infortuné" ; -- tocheck
lin infelicity_N = mkN "infélicité" ; -- UWN
lin infer_V2 = mkV2 (mkV I.déduire_V2) ; -- tocheck
lin inference_N = mkN "inférence" ; -- tocheck
lin inferior_N = mkN "inférieur" ; -- tocheck
lin inferiority_N = mkN "infériorité" feminine ; -- tocheck
lin infernal_A = mkA "infernal" ; -- tocheck
lin infernal_N = mkN "infernal" ; -- UWN
lin inferno_N = mkN "enfer" masculine | mkN "incendie" masculine ; -- tocheck
lin infertile_A = mkA "stérile" ; -- tocheck
lin infertility_N = mkN "infertilité" feminine ; -- tocheck
lin infestation_N = mkN "infestation" | mkN "peste" ; -- UWN
lin infidel_N = mkN "infidèle" ; -- tocheck
lin infidelity_N = mkN "infidélité" feminine ; -- tocheck
lin infield_N = mkN "diamant" ; -- UWN
lin infielder_N = mkN "joueur_de_champ_intérieur" | mkN "joueurs_de_champ_intérieur" ; -- UWN
lin infiltrate_V = mkV "infiltrer" | mkV "traverser" ; -- UWN
lin infiltration_N = mkN "infiltration" feminine ; -- tocheck
lin infinite_A = mkA "infini" ; -- tocheck
lin infinitesimal_N = mkN "infinitésimal" ; -- tocheck
lin infinitive_N = mkN "infinitif" masculine ; -- tocheck
lin infinity_N = mkN "infini" masculine | mkN "infinité" feminine ; -- tocheck
lin infirm_A = mkA "infirme" ; -- tocheck
lin infirmary_N = mkN "infirmerie" feminine ; -- tocheck
lin infirmity_N = mkN "infirmité" ; -- UWN
lin infix_N = mkN "infixe" masculine ; -- tocheck
lin inflammable_A = mkA "inflammable" ; -- tocheck
lin inflammation_N = mkN "inflammation" feminine ; -- tocheck
lin inflammatory_A = mkA "séditieux" ; -- UWN
lin inflatable_A = mkA "gonflable" ; -- tocheck
lin inflate_V2 = mkV2 (mkV "gonfler") ; -- tocheck
lin inflation_N = mkN "inflation" feminine ; -- tocheck
lin inflationary_A = mkA "inflationniste" ; -- UWN
lin inflection_N = mkN "flexion" feminine | mkN "inflexion" ; -- tocheck
lin inflexibility_N = mkN "inflexibilité" feminine ; -- tocheck
lin inflexible_A = mkA "inflexible" ; -- tocheck
lin inflexion_N = mkN "inflexion" ; -- UWN
lin inflict_V2 = mkV2 (mkV "infliger") ; -- tocheck
lin inflorescence_N = mkN "inflorescence" feminine ; -- tocheck
lin inflow_N = mkN "afflux" masculine ; -- tocheck
lin influence_N = mkN "influence" ; -- tocheck
lin influence_V2 = mkV2 (mkV "influencer") ; -- tocheck
lin influential_A = mkA "influent" ; -- tocheck
lin influenza_N = mkN "grippe" feminine ; -- tocheck
lin influx_N = mkN "influx" masculine ; -- tocheck
lin info_N = mkN "info" | mkN "information" | mkN "renseignement" ; -- UWN
lin infomercial_N = mkN "publireportage" ; -- UWN
lin inform_V = mkV "informer" ; -- UWN
lin inform_V2 = mkV2 (mkV "dénoncer") | mkV2 (mkV "informer") ; -- tocheck
lin informal_A = mkA "informel" ; -- tocheck
lin informant_N = mkN "informateur" masculine ; -- tocheck
lin information_N = mkN "information" | mkN "renseignement" masculine ;
lin informational_A = mkA "informationnel" ; -- tocheck
lin informative_A = mkA "instructif" ; -- tocheck
lin infra_red_A = mkA "infrarouge" ; -- tocheck
lin infrared_N = mkN "infrarouge" ; -- tocheck
lin infrasonic_A = mkA "infrasonore" ; -- UWN
lin infrastructure_N = mkN "infrastructure" feminine ; -- tocheck
lin infringe_V2 = mkV2 (mkV I.enfreindre_V2) ; -- tocheck
lin infringement_N = mkN "infraction" feminine ; -- tocheck
lin infuse_V2 = mkV2 (mkV "infuser") ; -- tocheck
lin inga_N = mkN "inga" | mkN "pois_doux" ; -- UWN
lin ingatestone_PN = mkPN "Ingatestone" ; -- status=guess src=geonames
lin ingathering_N = mkN "appel" | mkN "collection" | mkN "sollicitation" ; -- UWN
lin ingenious_A = mkA "ingénieux" ; -- tocheck
lin ingenuity_N = mkN "ingéniosité" feminine ; -- tocheck
lin ingest_V2 = mkV2 (mkV "ingérer") ; -- tocheck
lin ingot_N = mkN "lingot" masculine ; -- tocheck
lin ingratiation_N = mkN "insinuation" ; -- UWN
lin ingratitude_N = mkN "ingratitude" feminine ; -- tocheck
lin ingredient_N = mkN "ingrédient" masculine ; -- tocheck
lin ingress_N = mkN "entrée" ; -- tocheck
lin inguinal_A = mkA "inguinal" ; -- tocheck
lin inhabit_V2 = mkV2 (mkV "habiter") ; -- tocheck
lin inhabitable_A = mkA "habitable" ; -- tocheck
lin inhabitant_N = mkN "habitant" masculine ; -- tocheck
lin inhalant_N = mkN "inhalation" ; -- UWN
lin inhalation_N = mkN "inhalation" feminine ; -- tocheck
lin inhale_V2 = mkV2 (mkV "inspirer") | mkV2 (mkV "aspirer") ; -- tocheck
lin inhaler_N = mkN "inhalateur" masculine ; -- tocheck
lin inherent_A = mkA "intrinsèque" ; -- tocheck
lin inherit_V = variants {} ; -- mkV2 (mkV "hériter") ; -- tocheck
lin inherit_V2 = mkV2 (mkV "hériter") ; -- tocheck
lin inheritance_N = variants {} ; --
lin inheritorFem_N = variants {} ; ---- sense to be split
lin inheritorMasc_N = mkN "héritier" | mkN "héritière" ; -- UWN
lin inhibit_V2 = mkV2 (mkV "inhiber") ; -- tocheck
lin inhibition_N = mkN "inhibition" feminine ; -- tocheck
lin inhibitor_N = mkN "inhibiteur" masculine ; -- tocheck
lin inhibitory_A = mkA "inhibiteur" ; -- tocheck
lin inhospitable_A = mkA "inhospitalier" ; -- tocheck
lin inhospitality_N = mkN "inhospitalité" ; -- UWN
lin inhuman_A = mkA "inhumain" ; -- tocheck
lin inhumane_A = mkA "inhumain" ; -- tocheck
lin initial_A = mkA "initial" ; -- tocheck
lin initial_N = mkN "lettrine" feminine | mkN "initiale" feminine ; -- tocheck
lin initial_V2 = mkV2 (mkV "parapher") ; -- tocheck
lin initiate_N = mkN "initié" ; -- tocheck
lin initiate_V2 = variants {} ; --
lin initiation_N = mkN "initiation" feminine ; -- tocheck
lin initiative_N = mkN "initiative" feminine ; -- tocheck
lin inject_V2 = mkV2 (mkV "injecter") ; -- tocheck
lin injectable_A = mkA "injectable" ; -- tocheck
lin injection_N = mkN "injection" feminine ; -- tocheck
lin injector_N = mkN "injecteur" ; -- UWN
lin injudiciousness_N = mkN "indiscrétion" ; -- UWN
lin injunction_N = mkN "injonction" feminine ; -- tocheck
lin injure_V2 = mkV2 (mkV "blesser") ; -- tocheck
lin injured_A = variants {} ; --
lin injurious_A = mkA "délétère" | mkA "injurieux" ; -- UWN
lin injury_N = mkN "blessure" feminine ; -- tocheck
lin injustice_N = mkN "injustice" feminine ; -- tocheck
lin ink_N = mkN "encre" feminine ; -- tocheck
lin inkling_N = mkN "soupçon" masculine ; -- tocheck
lin inkwell_N = mkN "encrier" masculine ; -- tocheck
lin inland_A = variants {} ; --
lin inlay_N = mkN "incrustation" feminine ; -- tocheck
lin inlet_N = mkN "crique" feminine ; -- tocheck
lin inmate_N = mkN "détenu" masculine | mkN "résident" masculine ; -- tocheck
lin inn_N = mkN "auberge" feminine | mkN "taverne" feminine ; -- tocheck
lin innate_A = mkA "inné" ; -- tocheck
lin inner_A = mkA "intérieur" ; -- tocheck
lin inning_N = mkN "manche" feminine ; -- tocheck
lin innkeeper_N = mkN "tavernier" ; -- tocheck
lin innocence_N = mkN "innocence" feminine ; -- tocheck
lin innocent_A = mkA "innocent" ; -- tocheck
lin innocuous_A = mkA "inoffensif" ; -- tocheck
lin innovate_V = mkV "fonder" | mkV "introduire" | mkV "mettre" | mkV "présenter" | mkV "reconduire" ; -- UWN
lin innovation_N = mkN "innovation" feminine ; -- tocheck
lin innovative_A = mkA "novateur" ; -- tocheck
lin innovativeness_N = mkN "initiative" ; -- UWN
lin innsbruck_PN = mkPN "Innsbruck" ; -- status=guess src=geonames
lin innuendo_N = mkN "insinuation" feminine ; -- tocheck
lin inoculate_V2 = mkV2 (mkV "inoculer") ; -- tocheck
lin inoculation_N = mkN "inoculation" ; -- tocheck
lin inoffensive_A = mkA "inoffensif" ; -- tocheck
lin inordinate_A = mkA "déraisonnable" | mkA "excessif" ; -- UWN
lin inorganic_A = mkA "inorganique" ; -- tocheck
lin inositol_N = mkN "inositol" ; -- UWN
lin in_patient_N = mkN "patient hospitalier" ; -- UWN
lin input_N = mkN "entrée" feminine ; -- tocheck
lin inquest_N = mkN "enquête" ; -- UWN
lin inquire_V2 = mkV2 (mkV "enquêter") ; -- tocheck
lin inquiry_N = mkN "enquête" feminine ; -- tocheck
lin inquisition_N = mkN "inquisition" ; -- UWN
lin inquisitive_A = mkA "inquisitif" ; -- tocheck
lin inquisitor_N = mkN "interrogateur" | mkN "interrogatrice" ; -- UWN
lin insalubrious_A = mkA "insalubre" ; -- tocheck
lin insane_A = mkA "dérangeant" | mkA "fou" | mkA "dérangé" ; -- tocheck
lin insanity_N = mkN "folie" feminine ; -- tocheck
lin inscribe_V2 = mkV2 (mkV "graver") ; -- tocheck
lin inscription_N = mkN "inscription" feminine | mkN "dédicace" feminine | mkN "légende" feminine ; -- tocheck
lin inscrutable_A = mkA "impénétrable" ; -- tocheck
lin insect_N = mkN "insecte" masculine ; -- tocheck
lin insecticide_N = mkN "insecticide" masculine ; -- tocheck
lin insectifuge_N = mkN "répulsif" ; -- UWN
lin insectivore_N = mkN "insectivore" masculine ; -- tocheck
lin insectivorous_A = mkA "insectivore" ; -- tocheck
lin insecurity_N = mkN "insécurité" ; -- tocheck
lin insemination_N = mkN "insémination" feminine ; -- tocheck
lin insensibility_N = mkN "callosité" | mkN "dureté" ; -- UWN
lin insensitive_A = mkA "insensible" ; -- tocheck
lin inseparable_A = mkA "inséparable" ; -- tocheck
lin insert_N = mkN "encart" masculine ; -- tocheck
lin insert_V2 = mkV2 (mkV "insérer") ; -- tocheck
lin insertion_N = mkN "introduction" ; -- UWN
lin inside_Adv = mkAdv "dedans" ; -- UWN
lin inside_N = mkN "intérieur" masculine ; -- tocheck
lin inside_Prep = variants {} ; --
lin insider_N = mkN "initié" masculine ; -- tocheck
lin insidious_A = mkA "insidieux" ; -- tocheck
lin insight_N = mkN "fr" | mkN "visibilité" feminine ; -- tocheck
lin insightful_A = mkA "perspicace" ; -- tocheck
lin insignia_N = mkN "insigne" masculine ; -- tocheck
lin insignificant_A = mkA "insignifiant" ; -- tocheck
lin insincerity_N = mkN "fausseté" ; -- UWN
lin insinuate_V2 = mkV2 (mkV "insinuer") ; -- tocheck
lin insinuation_N = mkN "insinuation" feminine ; -- tocheck
lin insist_V = mkV "insister" ;
lin insist_V2 = mkV2 (mkV "insister") ; -- tocheck
lin insist_VS = mkVS (mkV "insister") ;
lin insistence_N = mkN "insistence" ;
lin insolubility_N = mkN "insolubilité" feminine ; -- tocheck
lin insoluble_A = mkA "insoluble" ; -- UWN
lin insolvency_N = mkN "insolvabilité" feminine ; -- tocheck
lin insolvent_A = mkA "insolvable" ; -- tocheck
lin insolvent_N = mkN "failli" ; -- UWN
lin insomnia_N = mkN "insomnie" feminine ; -- tocheck
lin insomniac_A = mkA "attentif" ; -- UWN
lin insouciance_N = mkN "liberté" ; -- UWN
lin insouciant_A = mkA "décontracté" | mkA "désinvolte" | mkA "insouciant" | mkA "nonchalant" ; -- UWN
lin inspect_V2 = mkV2 "inspecter" ;
lin inspection_N = mkN "inspection" feminine ; -- tocheck
lin inspector_N = mkN "inspecteur" ;
lin inspiration_N = mkN "inspiration" feminine ; -- tocheck
lin inspirational_A = mkA "incitatif" ; -- UWN
lin inspire_V2 = variants {} ; -- mkV2V (mkV "inspirer") ; -- tocheck
lin inspire_V2V = mkV2V (mkV "inspirer") ; -- tocheck
lin inspiring_A = mkA "inspirateur" ; -- UWN
lin instability_N = mkN "instabilité" feminine ; -- tocheck
lin instal_V = variants {} ; --
lin install_V = variants {} ; -- mkV2 (mkV "installer") ; -- tocheck
lin install_V2 = mkV2 (mkV "installer") ; -- tocheck
lin installation_N = mkN "installation" feminine ; -- tocheck
lin installment_N = mkN "installation" | mkN "épisode" ; -- tocheck
lin instalment_N = mkN "installation" ; -- UWN
lin instance_N = variants {} ; --
lin instant_A = mkA "instantané" ; -- tocheck
lin instant_N = mkN "instant" masculine ; -- tocheck
lin instantaneous_A = mkA "instantané" ; -- tocheck
lin instantiation_N = mkN "Instance" | mkN "chosification" | mkN "instance" ; -- UWN
lin instead_Adv = variants {} ; --
lin instep_N = mkN "cou-de-pied" masculine ; -- tocheck
lin instigate_V2 = mkV2 (mkV "inciter") ; -- tocheck
lin instigator_N = mkN "initiateur" ; -- UWN
lin instinct_N = mkN "instinct" masculine ; -- tocheck
lin instinctive_A = mkA "instinctif" ; -- tocheck
lin institute_N = mkN "institut" masculine ; -- tocheck
lin institute_V2 = mkV2 (mkV "instituer") ; -- tocheck
lin institution_N = mkN "institution" ; -- tocheck
lin institutional_A = variants {} ; --
lin institutionalize_V2 = mkV2 (mkV "institutionnaliser") ; -- tocheck
lin instruct_V2 = variants {} ; --
lin instruction_N = mkN "instruction" feminine ; -- tocheck
lin instructive_A = mkA "instructif" ; -- tocheck
lin instructor_N = mkN "instructeur" masculine ; -- tocheck
lin instrument_N = mkN "instrument" masculine ; -- tocheck
lin instrumental_A = mkA "instrumental" ; -- tocheck
lin instrumentalist_N = mkN "instrumentiste" ; -- tocheck
lin insubordination_N = mkN "insubordination" feminine ; -- tocheck
lin insubstantial_A = mkA "irréel" ; -- UWN
lin insufferable_A = mkA "insupportable" ; -- tocheck
lin insufficient_A = mkA "insuffisant" ; -- tocheck
lin insularism_N = mkN "isolation" | mkN "séparation" ; -- UWN
lin insularity_N = mkN "isolation" | mkN "séparation" ; -- UWN
lin insulate_V2 = mkV2 (mkV "isoler") ; -- tocheck
lin insulation_N = mkN "isolation" feminine ; -- tocheck
lin insulator_N = mkN "isolant" | mkN "isolateur" ; -- tocheck
lin insulin_N = mkN "insuline" feminine ; -- tocheck
lin insult_N = mkN "insulte" feminine ; -- tocheck
lin insult_V2 = mkV2 (mkV "insulter") ; -- tocheck
lin insulting_A = mkA "outrageant" ; -- tocheck
lin insuperable_A = mkA "insurmontable" ; -- tocheck
lin insurance_N = mkN "assurance" | mkN "assurance" feminine ; -- tocheck
lin insure_V = variants {} ; -- mkV2 (mkV "assurer") ; -- tocheck
lin insure_V2 = mkV2 (mkV "assurer") ; -- tocheck
lin insure_VS = variants {} ; -- mkV2 (mkV "assurer") ; -- tocheck
lin insurgency_N = mkN "insurrection" ; -- UWN
lin insurgent_A = mkA "insurgé" ; -- tocheck
lin insurgent_N = mkN "insurgé" masculine ; -- tocheck
lin insurmountable_A = mkA "insurmontable" ; -- tocheck
lin insurrection_N = mkN "insurrection" feminine ; -- tocheck
lin intact_A = mkA "entier" | mkA "intact" | mkA "intégrale" ; -- UWN
lin intaglio_N = mkN "intaille" ; -- UWN
lin intake_N = mkN "aspiration" | mkN "inhalation" | mkN "inspiration" ; -- UWN
lin intangible_A = mkA "intangible" ; -- UWN
lin intangible_N = mkN "actifs_immatériels" | mkN "intangible" ; -- UWN
lin integer_N = mkN "entier" masculine ; -- tocheck
lin integral_A = mkA "intégral" ; -- tocheck
lin integral_N = mkN "intégrale" feminine ; -- tocheck
lin integrate_V = mkV "incorporer" | mkV "intégrer" ; -- UWN
lin integrate_V2 = variants {} ; --
lin integrated_A = variants {} ; --
lin integration_N = mkN "intégration" feminine ; -- tocheck
lin integrator_N = mkN "intégrateur" | mkN "transporteur_intégral" ; -- UWN
lin integrity_N = variants {} ; --
lin integument_N = mkN "tégument" masculine ; -- tocheck
lin intellectual_A = mkA "intellectuel" ; -- tocheck
lin intellectual_N = mkN "intellectuel" ; -- tocheck
lin intelligence_1_N = mkN "intelligence" feminine ; -- tocheck
lin intelligence_2_N = mkN "renseignements" ; -- tocheck
lin intelligence_N = variants {} ; --
lin intelligent_A = mkA "intelligent" ; -- tocheck
lin intelligentsia_N = mkN "intelligentsia" feminine ; -- tocheck
lin intend_VV = variants {} ; -- mkV2V (mkV I.prévoir_V2) | mkV2V (mkV "envisager") ; -- tocheck
lin intense_A = mkA "intense" ; -- tocheck
lin intensifier_N = mkN "intensif" ; -- UWN
lin intensify_V = variants {} ; -- mkV2 (mkV "intensifier") ; -- tocheck
lin intensify_V2 = mkV2 (mkV "intensifier") ; -- tocheck
lin intension_N = mkN "connotation" | mkN "intension" ; -- UWN
lin intensity_N = mkN "intensité" ; -- tocheck
lin intensive_A = mkA "intensif" ; -- tocheck
lin intent_A = mkA "buté" ; -- tocheck
lin intent_N = mkN "but" | mkN "conception" | mkN "dessein" | mkN "effet" | mkN "fin" | mkN "intention" | mkN "objectif" | mkN "projet" | mkN "propos" | mkN "vue" ; -- UWN
lin intention_N = mkN "intention" feminine ; -- tocheck
lin intentional_A = mkA "volontaire" ; -- tocheck
lin intentionality_N = mkN "intentionnalité" ; -- UWN
lin inter_V2 = mkV2 (mkV "enterrer") ; -- tocheck
lin interact_V = mkV (mkV "interagir") ; -- tocheck
lin interaction_N = mkN "interaction" ; -- tocheck
lin interactional_A = mkA "interactif" ; -- UWN
lin interactive_A = mkA "interactif" ; -- UWN
lin intercept_N = mkN "intercepter" ; -- UWN
lin intercept_V2 = mkV2 (mkV "intercepter") ; -- tocheck
lin intercession_N = mkN "intervention" ; -- UWN
lin interchange_N = mkN "échangeur" ; -- UWN
lin interchangeable_A = mkA "semblable" | mkA "similaire" | mkA "échangeable" ; -- UWN
lin intercom_N = mkN "interphone" ; -- tocheck
lin intercommunicate_V = mkV "communiquer" ; -- UWN
lin interconnect_V2 = mkV2 (mkV "interconnecter") ; -- tocheck
lin interconnectedness_N = mkN "interconnexion" ; -- UWN
lin interconnection_N = mkN "interconnexion" feminine ; -- tocheck
lin intercontinental_A = mkA "intercontinental" ; -- UWN
lin intercourse_N = variants {} ; --
lin interdependence_N = mkN "interdépendance" ; -- tocheck
lin interdependent_A = mkA "interdépendant" ; -- tocheck
lin interdisciplinary_A = mkA "interdisciplinaire" ; -- tocheck
lin interest_1_N = mkN "intérêt" masculine ;
lin interest_2_N = mkN "intérêt" masculine ;
lin interest_N = mkN "intérêt" masculine ;
lin interest_V = variants {} ; -- mkV2 (mkV "intéresser") ; -- tocheck
lin interest_V2 = mkV2 (mkV "intéresser") ; -- tocheck
lin interested_A = mkA "intéressé" ; -- tocheck
lin interesting_A = mkA "intéressant" ; -- tocheck
lin interface_N = mkN "interface" feminine ; -- tocheck
lin interfere_V = mkV (mkV "interférer") ; -- tocheck
lin interference_N = mkN "blocage" | mkN "ingérence" ; -- UWN
lin interferometer_N = mkN "interféromètre" ; -- UWN
lin interferon_N = mkN "interféron" masculine ; -- tocheck
lin intergalactic_A = mkA "intergalactique" ; -- tocheck
lin interim_A = mkA "temporaire" ; -- UWN
lin interim_N = mkN "intervalle" masculine ; -- tocheck
lin interior_A = mkA "intérieur" ; -- tocheck
lin interior_N = mkN "intérieur" masculine ; -- tocheck
lin interjection_N = mkN "interjection" feminine ; -- tocheck
lin interlace_V2 = mkV2 (mkV "entrelacer") | mkV2 (reflV (mkV "entrelacer")) ; -- tocheck
lin interleukin_N = mkN "interleukine" | mkN "interleukines" ; -- UWN
lin interlocutor_N = mkN "interlocuteur" masculine ; -- tocheck
lin interlude_N = mkN "interlude" masculine ; -- tocheck
lin intermarriage_N = mkN "endogamie" ; -- UWN
lin intermediate_A = mkA "intermédiaire" ; -- tocheck
lin intermediate_N = mkN "intermédiaire" masculine | mkN "intermédiaire" ; -- tocheck
lin intermezzo_N = mkN "intermède" masculine ; -- tocheck
lin intermingle_V = mkV "entremêler" | mkV "mélanger" ; -- UWN
lin intermission_N = mkN "intermission" ; -- tocheck
lin intermittence_N = mkN "inermittence" feminine ; -- tocheck
lin intermittent_A = mkA "intermittent" ; -- tocheck
lin intermix_V = mkV "entremêler" | mkV "mélanger" ; -- UWN
lin intern_N = mkN "stagiaire" ; -- tocheck
lin intern_V2 = mkV2 (mkV "interner") ; -- tocheck
lin internal_A = mkA "interne" ; -- tocheck
lin internalize_V2 = mkV2 (mkV "intérioriser") ; -- tocheck
lin international_A = mkA "international" ;
lin internationalism_N = mkN "internationalisme" masculine ; -- tocheck
lin internationalist_A = mkA "internationaliste" ; -- tocheck
lin internationalist_N = mkN "internationaliste" ; -- tocheck
lin internationality_N = mkN "internationalisme" ; -- UWN
lin internationalization_N = mkN "internationalisation" ; -- UWN
lin internationalize_V2 = mkV2 (mkV "internationaliser") ; -- tocheck
lin internee_N = mkN "interné" ; -- tocheck
lin internet_N = mkN "Internet" | mkN "NET" | mkN "cyberespace" | mkN "filet" | mkN "internet" | mkN "net" | mkN "netto" | mkN "réseau" ; -- UWN
lin internment_N = mkN "internement" ; -- tocheck
lin internode_N = mkN "entrenoeud" masculine ; -- tocheck
lin internship_N = mkN "stage" masculine ; -- tocheck
lin interoperability_N = mkN "interopérabilité" feminine ; -- tocheck
lin interpellate_V2 = mkV2 (mkV "interpeller") ; -- tocheck
lin interpellation_N = mkN "interjection" ; -- UWN
lin interpersonal_A = mkA "interpersonnel" ; -- tocheck
lin interplanetary_A = mkA "interplanétaire" ; -- tocheck
lin interpolation_N = mkN "interjection" ; -- UWN
lin interpose_V2 = mkV2 (mkV "intercaler") | mkV2 (mkV I.interrompre_V2) ; -- tocheck
lin interpret_V = mkV "interpréter" ;
lin interpret_V2 = mkV2 (mkV "interpréter") | mkV2 (mkV I.traduire_V2) ; -- tocheck
lin interpretation_N = mkN "interprétation" ; -- tocheck
lin interpretative_A = mkA "interprétatif" ; -- UWN
lin interpreter_N = mkN "interpréteur" masculine | mkN "interprète" ; -- tocheck
lin interracial_A = mkA "interracial" ; -- tocheck
lin interregnum_N = mkN "interrègne" ; -- UWN
lin interrelation_N = mkN "interrelation" feminine ; -- tocheck
lin interrelationship_N = mkN "abord" | mkN "relation" ; -- UWN
lin interrogate_V2 = mkV2 (mkV "interroger") ; -- tocheck
lin interrogative_A = mkA "interrogatif" ; -- UWN
lin interrogative_N = mkN "interrogatif" | mkN "interrogatoire" | mkN "question" ; -- UWN
lin interrogator_N = mkN "interrogateur" masculine ; -- tocheck
lin interrogatory_A = mkA "interrogatif" ; -- UWN
lin interrupt_V = variants {} ; -- mkV2 (mkV I.interrompre_V2) ; -- tocheck
lin interrupt_V2 = mkV2 (mkV I.interrompre_V2) ; -- tocheck
lin interruption_N = mkN "interruption" feminine ; -- tocheck
lin intersection_N = mkN "intersection" feminine | mkN "carrefour" masculine ; -- tocheck
lin interstate_A = mkA "interétatique" ; -- tocheck
lin interstellar_A = mkA "interstellaire" ; -- tocheck
lin interstice_N = mkN "interstice" masculine ; -- tocheck
lin intertwine_V2 = mkV2 (mkV "enchevêtrer") ; -- tocheck
lin interval_N = mkN "intervalle" masculine ; -- tocheck
lin intervene_V = mkV "intervenir" ; -- UWN
lin intervene_V2V = mkV2V (mkV I.intervenir_V) ; -- tocheck
lin intervention_N = mkN "intervention" ; -- tocheck
lin interview_N = mkN "entretien" masculine | mkN "interview" feminine ; -- tocheck
lin interview_V2 = variants {} ; --
lin interviewer_N = mkN "intervieweur" masculine ; -- tocheck
lin interweave_V2 = mkV2 (mkV "entrelacer") ; -- tocheck
lin intestinal_A = mkA "intestinal" ; -- tocheck
lin intestine_N = mkN "intestin" masculine ; -- tocheck
lin inti_N = mkN "inti" ; -- UWN
lin intifada_N = mkN "intifada" ; -- UWN
lin intimacy_N = mkN "intimité" ; -- tocheck
lin intimate_A = mkA "intime" ; -- tocheck
lin intimate_N = mkN "intime" ; -- UWN
lin intimation_N = mkN "soupçon" ; -- UWN
lin intimidate_V2 = mkV2 (mkV "intimider") | mkV2 (mkV "impressioner") ; -- tocheck
lin intimidation_N = mkN "intimidation" feminine ; -- tocheck
lin into_Prep = mkPrep "dans" ;
lin intolerable_A = mkA "intolérable" ; -- tocheck
lin intolerance_N = mkN "intolérance" feminine ; -- tocheck
lin intonation_N = mkN "intonation" feminine ; -- tocheck
lin intoxicate_V2 = mkV2 (mkV "intoxiquer") ; -- tocheck
lin intoxication_N = mkN "intoxication" feminine ; -- tocheck
lin intracellular_A = mkA "intracellulaire" ; -- tocheck
lin intramuscular_A = mkA "intramusculaire" ; -- tocheck
lin intransigence_N = mkN "intransigeance" feminine ; -- tocheck
lin intransigency_N = mkN "intransigeance" ; -- UWN
lin intransigent_A = mkA "intransigeant" ; -- tocheck
lin intransitive_A = mkA "intransitif" ; -- tocheck
lin intransitivity_N = mkN "intransitivité" feminine ; -- tocheck
lin intra_uterine_A = mkA "intra-utérin" ; -- tocheck
lin intravenous_A = mkA "intraveineux" ; -- tocheck
lin intrepid_A = mkA "intrépide" ; -- tocheck
lin intricacy_N = mkN "élaboration" ; -- UWN
lin intricate_A = mkA "compliqué" ; -- tocheck
lin intrigue_N = mkN "intrigue" feminine ; -- tocheck
lin intrinsic_A = mkA "intrinsèque" ; -- tocheck
lin intro_N = mkN "intro" ; -- tocheck
lin introduce_V2 = mkV2 (mkV "présenter") | mkV2 (mkV I.introduire_V2) ; -- tocheck
lin introduction_N = mkN "introduction" feminine | mkN "présentation" feminine ; -- tocheck
lin introspection_N = mkN "Introspection" | mkN "introspection" ; -- UWN
lin introspective_A = mkA "intropectif" ; -- tocheck
lin intruder_N = mkN "intrus" ; -- tocheck
lin intrusion_N = mkN "intrusion" feminine ; -- tocheck
lin intrusive_A = mkA "intrusif" ; -- tocheck
lin intuit_V2 = mkV2 (mkV "intuiter") ; -- tocheck
lin intuition_N = mkN "intuition" feminine ; -- tocheck
lin intuitive_A = mkA "intuitif" ; -- tocheck
lin intumescence_N = mkN "gonflement" ; -- UWN
lin inula_N = mkN "inula" ; -- UWN
lin inulin_N = mkN "inuline" ; -- UWN
lin inundate_V2 = mkV2 (mkV "inonder") ; -- tocheck
lin inundation_N = mkN "inondation" feminine ; -- tocheck
lin inure_V2 = mkV2 (mkV "endurcir") ; -- tocheck
lin inutility_N = mkN "inutilité" ; -- UWN
lin invade_V2 = mkV2 (mkV "envahir") ; -- tocheck
lin invader_N = mkN "envahisseur" masculine ; -- tocheck
lin invalidate_V2 = mkV2 (mkV "invalider") ; -- tocheck
lin invaluable_A = variants {} ; --
lin invariable_A = mkA "invariable" ; -- tocheck
lin invariant_A = mkA "invariant" ; -- tocheck
lin invasion_N = mkN "invasion" ; -- tocheck
lin invasive_A = mkA "invasif" | mkA "d'invasion" | mkA "envahissant" ; -- tocheck
lin inveigh_V = mkV "déclamer" | mkV "réciter" ; -- UWN
lin invent_V = variants {} ; -- mkV2 (mkV "inventer") ; -- tocheck
lin invent_V2 = mkV2 (mkV "inventer") ; -- tocheck
lin invention_N = mkN "invention" feminine ; -- tocheck
lin inventive_A = mkA "inventif" ; -- tocheck
lin inventiveness_N = mkN "ingéniosité" | mkN "invention" | mkN "inventivité" ; -- UWN
lin inventor_N = mkN "inventeur" masculine ; -- tocheck
lin inventory_N = mkN "inventaire" masculine ; -- tocheck
lin inverkeithing_PN = mkPN "Inverkeithing" ; -- status=guess src=geonames
lin inverness_PN = mkPN "Inverness" ; -- status=guess src=geonames
lin inverse_A = mkA "inverse" ; -- tocheck
lin inverse_N = mkN "inverse" ; -- tocheck
lin invert_V2 = mkV2 (mkV "invertir") ; -- tocheck
lin invertase_N = mkN "saccharase" | mkN "sucrase" ; -- UWN
lin invertebrate_A = mkA "invertébré" ; -- tocheck
lin invertebrate_N = mkN "invertébré" masculine ; -- tocheck
lin inverter_N = mkN "convertisseur" | mkN "onduleur" ; -- UWN
lin invertible_A = mkA "inversible" ; -- tocheck
lin inverurie_PN = mkPN "Inverurie" ; -- status=guess src=geonames
lin invest_V = variants {} ; -- mkV2 (mkV "investir") ; -- tocheck
lin invest_V2 = mkV2 (mkV "investir") ; -- tocheck
lin investigate_V = mkV "enquêter" ; -- UWN
lin investigate_V2 = mkV2 (mkV "enquêter") | mkV2 (mkV "étudier") ; -- tocheck
lin investigation_N = mkN "investigation" feminine ; -- tocheck
lin investigator_N = mkN "enquêteur" masculine ; -- tocheck
lin investing_N = mkN "investissement" | mkN "placement" ; -- UWN
lin investiture_N = mkN "investissement" ; -- UWN
lin investment_N = mkN "investissement" ; -- tocheck
lin investor_N = mkN "investisseur" ; -- tocheck
lin inveterate_A = mkA "invétéré" ; -- tocheck
lin invidious_A = mkA "discriminatoire" ; -- UWN
lin invincibility_N = mkN "invincibilité" feminine ; -- tocheck
lin invincible_A = mkA "invincible" ; -- tocheck
lin inviolable_A = mkA "inviolable" ; -- tocheck
lin invisibility_N = mkN "invisibilité" ; -- UWN
lin invisible_A = mkA "invisible" ; -- tocheck
lin invitation_N = mkN "invitation" feminine ; -- tocheck
lin invite_N = mkN "invitation" feminine ; -- tocheck
lin invite_V2 = variants {} ; -- mkV2V (mkV "inviter") ; -- tocheck
lin invite_V2V = mkV2V (mkV "inviter") ; -- tocheck
lin invite_in_V = advV (lin V OP_invite_V2) OP_in_Adv ; -- guess-p-verb
lin invoice_N = mkN "facture" feminine ; -- tocheck
lin invoice_V2 = mkV2 (mkV "facturer") ; -- tocheck
lin invoke_V2 = mkV2 (mkV "invoquer") ; -- tocheck
lin involuntary_A = mkA "involontaire" ; -- tocheck
lin involve_V = mkV "impliquer" ;
lin involve_V2 = mkV2 (mkV "impliquer") ;
lin involve_VS = mkVS (mkV "impliquer") ;
lin involved_A = variants {} ; --
lin involvement_N = mkN "implication" feminine ; -- tocheck
lin invulnerable_A = mkA "invulnérable" ; -- UWN
lin inward_A = mkA "intérieur" ; -- tocheck
lin iodide_N = mkN "Ion_iodure" | mkN "ion_iodure" ; -- UWN
lin iodine_N = mkN "iode" masculine ; -- tocheck
lin ion_N = mkN "ion" masculine ; -- tocheck
lin ionic_A = mkA "ionique" ; -- UWN
lin ionization_N = mkN "ionisation" ; -- tocheck
lin ionize_V = mkV "ioniser" ; -- UWN
lin ionize_V2 = mkV2 (mkV "ioniser") ; -- tocheck
lin ionosphere_N = mkN "ionosphère" ; -- tocheck
lin iota_N = mkN "iota" masculine ; -- tocheck
lin iowa_PN = mkPN "Iowa" ; -- status=guess src=geonames
lin ipswich_PN = mkPN "Ipswich" ; -- status=guess src=geonames
lin ira_N = mkN "col" | mkN "colère" | mkN "fureur" | mkN "ira" | mkN "ire" ; -- UWN
lin iran_PN = mkPN "Iran" ; -- status=guess src=geonames
lin iranianFem_N = variants {} ; ---- sense to be split
lin iranianMasc_N = variants {} ; ---- sense to be split
lin iraq_PN = mkPN "Iraq" ; -- status=guess src=geonames
lin irascibility_N = mkN "irascibilité" | mkN "rate" ; -- UWN
lin irascible_A = mkA "irascible" ; -- tocheck
lin irate_A = mkA "courroucé" ; -- UWN
lin ire_N = mkN "ire" feminine ; -- tocheck
lin ireful_A = mkA "courroucé" ; -- UWN
lin ireland_PN = mkPN "Irlande" ; -- status=guess src=geonames
lin irenic_A = mkA "irénique" ; -- tocheck
lin iridescence_N = mkN "opalescence" ; -- UWN
lin iridium_N = mkN "iridium" masculine ; -- tocheck
lin iris_N = mkN "iris" masculine ; -- tocheck
lin irishFem_N = variants {} ; ---- sense to be split
lin irishMasc_N = variants {} ; ---- sense to be split
lin irk_V2 = mkV2 (mkV "agacer") ; -- tocheck
lin iron_N = L.iron_N ;
lin iron_V2 = mkV2 (mkV "repasser") ; -- tocheck
lin iron_out_V = mkV "régler" ; -- UWN
lin ironclad_N = mkN "cuirassé" ; -- tocheck
lin ironic_A = mkA "ironique" ; -- tocheck
lin ironical_A = variants {} ;
lin ironmonger_N = mkN "quincaillerie" ; -- UWN
lin ironware_N = mkN "fer" | mkN "matériel" ; -- UWN
lin ironweed_N = mkN "vernonia" ; -- UWN
lin ironwork_N = mkN "ferronnerie" ; -- UWN
lin ironworks_N = mkN "ferronnerie" feminine ; -- tocheck
lin irony_N = mkN "ironie" feminine ; -- tocheck
lin irradiation_N = mkN "irradiation" | mkN "radiation" | mkN "radiothérapie" | mkN "rayonnement" ; -- UWN
lin irrational_A = mkA "irrationnel" ; -- tocheck
lin irrecoverable_A = mkA "irrécouvrable" | mkA "irrécupérable" ; -- UWN
lin irredeemable_A = mkA "irrémédiable" ; -- tocheck
lin irredentism_N = mkN "irrédentisme" masculine ; -- tocheck
lin irrefutable_A = mkA "irréfutable" ; -- tocheck
lin irregular_A = mkA "irregulier" ; -- tocheck
lin irregularity_N = mkN "irregularité" feminine ; -- tocheck
lin irrelevance_N = mkN "manque_d'à-propos" | mkN "manque_de_rapport" ; -- UWN
lin irrelevancy_N = mkN "manque_d'à-propos" | mkN "manque_de_rapport" ; -- UWN
lin irrelevant_A = mkA "non-pertinent" ; -- tocheck
lin irreligious_A = mkA "impie" ; -- UWN
lin irreligiousness_N = mkN "irreligionisme" | mkN "irréligion" ; -- UWN
lin irremediable_A = mkA "irrémédiable" ; -- tocheck
lin irreplaceable_A = mkA "irremplaçable" ; -- tocheck
lin irrepressible_A = mkA "irrépressible" ; -- tocheck
lin irreproachable_A = mkA "irréprochable" ; -- tocheck
lin irresistibility_N = mkN "irrésistibilité" feminine ; -- tocheck
lin irresistible_A = mkA "irrésistible" ; -- tocheck
lin irrespective_A = variants {} ; --
lin irresponsibility_N = mkN "irresponsabilité" feminine ; -- tocheck
lin irresponsible_A = mkA "irresponsable" ; -- tocheck
lin irreverent_A = mkA "irrévérencieux" ; -- tocheck
lin irreversible_A = mkA "irréversible" ; -- tocheck
lin irrigation_N = mkN "irrigation" feminine ; -- tocheck
lin irritable_A = mkA "maussade" ; -- UWN
lin irritant_N = mkN "agacement" | mkN "épine" ; -- UWN
lin irritating_A = mkA "agaçant" | mkA "embêtant" | mkA "ennuyeux" | mkA "gênant" | mkA "pénible" ; -- UWN
lin irritation_N = mkN "irritation" feminine ; -- tocheck
lin irthlingborough_PN = mkPN "Irthlingborough" ; -- status=guess src=geonames
lin irvine_PN = mkPN "Irvine" ; -- status=guess src=geonames
lin isabel_PN = mkPN "Isabel" ; -- status=guess src=geonames
lin ischemia_N = mkN "ischémie" ; -- UWN
lin ischemic_A = mkA "ischémique" ; -- UWN
lin ischium_N = mkN "ischion" masculine ; -- tocheck
lin isentropic_A = mkA "isentropique" ; -- UWN
lin isinglass_N = mkN "ichtyocolle" feminine ; -- tocheck
lin island_N = mkN "île" feminine ; -- tocheck
lin islander_N = mkN "insulaire" ; -- tocheck
lin islet_N = mkN "îlot" masculine ; -- tocheck
lin islington_PN = mkPN "District londonien d'Islington" ; -- status=guess src=geonames
lin isobar_N = mkN "isobare" feminine ; -- tocheck
lin isocyanate_N = mkN "Isocyanate" | mkN "isocyanate" ; -- UWN
lin isoflurane_N = mkN "isoflurane" ; -- UWN
lin isolate_V2 = mkV2 (mkV "isoler") ; -- tocheck
lin isolated_A = variants {} ; --
lin isolation_N = mkN "isolation" feminine | mkN "isolement" masculine ; -- tocheck
lin isolationism_N = mkN "isolationnisme" masculine ; -- tocheck
lin isolationist_A = mkA "isolationniste" ; -- tocheck
lin isolationist_N = mkN "isolationniste" ; -- UWN
lin isoleucine_N = mkN "Isoleucine" | mkN "isoleucine" ; -- UWN
lin isomer_N = mkN "isomère" masculine ; -- tocheck
lin isomerase_N = mkN "isomérase" ; -- UWN
lin isomeric_A = mkA "isomérique" ; -- tocheck
lin isomerization_N = mkN "isomérisation" ; -- UWN
lin isometry_N = mkN "isométrie" feminine ; -- tocheck
lin isomorphism_N = mkN "isomorphisme" masculine ; -- tocheck
lin isomorphous_A = mkA "isomorphe" ; -- UWN
lin isopod_N = mkN "isopode" masculine ; -- tocheck
lin isosceles_A = mkA "isocèle" ; -- tocheck
lin isotherm_N = mkN "isotherme" | mkN "ligne" | mkN "ligne_isotherme" ; -- UWN
lin isothermal_A = mkA "isothermique" | mkA "isotherme" ; -- tocheck
lin isothermic_A = mkA "isothermique" ; -- tocheck
lin isotonic_A = mkA "isotonique" ; -- tocheck
lin isotope_N = mkN "isotope" masculine ; -- tocheck
lin isotopic_A = mkA "isotope" ; -- tocheck
lin isotropic_A = mkA "isotrope" ; -- tocheck
lin isotropy_N = mkN "isotropie" | mkN "symétrie" ; -- UWN
lin israel_PN = mkPN "Israël" ; -- status=guess src=geonames
lin issue_1_N = mkN "problème" masculine | mkN "controverse" ;
lin issue_2_N = mkN "numéro" ;
lin issue_N = mkN "problème" masculine | mkN "controverse" ;
lin issue_V = variants {} ; --
lin issue_V2 = variants {} ; --
lin issue_forth_V = mkV "venir" ; -- UWN
lin issuer_N = mkN "émetteur" ; -- UWN
lin isthmus_N = mkN "isthme" ; -- tocheck
lin it_Pron = S.it_Pron | S.she_Pron | E.ce_Pron ;
lin italianFem_N = mkN "italienne" ;
lin italianMasc_N = mkN "italien" ;
lin italian_A = mkA "italien" ;
lin italic_A = mkA "italique" ; -- tocheck
lin italic_N = mkN "italique" ; -- UWN
lin italy_PN = mkPN "Italie" ; -- status=guess src=geonames
lin itch_N = mkN "démangeaison" ; -- tocheck
lin itch_V = mkV (mkV "démanger") ; -- tocheck
lin item_N = mkN "truc" masculine | mkN "point" masculine ; -- tocheck
lin iteration_N = mkN "itération" ; -- UWN
lin iterative_A = mkA "itératif" ; -- tocheck
lin itinerant_N = mkN "Roma" | mkN "tsigane" | mkN "tzigane" ; -- UWN
lin itinerary_N = mkN "itinéraire" masculine ; -- tocheck
lin iver_PN = mkPN "Iver" ; -- status=guess src=geonames
lin ivory_N = mkN "ivoire" masculine | mkN "ivoire" ; -- tocheck
lin ivy_N = mkN "lierre" masculine ; -- tocheck
lin jab_N = mkN "pique" ; -- tocheck
lin jabalpur_PN = mkPN "Jabalpur" ; -- status=guess src=geonames
lin jabiru_N = mkN "jabiru" masculine ; -- tocheck
lin jabot_N = mkN "jabot" masculine ; -- tocheck
lin jacamar_N = mkN "galbulidae" | mkN "galbulidés" | mkN "jacamars" ; -- UWN
lin jack_N = mkN "cric" masculine | mkN "âne" masculine | mkN "valet" masculine | mkN "jack" ; -- tocheck
lin jackal_N = mkN "chacal" masculine ; -- tocheck
lin jackass_N = mkN "âne" masculine ; -- tocheck
lin jackdaw_N = mkN "choucas" masculine ; -- tocheck
lin jacket_N = mkN "veste" feminine | mkN "couverture" feminine ; -- tocheck
lin jackfruit_N = mkN "jacque" masculine ; -- tocheck
lin jackpot_N = mkN "jackpot" masculine ; -- tocheck
lin jacks_N = mkN "osselets" ; -- UWN
lin jacksonville_PN = mkPN "Jacksonville" ; -- status=guess src=geonames
lin jade_N = mkN "jade" masculine ; -- tocheck
lin jaded_A = mkA "blasé" | mkA "épuisé" ; -- tocheck
lin jadeite_N = mkN "Jadéite" feminine ; -- tocheck
lin jaeger_N = mkN "jaeger" ; -- UWN
lin jaguar_N = mkN "jaguar" masculine ; -- tocheck
lin jaguarundi_N = mkN "jaguarondi" masculine ; -- tocheck
lin jail_N = variants {} ; --
lin jail_V2 = variants {} ; --
lin jailer_N = mkN "geôlier" masculine ; -- tocheck
lin jaipur_PN = mkPN "Jaipur" ; -- status=guess src=geonames
lin jakarta_PN = mkPN "Jakarta" ; -- status=guess src=geonames
lin jam_N = mkN "embouteillage" masculine | mkN "confiture" feminine | mkN "boeuf" masculine ; -- tocheck
lin jam_V2 = mkV2 (mkV "brouiller") | mkV2 (mkV "enfoncer") | mkV2 (mkV "coincer") ; -- tocheck
lin jamaica_PN = mkPN "Jamaïque" ; -- status=guess src=geonames
lin jamb_N = mkN "jambage" ; -- UWN
lin jambalaya_N = mkN "jambalaya" ; -- UWN
lin jamboree_N = mkN "jamboree" masculine ; -- tocheck
lin jamjar_N = mkN "pot_de_confiture" ; -- UWN
lin jammer_N = mkN "brouilleur" ; -- UWN
lin jamming_N = mkN "brouillage" | mkN "confiture" ; -- UWN
lin jampot_N = mkN "pot_de_confiture" ; -- UWN
lin jangle_N = mkN "cliqueter" ; -- UWN
lin jangle_V = mkV "cliqueter" ; -- UWN
lin jangle_V2 = mkV2 (mkV "cliqueter") ; -- tocheck
lin janissary_N = mkN "janissaire" masculine ; -- tocheck
lin janitor_N = mkN "portier" masculine | mkN "concierge" ; -- tocheck
lin japan_PN = mkPN "Japon" ; -- status=guess src=geonames
lin japaneseFem_N = variants {} ; ---- sense to be split
lin japaneseMasc_N = variants {} ; ---- sense to be split
lin jar_N = mkN "pot" ; -- tocheck
lin jargon_N = mkN "jargon" masculine | mkN "jargon" ; -- tocheck
lin jargoon_N = mkN "zircon" masculine ; -- tocheck
lin jarrow_PN = mkPN "Jarrow" ; -- status=guess src=geonames
lin jasmine_N = mkN "jasmin" masculine ; -- tocheck
lin jasper_N = mkN "jaspe" masculine ; -- tocheck
lin jaundice_N = mkN "jaunisse" feminine ; -- tocheck
lin jaunt_N = mkN "excursion" | mkN "expédition" ; -- UWN
lin java_PN = mkPN "Java" ; -- status=guess src=geonames
lin javelin_N = mkN "javelot" masculine ; -- tocheck
lin jaw_N = mkN "mâchoire" feminine ; -- tocheck
lin jay_N = mkN "geai" masculine ; -- tocheck
lin jazz_N = mkN "jazz" masculine ; -- tocheck
lin jazzy_A = mkA "sportif" ; -- UWN
lin jealous_A = mkA "jaloux" ; -- tocheck
lin jealousy_N = mkN "jalousie" feminine ; -- tocheck
lin jean_N = mkN "jean" ; -- UWN
lin jeans_N = variants {} ; --
lin jedburgh_PN = mkPN "Jedburgh" ; -- status=guess src=geonames
lin jeep_N = mkN "jeep" masculine ; -- tocheck
lin jeer_N = mkN "raillerie" feminine ; -- tocheck
lin jeer_V2 = mkV2 (mkV "railler") ; -- tocheck
lin jejunum_N = mkN "jéjunum" masculine ; -- tocheck
lin jellaba_N = mkN "djellaba" ; -- UWN
lin jelly_N = mkN "gelée" feminine | mkN "confiture" feminine ; -- tocheck
lin jelly_V = mkV "confiture" ; -- UWN
lin jellyfish_N = mkN "méduse" feminine ; -- tocheck
lin jennet_N = mkN "ânesse" ; -- UWN
lin jenny_N = mkN "ânesse" ; -- UWN
lin jeopardy_N = mkN "danger" masculine ; -- tocheck
lin jerboa_N = mkN "gerboise" feminine ; -- tocheck
lin jeremiad_N = mkN "jérémiade" feminine ; -- tocheck
lin jerk_N = mkN "tic" | mkN "secousse" | mkN "conard" masculine ; -- tocheck
lin jerk_V = variants {} ; --
lin jerk_V2 = variants {} ; --
lin jerkin_N = mkN "justaucorps" masculine ; -- tocheck
lin jerky_A = mkA "saccadée" ; -- tocheck
lin jerome_PN = mkPN "Jerome" ; -- status=guess src=geonames
lin jersey_N = mkN "jersey" masculine ; -- tocheck
lin jersey_PN = mkPN "Bailliage de Jersey" ; -- status=guess src=geonames
lin jest_N = mkN "blaguer" ; -- tocheck
lin jester_N = mkN "bouffon" ; -- tocheck
lin jet_N = mkN "jet" masculine | mkN "gicleur" masculine | mkN "jais" | mkN "gicleur" ; -- tocheck
lin jetsam_N = mkN "lest" masculine ; -- tocheck
lin jettison_V2 = mkV2 (mkV "délester") | mkV2 (reflV (mkV "débarrasser")) ; -- tocheck
lin jetty_N = mkN "jetée" feminine ; -- tocheck
lin jew_N = variants {} ; --
lin jewel_N = mkN "joyau" masculine ; -- tocheck
lin jeweller_N = mkN "bijoutier" | mkN "joaillerie" | mkN "joaillier" ; -- UWN
lin jewellery_N = mkN "joaillerie" feminine ; -- tocheck
lin jewelry_N = mkN "bijou" ; -- UWN
lin jib_N = mkN "foc" | mkN "foc" masculine ; -- tocheck
lin jibe_N = mkN "empannage" masculine ; -- tocheck
lin jibe_V = mkV (reflV (mkV "accorder")) | mkV (mkV "empanner") ; -- tocheck
lin jiffy_N = mkN "instant" masculine ; -- tocheck
lin jig_N = mkN "gigue" | mkN "patron" masculine ; -- tocheck
lin jig_V2 = mkV2 (mkV "trémousser") ; -- tocheck
lin jigger_N = mkN "aoutat" | mkN "aoûtat" | mkN "trombidium" | mkN "vendangeron" ; -- UWN
lin jiggle_V2 = mkV2 (mkV "ballotter") ; -- tocheck
lin jihad_N = mkN "jihad" ; -- tocheck
lin jilt_V2 = mkV2 (mkV "plaquer") ; -- tocheck
lin jimmy_N = mkN "pied-de-biche" masculine ; -- tocheck
lin jingle_V = mkV "cliqueter" ; -- UWN
lin jingo_N = mkN "chauvin" ; -- UWN
lin jingoism_N = mkN "jingoïsme" masculine ; -- tocheck
lin jingoist_N = mkN "chauvin" ; -- UWN
lin jinn_N = mkN "jinn" masculine ; -- tocheck
lin jinx_N = mkN "porte-malheur" | mkN "maléfice" masculine ; -- tocheck
lin jitney_N = mkN "autobus" | mkN "autocar" | mkN "bus" ; -- UWN
lin jitter_N = mkN "crainte" ; -- tocheck
lin jitteriness_N = mkN "nervosité" ; -- UWN
lin joanna_PN = mkPN "Joanna" ; -- status=guess src=geonames
lin job_N = mkN "travail" masculine | mkN "tâche" feminine ; --- split
lin job_PN = mkPN "Job" ; -- status=guess src=geonames
lin jobber_N = mkN "grossiste" ; -- UWN
lin jobbery_N = mkN "corruption" feminine ; -- tocheck
lin jockey_N = mkN "jockey" masculine ; -- tocheck
lin jocular_A = mkA "facétieux" ; -- tocheck
lin jocularity_N = mkN "badinage" | mkN "jeu" ; -- UWN
lin jocund_A = mkA "enjoué" | mkA "gai" | mkA "jovial" | mkA "joyeux" ; -- UWN
lin jog_N = mkN "jogger" ; -- UWN
lin jog_V = mkV "jogger" ; -- UWN
lin jogging_N = mkN "jogging" masculine ; -- tocheck
lin johannesburg_PN = mkPN "Johannesbourg" ; -- status=guess src=geonames
lin john_PN = L.john_PN ;
lin johnstone_PN = mkPN "Johnstone" ; -- status=guess src=geonames
lin joie_de_vivre_N = mkN "joie_de_vivre" ; -- UWN
lin join_N = mkN "jointure" feminine ; -- tocheck
lin join_V = reflV (mkV I.joindre_V2) ;
lin join_V2 = mkV2 (mkV I.joindre_V2) | mkV2 (mkV I.rejoindre_V2) ;
lin join_up_V = advV OP_join_V OP_up_Adv ; -- guess-p-verb
lin joiner_N = mkN "menuisier" masculine ; -- tocheck
lin joinery_N = mkN "menuiserie" feminine ; -- tocheck
lin joining_N = mkN "accouplement" | mkN "connexion" ; -- UWN
lin joint_A = variants {} ; --
lin joint_N = mkN "articulation" feminine | mkN "joint" masculine | mkN "assemblage" masculine | mkN "taule" feminine | mkN "jointure" feminine ; -- tocheck
lin jointer_N = mkN "dégauchisseuse" | mkN "varlope" ; -- UWN
lin jointure_N = mkN "unification" | mkN "union" ; -- UWN
lin joist_N = mkN "solive" feminine ; -- tocheck
lin joke_N = mkN "plaisanterie" feminine | mkN "raté" masculine ; -- tocheck
lin joke_V = mkV (mkV "plaisanter") ; -- tocheck
lin joker_N = mkN "blagueur" masculine | mkN "joker" masculine ; -- tocheck
lin jolly_A = mkA "enjoué" | mkA "gai" | mkA "jovial" | mkA "joyeux" ; -- UWN
lin jolt_N = mkN "soubresaut" ; -- tocheck
lin jolty_A = mkA "accidenté" ; -- UWN
lin jonquil_N = mkN "jonquille" feminine ; -- tocheck
lin jordan_PN = mkPN "Jordanie" ; -- status=guess src=geonames
lin joseph_PN = mkPN "Joseph" ; -- status=guess src=geonames
lin joshua_PN = mkPN "Joshua" ; -- status=guess src=geonames
lin jostle_N = mkN "cohue" | mkN "bousculade" ; -- tocheck
lin jostle_V2 = mkV2 (reflV (mkV "bousculer")) | mkV2 (mkV "bousculer") ; -- tocheck
lin jot_V2 = mkV2 (mkV "biffer") ; -- tocheck
lin joule_N = mkN "joule" masculine ; -- tocheck
lin journal_N = mkN "revue" masculine ; -- tocheck
lin journalism_N = mkN "journalisme" masculine ; -- tocheck
lin journalist_N = mkN "journaliste" ; -- tocheck
lin journey_N = mkN "voyage" masculine ; -- tocheck
lin journey_V = mkV (mkV "voyager") ; -- tocheck
lin joust_V = mkV (mkV "jouter") ; -- tocheck
lin jovial_A = mkA "jovial" ; -- tocheck
lin joviality_N = mkN "jovialité" feminine ; -- tocheck
lin jowl_N = mkN "joue" feminine | mkN "bajoue" feminine ; -- tocheck
lin joy_N = mkN "joie" feminine ; -- tocheck
lin joyful_A = mkA "allègre" ; -- tocheck
lin joyous_A = mkA "joyeux" ; -- tocheck
lin joy_stick_N = mkN "manche" masculine ; -- tocheck
lin jubilant_A = mkA "triomphal" | mkA "triomphant" ; -- UWN
lin jubilee_N = mkN "jubilé" masculine ; -- tocheck
lin judas_N = mkN "judas" ; -- UWN
lin judder_V = mkV (mkV "secouer") ; -- tocheck
lin judge_N = mkN "juge" | mkN "arbitre" ; -- tocheck
lin judge_V = variants {} ; -- mkV2V (mkV "juger") ; -- tocheck
lin judge_V2 = variants {} ; -- mkV2V (mkV "juger") ; -- tocheck
lin judge_VS = variants {} ; -- mkV2V (mkV "juger") ; -- tocheck
lin judgement_N = mkN "appréciation" | mkN "jugement" | mkN "tribunal" | mkN "évaluation" ; -- UWN
lin judgment_N = mkN "jugement" | mkN "jugement" masculine ; -- tocheck
lin judicial_A = mkA "judiciaire" ; -- tocheck
lin judiciary_N = mkN "banc" | mkN "magistrature" | mkN "pouvoir_judiciaire" ; -- UWN
lin judicious_A = mkA "raisonnable" | mkA "sage" | mkA "sensé" ; -- UWN
lin judo_N = mkN "judo" masculine ; -- tocheck
lin jug_N = mkN "cruche" feminine ; -- tocheck
lin juggle_N = mkN "jonglage" | mkN "jongler" | mkN "jonglerie" ; -- UWN
lin juggle_V = mkV "jongler" ; -- UWN
lin juggle_V2 = mkV2 (mkV "jongler") ; -- tocheck
lin juggler_N = mkN "jongleur" masculine ; -- tocheck
lin jugular_A = mkA "jugulaire" ; -- UWN
lin jugular_N = mkN "jugulaire" ; -- UWN
lin juice_N = mkN "jus" masculine ; -- tocheck
lin juicy_A = mkA "juteux" | mkA "croustillant" ; -- tocheck
lin juju_N = mkN "fétiche" | mkN "vaudou" ; -- UWN
lin jujube_N = mkN "jujube" masculine | mkN "jujubier" masculine ; -- tocheck
lin jujutsu_N = mkN "jiu-jitsu" | mkN "ju-jitsu" | mkN "jūjutsu" ; -- UWN
lin jukebox_N = mkN "juke-box" masculine ; -- tocheck
lin julian_PN = mkPN "Julian" ; -- status=guess src=geonames
lin julienne_N = mkN "julienne" feminine ; -- tocheck
lin jumble_V2 = mkV2 (mkV "mélanger") ; -- tocheck
lin jumbojet_N = mkN "gros-porteur" ; -- UWN
lin jump_N = mkN "saut" masculine ; -- tocheck
lin jump_V = L.jump_V ;
lin jump_V2 = variants {} ; -- mkV2V (mkV "sauter") | mkV2V (mkV "sursauter") ; -- tocheck
lin jump_at_V2 = prepV2 OP_jump_V OP_at_Prep ; -- guess-p-verb
lin jump_in_V = advV OP_jump_V OP_in_Adv ; -- guess-p-verb
lin jump_on_V2 = prepV2 OP_jump_V OP_on_Prep ; -- guess-p-verb
lin jump_to_V2 = prepV2 OP_jump_V OP_to_Prep ; -- guess-p-verb
lin jumper_N = mkN "pull" masculine ; -- tocheck
lin jumpiness_N = mkN "nervosité" ; -- UWN
lin jumping_N = mkN "saut" ; -- UWN
lin jumpy_A = mkA "nerveux" ; -- tocheck
lin jun_PN = mkPN "Jun" ; -- status=guess src=geonames
lin junco_N = mkN "junco" ; -- UWN
lin junction_N = mkN "jonction" feminine ; -- tocheck
lin juncture_N = mkN "occasion" ; -- UWN
lin jungle_N = mkN "jungle" feminine ; -- tocheck
lin junior_A = mkA "junior" ; -- tocheck
lin juniper_N = mkN "genévrier" masculine ; -- tocheck
lin junk_N = mkN "jonque" feminine | mkN "ordure" ; -- tocheck
lin junket_N = mkN "caillé" | mkN "ballade" ; -- tocheck
lin junkie_N = mkN "accro" ; -- tocheck
lin junkyard_N = mkN "décharge" feminine ; -- tocheck
lin junta_N = mkN "junte" feminine ; -- tocheck
lin jupiter_PN = mkPN "Jupiter" ; -- status=guess src=geonames
lin jurisdiction_N = mkN "juridiction" feminine ; -- tocheck
lin jurisdictional_A = mkA "juridictionnel" ; -- UWN
lin jurisprudential_A = mkA "jurisprudentiel" ; -- UWN
lin jurist_N = mkN "juriste" ; -- tocheck
lin juror_N = mkN "juré" ; -- tocheck
lin jury_N = mkN "jury" masculine ; -- tocheck
lin just_A = mkA "juste" ; -- tocheck
lin just_AdV = mkAdV "cependant" | mkAdV "mais" | mkAdV "que" | mkAdV "sauf" | mkAdV "seulement" | mkAdV "simplement" | mkAdV "uniquement" ; -- UWN
lin just_Adv = mkAdv "juste" ;
lin justice_N = mkN "justice" | mkN "justice" feminine ; -- tocheck
lin justification_N = mkN "justification" feminine ; -- tocheck
lin justified_A = variants {} ; --
lin justify_V2 = mkV2 (mkV "justifier") ; -- tocheck
lin justify_VV = mkvVV "justifier" ; -- UWN
lin justin_PN = mkPN "Justin" ; -- status=guess src=geonames
lin jut_V = mkV (mkV "dépasser") ; -- tocheck
lin jute_N = mkN "jute" ; -- UWN
lin juvenile_A = mkA "juvénile" ; -- tocheck
lin juvenile_N = mkN "adolescent" ; -- tocheck
lin juxtapose_V2 = mkV2 (mkV "juxtaposer") ; -- tocheck
lin juxtaposition_N = mkN "juxtaposition" feminine ; -- tocheck
lin kabob_N = mkN "Kebab" | mkN "kebab" | mkN "kebap" | mkN "kébab" ; -- UWN
lin kaffir_N = mkN "cafre" ; -- tocheck
lin kafkaesque_A = mkA "kafkaïen" ; -- UWN
lin kaki_N = mkN "plaqueminier" ; -- tocheck
lin kaleidoscope_N = mkN "kaléidoscope" ; -- tocheck
lin kalmia_N = mkN "kalmia" ; -- UWN
lin kamikaze_N = mkN "kamikaze" ; -- UWN
lin kangaroo_N = mkN "kangourou" masculine ; -- tocheck
lin kaohsiung_PN = mkPN "Kaohsiung" ; -- status=guess src=geonames
lin kaoliang_N = mkN "kaoliang" masculine ; -- tocheck
lin kaolin_N = mkN "kaolin" masculine ; -- tocheck
lin kaolinite_N = mkN "kaolinite" feminine ; -- tocheck
lin kaon_N = mkN "kaon" masculine ; -- tocheck
lin kaph_N = mkN "kaf" | mkN "kaph" | mkN "khaf" ; -- UWN
lin kappa_N = mkN "kappa" masculine ; -- tocheck
lin kaput_A = mkA "fini" ; -- tocheck
lin karachi_PN = mkPN "Karâchi" ; -- status=guess src=geonames
lin karaoke_N = mkN "karaoke" masculine ; -- tocheck
lin karat_N = mkN "carat" ; -- UWN
lin karate_N = mkN "karaté" masculine ; -- tocheck
lin karlsruhe_PN = mkPN "Karlsruhe" ; -- status=guess src=geonames
lin karma_N = mkN "Karma" | mkN "karma" ; -- UWN
lin karyokinesis_N = mkN "caryocinèse" ; -- UWN
lin karyotype_N = mkN "caryotype" masculine ; -- tocheck
lin kasbah_N = mkN "casbah" | mkN "kasbah" ; -- UWN
lin kasha_N = mkN "kacha" feminine ; -- tocheck
lin kassel_PN = mkPN "Cassel" ; -- status=guess src=geonames
lin katabatic_A = mkA "catabatique" ; -- UWN
lin katherine_PN = mkPN "Katherine" ; -- status=guess src=geonames
lin katowice_PN = mkPN "Katowice" ; -- status=guess src=geonames
lin kava_N = mkN "kava" | mkN "kava-kava" | mkN "kawa" ; -- UWN
lin kayak_N = mkN "kayak" masculine ; -- tocheck
lin kazan_PN = mkPN "Kazan" ; -- status=guess src=geonames
lin kazoo_N = mkN "kazoo" ; -- UWN
lin kea_N = mkN "kéa" masculine ; -- tocheck
lin kebab_N = mkN "kebab" masculine ; -- tocheck
lin keel_N = mkN "quille" feminine ; -- tocheck
lin keen_A = mkA "aigu" | mkA "incisif" | mkA "perçant" | mkA "pointu" | mkA "vif" ; -- UWN
lin keen_V = mkV "attacher" | mkV "tenir" ; -- UWN
lin keep_N = mkN "donjon" masculine ; -- tocheck
lin keep_V = mkV "rester" ; ----
lin keep_V2 = mkV2 "garder" ;
lin keep_V2A = mkV2A (mkV "garder") | mkV2A (mkV "conserver") ;
lin keep_VV = aVV (mkV "continuer") ;
lin keep_around_V2 = prepV2 OP_keep_V OP_around_Prep ; -- guess-p-verb
lin keep_at_V2 = prepV2 OP_keep_V OP_at_Prep ; -- guess-p-verb
lin keep_away_V2 = mkV2 (advV OP_keep_V OP_away_Adv ) ; -- guess-p-verb
lin keep_back_V = mkV "refuser" | mkV "retenir" ; -- UWN
lin keep_back_V2 = mkV2 (advV OP_keep_V OP_back_Adv ) ; -- guess-p-verb
lin keep_down_V2 = prepV2 OP_keep_V OP_down_Prep ; -- guess-p-verb
lin keep_from_V2 = prepV2 OP_keep_V OP_from_Prep ; -- guess-p-verb
lin keep_in_V2 = prepV2 OP_keep_V OP_in_Prep ; -- guess-p-verb
lin keep_ing_V2V = variants {} ; -- guess-p-verb
lin keep_off_V2 = prepV2 OP_keep_V OP_off_Prep ; -- guess-p-verb
lin keep_on_V = advV OP_keep_V OP_on_Adv ; -- guess-p-verb
lin keep_on_V2 = prepV2 OP_keep_V OP_on_Prep ; -- guess-p-verb
lin keep_out_V = advV OP_keep_V OP_out_Adv ; -- guess-p-verb
lin keep_out_V2 = prepV2 OP_keep_V OP_out_Prep ; -- guess-p-verb
lin keep_over_V2 = prepV2 OP_keep_V OP_over_Prep ; -- guess-p-verb
lin keep_to_V2 = prepV2 OP_keep_V OP_to_Prep ; -- guess-p-verb
lin keep_to_V2V = variants {} ; -- guess-p-verb
lin keep_up_V = advV OP_keep_V OP_up_Adv ; -- guess-p-verb
lin keep_up_V2 = prepV2 OP_keep_V OP_up_Prep ; -- guess-p-verb
lin keep_up_at_V2 = prepV2 (advV OP_keep_V OP_up_Adv ) OP_at_Prep ; -- guess-p-verb
lin keep_up_with_V2 = prepV2 (advV OP_keep_V OP_up_Adv ) OP_with_Prep ; -- guess-p-verb
lin keeper_N = mkN "conservateur" masculine | mkN "gardien" masculine | mkN "gâche" feminine | mkN "passant" masculine ; -- tocheck
lin keeping_N = mkN "avoir" | mkN "conservation" | mkN "détention" | mkN "tenue" ; -- UWN
lin keepsake_N = mkN "souvenir" masculine ; -- tocheck
lin keeshond_N = mkN "keeshond" ; -- UWN
lin keg_N = mkN "tonnelet" masculine ; -- tocheck
lin keighley_PN = mkPN "Keighley" ; -- status=guess src=geonames
lin keith_PN = mkPN "Keith" ; -- status=guess src=geonames
lin keloid_N = mkN "chéloïde" ; -- UWN
lin kelp_N = mkN "laminaire" feminine ; -- tocheck
lin kelso_PN = mkPN "Kelso" ; -- status=guess src=geonames
lin kelty_PN = mkPN "Kelty" ; -- status=guess src=geonames
lin kelvin_N = mkN "kelvin" masculine ; -- tocheck
lin kemsing_PN = mkPN "Kemsing" ; -- status=guess src=geonames
lin kendal_PN = mkPN "Kendal" ; -- status=guess src=geonames
lin kenilworth_PN = mkPN "Kenilworth" ; -- status=guess src=geonames
lin kennel_N = mkN "chenil" masculine ; -- tocheck
lin kenning_N = mkN "Kenning" | mkN "kenning" | mkN "kennings" ; -- UWN
lin kensington_PN = mkPN "Kensington" ; -- status=guess src=geonames
lin kent_PN = mkPN "Kent" ; -- status=guess src=geonames
lin kenya_PN = mkPN "Kenya" ; -- status=guess src=geonames
lin kepi_N = mkN "képi" masculine ; -- tocheck
lin keratin_N = mkN "kératine" ; -- tocheck
lin keratitis_N = mkN "kératite" feminine ; -- tocheck
lin keratoacanthoma_N = mkN "kératoacanthome" ; -- UWN
lin keratoconjunctivitis_N = mkN "kératoconjonctivite" feminine ; -- tocheck
lin keratoconus_N = mkN "Kératocône" | mkN "kératocône" ; -- UWN
lin keratosis_N = mkN "kératose" ; -- UWN
lin kerb_N = mkN "bordure" feminine ; -- tocheck
lin kerchief_N = mkN "foulard" masculine ; -- tocheck
lin kernel_N = mkN "noyau" masculine ; -- tocheck
lin kernite_N = mkN "kernite" ; -- UWN
lin kerosene_N = mkN "kérosène" masculine ; -- tocheck
lin kerygma_N = mkN "kérygme" ; -- UWN
lin kestrel_N = mkN "crécerelle" feminine ; -- tocheck
lin ketch_N = mkN "Ketch" | mkN "ketch" ; -- UWN
lin ketchup_N = mkN "ketchup" masculine ; -- tocheck
lin keteleeria_N = mkN "keteleeria" ; -- UWN
lin ketone_N = mkN "cétone" feminine ; -- tocheck
lin ketonemia_N = mkN "acétonémie" ; -- UWN
lin ketose_N = mkN "cétose" feminine ; -- tocheck
lin kettering_PN = mkPN "Kettering" ; -- status=guess src=geonames
lin kettle_N = mkN "bouilloire" feminine ; -- tocheck
lin kettledrum_N = mkN "bouilloire" | mkN "chaudière" | mkN "timbale" | mkN "timbales" ; -- UWN
lin key_1_N = variants {} ; --
lin key_2_N = mkN "clef" | mkN "clé" | mkN "système_tonal" | mkN "tonalité" | mkN "touche" ; -- UWN
lin key_3_N = mkN "touche" feminine | mkN "clef" feminine | mkN "légende" feminine | mkN "caye" feminine ; -- tocheck ---- sense to be split
lin key_A = variants {} ; --
lin key_N = mkN "touche" feminine | mkN "clef" feminine | mkN "légende" feminine | mkN "caye" feminine ; -- tocheck
lin keyboard_N = mkN "clavier" masculine ; -- tocheck
lin keyboardist_N = mkN "claviériste" ; -- tocheck
lin keynsham_PN = mkPN "Keynsham" ; -- status=guess src=geonames
lin keystone_N = mkN "clef" | mkN "clef_de_voûte" | mkN "clé" | mkN "voûte" ; -- UWN
lin keyword_N = mkN "mot-clé" ; -- tocheck
lin kg_N = mkN "k" | mkN "kilo" | mkN "kilogramme" ; -- UWN
lin khaki_A = mkA "kaki" ; -- UWN
lin khaki_N = mkN "kaki" ; -- UWN
lin khamsin_N = mkN "kamsin" | mkN "khamsin" ; -- UWN
lin khan_N = mkN "khan" masculine ; -- tocheck
lin khartoum_PN = mkPN "Khartoum" ; -- status=guess src=geonames
lin kibble_N = mkN "concasser" ; -- tocheck
lin kibbutz_N = mkN "kibboutz" masculine ; -- tocheck
lin kick_N = mkN "coup de pied" "coups de pied" masculine ;
lin kick_V = mkV (mkV "donner") "un coup de pied" ;
lin kick_V2 = mkV2 (mkV (mkV "donner") "un coup de pied") ;
lin kick_about_V2 = prepV2 OP_kick_V OP_about_Prep ; -- guess-p-verb
lin kick_around_V2 = prepV2 OP_kick_V OP_around_Prep ; -- guess-p-verb
lin kick_around_with_V2 = prepV2 (advV OP_kick_V OP_around_Adv ) OP_with_Prep ; -- guess-p-verb
lin kick_back_V = advV OP_kick_V OP_back_Adv ; -- guess-p-verb
lin kick_back_V2 = mkV2 (advV OP_kick_V OP_back_Adv ) ; -- guess-p-verb
lin kick_down_V2 = prepV2 OP_kick_V OP_down_Prep ; -- guess-p-verb
lin kick_in_V = advV OP_kick_V OP_in_Adv ; -- guess-p-verb
lin kick_in_V2 = prepV2 OP_kick_V OP_in_Prep ; -- guess-p-verb
lin kick_off_V = mkV "débuter" ; -- UWN
lin kick_off_V2 = prepV2 OP_kick_V OP_off_Prep ; -- guess-p-verb
lin kick_out_V2 = prepV2 OP_kick_V OP_out_Prep ; -- guess-p-verb
lin kick_through_V = advV OP_kick_V OP_through_Adv ; -- guess-p-verb
lin kick_up_V = advV OP_kick_V OP_up_Adv ; -- guess-p-verb
lin kicker_N = mkN "kicker" ; -- UWN
lin kickstand_N = mkN "béquille" feminine ; -- tocheck
lin kid_N = mkN "enfant" | mkN "gamin" | mkN "chevreau" masculine ;
lin kid_V2 = mkV2 (reflV (mkV "moquer")) P.genitive | mkV2 (mkV "blaguer") ; -- tocheck
lin kidderminster_PN = mkPN "Kidderminster" ; -- status=guess src=geonames
lin kidlington_PN = mkPN "Kidlington" ; -- status=guess src=geonames
lin kidnap_V2 = mkV2 (mkV "kidnapper") ; -- tocheck
lin kidnapping_N = mkN "enlèvement" ; -- tocheck
lin kidney_N = mkN "rognon" masculine | mkN "rein" masculine ; -- tocheck
lin kidsgrove_PN = mkPN "Kidsgrove" ; -- status=guess src=geonames
lin kieserite_N = mkN "kiesérite" feminine ; -- tocheck
lin kiev_PN = mkPN "Kiev" ; -- status=guess src=geonames
lin kike_N = mkN "youpin" masculine ; -- tocheck
lin kilbirnie_PN = mkPN "Kilbirnie" ; -- status=guess src=geonames
lin kildare_PN = mkPN "Kildare" ; -- status=guess src=geonames
lin kilkenny_PN = mkPN "Kilkenny" ; -- status=guess src=geonames
lin kill_N = mkN "mort" feminine | mkN "meurtre" masculine | mkN "victime" feminine ; -- tocheck
lin kill_V = variants {} ; -- L.kill_V2 ;
lin kill_V2 = L.kill_V2 ;
lin kill_off_V2 = prepV2 OP_kill_V OP_off_Prep ; -- guess-p-verb
lin killable_A = mkA "tuable" ; -- tocheck
lin killarney_PN = mkPN "Killarney" ; -- status=guess src=geonames
lin killer_N = mkN "tueur" masculine | mkN "meurtrier" masculine ; -- tocheck
lin killing_N = mkN "meurtre" masculine ; -- tocheck
lin killjoy_N = mkN "pisse-froid" | mkN "rabat-joie" | mkN "trouble-fête" ; -- UWN
lin kilmarnock_PN = mkPN "Kilmarnock" ; -- status=guess src=geonames
lin kiln_N = mkN "four" masculine ; -- tocheck
lin kilo_N = mkN "kilo" masculine ; -- tocheck
lin kilobit_N = mkN "KB" | mkN "kilooctet" | mkN "octet" ; -- UWN
lin kilobyte_N = mkN "kilooctet" masculine ; -- tocheck
lin kilocycle_N = mkN "kilohertz" ; -- UWN
lin kilogram_N = mkN "kilogramme" masculine ; -- tocheck
lin kilohertz_N = mkN "kilohertz" ; -- UWN
lin kilolitre_N = mkN "mètre_cube" ; -- UWN
lin kilometre_N = mkN "kilomètre" masculine ; -- tocheck
lin kiloton_N = mkN "kilotonne" feminine ; -- tocheck
lin kilovolt_N = mkN "kilovolt" | mkN "kv" ; -- UWN
lin kilowatt_N = mkN "kilowatt" masculine ; -- tocheck
lin kilsyth_PN = mkPN "Kilsyth" ; -- status=guess src=geonames
lin kilt_N = mkN "kilt" masculine ; -- tocheck
lin kilwinning_PN = mkPN "Kilwinning" ; -- status=guess src=geonames
lin kimberley_PN = mkPN "Kimberley" ; -- status=guess src=geonames
lin kimberlite_N = mkN "kimberlite" ; -- UWN
lin kimono_N = mkN "kimono" masculine ; -- tocheck
lin kin_N = mkN "proches" ; -- tocheck
lin kinase_N = mkN "Kinase" | mkN "kinase" ; -- UWN
lin kind_A = mkA "favorable" | mkA "gentil" ; -- tocheck
lin kind_N = mkN "espèce" | mkN "genre" masculine ;
lin kindergarten_N = mkN "maternelle" ; -- tocheck
lin kindle_V2 = mkV2 (mkV "allumer") | mkV2 (mkV "exalter") ; -- tocheck
lin kindliness_N = mkN "obligeance" ; -- UWN
lin kindling_N = mkN "allumage" | mkN "inflammation" | mkN "éclairage" ; -- UWN
lin kindly_A = variants {} ;
lin kindness_N = mkN "bonté" feminine ; -- tocheck
lin kindred_N = mkN "clan" | mkN "tribu" ; -- UWN
lin kinematics_N = mkN "cinématique" ; -- UWN
lin kinescope_N = mkN "kinéscope" ; -- UWN
lin kinesiology_N = mkN "kinésiologie" feminine ; -- tocheck
lin kinesthesia_N = mkN "kinesthésie" feminine ; -- tocheck
lin kinesthesis_N = mkN "kinesthésie" ; -- UWN
lin kinetic_A = mkA "cinétique" ; -- tocheck
lin kinetics_N = mkN "Cinétique" | mkN "cinétique" | mkN "dynamique" ; -- UWN
lin king_N = L.king_N ;
lin kingcup_N = mkN "bouton-d'or" | mkN "fleur_de_l'impatience" | mkN "gobet_du_diable" | mkN "grenouillette" | mkN "renoncule" ; -- UWN
lin kingdom_N = mkN "royaume" masculine | mkN "règne" masculine ; -- tocheck
lin kingfish_N = mkN "martin-pêcheur" ; -- tocheck
lin kingfisher_N = mkN "martin-pêcheur" masculine ; -- tocheck
lin kinglet_N = mkN "regulidae" | mkN "régulidés" ; -- UWN
lin kinglike_A = mkA "royal" ; -- UWN
lin kingly_A = mkA "royal" ; -- UWN
lin kingsbury_PN = mkPN "Kingsbury" ; -- status=guess src=geonames
lin kingship_N = mkN "royauté" feminine ; -- tocheck
lin kingsteignton_PN = mkPN "Kingsteignton" ; -- status=guess src=geonames
lin kingston_PN = mkPN "Kingston" ; -- status=guess src=geonames
lin kinin_N = mkN "Cytokinine" | mkN "cytokinine" ; -- UWN
lin kink_N = mkN "hic" masculine | mkN "coude" masculine ; -- tocheck
lin kinkajou_N = mkN "kinkajou" masculine ; -- tocheck
lin kinshasa_PN = mkPN "Kinshasa" ; -- status=guess src=geonames
lin kinship_N = mkN "parenté" feminine ; -- tocheck
lin kinsman_N = mkN "parent" ; -- UWN
lin kiosk_N = mkN "kiosque" masculine ; -- tocheck
lin kipper_N = mkN "hareng_saur" | mkN "kipper" ; -- UWN
lin kirk_N = mkN "kirk" ; -- UWN
lin kirkby_PN = mkPN "Kirkby" ; -- status=guess src=geonames
lin kirkcaldy_PN = mkPN "Kirkcaldy" ; -- status=guess src=geonames
lin kirkham_PN = mkPN "Kirkham" ; -- status=guess src=geonames
lin kirkintilloch_PN = mkPN "Kirkintilloch" ; -- status=guess src=geonames
lin kirkwall_PN = mkPN "Kirkwall" ; -- status=guess src=geonames
lin kirpan_N = mkN "kirpan" ; -- tocheck
lin kiss_N = mkN "baiser" masculine ; -- tocheck
lin kiss_V2 = mkV2 (mkV "embrasser") | mkV2 (reflV (mkV "embrasser")) | mkV2 (mkV "effleurer") ; -- tocheck
lin kiss_off_V = advV (lin V OP_kiss_V2) OP_off_Adv ; -- guess-p-verb
lin kiss_off_V2 = prepV2 (lin V OP_kiss_V2) OP_off_Prep ; -- guess-p-verb
lin kiss_up_to_V2 = prepV2 (advV (lin V OP_kiss_V2) OP_up_Adv ) OP_to_Prep ; -- guess-p-verb
lin kisser_N = mkN "Physiognomonie" | mkN "physiognomonie" | mkN "physionomie" | mkN "visage" ; -- UWN
lin kit_N = mkN "lapereau" masculine | mkN "nécessaire" masculine ; -- tocheck
lin kitchen_N = mkN "cuisine" feminine ; -- tocheck
lin kitchenette_N = mkN "cuisinette" | mkN "kitchenette" ; -- UWN
lin kite_N = mkN "cerf-volant" masculine | mkN "milan" masculine ; -- tocheck
lin kitsch_A = mkA "kitsch" ; -- tocheck
lin kitsch_N = mkN "kitsch" masculine ; -- tocheck
lin kitten_N = mkN "chaton" masculine | mkN "lapereau" ; -- tocheck
lin kitty_N = mkN "minet" masculine ; -- tocheck
lin kiwi_N = mkN "kiwi" masculine ; -- tocheck
lin klaxon_N = mkN "klaxon" masculine ; -- tocheck
lin klebsiella_N = mkN "klebsiella" ; -- UWN
lin kleenex_N = mkN "Kleenex" masculine ; -- tocheck
lin kleptomania_N = mkN "cleptomanie" ; -- tocheck
lin kleptomaniac_N = mkN "kleptomane" ; -- tocheck
lin kludge_N = mkN "kludge" ; -- UWN
lin klystron_N = mkN "klystron" ; -- UWN
lin km_N = mkN "borne" | mkN "kilomètre" | mkN "km" ; -- UWN
lin knack_N = mkN "chic" masculine ; -- tocheck
lin knacker_N = mkN "équarrisseur" masculine ; -- tocheck
lin knackered_A = mkA "foutu" | mkA "éreinté" ; -- tocheck
lin knackwurst_N = mkN "saucisse_de_francfort" ; -- UWN
lin knapsack_N = mkN "havresac" | mkN "sac_à_dos" ; -- UWN
lin knapweed_N = mkN "centaurée" ; -- UWN
lin knaresborough_PN = mkPN "Knaresborough" ; -- status=guess src=geonames
lin knave_N = mkN "voyou" masculine | mkN "page" masculine | mkN "valet" masculine ; -- tocheck
lin knavery_N = mkN "coup" masculine ; -- tocheck
lin knead_V2 = mkV2 (mkV "pétrir") ; -- tocheck
lin knee_N = L.knee_N ;
lin kneecap_N = mkN "rotule" feminine ; -- tocheck
lin kneel_N = mkN "agenouillement" | mkN "baraquage" | mkN "génuflexion" ; -- UWN
lin kneel_V = mkV (reflV (mkV "agenouiller")) ; -- tocheck
lin knick_knack_N = mkN "bric-à-brac" ; -- UWN
lin knife_N = mkN "couteau" masculine ; -- tocheck
lin knight_N = mkN "cavalier" masculine | mkN "chevalier" masculine ; -- tocheck
lin knightly_A = mkA "chevaleresque" | mkA "galant" ; -- UWN
lin kniphofia_N = mkN "kniphofia" | mkN "tritoma" ; -- UWN
lin knit_V = variants {} ; -- mkV2 (reflV (mkV "souder")) | mkV2 (mkV "tricoter") | mkV2 (mkV I.construire_V2) | mkV2 (mkV "souder") ; -- tocheck
lin knit_V2 = mkV2 (reflV (mkV "souder")) | mkV2 (mkV "tricoter") | mkV2 (mkV I.construire_V2) | mkV2 (mkV "souder") ; -- tocheck
lin knitting_N = mkN "tricotage" masculine | mkN "tricot" masculine ; -- tocheck
lin knitwear_N = mkN "tricot" masculine ; -- tocheck
lin knobbly_A = mkA "noueux" ; -- tocheck
lin knobby_A = mkA "noueux" ; -- UWN
lin knock_N = mkN "coup" masculine ; -- tocheck
lin knock_V = mkV "frapper" ; -- UWN
lin knock_V2 = mkV2 (mkV "frapper") ; -- tocheck
lin knock_about_V2 = prepV2 OP_knock_V OP_about_Prep ; -- guess-p-verb
lin knock_around_V2 = prepV2 OP_knock_V OP_around_Prep ; -- guess-p-verb
lin knock_back_V2 = mkV2 (advV OP_knock_V OP_back_Adv ) ; -- guess-p-verb
lin knock_down_V2 = prepV2 OP_knock_V OP_down_Prep ; -- guess-p-verb
lin knock_it_off_V2 = variants {} ; -- guess-p-verb
lin knock_off_V = advV OP_knock_V OP_off_Adv ; -- guess-p-verb
lin knock_off_V2 = prepV2 OP_knock_V OP_off_Prep ; -- guess-p-verb
lin knock_out_V = advV OP_knock_V OP_out_Adv ; -- guess-p-verb
lin knock_out_V2 = prepV2 OP_knock_V OP_out_Prep ; -- guess-p-verb
lin knock_over_V = advV OP_knock_V OP_over_Adv ; -- guess-p-verb
lin knock_together_V2 = mkV2 (advV OP_knock_V OP_together_Adv ) ; -- guess-p-verb
lin knock_up_V = advV OP_knock_V OP_up_Adv ; -- guess-p-verb
lin knock_up_V2 = prepV2 OP_knock_V OP_up_Prep ; -- guess-p-verb
lin knockoff_N = mkN "clone" ; -- UWN
lin knoll_N = mkN "monticule" masculine ; -- tocheck
lin knot_N = mkN "noeud" masculine ; -- tocheck
lin knot_V2 = mkV2 (mkV "nouer") ; -- tocheck
lin knottingley_PN = mkPN "Knottingley" ; -- status=guess src=geonames
lin knout_N = mkN "knout" masculine ; -- tocheck
lin know_V = mkV I.savoir_V2 ;
lin know_V2 = L.know_V2 ;
lin know_VQ = L.know_VQ ;
lin know_VS = L.know_VS ;
lin know_how_N = mkN "savoir-faire" ; -- tocheck
lin knowledge_N = mkN "connaissance" feminine | mkN "connaissances" ; -- tocheck
lin knowledgeability_N = mkN "initiation" ; -- UWN
lin knowledgeable_A = mkA "savant" ; -- tocheck
lin known_A = variants {} ; --
lin knuckle_N = mkN "articulation" | mkN "articulation_du_doigt" ; -- UWN
lin knutsford_PN = mkPN "Knutsford" ; -- status=guess src=geonames
lin koala_N = mkN "koala" masculine ; -- tocheck
lin koan_N = mkN "aporie" ; -- tocheck
lin kobe_PN = mkPN "Kōbe" ; -- status=guess src=geonames
lin koblenz_PN = mkPN "Coblence" ; -- status=guess src=geonames
lin kohl_N = mkN "kohl" ; -- UWN
lin kohleria_N = mkN "kohleria" ; -- UWN
lin kohlrabi_N = mkN "chou-rave" masculine ; -- tocheck
lin kolkhoz_N = mkN "kolkhoze" masculine ; -- tocheck
lin komondor_N = mkN "komondor" ; -- UWN
lin kos_N = mkN "cos" | mkN "kos" ; -- UWN
lin kosher_A = mkA "casher" ; -- tocheck
lin kosher_N = mkN "casher" ; -- UWN
lin koumiss_N = mkN "kumiz" masculine ; -- tocheck
lin kowtow_N = mkN "kowtow" masculine ; -- tocheck
lin kowtow_V = mkV (reflV (mkV "prosterner")) ; -- tocheck
lin kraft_N = mkN "kraft" ; -- UWN
lin krait_N = mkN "bongare" masculine ; -- tocheck
lin krasnoyarsk_PN = mkPN "Krasnoïarsk" ; -- status=guess src=geonames
lin krefeld_PN = mkPN "Krefeld" ; -- status=guess src=geonames
lin kremlin_N = mkN "kremlin" ; -- UWN
lin krigia_N = mkN "krigia" ; -- UWN
lin kris_N = mkN "keris" | mkN "kris" | mkN "kriss" ; -- UWN
lin krona_N = mkN "couronne" feminine ; -- tocheck
lin krone_N = mkN "couronne" feminine ; -- tocheck
lin krummhorn_N = mkN "cromorne" ; -- UWN
lin krypton_N = mkN "krypton" masculine ; -- tocheck
lin kudos_N = mkN "louange" feminine ; -- tocheck
lin kumquat_N = mkN "kumquat" masculine ; -- tocheck
lin kunming_PN = mkPN "Kunming" ; -- status=guess src=geonames
lin kuwait_PN = mkPN "Koweït" ; -- status=guess src=geonames
lin kuybyshev_PN = mkPN "Kouïbychev" ; -- status=guess src=geonames
lin kvass_N = mkN "kvas" masculine ; -- tocheck
lin kvetch_N = mkN "plaintif" ; -- tocheck
lin kyanite_N = mkN "disthène" ; -- UWN
lin kylix_N = mkN "kylix" ; -- UWN
lin kyoto_PN = mkPN "Kyōto" ; -- status=guess src=geonames
lin la_N = mkN "la" masculine ; -- tocheck
lin lab_N = mkN "lab" | mkN "labo" | mkN "laboratoire" ; -- UWN
lin lab_PN = mkPN "Lab" ; -- status=guess src=geonames
lin label_N = mkN "étiquette" feminine ; -- tocheck
lin label_V = variants {} ; -- mkV3 (mkV "étiqueter") ; -- tocheck
lin label_V2 = variants {} ; -- mkV3 (mkV "étiqueter") ; -- tocheck
lin label_V3 = mkV3 (mkV "étiqueter") ; -- tocheck
lin labium_N = mkN "lèvre" feminine ; -- tocheck
lin laboratory_N = mkN "laboratoire" masculine ; -- tocheck
lin labored_A = mkA "lourd" ; -- UWN
lin laborer_N = mkN "cric" | mkN "ouvrier" | mkN "valet" ; -- UWN
lin laborious_A = mkA "laborieux" ; -- tocheck
lin labour_N = mkN "accouchement" masculine | mkN "ouvrage" masculine ; -- tocheck
lin labour_V2 = mkV2 (mkV "travailler") ; -- tocheck
lin labourer_N = mkN "cric" | mkN "ouvrier" | mkN "valet" ; -- UWN
lin labrador_PN = mkPN "Labrador" ; -- status=guess src=geonames
lin labyrinth_N = mkN "labyrinthe" masculine ; -- tocheck
lin labyrinthine_A = mkA "labyrinthique" ; -- tocheck
lin labyrinthitis_N = mkN "labyrinthite" | mkN "otite_interne" ; -- UWN
lin lac_N = mkN "laque" feminine ; -- tocheck
lin lace_N = mkN "lacet" masculine | mkN "dentelle" feminine ; -- tocheck
lin lacerate_V2 = mkV2 (mkV "lacérer") ; -- tocheck
lin laceration_N = mkN "lacération" feminine ; -- tocheck
lin lachrymal_A = mkA "lacrymal" ; -- tocheck
lin lachrymose_A = mkA "lacrymal" ; -- tocheck
lin lacing_N = mkN "fessée" | mkN "raclée" ; -- UWN
lin lack_N = mkN "manque" masculine ; -- tocheck
lin lack_V = mkV "manquer" ; -- UWN
lin lack_V2 = mkV2 (mkV "manquer") ; -- tocheck
lin lackadaisical_A = mkA "languide" ; -- tocheck
lin lackey_N = mkN "laquais" masculine ; -- tocheck
lin lacking_A = variants {} ; --
lin laconic_A = mkA "laconique" ; -- tocheck
lin lacquer_V2 = mkV2 (mkV "laquer") ; -- tocheck
lin lacrimal_A = mkA "lacrymal" ; -- UWN
lin lacrimation_N = mkN "arrosage" ; -- UWN
lin lacrimatory_A = mkA "lacrymogène" ; -- UWN
lin lacrosse_N = mkN "crosse" feminine ; -- tocheck
lin lactation_N = mkN "lactation" feminine | mkN "allaitement" masculine ; -- tocheck
lin lactobacillus_N = mkN "lactobacille" | mkN "lactobacillus" ; -- UWN
lin lactose_N = mkN "lactose" masculine ; -- tocheck
lin lacustrine_A = mkA "lacustre" ; -- tocheck
lin lad_N = mkN "palefrenier" masculine | mkN "garçon" masculine ; -- tocheck
lin ladder_N = mkN "échelle" feminine ; -- tocheck
lin laddie_N = mkN "fiston" | mkN "garçon" | mkN "laddie" ; -- UWN
lin lade_V2 = mkV2 (mkV "charger") ; -- tocheck
lin laden_A = mkA "chargé" ; -- tocheck
lin lading_N = mkN "Transport_de_marchandises" | mkN "cargaison" | mkN "cargo" | mkN "charge" | mkN "chargement" | mkN "fret" | mkN "transport_de_marchandises" ; -- UWN
lin ladle_N = mkN "louche" ; -- tocheck
lin lady_N = mkN "dame" feminine | mkN "madame" "mesdames" feminine ;
lin ladybird_N = mkN "coccinelle" feminine ; -- tocheck
lin ladyfinger_N = mkN "boudoir" ; -- tocheck
lin laelia_N = mkN "laelia" ; -- UWN
lin laggard_N = mkN "faux_bourdon" ; -- UWN
lin lagoon_N = mkN "lagon" masculine ; -- tocheck
lin lagos_PN = mkPN "Lagos" ; -- status=guess src=geonames
lin lahar_N = mkN "lahar" masculine ; -- tocheck
lin lahore_PN = mkPN "Lahore" ; -- status=guess src=geonames
lin laic_A = mkA "laïque" | mkA "mondain" | mkA "profane" | mkA "séculaire" | mkA "séculier" ; -- UWN
lin lair_N = mkN "tanière" feminine | mkN "antre" masculine ; -- tocheck
lin laity_N = mkN "laïcat" ; -- tocheck
lin lake_N = L.lake_N ;
lin lakenheath_PN = mkPN "Lakenheath" ; -- status=guess src=geonames
lin lama_N = mkN "lama" masculine ; -- tocheck
lin lamb_N = mkN "agneau" masculine ; -- tocheck
lin lambaste_V2 = mkV2 (mkV "blamer") | mkV2 (mkV "tabbasser") ; -- tocheck
lin lambda_N = mkN "lambda" masculine ; -- tocheck
lin lambent_A = mkA "lumineux" ; -- UWN
lin lambeth_PN = mkPN "Lambeth" ; -- status=guess src=geonames
lin lambskin_N = mkN "parchemin" ; -- UWN
lin lame_A = mkA "boiteux" | mkA "nul" | mkA "boîteux" ; -- tocheck
lin lamella_N = mkN "lamelle" feminine ; -- tocheck
lin lament_N = mkN "lamentation" feminine | mkN "complainte" feminine ; -- tocheck
lin lament_V2 = mkV2 (mkV I.plaindre_V2) | mkV2 (reflV (mkV "lamenter")) ; -- tocheck
lin lamentable_A = mkA "lamentable" ; -- tocheck
lin lamentation_N = mkN "gémissement" ; -- tocheck
lin lamina_N = mkN "lame" ; -- UWN
lin laminate_N = mkN "lamifié" masculine ; -- tocheck
lin laminate_V2 = mkV2 (mkV "lamifier") ; -- tocheck
lin lamination_N = mkN "laminage" masculine ; -- tocheck
lin laminitis_N = mkN "fondateur" | mkN "fourbure" ; -- UWN
lin lamp_N = L.lamp_N ;
lin lampoon_N = mkN "pasquin" masculine ; -- tocheck
lin lamppost_N = mkN "réverbère" masculine ; -- tocheck
lin lamprey_N = mkN "lamproie" feminine ; -- tocheck
lin lampshade_N = mkN "abat-jour" masculine ; -- tocheck
lin lanai_N = mkN "lanai" ; -- UWN
lin lanark_PN = mkPN "Lanark" ; -- status=guess src=geonames
lin lancaster_PN = mkPN "Lancaster" ; -- status=guess src=geonames
lin lance_N = mkN "lance" feminine ; -- tocheck
lin lancelet_N = mkN "acrâniens" | mkN "amphioxus" | mkN "cephalochordata" | mkN "céphalochordés" ; -- UWN
lin lanceolate_A = mkA "lancéolé" ; -- UWN
lin lancet_N = mkN "lancette" feminine ; -- tocheck
lin lancing_PN = mkPN "Lancing" ; -- status=guess src=geonames
lin land_N = mkN "terre" feminine | mkN "pays" masculine ;
lin land_V = variants {} ; -- mkV2 (mkV "poser") | mkV2 (reflV (mkV "poser")) ; -- tocheck
lin land_V2 = mkV2 (mkV "poser") | mkV2 (reflV (mkV "poser")) ; -- tocheck
lin land_in_V2 = prepV2 OP_land_V OP_in_Prep ; -- guess-p-verb
lin land_up_in_V2 = prepV2 (advV OP_land_V OP_up_Adv ) OP_in_Prep ; -- guess-p-verb
lin land_with_V3 = variants {} ; -- guess-p-verb
lin landau_N = mkN "landau" ; -- UWN
lin lander_N = mkN "atterrisseur" masculine ; -- tocheck
lin landfill_N = mkN "décharge" feminine ; -- tocheck
lin landgrave_N = mkN "landgrave" masculine ; -- tocheck
lin landholder_N = mkN "propriétaire_terrien" ; -- UWN
lin landing_N = mkN "palier" masculine | mkN "atterrissage" masculine ; -- tocheck
lin landlady_N = mkN "aubergiste" ; -- UWN
lin landlocked_A = mkA "enclavé" ; -- tocheck
lin landlord_N = mkN "propriétaire" | mkN "patron" masculine ; -- tocheck
lin landmark_N = mkN "site" masculine | mkN "repère" masculine ; -- tocheck
lin landowner_N = mkN "propriétaire_terrien" ; -- UWN
lin landrover_N = mkN "jeep" ; -- UWN
lin landscape_N = mkN "paysage" ; -- tocheck
lin landscapist_N = mkN "architecte_paysagiste" ; -- UWN
lin lane_N = mkN "voie" feminine | mkN "chemin" masculine ; -- tocheck
lin language_N = L.language_N ;
lin languid_A = mkA "faiblard" ; -- tocheck
lin languish_V = mkV (mkV "dépérir") | mkV (mkV "péricliter") | mkV (mkV "languir") ; -- tocheck
lin languor_N = mkN "langueur" ; -- tocheck
lin languorous_A = mkA "langoureux" ; -- tocheck
lin lanky_A = mkA "grand" ; -- tocheck
lin lanolin_N = mkN "lanoline" feminine ; -- tocheck
lin lantana_N = mkN "lantana" ; -- UWN
lin lantern_N = mkN "lanterne" feminine ; -- tocheck
lin lanternfish_N = mkN "poissons-lanternes" ; -- tocheck
lin lanthanum_N = mkN "lanthane" masculine ; -- tocheck
lin lanugo_N = mkN "lanugo" ; -- UWN
lin laos_PN = mkPN "Laos" ; -- status=guess src=geonames
lin lap_N = mkN "côté" | mkN "genoux" ; -- tocheck
lin lap_V = mkV "laver" ; -- UWN
lin lap_V2 = mkV2 (mkV "laper") ; -- tocheck
lin laparotomy_N = mkN "laparotomie" feminine ; -- tocheck
lin lap_dog_N = mkN "chien-chien" masculine ; -- tocheck
lin lapel_N = mkN "revers" masculine ; -- tocheck
lin lapis_lazuli_N = mkN "lapis-lazuli" | mkN "lazuli" ; -- UWN
lin lapse_N = mkN "erreur" ; -- tocheck
lin lapse_V = mkV "passer" | mkV "évier" ; -- UWN
lin lapsed_A = mkA "caduc" | mkA "vieux" ; -- UWN
lin laptop_N = mkN "ordinateur" | mkN "ordinateur_portable" | mkN "portable" ; -- UWN
lin lapwing_N = mkN "vanneau" ; -- tocheck
lin larboard_N = mkN "babord" masculine ; -- tocheck
lin larceny_N = mkN "vol" ; -- UWN
lin larch_N = mkN "mélèze" masculine ; -- tocheck
lin lard_N = mkN "saindoux" masculine ; -- tocheck
lin larder_N = mkN "garde-manger" masculine ; -- tocheck
lin large_A = mkA "grand" ;
lin large_Adv = mkAdv "grand" | mkAdv "gros" ; -- UWN
lin large_scale_A = variants {} ; --
lin largess_N = mkN "largesse" feminine | mkN "largesses" ; -- tocheck
lin largesse_N = mkN "largesse" | mkN "magnanimité" ; -- UWN
lin largs_PN = mkPN "Largs" ; -- status=guess src=geonames
lin lariat_N = mkN "lasso" ; -- UWN
lin lark_N = mkN "alouette" feminine | mkN "lève-tôt" masculine ; -- tocheck
lin larkhall_PN = mkPN "Larkhall" ; -- status=guess src=geonames
lin larkspur_N = mkN "delphinium" | mkN "larkspur" | mkN "pied-d’alouette" | mkN "pied_d'alouette" | mkN "pied_d’alouette" ; -- UWN
lin larn_V = mkV "acquérir" | mkV "appartenir" | mkV "apprendre" | mkV "doter" | mkV "découvrir" | mkV "mourir" | mkV "naître" | mkV "obtenir" ; -- UWN
lin larne_PN = mkPN "Larne" ; -- status=guess src=geonames
lin larva_N = mkN "larve" feminine ; -- tocheck
lin larvicide_N = mkN "larvicide" ; -- UWN
lin laryngeal_A = mkA "laryngé" ; -- tocheck
lin laryngitis_N = mkN "laryngite" ; -- tocheck
lin laryngoscope_N = mkN "laryngoscope" ; -- UWN
lin larynx_N = mkN "larynx" masculine ; -- tocheck
lin lasagna_N = mkN "lasagne" feminine ; -- tocheck
lin lascivious_A = mkA "lascif" ; -- tocheck
lin lasciviousness_N = mkN "lascivité" ; -- UWN
lin laser_N = mkN "laser" masculine ; -- tocheck
lin lash_N = mkN "lanière" feminine ; -- tocheck
lin lash_V2 = mkV2 (mkV "gronder") | mkV2 (mkV "fouetter") ; -- tocheck
lin lash_out_V = mkV "attaquer" ; -- UWN
lin lasher_N = mkN "l'heure_des_sorcières" ; -- UWN
lin lashing_N = mkN "Flagellation" | mkN "flagellation" ; -- UWN
lin lass_N = mkN "demoiselle" feminine ; -- tocheck
lin lassitude_N = mkN "fatigue" | mkN "lassitude" | mkN "léthargie" ; -- UWN
lin lasso_N = mkN "lasso" ; -- UWN
lin last_1_A = prefixA (mkA "dernier") ;
lin last_2_A = mkA "dernier" ;
lin last_A = mkA "dernier" ;
lin last_V = variants {} ; -- mkV2 (mkV "durer") ; -- tocheck
lin lasting_A = mkA "permanent" ; -- tocheck
lin lat_N = mkN "lat" ; -- UWN
lin latch_N = mkN "loquet" masculine ; -- tocheck
lin late_A = mkA "tardif" ; ---- not A in Fre
lin late_Adv = mkAdv "tard" | mkAdv "en retard" ; ---- split : late in the night ; sorry I'm late
lin latecomer_N = mkN "retardataire" masculine ; -- tocheck
lin lately_Adv = adjAdv late_A ; -- -- derived
lin latent_A = mkA "latent" ; -- tocheck
lin later_Adv = mkAdv "plus tard" ;
lin lateral_A = mkA "latéral" ; -- UWN
lin laterality_N = mkN "dominance" | mkN "domination" ; -- UWN
lin laterite_N = mkN "latérite" ; -- UWN
lin latex_N = mkN "latex" masculine | mkN "latex" ; -- tocheck
lin lath_N = mkN "liteau" masculine ; -- tocheck
lin lathe_N = mkN "tour" masculine ; -- tocheck
lin lather_V2 = mkV2 (mkV "savonner") ; -- tocheck
lin lathery_A = mkA "mousseux" ; -- UWN
lin latin_A = variants {} ; --
lin latitude_N = mkN "latitude" feminine ; -- tocheck
lin latrine_N = mkN "latrine" ; -- UWN
lin latter_A = mkA "celui-ci" ; -- tocheck
lin lattice_N = mkN "quadrillage" | mkN "treillage" masculine ; -- tocheck
lin laud_V2 = mkV2 (mkV "glorifier") ; -- tocheck
lin laudable_A = mkA "louable" ; -- tocheck
lin laudanum_N = mkN "laudanum" masculine ; -- tocheck
lin laugh_N = mkN "rire" masculine ; -- tocheck
lin laugh_V = L.laugh_V ;
lin laugh_V2 = mkV2 (mkV I.rire_V2) ; -- tocheck
lin laugh_at_V2 = prepV2 OP_laugh_V OP_at_Prep ; -- guess-p-verb
lin laugh_off_V2 = prepV2 OP_laugh_V OP_off_Prep ; -- guess-p-verb
lin laughable_A = mkA "risible" ; -- tocheck
lin laugher_N = mkN "fuyard" ; -- UWN
lin laughter_N = mkN "rire" masculine ; -- tocheck
lin launch_N = mkN "lancement" masculine ; -- tocheck
lin launch_V = variants {} ; -- mkV2 (mkV "lancer") ; -- tocheck
lin launch_V2 = mkV2 (mkV "lancer") ; -- tocheck
lin launching_N = mkN "lancement" ; -- UWN
lin launder_V = mkV "blanchir" ; -- UWN
lin launder_V2 = mkV2 (mkV "blanchir") ; -- tocheck
lin launderette_N = mkN "lavomatique" masculine ; -- tocheck
lin laundress_N = mkN "blanchisseuse" feminine ; -- tocheck
lin laundry_N = mkN "blanchisserie" feminine | mkN "laverie" feminine | mkN "lessive" feminine ; -- tocheck
lin laundrywoman_N = mkN "blanchisseuse" ; -- UWN
lin laura_PN = mkPN "Laura" ; -- status=guess src=geonames
lin laureateFem_N = mkN "lauréat" masculine ; -- tocheck
lin laureateMasc_N = mkN "lauréat" masculine ; -- tocheck
lin laurel_N = mkN "lauriers" | mkN "laurier" masculine ; -- tocheck
lin lausanne_PN = mkPN "Lausanne" ; -- status=guess src=geonames
lin lava_N = mkN "lave" feminine ; -- tocheck
lin lavender_A = mkA "lavande" ; -- tocheck
lin lavender_N = mkN "lavande" feminine ; -- tocheck
lin laver_N = mkN "Ulve" | mkN "ulve" | mkN "ulves" ; -- UWN
lin lavish_A = mkA "généreux" ; -- UWN
lin lavishness_N = mkN "faste" masculine ; -- tocheck
lin law_1_N = mkN "loi" feminine ;
lin law_2_N = mkN "droit" ;
lin law_N = mkN "droit" | mkN "loi" feminine ;
lin lawful_A = mkA "légal" ; -- tocheck
lin lawfulness_N = mkN "licéité" ; -- UWN
lin lawgiver_N = mkN "législateur" ; -- UWN
lin lawlessness_N = mkN "anarchie" ; -- tocheck
lin lawmaker_N = mkN "législateur" ; -- UWN
lin lawmaking_N = mkN "législation" ; -- UWN
lin lawn_N = mkN "gazon" masculine | mkN "clairière" ; -- tocheck
lin lawrence_PN = mkPN "Lawrence" ; -- status=guess src=geonames
lin lawrencium_N = mkN "lawrencium" masculine ; -- tocheck
lin lawyer_N = mkN "juriste" ; -- tocheck
lin lax_A = mkA "laxiste" ; -- tocheck
lin laxative_A = mkA "laxatif" ; -- UWN
lin laxative_N = mkN "laxatif" masculine ; -- tocheck
lin laxity_N = mkN "négligence" ; -- UWN
lin laxness_N = mkN "négligence" ; -- UWN
lin lay_A = mkA "laïque" ; -- tocheck
lin lay_V = variants {} ; -- mkV2 (mkV "coucher") | mkV2 (mkV I.pondre_V2) ; -- tocheck
lin lay_V2 = mkV2 (mkV "coucher") | mkV2 (mkV I.pondre_V2) ; -- tocheck
lin lay_away_V2 = mkV2 (advV OP_lay_V OP_away_Adv ) ; -- guess-p-verb
lin lay_down_V = mkV "appliquer" | mkV "faire" | mkV "mettre" | mkV "poser" | mkV "rendre" | mkV "établir" ; -- UWN
lin lay_down_V2 = prepV2 OP_lay_V OP_down_Prep ; -- guess-p-verb
lin lay_in_on_V2 = prepV2 (advV OP_lay_V OP_in_Adv ) OP_on_Prep ; -- guess-p-verb
lin lay_into_V2 = prepV2 OP_lay_V OP_into_Prep ; -- guess-p-verb
lin lay_off_V2 = prepV2 OP_lay_V OP_off_Prep ; -- guess-p-verb
lin lay_on_V2 = prepV2 OP_lay_V OP_on_Prep ; -- guess-p-verb
lin lay_out_V2 = prepV2 OP_lay_V OP_out_Prep ; -- guess-p-verb
lin layabout_N = mkN "fainéant" masculine ; -- tocheck
lin layby_N = mkN "Aire_de_repos" | mkN "aire_de_repos" | mkN "pull-off" ; -- UWN
lin layer_N = mkN "pondeuse" feminine | mkN "couche" feminine | mkN "marcotte" feminine ; -- tocheck
lin layette_N = mkN "layette" ; -- UWN
lin layman_N = mkN "laïc" masculine | mkN "profane" ; -- tocheck
lin lay_off_N = mkN "Dégraissage" | mkN "dégraissage" | mkN "licenciement" ; -- UWN
lin lay_out_N = mkN "plan" | mkN "disposition" feminine ; -- tocheck
lin layover_N = mkN "arrêt" | mkN "escale" | mkN "étape" ; -- UWN
lin lazar_N = mkN "lépreux" | mkN "léprosé" ; -- UWN
lin laziness_N = mkN "paresse" feminine ; -- tocheck
lin lazy_A = mkA "paresseux" ; -- tocheck
lin lazybones_N = mkN "flemmard" masculine ; -- tocheck
lin lb_N = mkN "lb" ; -- UWN
lin lea_N = mkN "prairie" | mkN "pré" | mkN "pâturage" | mkN "pâture" ; -- UWN
lin lead_N = mkN "plomb" masculine | mkN "piste" feminine | mkN "tuyau" masculine | mkN "laisse" feminine | mkN "sonde" feminine | mkN "prospect" masculine | mkN "mine" feminine ; -- tocheck
lin lead_V = mkV "diriger" ;
lin lead_V2 = mkV2 (mkV "diriger") | mkV2 (mkV "mener") ; --- split --- | lead a company
lin lead_V2V = mkV2V (mkV "diriger") | mkV2V (mkV "mener") | mkV2V (mkV "guider") ;
lin lead_on_V2 = prepV2 OP_lead_V OP_on_Prep ; -- guess-p-verb
lin lead_to_V2 = prepV2 OP_lead_V OP_to_Prep ; -- guess-p-verb
lin lead_up_V = advV OP_lead_V OP_up_Adv ; -- guess-p-verb
lin leader_N = mkN "chef" masculine ; -- tocheck
lin leadership_N = mkN "autorité" feminine ; -- tocheck
lin leading_A = variants {} ; --
lin leading_N = mkN "leadership" ; -- UWN
lin leaf_N = L.leaf_N ;
lin leafhopper_N = mkN "Cicadellidae" | mkN "cicadellidae" ; -- UWN
lin leaflet_N = mkN "foliole" feminine | mkN "tract" ; -- tocheck
lin leafy_A = mkA "feuilleté" | mkA "feuillu" ; -- tocheck
lin league_1_N = mkN "conférence" | mkN "lieue" | mkN "ligue" ; -- UWN
lin league_2_N = mkN "conférence" | mkN "lieue" | mkN "ligue" ; -- UWN
lin league_N = mkN "lieue" feminine | mkN "ligue" feminine ; -- tocheck
lin leak_N = mkN "fuite" feminine | mkN "fuite" | mkN "taupe" feminine ; -- tocheck
lin leak_V = variants {} ; -- mkV2 (mkV I.fuir_V2) ; -- tocheck
lin leak_V2 = mkV2 (mkV I.fuir_V2) ; -- tocheck
lin leakage_N = mkN "fuite" feminine ; -- tocheck
lin lean_A = mkA "mince" | mkA "serré" | mkA "pauvre" | mkA "maigre" ; -- tocheck
lin lean_N = mkN "inclinaison" | mkN "liste" | mkN "pente" ; -- UWN
lin lean_V = variants {} ; -- mkV2 (reflV (mkV "pencher")) | mkV2 (reflV (mkV "presser")) ; -- tocheck
lin lean_V2 = mkV2 (reflV (mkV "pencher")) | mkV2 (reflV (mkV "presser")) ; -- tocheck
lin lean_on_V2 = prepV2 OP_lean_V OP_on_Prep ; -- guess-p-verb
lin leap_N = mkN "saut" masculine ; -- tocheck
lin leap_V = variants {} ; -- mkV2 (mkV "sauter") ; -- tocheck
lin leap_V2 = mkV2 (mkV "sauter") ; -- tocheck
lin leapfrog_N = mkN "saute-mouton" masculine ; -- tocheck
lin learn_V = mkV L.learn_V2 ;
lin learn_V2 = L.learn_V2 ;
lin learn_VS = mkVS (mkV L.learn_V2) ;
lin learn_VV = aVV (mkV L.learn_V2) ;
lin learner_N = variants {} ; --
lin learning_N = mkN "apprentissage" ; -- tocheck
lin lease_N = mkN "bail" | mkN "location" ; -- UWN
lin leaseholder_N = mkN "locataire" | mkN "preneur" ; -- UWN
lin leash_N = mkN "laisse" feminine ; -- tocheck
lin least_Adv = mkAdv "le moins" ;
lin leather_N = L.leather_N ;
lin leatherhead_PN = mkPN "Leatherhead" ; -- status=guess src=geonames
lin leave_N = mkN "congé" masculine | mkN "permission" feminine ; -- tocheck
lin leave_V = I.partir_V | mkV "quitter" ;
lin leave_V2 = L.leave_V2 ;
lin leave_V2V = mkV2V (mkV "laisser") | mkV2V (mkV "quitter") ;
lin leave_behind_V = advV OP_leave_V OP_behind_Adv ; -- guess-p-verb
lin leave_off_V = advV OP_leave_V OP_off_Adv ; -- guess-p-verb
lin leave_on_V2 = prepV2 OP_leave_V OP_on_Prep ; -- guess-p-verb
lin leave_open_V = advV OP_leave_V OP_open_Adv ; -- guess-p-verb
lin leave_out_V2 = prepV2 OP_leave_V OP_out_Prep ; -- guess-p-verb
lin leave_over_V = advV OP_leave_V OP_over_Adv ; -- guess-p-verb
lin leaven_N = mkN "levain" masculine ; -- tocheck
lin lebaneseFem_N = variants {} ; ---- sense to be split
lin lebaneseMasc_N = variants {} ; ---- sense to be split
lin lebanon_PN = mkPN "Liban" ; -- status=guess src=geonames
lin lecanora_N = mkN "lecanora" ; -- UWN
lin lecher_N = mkN "paillard" masculine ; -- tocheck
lin lechery_N = mkN "luxure" feminine ; -- tocheck
lin lechwe_N = mkN "cobe" ; -- tocheck
lin lecithin_N = mkN "Phosphatidylcholine" | mkN "lécithine" | mkN "phosphatidylcholine" ; -- UWN
lin lectin_N = mkN "lectine" ; -- UWN
lin lector_N = mkN "lecteur" | mkN "professeur" ; -- UWN
lin lecture_N = mkN "conférence" feminine ; -- tocheck
lin lecture_V2 = mkV2 (mkV "gronder") ; -- tocheck
lin lecturer_N = mkN "conférencier" masculine ; -- tocheck
lin ledge_N = mkN "corniche" feminine | mkN "linteau" masculine ; -- tocheck
lin ledger_N = mkN "registre" masculine ; -- tocheck
lin lee_N = mkN "abri" ; -- tocheck
lin leech_N = mkN "sangsue" feminine ; -- tocheck
lin leeds_PN = mkPN "Leeds" ; -- status=guess src=geonames
lin leek_N = mkN "poireau" masculine ; -- tocheck
lin leek_PN = mkPN "Leek" ; -- status=guess src=geonames
lin leer_V = mkV (mkV "lorgner") ; -- tocheck
lin leery_A = mkA "méfiant" ; -- UWN
lin lees_N = mkN "lie" feminine ; -- tocheck
lin leeway_N = mkN "latitude" feminine | mkN "dérive" ; -- tocheck
lin left_A = mkA "gauche" ; -- tocheck
lin left_N = mkN "gauche" feminine ; -- tocheck
lin left_Ord = L.left_Ord ;
lin left_handed_A = mkA "gaucher" ; -- tocheck
lin leftism_N = mkN "gauchisme" ; -- UWN
lin leftist_N = mkN "gauchiste" ; -- UWN
lin leftover_A = mkA "restant" ; -- tocheck
lin leftover_N = mkN "reste" masculine ; -- tocheck
lin leg_N = L.leg_N ;
lin legacy_N = mkN "héritage" masculine ; -- tocheck
lin legal_A = mkA "légal" ; -- tocheck
lin legalism_N = mkN "légalisme" ; -- UWN
lin legality_N = mkN "légalité" ; -- UWN
lin legalization_N = mkN "légalisation" feminine ; -- tocheck
lin legate_N = mkN "légat" ; -- UWN
lin legatee_N = mkN "légataire" masculine ; -- tocheck
lin legato_Adv = mkAdv "lié" ; -- tocheck
lin legend_N = mkN "légende" feminine | mkN "légende" ; -- tocheck
lin legendary_A = mkA "légendaire" ; -- tocheck
lin legging_N = mkN "molletière" feminine ; -- tocheck
lin legibility_N = mkN "lisibilité" feminine ; -- tocheck
lin legible_A = mkA "lisible" ; -- tocheck
lin legion_N = mkN "légion" feminine ; -- tocheck
lin legionary_N = mkN "légionnaire" masculine ; -- tocheck
lin legislate_V = mkV "donner" | mkV "légiférer" | mkV "passer" ; -- UWN
lin legislate_V2 = mkV2 (mkV "légiférer") ; -- tocheck
lin legislation_N = mkN "loi" feminine | mkN "législation" feminine ; -- tocheck
lin legislative_A = mkA "législatif" ; -- tocheck
lin legislator_N = mkN "législateur" masculine ; -- tocheck
lin legislature_N = variants {} ; --
lin legitimacy_N = mkN "légitimité" feminine ; -- tocheck
lin legitimate_A = variants {} ; --
lin legitimize_V2V = mkV2V (mkV "légitimiser") ; -- tocheck
lin legless_A = mkA "empégué" ; -- UWN
lin legume_N = mkN "légume" ; -- tocheck
lin leicester_PN = mkPN "Leicester" ; -- status=guess src=geonames
lin leiden_PN = mkPN "Leyde" ; -- status=guess src=geonames
lin leigh_PN = mkPN "Leigh" ; -- status=guess src=geonames
lin leiomyoma_N = mkN "léiomyome" ; -- UWN
lin leipzig_PN = mkPN "Leipzig" ; -- status=guess src=geonames
lin leishmaniasis_N = mkN "leishmaniose" feminine ; -- tocheck
lin leisure_N = mkN "loisir" masculine ; -- tocheck
lin leisurely_A = variants {} ;
lin leisurely_Adv = adjAdv leisurely_A ; -- derived -- derived
lin leitmotiv_N = mkN "leitmotiv" ; -- UWN
lin lek_N = mkN "lek" ; -- UWN
lin lemma_N = mkN "lemme" masculine ; -- tocheck
lin lemming_N = mkN "lemming" masculine ; -- tocheck
lin lemon_N = mkN "chiotte" feminine | mkN "citron" masculine | mkN "citronnier" masculine ; -- tocheck
lin lemonade_N = mkN "limonade" feminine | mkN "citronnade" feminine ; -- tocheck
lin lemongrass_N = mkN "citronnelle" feminine ; -- tocheck
lin lemony_A = mkA "piquant" ; -- UWN
lin lemur_N = mkN "lémur" masculine ; -- tocheck
lin lend_V = variants {} ; -- mkV2 (mkV "prêter") ; -- tocheck
lin lend_V2 = mkV2 (mkV "prêter") ; -- tocheck
lin lender_N = mkN "prêteur" masculine ; -- tocheck
lin lending_N = mkN "emprunt" | mkN "prêt" ; -- UWN
lin length_N = mkN "longueur" feminine ; -- tocheck
lin lengthen_V = mkV "rallonger" ; -- UWN
lin lengthen_V2 = mkV2 (mkV "rallonger") ; -- tocheck
lin lengthiness_N = mkN "continuation" | mkN "continuité" | mkN "maintien" ; -- UWN
lin lengthy_A = mkA "long" ; -- tocheck
lin leniency_N = mkN "indulgence" feminine ; -- tocheck
lin lenient_A = mkA "indulgent" ; -- tocheck
lin lens_N = mkN "cristallin" masculine | mkN "lentille" feminine ; -- tocheck
lin lens_PN = mkPN "Lens" ; -- status=guess src=geonames
lin lent_PN = mkPN "Lent" ; -- status=guess src=geonames
lin lenticel_N = mkN "lenticelle" ; -- UWN
lin lentil_N = mkN "lentille" | mkN "lentille" feminine ; -- tocheck
lin leominster_PN = mkPN "Leominster" ; -- status=guess src=geonames
lin leon_PN = mkPN "Leon" ; -- status=guess src=geonames
lin leonard_PN = mkPN "Leonard" ; -- status=guess src=geonames
lin leonine_A = mkA "léonin" ; -- tocheck
lin leopard_N = mkN "léopard" masculine ; -- tocheck
lin leopardess_N = mkN "femelle" | mkN "léopard" | mkN "léopard_femelle" ; -- UWN
lin leotard_N = mkN "justaucorps" masculine ; -- tocheck
lin leper_N = mkN "léprosé" masculine ; -- tocheck
lin lepidolite_N = mkN "lépidolite" ; -- UWN
lin lepidopterology_N = mkN "lépidoptérologie" feminine ; -- tocheck
lin lepidote_A = mkA "écailleux" ; -- UWN
lin lepiota_N = mkN "lepiota" | mkN "lépiote" ; -- UWN
lin leprechaun_N = mkN "lutin" masculine ; -- tocheck
lin leprosy_N = mkN "lèpre" feminine ; -- tocheck
lin leprous_A = mkA "lépreux" ; -- tocheck
lin lepton_N = mkN "lepton" masculine ; -- tocheck
lin leptospira_N = mkN "leptospira" ; -- UWN
lin lerwick_PN = mkPN "Lerwick" ; -- status=guess src=geonames
lin les_PN = mkPN "Les" ; -- status=guess src=geonames
lin lesbian_A = mkA "lesbien" ; -- tocheck
lin lesbian_N = mkN "lesbienne" feminine ; -- tocheck
lin lesbianism_N = mkN "lesbianisme" masculine ; -- tocheck
lin lese_majesty_N = mkN "haute_trahison" | mkN "trahison" ; -- UWN
lin lesion_N = mkN "lésion" feminine ; -- tocheck
lin leslie_PN = mkPN "Leslie" ; -- status=guess src=geonames
lin lesotho_PN = mkPN "Lesotho" ; -- status=guess src=geonames
lin less_A = mkA "moins" ; -- tocheck
lin less_Adv = mkAdv "moins" ;
lin less_CAdv = S.less_CAdv ;
lin less_Det = variants {} ; --
lin lessee_N = mkN "locataire" ; -- tocheck
lin lesser_A = variants {} ; --
lin lesson_N = mkN "leçon" feminine ; -- tocheck
lin lessor_N = mkN "bailleur" masculine ; -- tocheck
lin let_N = mkN "filet" masculine ; -- tocheck
lin let_V2V = mkV2V (mkV "laisser") ;
lin let_down_N = mkN "déception" ; -- tocheck
lin let_on_V = mkV "dire" | mkV "divulguer" | mkV "exposer" | mkV "révéler" ; -- UWN
lin letchworth_PN = mkPN "Letchworth" ; -- status=guess src=geonames
lin lethal_A = mkA "létal" ; -- tocheck
lin lethargic_A = mkA "mollasson" ; -- tocheck
lin lethargy_N = mkN "langueur" | mkN "lenteur" | mkN "léthargie" ; -- UWN
lin letter_1_N = mkN "lettre" feminine ;
lin letter_2_N = mkN "lettre" feminine ;
lin letter_N = variants {} ; --
lin lettered_A = mkA "instruit" | mkA "lettré" | mkA "savant" ; -- UWN
lin letterhead_N = mkN "en-tête" ; -- UWN
lin lettering_N = mkN "lettrage" masculine ; -- tocheck
lin letting_N = mkN "bail" | mkN "crédit-bail" | mkN "lease" | mkN "location" ; -- UWN
lin lettuce_N = mkN "laitue" feminine | mkN "salade" feminine | mkN "oseille" feminine ; -- tocheck
lin leucine_N = mkN "leucine" feminine ; -- tocheck
lin leucocytozoan_N = mkN "leucocytozoon" ; -- UWN
lin leucothoe_N = mkN "leucothoe" ; -- UWN
lin leukaemia_N = mkN "leucose" | mkN "leucémie" feminine ; -- tocheck
lin leukocyte_N = mkN "leucocyte" masculine ; -- tocheck
lin leukocytosis_N = mkN "leucocytose" ; -- UWN
lin leukopenia_N = mkN "leucopénie" ; -- UWN
lin leukorrhea_N = mkN "leucorrhée" ; -- UWN
lin lev_N = mkN "lev" masculine ; -- tocheck
lin levant_PN = mkPN "Levant" ; -- status=guess src=geonames
lin levee_N = mkN "digue" feminine ; -- tocheck
lin level_1_N = mkN "niveau" masculine ;
lin level_2_N = mkN "niveau" masculine | mkN "plan" ;
lin level_A = mkA "plat" | mkA "niveau" ; -- tocheck
lin level_N = mkN "niveau" masculine ;
lin level_V = variants {} ; -- mkV2 (mkV "niveler") ; -- tocheck
lin level_V2 = mkV2 (mkV "niveler") ; -- tocheck
lin leven_PN = mkPN "Leven" ; -- status=guess src=geonames
lin lever_N = mkN "levier" masculine ; -- tocheck
lin leverage_N = mkN "influence" feminine ; -- tocheck
lin leveret_N = mkN "levraut" masculine ; -- tocheck
lin leverkusen_PN = mkPN "Leverkusen" ; -- status=guess src=geonames
lin leviathan_N = mkN "léviathan" masculine ; -- tocheck
lin levirate_N = mkN "lévirat" ; -- UWN
lin levitate_V2 = mkV2 (mkV "léviter") ; -- tocheck
lin levitation_N = mkN "lévitation" ; -- tocheck
lin levity_N = mkN "nonchalance" ; -- tocheck
lin levorotary_A = mkA "gaucher" | mkA "lévogyre" ; -- UWN
lin levorotation_N = mkN "lévogyre" ; -- UWN
lin levy_N = mkN "impôt" ; -- tocheck
lin lewd_A = mkA "lascif" ; -- tocheck
lin lewdness_N = mkN "obscénité" | mkN "salacité" | mkN "stupre" ; -- UWN
lin lewes_PN = mkPN "Lewes" ; -- status=guess src=geonames
lin lexeme_N = mkN "lexème" masculine ; -- tocheck
lin lexical_A = variants {} ; --
lin lexicalization_N = mkN "lexicalisation" ; -- UWN
lin lexicographerFem_N = variants {} ; ---- sense to be split
lin lexicographerMasc_N = variants {} ; ---- sense to be split
lin lexicographic_A = mkA "lexicographique" ; -- UWN
lin lexicography_N = mkN "lexicographie" feminine ; -- tocheck
lin lexicology_N = mkN "lexicologie" ; -- UWN
lin lexicon_N = mkN "lexique" masculine | mkN "lexique" feminine ; -- tocheck
lin ley_N = mkN "prairie" | mkN "pré" | mkN "pâturage" | mkN "pâture" ; -- UWN
lin leyland_PN = mkPN "Leyland" ; -- status=guess src=geonames
lin li_N = mkN "li" masculine ; -- tocheck
lin liability_N = mkN "responsabilité" feminine ; -- tocheck
lin liable_A = mkA "responsable" ; -- tocheck
lin liaison_N = mkN "contact" | mkN "liaison" | mkN "lien" ; -- UWN
lin liana_N = mkN "liane" feminine ; -- tocheck
lin liar_N = mkN "menteur" masculine ; -- tocheck
lin lib_PN = mkPN "Lib" ; -- status=guess src=geonames
lin libation_N = mkN "libation" feminine ; -- tocheck
lin libel_N = mkN "diffamation" feminine | mkN "libelle" masculine ; -- tocheck
lin libellous_A = mkA "calomnieux" | mkA "diffamant" | mkA "diffamatoire" ; -- UWN
lin liberal_A = mkA "généreux" ; -- tocheck
lin liberal_N = mkN "libéral" masculine | mkN "libéral" ; -- tocheck
lin liberalism_N = mkN "libéralisme" masculine ; -- tocheck
lin liberalization_N = mkN "libéralisation" feminine ; -- tocheck
lin liberalize_V2 = mkV2 (reflV (mkV "libéraliser")) | mkV2 (mkV "libéraliser") ; -- tocheck
lin liberate_V2 = mkV2 (mkV "libérer") ; -- tocheck
lin liberation_N = mkN "libération" feminine ; -- tocheck
lin liberia_PN = mkPN "Liberia" ; -- status=guess src=geonames
lin libertarianism_N = mkN "libertarianisme" | mkN "libertarisme" | mkN "libéralisme" ; -- UWN
lin libertine_N = mkN "libertin" ; -- UWN
lin liberty_N = mkN "liberté" feminine ; -- tocheck
lin libidinal_A = mkA "libidinal" ; -- tocheck
lin libidinous_A = mkA "libidineux" ; -- tocheck
lin libido_N = mkN "libido" feminine | mkN "libido" masculine ; -- tocheck
lin librarian_N = mkN "bibliothécaire" ; -- tocheck
lin library_N = mkN "bibliothèque" feminine ; -- tocheck
lin libration_N = mkN "libration" ; -- UWN
lin libretto_N = mkN "livret" ; -- UWN
lin libya_PN = mkPN "Jamahiriya arabe libyenne" ; -- status=guess src=geonames
lin licence_N = variants {} ; --
lin license_V2 = variants {} ; --
lin licentiate_N = mkN "diplomé" masculine ; -- tocheck
lin licentious_A = mkA "voluptueux" | mkA "licencieux" ; -- tocheck
lin licentiousness_N = mkN "licenciosité" ; -- tocheck
lin lichen_N = mkN "lichen" masculine ; -- tocheck
lin lichfield_PN = mkPN "Lichfield" ; -- status=guess src=geonames
lin licit_A = mkA "licite" ; -- tocheck
lin lick_N = mkN "coup" ; -- UWN
lin lick_V2 = mkV2 (mkV I.défaire_V2) | mkV2 (mkV "lécher") ; -- tocheck
lin licking_N = mkN "léchage" masculine ; -- tocheck
lin lid_N = mkN "couvercle" masculine ; -- tocheck
lin lidar_N = mkN "lidar" ; -- UWN
lin lido_N = mkN "lido" | mkN "lido_de_venise" ; -- UWN
lin lie_1_V = L.lie_V ;
lin lie_2_V = mkV "mentir" ;
lin lie_N = mkN "mensonge" masculine ; -- tocheck
lin lie_V = L.lie_V ;
lin lie_VS = mkVS (mkV "mentir") ;
lin lie_around_V = advV OP_lie_V OP_around_Adv ; -- guess-p-verb
lin lie_back_V = advV OP_lie_V OP_back_Adv ; -- guess-p-verb
lin lie_down_V = advV OP_lie_V OP_down_Adv ; -- guess-p-verb
lin lie_down_on_V2 = prepV2 (advV OP_lie_V OP_down_Adv ) OP_on_Prep ; -- guess-p-verb
lin lie_with_V2 = prepV2 OP_lie_V OP_with_Prep ; -- guess-p-verb
lin liechtenstein_PN = mkPN "Liechtenstein" ; -- status=guess src=geonames
lin lied_N = mkN "lied" ; -- UWN
lin lief_Adv = mkAdv "heureusement" | mkAdv "joyeusement" | mkAdv "volontiers" ; -- UWN
lin liege_A = mkA "lige" ; -- tocheck
lin liege_N = mkN "suzerain" masculine ; -- tocheck
lin liegeman_N = mkN "suzerain" | mkN "vassal" | mkN "vassalité" ; -- UWN
lin lien_N = mkN "rate" ; -- UWN
lin lieu_N = mkN "place" ; -- UWN
lin lieutenant_N = mkN "lieutenant" masculine ; -- tocheck
lin life_N = mkN "vie" feminine ;
lin lifeboat_N = mkN "canot" | mkN "canot_de_sauvetage" ; -- UWN
lin lifeguard_N = mkN "maitre-nageur" masculine | mkN "sauveteur" masculine ; -- tocheck
lin life_span_N = variants {} ; --
lin lifestyle_N = variants {} ; --
lin lifetime_N = mkN "éternité" feminine ; -- tocheck
lin lift_N = mkN "portance" masculine | mkN "ascenseur" masculine ; -- tocheck
lin lift_V = variants {} ; -- mkV2 (mkV "lever") ; -- tocheck
lin lift_V2 = mkV2 (mkV "lever") ; -- tocheck
lin lift_off_V = advV OP_lift_V OP_off_Adv ; -- guess-p-verb
lin lift_off_N = mkN "décollage" masculine ; -- tocheck
lin ligament_N = mkN "ligament" masculine ; -- tocheck
lin ligand_N = mkN "Ligand" | mkN "ligand" ; -- UWN
lin ligation_N = mkN "ligature" ; -- UWN
lin ligature_N = mkN "ligature" feminine | mkN "ligature" ; -- tocheck
lin liger_N = mkN "tigron" masculine ; -- tocheck
lin light_A = mkA "lumineux" | mkA "léger" | mkA "clair" ; -- tocheck
lin light_Adv = mkAdv "lestement" | mkAdv "lumière" | mkAdv "léger" | mkAdv "légèrement" ; -- UWN
lin light_N = mkN "lumière" feminine ;
lin light_V = mkV "illuminer" ; -- UWN
lin light_V2 = mkV2 (mkV "allumer") ; -- tocheck
lin light_out_V = advV OP_light_V OP_out_Adv ; -- guess-p-verb
lin light_up_V = mkV "illuminer" ; -- UWN
lin light_up_V2 = prepV2 OP_light_V OP_up_Prep ; -- guess-p-verb
lin lighten_V2 = mkV2 (mkV "alléger") ; -- tocheck
lin lightening_N = mkN "blanchissement" ; -- UWN
lin lighter_N = mkN "briquet" masculine ; -- tocheck
lin lighthouse_N = mkN "phare" masculine ; -- tocheck
lin lighting_N = mkN "allumage" | mkN "inflammation" | mkN "éclairage" ; -- UWN
lin lightning_N = mkN "foudre" | mkN "éclair" masculine ; -- tocheck
lin lightsome_A = mkA "gai" | mkA "joyeux" ; -- UWN
lin ligne_N = mkN "ligne" ; -- UWN
lin ligneous_A = mkA "ligneux" ; -- tocheck
lin lignin_N = mkN "lignine" ; -- UWN
lin lignite_N = mkN "lignite" masculine ; -- tocheck
lin ligule_N = mkN "Ligule" | mkN "ligule" ; -- UWN
lin likable_A = mkA "aimable" ; -- tocheck
lin like_A = mkA "pareil" ; -- tocheck
lin like_Adv = mkAdv "comme" ; -- tocheck
lin like_N = mkN "préférence" feminine ; -- tocheck
lin like_Prep = mkPrep "comme" ;
lin like_Subj = variants {} ; --
lin like_V2 = L.like_V2 ;
lin like_VS = subjVS (mkV "aimer") ;
lin like_VV = mkVV (mkV "aimer") ;
lin likelihood_N = mkN "vraisemblance" feminine ; -- tocheck
lin likely_A = mkA "vraisemblable" | mkA "probable" ;
lin liken_V2 = mkV2 (mkV "comparer") ; -- tocheck
lin likewise_Adv = mkAdv "pareillement" ; -- tocheck
lin liking_N = mkN "sympathie" feminine ; -- tocheck
lin lilac_N = mkN "lilas" | mkN "lilas" masculine ; -- tocheck
lin lilian_PN = mkPN "Lilian" ; -- status=guess src=geonames
lin lille_PN = mkPN "Lille" ; -- status=guess src=geonames
lin lilliputian_A = mkA "lilliputien" ; -- tocheck
lin lilliputian_N = mkN "lilliputien" ; -- UWN
lin lilt_N = mkN "balançoire" ; -- UWN
lin lily_N = mkN "lys" masculine ; -- tocheck
lin lily_livered_A = mkA "poltron" ; -- tocheck
lin lima_PN = mkPN "Lima" ; -- status=guess src=geonames
lin limb_N = mkN "limbe" masculine | mkN "membre" masculine ; -- tocheck
lin limber_N = mkN "avant-train" masculine ; -- tocheck
lin limbo_N = mkN "limbo" masculine | mkN "limbes" ; -- tocheck
lin lime_N = mkN "lime" feminine | mkN "chaux" feminine ; -- tocheck
lin limerick_N = mkN "limerick" masculine ; -- tocheck
lin limerick_PN = mkPN "Limerick" ; -- status=guess src=geonames
lin limestone_N = mkN "calcaire" ; -- tocheck
lin limit_N = mkN "limite" feminine ; -- tocheck
lin limit_V2 = variants {} ; -- mkV2V (mkV "limiter") ; -- tocheck
lin limit_V2V = mkV2V (mkV "limiter") ; -- tocheck
lin limitation_N = variants {} ; --
lin limited_A = variants {} ; --
lin limitless_A = mkA "illimité" ; -- tocheck
lin limnology_N = mkN "limnologie" feminine ; -- tocheck
lin limoges_PN = mkPN "Limoges" ; -- status=guess src=geonames
lin limonene_N = mkN "limonène" ; -- UWN
lin limonite_N = mkN "limonite" ; -- UWN
lin limousine_N = mkN "Limousine" | mkN "limousin" | mkN "limousine" ; -- UWN
lin limp_A = mkA "boité" ; -- tocheck
lin limp_N = mkN "boitement" masculine ; -- tocheck
lin limp_V = mkV (mkV "boiter") ; -- tocheck
lin limpet_N = mkN "patelle" feminine ; -- tocheck
lin limpid_A = mkA "limpide" ; -- tocheck
lin limpidity_N = mkN "limpidité" feminine ; -- tocheck
lin linchpin_N = mkN "cheville" feminine ; -- tocheck
lin lincoln_PN = mkPN "Lincoln" ; -- status=guess src=geonames
lin lincolnshire_PN = mkPN "Lincolnshire" ; -- status=guess src=geonames
lin linda_PN = mkPN "Linda" ; -- status=guess src=geonames
lin linden_N = mkN "tilleul" masculine ; -- tocheck
lin lindy_N = mkN "lindy_hop" ; -- UWN
lin line_N = mkN "ligne" feminine | mkN "droite" feminine ; --- split
lin line_V = variants {} ; -- mkV2 (mkV "croiser") ; -- tocheck
lin line_V2 = mkV2 (mkV "croiser") ; -- tocheck
lin line_up_V = mkV "aligner" ; -- UWN
lin lineage_N = mkN "descendance" feminine | mkN "lignage" masculine ; -- tocheck
lin lineament_N = mkN "caractéristique" | mkN "lynx" | mkN "particularité" | mkN "trait" ; -- UWN
lin linear_A = mkA "linéaire" ; -- tocheck
lin linen_N = mkN "toile" feminine ; -- tocheck
lin linesman_N = mkN "électricien" | mkN "électricienne" ; -- UWN
lin ling_N = mkN "lotte" feminine ; -- tocheck
lin linger_V = mkV (reflV (mkV "attarder")) ; -- tocheck
lin lingerer_N = mkN "flâneur" ; -- UWN
lin lingerie_N = mkN "lingerie" feminine ; -- tocheck
lin lingeringly_Adv = mkAdv "abondamment" | mkAdv "amplement" | mkAdv "longuement" ; -- UWN
lin lingo_N = mkN "argot" | mkN "dialecte" | mkN "jargon" ; -- UWN
lin lingonberry_N = mkN "airelle" | mkN "airelle_rouge" ; -- UWN
lin lingua_franca_N = mkN "koinè" | mkN "langue_véhiculaire" | mkN "lingua_franca" ; -- UWN
lin lingual_A = mkA "lingual" ; -- tocheck
lin linguine_N = mkN "linguine" ; -- UWN
lin linguist_N = mkN "linguiste" ; -- tocheck
lin linguistic_A = mkA "linguistique" ; -- tocheck
lin linguistics_N = mkN "linguistique" feminine ; -- tocheck
lin liniment_N = mkN "liniment" masculine ; -- tocheck
lin lining_N = mkN "revêtement" masculine ; -- tocheck
lin link_N = mkN "lien" masculine | mkN "maillon" | mkN "flambeau" masculine ; -- tocheck
lin link_V = variants {} ; -- mkV2 (mkV "relier") ; -- tocheck
lin link_V2 = mkV2 (mkV "relier") ; -- tocheck
lin link_up_V2 = prepV2 OP_link_V OP_up_Prep ; -- guess-p-verb
lin link_up_with_V2 = prepV2 (advV OP_link_V OP_up_Adv ) OP_with_Prep ; -- guess-p-verb
lin linkage_N = mkN "timonerie" feminine ; -- tocheck
lin linlithgow_PN = mkPN "Linlithgow" ; -- status=guess src=geonames
lin linnet_N = mkN "linotte" feminine ; -- tocheck
lin lino_N = mkN "linoleum" | mkN "linoléum" ; -- UWN
lin linoleum_N = mkN "linoléum" masculine ; -- tocheck
lin lint_N = mkN "peluche" feminine ; -- tocheck
lin lintel_N = mkN "linteau" masculine ; -- tocheck
lin linwood_PN = mkPN "Linwood" ; -- status=guess src=geonames
lin linz_PN = mkPN "Linz" ; -- status=guess src=geonames
lin lion_N = mkN "Lion" | mkN "lion" masculine ; -- tocheck
lin lioness_N = mkN "lionne" feminine ; -- tocheck
lin lip_N = mkN "lèvre" feminine ; -- tocheck
lin lipase_N = mkN "Lipase" | mkN "lipase" ; -- UWN
lin lipid_N = mkN "lipide" masculine ; -- tocheck
lin lipidosis_N = mkN "lipidologie" ; -- UWN
lin lipogram_N = mkN "lipogramme" ; -- UWN
lin lipophilic_A = mkA "lipophile" ; -- UWN
lin lipoprotein_N = mkN "Lipoprotéine" | mkN "lipoprotéine" | mkN "lipoprotéines" ; -- UWN
lin liposome_N = mkN "Liposome" | mkN "liposome" ; -- UWN
lin liposuction_N = mkN "liposuccion" feminine ; -- tocheck
lin lipstick_N = mkN "rouge_à_lèvres" ; -- UWN
lin liquefaction_N = mkN "liquéfaction" feminine ; -- tocheck
lin liquefy_V2 = mkV2 (mkV "liquéfier") ; -- tocheck
lin liqueur_N = mkN "liqueur" feminine ; -- tocheck
lin liquid_A = mkA "liquide" ; -- tocheck
lin liquid_N = mkN "liquide" masculine ; -- tocheck
lin liquidate_V2 = mkV2 (mkV "liquider") ; -- tocheck
lin liquidation_N = mkN "liquidation" | mkN "suppression" | mkN "élimination" ; -- UWN
lin liquidator_N = mkN "liquidateur" masculine ; -- tocheck
lin liquidizer_N = mkN "mixeur" | mkN "mélangeur" | mkN "robot_mixer" ; -- UWN
lin liquor_N = mkN "spiritueux" masculine ; -- tocheck
lin liquorice_N = mkN "réglisse" feminine ; -- tocheck
lin lira_N = mkN "livre" feminine ; -- tocheck
lin lisa_PN = mkPN "Lisa" ; -- status=guess src=geonames
lin lisbon_PN = mkPN "Lisbonne" ; -- status=guess src=geonames
lin liskeard_PN = mkPN "Liskeard" ; -- status=guess src=geonames
lin lisp_V2 = mkV2 (mkV "zozoter") ; -- tocheck
lin lissom_A = mkA "svelte" ; -- UWN
lin lissome_A = mkA "svelte" ; -- UWN
lin list_N = mkN "liste" feminine ; -- tocheck
lin list_V = variants {} ; -- mkV2V (mkV "lister") ; -- tocheck
lin list_V2 = variants {} ; -- mkV2V (mkV "lister") ; -- tocheck
lin list_V2V = mkV2V (mkV "lister") ; -- tocheck
lin listen_V = mkV (mkV "écouter") ; -- tocheck
lin listen_V2 = L.listen_V2 ;
lin listen_in_V = advV OP_listen_V OP_in_Adv ; -- guess-p-verb
lin listen_out_for_V2 = prepV2 (advV OP_listen_V OP_out_Adv ) OP_for_Prep ; -- guess-p-verb
lin listen_up_V = advV OP_listen_V OP_up_Adv ; -- guess-p-verb
lin listenerFem_N = mkN "auditrice" feminine ; -- tocheck
lin listenerMasc_N = mkN "auditeur" masculine ;
lin listeria_N = mkN "listeria" ; -- UWN
lin listeriosis_N = mkN "listériose" ; -- UWN
lin listing_N = mkN "cotation" | mkN "énumération" ; -- UWN
lin listless_A = mkA "apathique" ; -- tocheck
lin listlessness_N = mkN "torpeur" ; -- UWN
lin litany_N = mkN "litanie" feminine ; -- tocheck
lin literacy_N = mkN "littératie" ; -- tocheck
lin literal_A = mkA "épistolaire" | mkA "littéral" ; -- tocheck
lin literal_N = mkN "coquille" | mkN "erratum" | mkN "erreur_de_frappe" | mkN "faute" | mkN "faute_de_frappe" | mkN "littéral" | mkN "typo" | mkN "typographe" | mkN "typote" ; -- UWN
lin literary_A = mkA "littéraire" ; -- tocheck
lin literate_A = mkA "alphabète" | mkA "lettré" ; -- tocheck
lin literati_N = mkN "littérateur" masculine ; -- tocheck
lin literature_N = mkN "littérature" feminine ; -- tocheck
lin lithe_A = mkA "souple" | mkA "svelte" ; -- tocheck
lin lithiasis_N = mkN "lithiase" ; -- UWN
lin lithic_A = mkA "lithique" ; -- tocheck
lin lithium_N = mkN "lithium" masculine ; -- tocheck
lin lithography_N = mkN "lithographie" feminine ; -- tocheck
lin lithomancy_N = mkN "lithomancie" ; -- UWN
lin lithosphere_N = mkN "lithosphère" feminine ; -- tocheck
lin litigant_N = mkN "plaideur" ; -- UWN
lin litigation_N = mkN "litige" masculine ; -- tocheck
lin litmus_N = mkN "tournesol" masculine ; -- tocheck
lin litotes_N = mkN "litote" | mkN "méiose" ; -- UWN
lin litre_N = mkN "litre" masculine ; -- tocheck
lin litter_N = mkN "portée" feminine | mkN "litière" feminine | mkN "détritus" masculine ; -- tocheck
lin little_A = mkA "petit" ;
lin little_Det = mkDet "peu" ;
lin littlehampton_PN = mkPN "Littlehampton" ; -- status=guess src=geonames
lin littoral_N = mkN "littoral" | mkN "sands" ; -- UWN
lin liturgical_A = mkA "liturgique" ; -- tocheck
lin liturgy_N = mkN "liturgie" feminine ; -- tocheck
lin live_A = mkA "vivant" ; -- tocheck
lin live_V = L.live_V ; --- split
lin live_by_V2 = prepV2 OP_live_V OP_by_Prep ; -- guess-p-verb
lin live_down_V2 = prepV2 OP_live_V OP_down_Prep ; -- guess-p-verb
lin live_for_V2 = prepV2 OP_live_V OP_for_Prep ; -- guess-p-verb
lin live_in_V = advV OP_live_V OP_in_Adv ; -- guess-p-verb
lin live_it_up_V2 = variants {} ; -- guess-p-verb
lin live_off_V2 = prepV2 OP_live_V OP_off_Prep ; -- guess-p-verb
lin live_on_V = advV OP_live_V OP_on_Adv ; -- guess-p-verb
lin live_on_V2 = prepV2 OP_live_V OP_on_Prep ; -- guess-p-verb
lin live_out_V = advV OP_live_V OP_out_Adv ; -- guess-p-verb
lin live_out_V2 = prepV2 OP_live_V OP_out_Prep ; -- guess-p-verb
lin live_through_V2 = prepV2 OP_live_V OP_through_Prep ; -- guess-p-verb
lin live_together_V = advV OP_live_V OP_together_Adv ; -- guess-p-verb
lin live_up_V = advV OP_live_V OP_up_Adv ; -- guess-p-verb
lin live_up_to_V2 = prepV2 (advV OP_live_V OP_up_Adv ) OP_to_Prep ; -- guess-p-verb
lin live_with_V2 = prepV2 OP_live_V OP_with_Prep ; -- guess-p-verb
lin livelihood_N = mkN "gagne-pain" masculine ; -- tocheck
lin liveliness_N = mkN "vitalité" feminine ; -- tocheck
lin lively_A = mkA "animé" ; -- tocheck
lin liven_V = mkV "animer" ; -- UWN
lin liver_N = L.liver_N ;
lin liverpool_PN = mkPN "Liverpool" ; -- status=guess src=geonames
lin liverwort_N = mkN "hépatique" masculine ; -- tocheck
lin liverwurst_N = mkN "saucisson_de_pâté_de_foie" ; -- UWN
lin livery_N = mkN "livrée" feminine ; -- tocheck
lin livestock_N = mkN "bétail" masculine ; -- tocheck
lin livid_A = mkA "livide" ; -- tocheck
lin lividity_N = mkN "pâleur" ; -- UWN
lin lividness_N = mkN "pâleur" ; -- UWN
lin living_A = mkA "vivant" ; -- tocheck
lin living_N = mkN "vie" feminine ; -- tocheck
lin living_room_N = mkN "salon" | mkN "séjour" | mkN "woonkamer" ; -- UWN
lin livingston_PN = mkPN "Livingston" ; -- status=guess src=geonames
lin livorno_PN = mkPN "Livourne" ; -- status=guess src=geonames
lin lizard_N = mkN "lézard" masculine ; -- tocheck
lin lizardfish_N = mkN "poisson-lézard" masculine | mkN "poissons-lézards" ; -- tocheck
lin ljubljana_PN = mkPN "Ljubljana" ; -- status=guess src=geonames
lin llama_N = mkN "lama" masculine ; -- tocheck
lin llandudno_PN = mkPN "Llandudno" ; -- status=guess src=geonames
lin llanelli_PN = mkPN "Llanelli" ; -- status=guess src=geonames
lin llangollen_PN = mkPN "Llangollen" ; -- status=guess src=geonames
lin llano_N = mkN "llano" ; -- UWN
lin llantrisant_PN = mkPN "Llantrisant" ; -- status=guess src=geonames
lin load_N = mkN "charge" feminine ; -- tocheck
lin load_V = variants {} ; -- mkV2 (mkV "charger") ; -- tocheck
lin load_V2 = mkV2 (mkV "charger") ; -- tocheck
lin load_up_V = mkV "charger" ; -- UWN
lin loader_N = mkN "chargeur" ; -- tocheck
lin loaf_N = mkN "savonnette" feminine | mkN "baguette" feminine ; -- tocheck
lin loaf_V2 = mkV2 (mkV "paresser") ; -- tocheck
lin loafer_N = mkN "mocassin" masculine | mkN "oisif" masculine ; -- tocheck
lin loam_N = mkN "terreau" ; -- tocheck
lin loan_N = mkN "emprunt" masculine | mkN "prêt" masculine ; -- tocheck
lin loan_V2 = mkV2 (mkV "prêter") ; -- tocheck
lin loanblend_N = mkN "hybride" ; -- UWN
lin loanhead_PN = mkPN "Loanhead" ; -- status=guess src=geonames
lin loanword_N = mkN "emprunt" masculine ; -- tocheck
lin loath_A = mkA "hostile" | mkA "réticent" ; -- tocheck
lin loathe_V2 = mkV2 (mkV "détester") ; -- tocheck
lin loathing_N = mkN "dégoût" masculine ; -- tocheck
lin loathsome_A = mkA "odieux" ; -- tocheck
lin lob_N = mkN "lob" masculine ; -- tocheck
lin lobby_N = mkN "lobby" masculine | mkN "vestibule" masculine ; -- tocheck
lin lobbyist_N = mkN "lobbyiste" ; -- tocheck
lin lobe_N = mkN "lobe" ; -- tocheck
lin lobelia_N = mkN "lobélie" feminine ; -- tocheck
lin lobotomy_N = mkN "lobotomie" feminine ; -- tocheck
lin lobscouse_N = mkN "scouse" ; -- UWN
lin lobster_N = mkN "homard" masculine ; -- tocheck
lin local_A = mkA "local" ;
lin local_N = mkN "section" feminine ; -- tocheck
lin locale_N = mkN "culture" | mkN "environnement_linguistique" | mkN "lieu" | mkN "locales" | mkN "options_régionales_et_linguistiques" | mkN "paramètres_de_lieu" | mkN "paramètres_régionaux" | mkN "place" | mkN "point" ; -- UWN
lin locality_N = mkN "quartier" masculine | mkN "région" ; -- tocheck
lin localization_N = mkN "localisation" feminine ; -- tocheck
lin locate_V = mkV "bâtir" | mkV "coloniser" | mkV "placer" | mkV "poser" | mkV "situer" | mkV "trouver" ; -- UWN
lin locate_V2 = mkV2 (reflV (mkV "poser")) | mkV2 (mkV "situer") ; -- tocheck
lin location_N = mkN "lieu" masculine ; -- tocheck
lin locator_N = mkN "balise_de_ralliement" ; -- UWN
lin lochgelly_PN = mkPN "Lochgelly" ; -- status=guess src=geonames
lin lochia_N = mkN "lochies" ; -- tocheck
lin lock_N = mkN "verrou" masculine | mkN "mèche" feminine | mkN "serrure" feminine | mkN "écluse" feminine ; -- tocheck
lin lock_V = variants {} ; -- mkV2 (mkV "fermer") ; -- tocheck
lin lock_V2 = mkV2 (mkV "fermer") ; -- tocheck
lin lock_away_V2 = mkV2 (advV OP_lock_V OP_away_Adv ) ; -- guess-p-verb
lin lock_down_V2 = prepV2 OP_lock_V OP_down_Prep ; -- guess-p-verb
lin lock_in_V2 = prepV2 OP_lock_V OP_in_Prep ; -- guess-p-verb
lin lock_onto_V2 = prepV2 OP_lock_V OP_onto_Prep ; -- guess-p-verb
lin lock_out_V2 = prepV2 OP_lock_V OP_out_Prep ; -- guess-p-verb
lin lock_up_V2 = prepV2 OP_lock_V OP_up_Prep ; -- guess-p-verb
lin lock_yourself_away_V = variants {} ; -- guess-p-verb
lin locker_N = mkN "casier" ; -- tocheck
lin locket_N = mkN "médaillon" masculine ; -- tocheck
lin locking_N = mkN "enclenchement" | mkN "verrouillage" ; -- UWN
lin locknut_N = mkN "contre-écrou" ; -- UWN
lin lockout_N = mkN "lock-out" ; -- tocheck
lin locksmith_N = mkN "serrurier" ; -- tocheck
lin lockup_N = mkN "enclenchement" | mkN "verrouillage" ; -- UWN
lin locomotion_N = mkN "locomotion" feminine ; -- tocheck
lin locomotive_N = mkN "locomotive" feminine ; -- tocheck
lin locule_N = mkN "loculus" ; -- UWN
lin locus_N = mkN "point" ; -- UWN
lin locust_N = mkN "locuste" feminine ; -- tocheck
lin locution_N = mkN "dicton" | mkN "expression" | mkN "locution" | mkN "proverbe" | mkN "sentence" ; -- UWN
lin lode_N = mkN "filon" masculine ; -- tocheck
lin lodge_N = mkN "loge" feminine | mkN "cabane" feminine ; -- tocheck
lin lodge_V = variants {} ; -- mkV2 (mkV "demeurer") ; -- tocheck
lin lodge_V2 = mkV2 (mkV "demeurer") ; -- tocheck
lin lodger_N = mkN "cou" ; -- UWN
lin loess_N = mkN "loess" masculine ; -- tocheck
lin loftus_PN = mkPN "Loftus" ; -- status=guess src=geonames
lin lofty_A = mkA "haut" ; -- tocheck
lin log_N = mkN "bûche" feminine | mkN "tronc" masculine ; -- tocheck
lin log_V2 = mkV2 (mkV "couper") ; -- tocheck
lin log_in_V = mkV "connecter" | mkV "identifier" ; -- UWN
lin log_out_V = mkV "déconnecter" | mkV "délogger" ; -- UWN
lin loganberry_N = mkN "mûroise" feminine ; -- tocheck
lin logarithm_N = mkN "logarithme" masculine ; -- tocheck
lin loge_N = mkN "loge" feminine ; -- tocheck
lin loggia_N = mkN "loggia" ; -- UWN
lin logging_N = mkN "bucheronnage" | mkN "bûcheronnage" | mkN "exploitation_forestière" ; -- UWN
lin logic_N = mkN "logique" feminine ; -- tocheck
lin logical_A = mkA "logique" ; -- tocheck
lin logicality_N = mkN "logique" ; -- UWN
lin logician_N = mkN "logicien" masculine ; -- tocheck
lin logicism_N = mkN "logicisme" ; -- UWN
lin logion_N = mkN "logion" ; -- UWN
lin logistic_A = mkA "logistique" ; -- tocheck
lin logistics_N = mkN "logistique" feminine ; -- tocheck
lin log_jam_N = mkN "embouteillage" masculine | mkN "bourrage" masculine ; -- tocheck
lin logo_N = mkN "logo" masculine ; -- tocheck
lin logogram_N = mkN "logogramme" masculine ; -- tocheck
lin loin_N = mkN "filet" | mkN "lombe" | mkN "lombes" ; -- tocheck
lin loincloth_N = mkN "pagne" masculine ; -- tocheck
lin loins_N = mkN "lombes" ; -- tocheck
lin loiter_V2 = mkV2 (mkV "flâner") ; -- tocheck
lin loiterer_N = mkN "flâneur" ; -- UWN
lin loligo_N = mkN "loligo" ; -- UWN
lin lollipop_N = mkN "sucette" ; -- tocheck
lin lolly_N = mkN "sucette" ; -- UWN
lin lomatia_N = mkN "lomatia" ; -- UWN
lin london_PN = mkPN ("Londres" | "London") ;
lin londonderry_PN = mkPN "Londonderry" ; -- status=guess src=geonames
lin lone_A = mkA "seul" | mkA "isolé" | mkA "unique" ; -- tocheck
lin loneliness_N = mkN "solitude" feminine ; -- tocheck
lin lonely_A = mkA "seul" | mkA "désert" ; -- tocheck
lin loner_N = mkN "solitaire" ; -- tocheck
lin lonesome_A = mkA "solitaire" ; -- tocheck
lin long_A = L.long_A ;
lin long_V = variants {} ; --
lin long_suffering_A = mkA "longanime" ; -- tocheck
lin long_term_A = variants {} ; --
lin long_winded_A = mkA "verbeux" ; -- tocheck
lin longboat_N = mkN "chaloupe" ; -- UWN
lin longbow_N = mkN "arc_droit" | mkN "arc_long_anglais" ; -- UWN
lin longer_Adv = mkAdv "longtemps" ; -- UWN
lin longevity_N = mkN "longévité" feminine ; -- tocheck
lin longhand_N = mkN "cursif" | mkN "cursive" ; -- UWN
lin longing_N = mkN "nostalgie" feminine ; -- tocheck
lin longingly_Adv = mkAdv "impatiemment" ; -- UWN
lin longitude_N = mkN "longitude" feminine ; -- tocheck
lin longridge_PN = mkPN "Longridge" ; -- status=guess src=geonames
lin longshoreman_N = mkN "Stevedore" | mkN "aconier" | mkN "arrimeur" | mkN "chargeur" | mkN "docker" | mkN "débardeur" | mkN "manutentionnaire" | mkN "stevedore" ; -- UWN
lin longshot_N = mkN "longshot" ; -- UWN
lin longton_PN = mkPN "Longton" ; -- status=guess src=geonames
lin look_N = mkN "regard" masculine | mkN "air" masculine ; -- tocheck
lin look_V = mkV "regarder" ;
lin look_V2 = mkV2 "regarder" ;
lin look_VA = mkVA (mkV "sembler") ;
lin look_after_V2 = prepV2 OP_look_V OP_after_Prep ; -- guess-p-verb
lin look_ahead_to_V2 = prepV2 (advV OP_look_V OP_ahead_Adv ) OP_to_Prep ; -- guess-p-verb
lin look_around_V = advV OP_look_V OP_around_Adv ; -- guess-p-verb
lin look_around_at_V2 = prepV2 (advV OP_look_V OP_around_Adv ) OP_at_Prep ; -- guess-p-verb
lin look_at_V2 = prepV2 OP_look_V OP_at_Prep ; -- guess-p-verb
lin look_back_V = mkV "vérifier" ; -- UWN
lin look_back_on_V2 = prepV2 (advV OP_look_V OP_back_Adv ) OP_on_Prep ; -- guess-p-verb
lin look_down_V = advV OP_look_V OP_down_Adv ; -- guess-p-verb
lin look_down_on_V2 = prepV2 (advV OP_look_V OP_down_Adv ) OP_on_Prep ; -- guess-p-verb
lin look_for_V2 = prepV2 OP_look_V OP_for_Prep ; -- guess-p-verb
lin look_forward_V = advV OP_look_V OP_forward_Adv ; -- guess-p-verb
lin look_forward_to_V2 = prepV2 (advV OP_look_V OP_forward_Adv ) OP_to_Prep ; -- guess-p-verb
lin look_in_V2 = prepV2 OP_look_V OP_in_Prep ; -- guess-p-verb
lin look_in_on_V2 = prepV2 (advV OP_look_V OP_in_Adv ) OP_on_Prep ; -- guess-p-verb
lin look_into_V2 = prepV2 OP_look_V OP_into_Prep ; -- guess-p-verb
lin look_on_V = mkV "estimer" | mkV "réputer" ; -- UWN
lin look_on_as_V3 = variants {} ; -- guess-p-verb
lin look_out_V = advV OP_look_V OP_out_Adv ; -- guess-p-verb
lin look_out_for_V2 = prepV2 (advV OP_look_V OP_out_Adv ) OP_for_Prep ; -- guess-p-verb
lin look_over_V2 = prepV2 OP_look_V OP_over_Prep ; -- guess-p-verb
lin look_round_V2 = prepV2 OP_look_V OP_round_Prep ; -- guess-p-verb
lin look_through_V2 = prepV2 OP_look_V OP_through_Prep ; -- guess-p-verb
lin look_to_V2 = prepV2 OP_look_V OP_to_Prep ; -- guess-p-verb
lin look_toward_V2 = prepV2 OP_look_V OP_toward_Prep ; -- guess-p-verb
lin look_up_V = mkV "chercher" | mkV "consulter" | mkV "référer" ; -- UWN
lin look_up_V2 = prepV2 OP_look_V OP_up_Prep ; -- guess-p-verb
lin look_up_to_V2 = prepV2 (advV OP_look_V OP_up_Adv ) OP_to_Prep ; -- guess-p-verb
lin look_upon_as_V3 = variants {} ; -- guess-p-verb
lin looker_N = mkN "canon" masculine ; -- tocheck
lin looking_N = mkN "regard" | mkN "être" ; -- UWN
lin lookout_N = mkN "sentinelle" feminine ; -- tocheck
lin loon_N = mkN "fou" masculine | mkN "plongeon" masculine ; -- tocheck
lin loop_N = mkN "boucle" feminine ; -- tocheck
lin loop_V2 = mkV2 (mkV "boucler") ; -- tocheck
lin loophole_N = mkN "échappatoire" feminine | mkN "meurtrière" feminine ; -- tocheck
lin loopy_A = mkA "timbré" ; -- tocheck
lin loose_A = mkA "lâche" ; -- tocheck
lin loose_Adv = mkAdv "gratuit" | mkAdv "gratuitement" | mkAdv "hors" | mkAdv "libre" ; -- UWN
lin loose_V2 = mkV2 (mkV I.défaire_V2) ; -- tocheck
lin loosen_V2 = mkV2 (mkV "desserrer") ; -- tocheck
lin loosen_up_V = mkV "débander" | mkV "relâcher" ; -- UWN
lin loosestrife_N = mkN "lysimaque" feminine | mkN "salicaire" feminine ; -- tocheck
lin loot_N = mkN "fric" masculine | mkN "butin" masculine ; -- tocheck
lin loot_V2 = mkV2 (mkV "piller") ; -- tocheck
lin looter_N = mkN "pilleur" masculine ; -- tocheck
lin looting_N = mkN "pillage" ; -- UWN
lin lopsided_A = mkA "bancal" ; -- tocheck
lin lopsidedness_N = mkN "asymétrie" ; -- UWN
lin loquacious_A = mkA "loquace" ; -- tocheck
lin loquaciousness_N = mkN "loquacité" ; -- UWN
lin loquacity_N = mkN "loquacité" feminine ; -- tocheck
lin lord_N = mkN "seigneur" masculine | mkN "châtelain" ; -- tocheck
lin lordosis_N = mkN "lordose" feminine ; -- tocheck
lin lordship_N = mkN "Monsieur" masculine | mkN "domaine" feminine ; -- tocheck
lin lore_N = mkN "Identité" | mkN "tradition" ; -- UWN
lin lorica_N = mkN "lorica" ; -- UWN
lin lorikeet_N = mkN "loriquet" masculine ; -- tocheck
lin lorry_N = mkN "camion" ; -- UWN
lin lory_N = mkN "lori" masculine ; -- tocheck
lin los_angeles_PN = mkPN "Los Angeles" ; -- status=guess src=geonames
lin lose_V = mkV L.lose_V2 ;
lin lose_V2 = L.lose_V2 ;
lin lose_out_V = advV OP_lose_V OP_out_Adv ; -- guess-p-verb
lin lose_out_on_V2 = prepV2 (advV OP_lose_V OP_out_Adv ) OP_on_Prep ; -- guess-p-verb
lin lose_out_to_V2 = prepV2 (advV OP_lose_V OP_out_Adv ) OP_to_Prep ; -- guess-p-verb
lin lose_up_V = advV OP_lose_V OP_up_Adv ; -- guess-p-verb
lin loser_N = mkN "perdant" masculine ; -- tocheck
lin loss_N = mkN "perte" feminine | mkN "défaite" feminine ; -- tocheck
lin lossiemouth_PN = mkPN "Lossiemouth" ; -- status=guess src=geonames
lin lost_A = variants {} ; --
lin lot_N = mkN "bande" feminine | mkN "groupe" masculine ;
lin lotion_N = mkN "lotion" masculine ; -- tocheck
lin lottery_N = mkN "loterie" feminine ; -- tocheck
lin lotto_N = mkN "loto" masculine ; -- tocheck
lin lotus_N = mkN "lotus" masculine ; -- tocheck
lin loud_A = mkA "fort" | mkA "bruyant" | mkA "voyant" ; -- tocheck
lin loud_Adv = variants {} ; --
lin loud_hailer_N = mkN "mégaphone" ; -- UWN
lin loudness_N = mkN "volume" masculine ; -- tocheck
lin loudspeaker_N = mkN "haut-parleur" masculine ; -- tocheck
lin loughborough_PN = mkPN "Loughborough" ; -- status=guess src=geonames
lin louisiana_PN = mkPN "Louisiana" ; -- status=guess src=geonames
lin louisville_PN = mkPN "Louisville" ; -- status=guess src=geonames
lin lounge_N = mkN "salon" masculine ; -- tocheck
lin loupe_N = mkN "loupe" feminine ; -- tocheck
lin louse_N = L.louse_N ;
lin lousy_A = mkA "pouilleux" ; -- tocheck
lin lout_N = mkN "malotru" masculine | mkN "voyou" masculine ; -- tocheck
lin louth_PN = mkPN "Louth" ; -- status=guess src=geonames
lin louver_N = mkN "persienne" feminine ; -- tocheck
lin louvre_N = mkN "auvent" | mkN "musée_du_louvre" | mkN "nageoire" | mkN "persienne" ; -- UWN
lin lovable_A = mkA "aimable" ; -- tocheck
lin lovage_N = mkN "livèche" ; -- tocheck
lin love_N = L.love_N ;
lin love_V2 = L.love_V2 ;
lin love_VV = variants {} ; -- mkV2V (mkV "aimer") ; -- tocheck
lin lovebird_N = mkN "tourtereaux" | mkN "inséparable" masculine ; -- tocheck
lin loveliness_N = mkN "beauté" feminine ; -- tocheck
lin lovely_A = mkA "adorable" ; -- tocheck
lin lover_N = mkN "amoureux" masculine | mkN "amant" masculine ; -- tocheck
lin loving_A = mkA "aimant" ; -- tocheck
lin lovingness_N = mkN "chaleur" ; -- UWN
lin low_A = mkA "bas" ;
lin low_Adv = mkAdv "bas" ; -- UWN
lin low_N = mkN "dépression" feminine | mkN "première" feminine ; -- tocheck
lin lowbrow_N = mkN "philistin" ; -- UWN
lin lower_V = variants {} ; -- mkV2 (mkV "baisser") | mkV2 (reflV (mkV "abaisser")) ; -- tocheck
lin lower_V2 = mkV2 (mkV "baisser") | mkV2 (reflV (mkV "abaisser")) ; -- tocheck
lin lowering_N = mkN "baisse" ; -- tocheck
lin lowestoft_PN = mkPN "Lowestoft" ; -- status=guess src=geonames
lin lowland_N = mkN "plaine" feminine ; -- tocheck
lin lox_N = mkN "saumon_fumé" ; -- UWN
lin loyal_A = mkA "loyal" ; -- tocheck
lin loyalist_N = mkN "loyaliste" ; -- UWN
lin loyalty_N = mkN "loyauté" feminine ; -- tocheck
lin lozenge_N = mkN "losange" masculine | mkN "pastille" feminine ; -- tocheck
lin lubeck_PN = mkPN "Lubeck" ; -- status=guess src=geonames
lin lubricant_N = mkN "lubrifiant" masculine ; -- tocheck
lin lubricate_V2 = mkV2 (mkV "lubrifier") ; -- tocheck
lin lubrication_N = mkN "lubrification" feminine ; -- tocheck
lin lubricious_A = mkA "lubrique" | mkA "luxurieux" | mkA "salace" ; -- UWN
lin lucent_A = mkA "lumineux" ; -- UWN
lin lucid_A = mkA "lucide" | mkA "clair" ; -- tocheck
lin lucidity_N = mkN "lucidité" feminine ; -- tocheck
lin lucifer_N = mkN "allumette" | mkN "lucifer" | mkN "match" ; -- UWN
lin luciferin_N = mkN "luciférine" | mkN "oxyluciférine" ; -- UWN
lin lucifugous_A = mkA "lucifuge" ; -- UWN
lin luck_N = mkN "chance" feminine ; -- tocheck
lin luckily_Adv = adjAdv lucky_A ; -- derived
lin luckless_A = mkA "malchanceux" ; -- UWN
lin lucknow_PN = mkPN "Lucknow" ; -- status=guess src=geonames
lin lucky_A = mkA "fortuné" | mkA "chanceux" ; -- tocheck
lin lucrative_A = mkA "lucratif" ; -- tocheck
lin lucre_N = mkN "gain" masculine ; -- tocheck
lin lucubration_N = mkN "élucubration" feminine ; -- tocheck
lin ludicrous_A = mkA "absurde" ; -- tocheck
lin ludlow_PN = mkPN "Ludlow" ; -- status=guess src=geonames
lin ludo_N = mkN "ludo" ; -- UWN
lin lug_N = mkN "cosse" feminine ; -- tocheck
lin luger_N = mkN "lugeur" masculine ; -- tocheck
lin luggage_N = mkN "bagage" masculine ; -- tocheck
lin lugger_N = mkN "lougre" ; -- UWN
lin lugubrious_A = mkA "lugubre" ; -- tocheck
lin lugworm_N = mkN "Arenicola_marina" | mkN "arenicola_marina" | mkN "arénicoles" ; -- UWN
lin lukewarm_A = mkA "tiède" ; -- tocheck
lin lull_N = mkN "calme" | mkN "silence" | mkN "silencieux" ; -- UWN
lin lull_V2 = mkV2 (mkV "apaiser") ; -- tocheck
lin lullaby_N = mkN "berceuse" feminine ; -- tocheck
lin lumbago_N = mkN "lumbago" masculine ; -- tocheck
lin lumber_N = mkN "batte_de_baseball" ; -- UWN
lin lumberjack_N = mkN "bûcheron" masculine ; -- tocheck
lin lumberman_N = mkN "bûcheron" ; -- UWN
lin lumber_mill_N = mkN "scierie" ; -- UWN
lin lumen_N = mkN "lumen" ; -- tocheck
lin luminary_N = mkN "haine_et_passions" | mkN "notabilité" | mkN "notable" | mkN "notoriété" | mkN "personnage" ; -- UWN
lin luminescence_N = mkN "luminescence" feminine ; -- tocheck
lin luminism_N = mkN "luminisme" ; -- UWN
lin luminosity_N = mkN "luminosité" feminine ; -- tocheck
lin luminous_A = mkA "lumineux" ; -- tocheck
lin lump_N = mkN "morceau" masculine | mkN "lot" masculine | mkN "masse" ; -- tocheck
lin lumpsucker_N = mkN "cyclopteridae" | mkN "cyclopterus_lumpus" | mkN "grosse_poule_de_mer" | mkN "lompe" ; -- UWN
lin lunar_A = mkA "lunaire" ; -- tocheck
lin lunatic_A = mkA "lunatique" ; -- tocheck
lin lunatic_N = mkN "dément" masculine ; -- tocheck
lin lunch_N = mkN "déjeuner" masculine ; -- tocheck
lin lunch_V = mkV "déjeuner" | mkV "dîner" ; -- UWN
lin lunch_V2 = mkV2 (mkV "déjeuner") ; -- tocheck
lin luncheon_N = mkN "déjeuner" | mkN "dîner" | mkN "repas" ; -- UWN
lin lunchtime_N = variants {} ; --
lin lung_N = mkN "poumon" masculine ; -- tocheck
lin lungfish_N = mkN "Dipnoi" | mkN "dipneuste" | mkN "dipneustes" | mkN "dipnoi" ; -- UWN
lin lungi_N = mkN "lungi" ; -- tocheck
lin lunisolar_A = mkA "lunisolaire" ; -- tocheck
lin lupin_N = mkN "lupin" | mkN "lupins" ; -- UWN
lin lupine_A = mkA "vorace" ; -- tocheck
lin lupine_N = mkN "lupin" | mkN "lupin" masculine ; -- tocheck
lin lurch_N = mkN "embardée" ; -- tocheck
lin lurcher_N = mkN "lurker" | mkN "voyeur" ; -- UWN
lin lure_N = mkN "leurre" masculine | mkN "attrait" masculine ; -- tocheck
lin lurid_A = mkA "jaunâtre" | mkA "blafard" | mkA "choquant" ; -- tocheck
lin lurk_V = mkV (mkV "traîner") ; -- tocheck
lin lurker_N = mkN "lurker" | mkN "voyeur" ; -- UWN
lin lush_A = mkA "abondant" | mkA "ample" | mkA "copieux" | mkA "large" | mkA "luxuriant" | mkA "plantureux" | mkA "profus" ; -- UWN
lin lush_N = mkN "alcoolique" masculine ; -- tocheck
lin lust_N = mkN "luxure" feminine ; -- tocheck
lin lust_V = mkV (mkV "désirer") | mkV (mkV "jouir") ; -- tocheck
lin luster_N = mkN "lustre" masculine | mkN "éclat" masculine | mkN "lustre" ; -- tocheck
lin lustful_A = mkA "lubrique" ; -- tocheck
lin lustre_N = mkN "lustre" | mkN "lustrer" ; -- UWN
lin lute_N = mkN "luth" masculine ; -- tocheck
lin lutefisk_N = mkN "lutefisk" ; -- UWN
lin lutetium_N = mkN "lutécium" masculine ; -- tocheck
lin luthier_N = mkN "luthier" masculine ; -- tocheck
lin luton_PN = mkPN "Luton" ; -- status=guess src=geonames
lin lux_N = mkN "lux" ; -- UWN
lin luxe_A = mkA "luxe" ; -- UWN
lin luxembourg_PN = mkPN ("Ville de Luxembourg" | "Luxembourg") ;
lin luxuriance_N = mkN "luxuriance" ; -- UWN
lin luxuriant_A = mkA "luxuriant" ; -- tocheck
lin luxurious_A = mkA "luxueux" ; -- tocheck
lin luxury_A = variants {} ; --
lin luxury_N = mkN "luxe" masculine ; -- tocheck
lin lycaenid_N = mkN "lycénidé" masculine ; -- tocheck
lin lycanthropy_N = mkN "lycanthropie" ; -- UWN
lin lyceum_N = mkN "lycée" masculine ; -- tocheck
lin lychee_N = mkN "litchi" masculine | mkN "letchi" ; -- UWN
lin lycopene_N = mkN "lycopène" ; -- UWN
lin lydney_PN = mkPN "Lydney" ; -- status=guess src=geonames
lin lye_N = mkN "soude" feminine ; -- tocheck
lin lying_N = mkN "fabrication" ; -- UWN
lin lymington_PN = mkPN "Lymington" ; -- status=guess src=geonames
lin lymm_PN = mkPN "Lymm" ; -- status=guess src=geonames
lin lymphadenitis_N = mkN "lymphadénite" ; -- UWN
lin lymphadenopathy_N = mkN "adénopathie" ; -- UWN
lin lymphocyte_N = mkN "lymphocyte" masculine ; -- tocheck
lin lymphocytopenia_N = mkN "lymphopénie" ; -- UWN
lin lymphoid_A = mkA "lymphoïde" ; -- UWN
lin lymphoma_N = mkN "lymphome" masculine ; -- tocheck
lin lymphopoiesis_N = mkN "leucopoïèse" ; -- UWN
lin lynch_V2 = mkV2 (mkV "lyncher") ; -- tocheck
lin lynching_N = mkN "lynchage" masculine ; -- tocheck
lin lynchpin_N = mkN "cheville" feminine ; -- tocheck
lin lynn_PN = mkPN "Lynn" ; -- status=guess src=geonames
lin lynx_N = mkN "lynx" masculine ; -- tocheck
lin lyonnaise_A = mkA "lyonnais" ; -- tocheck
lin lyons_PN = mkPN "Lyons" ; -- status=guess src=geonames
lin lyre_N = mkN "lyre" feminine ; -- tocheck
lin lyre_bird_N = mkN "menuridae" | mkN "ménuridés" ; -- UWN
lin lyricist_N = mkN "parolier" ; -- UWN
lin lysin_N = mkN "lysine" ; -- UWN
lin lysine_N = mkN "lysine" feminine ; -- tocheck
lin lysis_N = mkN "lyse" feminine | mkN "rémission" feminine ; -- tocheck
lin lysosome_N = mkN "lysosome" masculine ; -- tocheck
lin lysozyme_N = mkN "Lysozyme" | mkN "lysozyme" ; -- UWN
lin lyssavirus_N = mkN "lyssavirus" ; -- UWN
lin ma_N = mkN "maman" feminine ; -- tocheck
lin maar_N = mkN "maar" ; -- UWN
lin maastricht_PN = mkPN "Maastricht" ; -- status=guess src=geonames
lin mac_N = mkN "mack" ; -- UWN
lin macabre_A = mkA "macabre" ; -- tocheck
lin macadamia_N = mkN "macadamia" | mkN "noyer_du_queensland" ; -- UWN
lin macaque_N = mkN "macaque" masculine ; -- tocheck
lin macaroni_N = mkN "macaronis" ; -- tocheck
lin macaronic_A = mkA "bâtard" | mkA "macaronique" ; -- tocheck
lin macaroon_N = mkN "macaron" ; -- tocheck
lin macaw_N = mkN "ara" masculine ; -- tocheck
lin macclesfield_PN = mkPN "Macclesfield" ; -- status=guess src=geonames
lin mace_N = mkN "macis" masculine | mkN "masse" feminine ; -- tocheck
lin mace_bearer_N = mkN "macis" ; -- UWN
lin macerate_V = mkV "amaigrir" | mkV "macérer" ; -- UWN
lin macerate_V2 = mkV2 (mkV "macérer") ; -- tocheck
lin maceration_N = mkN "macération" feminine ; -- tocheck
lin mach_PN = mkPN "Mach" ; -- status=guess src=geonames
lin machete_N = mkN "machette" ; -- tocheck
lin machicolation_N = mkN "mâchicoulis" masculine ; -- tocheck
lin machination_N = mkN "machination" feminine ; -- tocheck
lin machine_N = mkN "machine" ; -- tocheck
lin machinery_N = mkN "mécanique" feminine ; -- tocheck
lin machinist_N = mkN "machiniste" masculine ; -- tocheck
lin machismo_N = mkN "machisme" masculine ; -- tocheck
lin macho_N = mkN "macho" masculine ; -- tocheck
lin mackerel_N = mkN "maquereau" masculine ; -- tocheck
lin mackintosh_N = mkN "mack" ; -- UWN
lin macon_N = mkN "macon" ; -- UWN
lin macro_A = mkA "macro-" ; -- tocheck
lin macro_N = mkN "macro" feminine ; -- tocheck
lin macrobiotic_A = mkA "macrobiotique" ; -- tocheck
lin macrocephalic_A = mkA "macrocéphale" ; -- UWN
lin macrocephaly_N = mkN "macrocéphalie" feminine ; -- tocheck
lin macrocosm_N = mkN "macrocosme" masculine ; -- tocheck
lin macrocosmic_A = mkA "macrocosmique" ; -- tocheck
lin macroeconomic_A = mkA "macroéconomique" ; -- UWN
lin macroeconomics_N = mkN "macroéconomie" feminine ; -- tocheck
lin macromolecule_N = mkN "macromolécule" ; -- UWN
lin macron_N = mkN "macron" masculine ; -- tocheck
lin macrophage_N = mkN "macrophage" masculine ; -- tocheck
lin macrozamia_N = mkN "macrozamia" ; -- UWN
lin macula_N = mkN "macula" feminine ; -- tocheck
lin macule_N = mkN "macule" | mkN "tache" ; -- UWN
lin mad_A = mkA "fâché" | mkA "fou" ; -- tocheck
lin madagascar_PN = mkPN "Madagascar" ; -- status=guess src=geonames
lin madam_N = mkN "madame" feminine ; -- tocheck
lin madder_N = mkN "garance" ; -- tocheck
lin madman_N = mkN "fou" masculine ; -- tocheck
lin madness_N = mkN "folie" | mkN "folie" feminine ; -- tocheck
lin madras_N = mkN "madras" masculine ; -- tocheck
lin madras_PN = mkPN "Madras" ; -- status=guess src=geonames
lin madrasa_N = mkN "Médersa" | mkN "medersa" | mkN "medrese" | mkN "médersa" ; -- UWN
lin madrid_PN = mkPN "Madrid" ; -- status=guess src=geonames
lin madrilene_N = mkN "madrilène" ; -- UWN
lin madurai_PN = mkPN "Madurai" ; -- status=guess src=geonames
lin madwoman_N = mkN "folle" feminine ; -- tocheck
lin maenad_N = mkN "ménade" feminine ; -- tocheck
lin maesteg_PN = mkPN "Maesteg" ; -- status=guess src=geonames
lin maestro_N = mkN "maestro" | mkN "maître" ; -- UWN
lin mafia_N = mkN "mafia" feminine ; -- tocheck
lin magazine_N = mkN "magasin" masculine | mkN "arsenal" masculine | mkN "magazine" masculine ; -- tocheck
lin magdeburg_PN = mkPN "Magdebourg" ; -- status=guess src=geonames
lin magenta_A = mkA "magenta" ; -- UWN
lin magenta_N = mkN "magenta" ; -- tocheck
lin maggot_N = mkN "asticot" masculine ; -- tocheck
lin maghull_PN = mkPN "Maghull" ; -- status=guess src=geonames
lin magic_A = mkA "magique" ; -- tocheck
lin magic_N = mkN "magie" feminine ; -- tocheck
lin magical_A = variants {} ; --
lin magician_N = mkN "magicien" masculine ; -- tocheck
lin magistrate_N = mkN "magistrat" masculine ; -- tocheck
lin magma_N = mkN "magma" masculine ; -- tocheck
lin magnanimity_N = mkN "magnanimité" feminine ; -- tocheck
lin magnanimous_A = mkA "magnanime" ; -- tocheck
lin magnate_N = mkN "Magnat" | mkN "baron" | mkN "magnat" | mkN "pouvoir" | mkN "roi" ; -- UWN
lin magnesia_N = mkN "oxyde_de_magnésium" | mkN "périclase" ; -- UWN
lin magnesite_N = mkN "magnésite" ; -- UWN
lin magnesium_N = mkN "magnésium" masculine ; -- tocheck
lin magnet_N = mkN "aimant" masculine ; -- tocheck
lin magnetic_A = mkA "magnétique" ; -- tocheck
lin magnetism_N = mkN "magnétisme" masculine ; -- tocheck
lin magnetite_N = mkN "magnétite" ; -- UWN
lin magnetization_N = mkN "magnétisation" feminine ; -- tocheck
lin magneto_N = mkN "magnéto" ; -- UWN
lin magnetohydrodynamics_N = mkN "magnétohydrodynamique" ; -- UWN
lin magnetometer_N = mkN "magnétomètre" masculine ; -- tocheck
lin magnetosphere_N = mkN "magnétosphère" feminine ; -- tocheck
lin magnetron_N = mkN "magnétron" ; -- UWN
lin magnification_N = mkN "agrandissement" masculine ; -- tocheck
lin magnificent_A = mkA "magnifique" ; -- tocheck
lin magnify_V2 = mkV2 (mkV "agrandir") ; -- tocheck
lin magniloquence_N = mkN "rhétorique" ; -- UWN
lin magniloquent_A = mkA "haut" ; -- UWN
lin magnitude_N = mkN "magnitude" feminine | mkN "ampleur" feminine | mkN "grandeur" feminine ; -- tocheck
lin magnolia_N = mkN "magnolia" masculine ; -- tocheck
lin magnum_N = mkN "magnum" ; -- UWN
lin magpie_N = mkN "pie" feminine ; -- tocheck
lin magus_N = mkN "mage" masculine ; -- tocheck
lin magyarFem_N = variants {} ; ---- sense to be split
lin magyarMasc_N = variants {} ; ---- sense to be split
lin maharaja_N = mkN "maharadja" masculine ; -- tocheck
lin mahatma_N = mkN "mahatma" ; -- UWN
lin mahogany_N = mkN "acajou" masculine ; -- tocheck
lin maid_N = mkN "bonne" feminine | mkN "demoiselle" feminine ; -- tocheck
lin maiden_A = mkA "inaugural" ; -- tocheck
lin maiden_N = mkN "vierge" feminine ; -- tocheck
lin maidenhair_N = mkN "adiante" ; -- UWN
lin maidenhead_N = mkN "virginité" ; -- tocheck
lin maidenhead_PN = mkPN "Maidenhead" ; -- status=guess src=geonames
lin maidenhood_N = mkN "virginité" ; -- tocheck
lin maidservant_N = mkN "bonne" | mkN "domestique" ; -- UWN
lin maidstone_PN = mkPN "Maidstone" ; -- status=guess src=geonames
lin mail_N = mkN "courrier" masculine | mkN "poste" feminine | mkN "poste" ; -- tocheck
lin mailboat_N = mkN "paquebot" | mkN "paquet" ; -- UWN
lin mailman_N = mkN "facteur" masculine ; -- tocheck
lin maim_V2 = mkV2 (mkV "mutiler") ; -- tocheck
lin main_A = mkA "principal" ;
lin mainframe_N = variants {} ; --
lin mainland_N = mkN "continent" masculine ; -- tocheck
lin mainly_Adv = adjAdv main_A | {-UWN-} mkAdv "essentiellement" | mkAdv "particulièrement" | mkAdv "principalement" | mkAdv "surtout" ; -- UWN -- -- derived
lin mains_N = variants {} ; --
lin mainsail_N = mkN "grand-voile" feminine ; -- tocheck
lin mainspring_N = mkN "ressort_de_barillet" | mkN "ressort_moteur" ; -- UWN
lin mainstream_N = variants {} ; --
lin maintain_V = variants {} ; -- mkV2 (mkV I.entretenir_V2) | mkV2 (mkV I.maintenir_V2) ; -- tocheck
lin maintain_V2 = mkV2 (mkV I.entretenir_V2) | mkV2 (mkV I.maintenir_V2) ; -- tocheck
lin maintain_VS = mkvVS "affirmer" | mkvVS "durer" | mkvVS "imposer" | mkvVS "maintenir" ; -- UWN
lin maintenance_N = mkN "entretien" masculine ; -- tocheck
lin mainz_PN = mkPN "Mayence" ; -- status=guess src=geonames
lin maize_N = mkN "maïs" masculine ; -- tocheck
lin majestic_A = mkA "altier" | mkA "fier" | mkA "imposant" ; -- UWN
lin majesty_N = mkN "majesté" ; -- tocheck
lin majolica_N = mkN "barbotine" ; -- UWN
lin major_A = mkA "majeur" ;
lin major_N = mkN "commandant" masculine | mkN "majeur" masculine ; -- tocheck
lin majority_N = mkN "majorité" | mkN "majorité" feminine ; -- tocheck
lin make_N = mkN "marque" feminine ; -- tocheck
lin make_V = mkV I.faire_V2 ;
lin make_V2 = I.faire_V2 ;
lin make_V2A = mkV2V (mkV I.rendre_V2) ;
lin make_V2V = mkV2V (mkV I.faire_V2) ;
lin make_after_V = advV OP_make_V OP_after_Adv ; -- guess-p-verb
lin make_away_with_V2 = prepV2 (advV OP_make_V OP_away_Adv ) OP_with_Prep ; -- guess-p-verb
lin make_do_with_V2 = variants {} ; -- guess-p-verb
lin make_for_V2 = prepV2 OP_make_V OP_for_Prep ; -- guess-p-verb
lin make_into_V2 = prepV2 OP_make_V OP_into_Prep ; -- guess-p-verb
lin make_it_V = variants {} ; -- guess-p-verb
lin make_it_up_to_V2 = variants {} ; -- guess-p-verb
lin make_of_V3 = variants {} ; -- guess-p-verb
lin make_off_V = advV OP_make_V OP_off_Adv ; -- guess-p-verb
lin make_off_with_V2 = prepV2 (advV OP_make_V OP_off_Adv ) OP_with_Prep ; -- guess-p-verb
lin make_out_V = advV OP_make_V OP_out_Adv ; -- guess-p-verb
lin make_out_V2 = prepV2 OP_make_V OP_out_Prep ; -- guess-p-verb
lin make_out_with_V2 = prepV2 (advV OP_make_V OP_out_Adv ) OP_with_Prep ; -- guess-p-verb
lin make_over_V2 = prepV2 OP_make_V OP_over_Prep ; -- guess-p-verb
lin make_towards_V2 = prepV2 OP_make_V OP_towards_Prep ; -- guess-p-verb
lin make_up_N = variants {} ; --
lin make_up_V = advV OP_make_V OP_up_Adv ; -- guess-p-verb
lin make_up_V2 = prepV2 OP_make_V OP_up_Prep ; -- guess-p-verb
lin make_up_for_V2 = prepV2 (advV OP_make_V OP_up_Adv ) OP_for_Prep ; -- guess-p-verb
lin make_up_to_V2 = prepV2 (advV OP_make_V OP_up_Adv ) OP_to_Prep ; -- guess-p-verb
lin make_with_V2 = prepV2 OP_make_V OP_with_Prep ; -- guess-p-verb
lin makeover_N = mkN "relooking" ; -- tocheck
lin maker_N = mkN "fabricant" masculine ; -- tocheck
lin makeup_N = mkN "constitution" | mkN "maquillage" masculine ; -- tocheck
lin making_N = mkN "genèse" | mkN "prise" | mkN "réalisation" ; -- UWN
lin mako_N = mkN "mako" ; -- UWN
lin malabsorption_N = mkN "malabsorption" ; -- UWN
lin malachite_N = mkN "malachite" feminine ; -- tocheck
lin malacia_N = mkN "malacie" feminine ; -- tocheck
lin malacology_N = mkN "malacologie" feminine ; -- tocheck
lin maladroitness_N = mkN "Fear" ; -- UWN
lin malady_N = mkN "maladie" feminine ; -- tocheck
lin malaga_PN = mkPN "Malaga" ; -- status=guess src=geonames
lin malaise_N = mkN "malaise" masculine ; -- tocheck
lin malapropism_N = mkN "perronisme" ; -- UWN
lin malapropos_Adv = mkAdv "inopportunément" ; -- UWN
lin malaria_N = mkN "paludisme" masculine ; -- tocheck
lin malawi_PN = mkPN "Malawi" ; -- status=guess src=geonames
lin malaya_PN = mkPN "Malaya" ; -- status=guess src=geonames
lin malaysia_PN = mkPN "Malaisie" ; -- status=guess src=geonames
lin malcontent_A = mkA "mécontent" | mkA "rebelle" ; -- UWN
lin maldon_PN = mkPN "Maldon" ; -- status=guess src=geonames
lin male_A = mkA "mâle" ; -- tocheck
lin male_N = mkN "mâle" masculine | mkN "homme" masculine ; -- tocheck
lin malediction_N = mkN "malédiction" feminine ; -- tocheck
lin malefic_A = mkA "mal" | mkA "malin" ; -- UWN
lin maleficence_N = mkN "espièglerie" ; -- UWN
lin maleficent_A = mkA "maléfique" ; -- tocheck
lin maleness_N = mkN "masculinité" ; -- UWN
lin malevolence_N = mkN "malveillance" feminine ; -- tocheck
lin malevolent_A = mkA "malintentionné" ; -- tocheck
lin malfeasance_N = mkN "malfaisance" ; -- UWN
lin malformation_N = mkN "malformation" feminine ; -- tocheck
lin malformed_A = mkA "difforme" ; -- UWN
lin malfunction_N = mkN "fonctionnement" ; -- UWN
lin malfunction_V = mkV "fonctionner" ; -- UWN
lin mali_PN = mkPN "Mali" ; -- status=guess src=geonames
lin malice_N = mkN "malice" feminine ; -- tocheck
lin malicious_A = mkA "mauvais" | mkA "malveillant" ; -- tocheck
lin malignant_A = mkA "malin" ; -- tocheck
lin malleable_A = mkA "malléable" ; -- tocheck
lin mallee_N = mkN "mallee" ; -- UWN
lin mallet_N = mkN "maillet" masculine ; -- tocheck
lin malleus_N = mkN "malléus" ; -- tocheck
lin mallow_N = mkN "mauve" feminine ; -- tocheck
lin mallow_PN = mkPN "Mallow" ; -- status=guess src=geonames
lin malnutrition_N = mkN "malnutrition" feminine ; -- tocheck
lin malodor_N = mkN "empester" | mkN "puanteur" | mkN "puer" ; -- UWN
lin malt_N = mkN "malt" masculine ; -- tocheck
lin malt_V2 = mkV2 (mkV "malter") ; -- tocheck
lin malta_PN = mkPN "Malte" ; -- status=guess src=geonames
lin maltby_PN = mkPN "Maltby" ; -- status=guess src=geonames
lin malted_N = mkN "malt" ; -- UWN
lin malteseFem_N = variants {} ; ---- sense to be split
lin malteseMasc_N = variants {} ; ---- sense to be split
lin maltose_N = mkN "maltose" ; -- UWN
lin maltreatment_N = mkN "sévice" masculine ; -- tocheck
lin malvasia_N = mkN "malvoisie" ; -- UWN
lin malvern_PN = mkPN "Malvern" ; -- status=guess src=geonames
lin mamba_N = mkN "mamba" masculine ; -- tocheck
lin mambo_N = mkN "mambo" masculine ; -- tocheck
lin mamma_N = mkN "Glande_mammaire" | mkN "glande_mammaire" | mkN "glande_mammaire_/_mamelle" | mkN "glandes_mammaires" | mkN "mamelle" ; -- UWN
lin mammal_N = mkN "mammifère" masculine ; -- tocheck
lin mammalogy_N = mkN "mammalogie" ; -- UWN
lin mammary_A = mkA "mammaire" ; -- tocheck
lin mammogram_N = mkN "mammogramme" masculine ; -- tocheck
lin mammography_N = mkN "mammographie" feminine ; -- tocheck
lin mammon_N = mkN "mammon" ; -- UWN
lin mammoth_N = mkN "mammouth" masculine ; -- tocheck
lin mammy_N = mkN "maman" ; -- tocheck
lin man_N = L.man_N ;
lin manage_V = mkV "accompagner" | mkV "diriger" | mkV "gérer" | mkV "superviser" | mkV "surveiller" | mkV "vérifier" ; -- UWN
lin manage_V2 = mkV2 (mkV "gérer") | mkV2 (mkV I.parvenir_V) | mkV2 (mkV "manier") ; -- tocheck
lin manage_VV = mkvVV "gérer" | mkvVV "sortir" | mkvVV "tirer" ; -- UWN
lin manageability_N = mkN "docilité" | mkN "obéissance" | mkN "souplesse" ; -- UWN
lin manageable_A = mkA "gérable" ; -- tocheck
lin management_N = mkN "administration" feminine ;
lin manager_N = mkN "chef" ;
lin managerial_A = mkA "managérial" ; -- tocheck
lin managing_A = variants {} ; --
lin manatee_N = mkN "lamantin" masculine ; -- tocheck
lin manchester_PN = mkPN "Manchester" ; -- status=guess src=geonames
lin mandala_N = mkN "mandala" masculine ; -- tocheck
lin mandarin_N = mkN "mandarin" masculine ; -- tocheck
lin mandate_N = mkN "mandat" masculine ; -- tocheck
lin mandate_V2 = mkV2 (mkV "autoriser") ; -- tocheck
lin mandatory_A = mkA "obligatoire" ; -- tocheck
lin mandibular_A = mkA "mandibulaire" ; -- UWN
lin mandolin_N = mkN "mandoline" feminine ; -- tocheck
lin mandrake_N = mkN "mandragore" feminine ; -- tocheck
lin mandrill_N = mkN "mandrill" masculine ; -- tocheck
lin mane_N = mkN "crinière" feminine ; -- tocheck
lin maneuver_N = mkN "manoeuvre" feminine ; -- tocheck
lin maneuverability_N = mkN "manoeuvrabilité" | mkN "manœuvrabilité" ; -- UWN
lin maneuverable_A = mkA "manœuvrable" ; -- UWN
lin manganese_N = mkN "manganèse" masculine ; -- tocheck
lin manganite_N = mkN "manganite" ; -- UWN
lin mange_N = mkN "gale" feminine ; -- tocheck
lin manger_N = mkN "mangeoire" feminine ; -- tocheck
lin mangle_N = mkN "essoreuse" feminine ; -- tocheck
lin mangle_V2 = mkV2 (mkV "essorer") ; -- tocheck
lin manglietia_N = mkN "manglietia" ; -- UWN
lin mango_N = mkN "mangue" feminine | mkN "manguier" masculine ; -- tocheck
lin mangosteen_N = mkN "mangoustan" ; -- tocheck
lin mangrove_N = mkN "palétuvier" masculine ; -- tocheck
lin mangy_A = mkA "galeux" ; -- tocheck
lin manhattan_PN = mkPN "Manhattan" ; -- status=guess src=geonames
lin manhole_N = mkN "regard" | mkN "trou_d'homme" ; -- UWN
lin manhood_N = mkN "virilité" feminine ; -- tocheck
lin manhunt_N = mkN "chasse" ; -- UWN
lin mania_N = mkN "manie" feminine ; -- tocheck
lin maniac_N = mkN "maniaque" ; -- tocheck
lin maniacal_A = mkA "maniaque" ; -- UWN
lin manicure_N = mkN "manucure" feminine ; -- tocheck
lin manicurist_N = mkN "manucure" ; -- tocheck
lin manifest_A = mkA "manifeste" ; -- tocheck
lin manifest_N = mkN "manifeste" ; -- tocheck
lin manifest_V2 = variants {} ; --
lin manifestation_N = mkN "manifestation" feminine ; -- tocheck
lin manifesto_N = mkN "manifeste" masculine ; -- tocheck
lin manifold_A = mkA "variété" ; -- UWN
lin manifold_N = mkN "variété" feminine ; -- tocheck
lin manila_PN = mkPN "Manille" ; -- status=guess src=geonames
lin manilla_N = mkN "manilla" | mkN "manille" | mkN "papier_kraft" ; -- UWN
lin manipulate_V2 = mkV2 (mkV "manipuler") ; -- tocheck
lin manipulation_N = mkN "employer" | mkN "manipulation" | mkN "usage" | mkN "utilisation" | mkN "utiliser" ; -- UWN
lin manipulative_A = mkA "manipulateur" ; -- tocheck
lin manipulator_N = mkN "manipulateur" masculine ; -- tocheck
lin mankind_N = mkN "humanité" feminine ; -- tocheck
lin manliness_N = mkN "masculinité" feminine ; -- tocheck
lin manly_A = mkA "viril" ; -- tocheck
lin manna_N = mkN "manne" feminine ; -- tocheck
lin mannequin_N = mkN "mannequin" masculine ; -- tocheck
lin manner_N = mkN "manière" feminine ; -- tocheck
lin mannerism_N = mkN "maniérisme" masculine ; -- tocheck
lin mannerly_A = mkA "poli" ; -- UWN
lin manners_N = mkN "moeurs" ; -- tocheck
lin mannheim_PN = mkPN "Mannheim" ; -- status=guess src=geonames
lin manoeuvrability_N = mkN "manoeuvrabilité" feminine ; -- tocheck
lin manoeuvrable_A = mkA "manœuvrable" ; -- UWN
lin manoeuvre_V = mkV "manœuvre" | mkV "manœuvrer" | mkV "opérer" | mkV "évoluer" | mkV "œuvrer" ; -- UWN
lin manoeuvre_V2 = mkV2 (mkV "manœuvre" | mkV "manœuvrer" | mkV "opérer" | mkV "évoluer" | mkV "œuvrer") ; -- UWN
lin manometer_N = mkN "manomètre" masculine ; -- tocheck
lin manor_N = mkN "manoir" ; -- tocheck
lin manpower_N = mkN "actif" | mkN "gens" | mkN "hommes" | mkN "main-d’œuvre" | mkN "main_d'œuvre" | mkN "on" ; -- UWN
lin manque_A = mkA "désireux" ; -- UWN
lin mansard_N = mkN "mansarde" ; -- UWN
lin manservant_N = mkN "domestique" ; -- UWN
lin mansfield_PN = mkPN "Mansfield" ; -- status=guess src=geonames
lin manslaughter_N = mkN "homicide_involontaire" ; -- UWN
lin manta_N = mkN "raie_manta" ; -- UWN
lin manticore_N = mkN "manticore" ; -- tocheck
lin mantis_N = mkN "mante" feminine ; -- tocheck
lin mantissa_N = mkN "mantisse" ; -- UWN
lin mantle_N = mkN "manteau" masculine ; -- tocheck
lin mantra_N = mkN "mantra" masculine | mkN "slogan" masculine ; -- tocheck
lin mantua_N = mkN "mantoue" ; -- UWN
lin manual_A = mkA "manuel" ; -- tocheck
lin manual_N = mkN "manuel" masculine ; -- tocheck
lin manufacture_N = variants {} ; --
lin manufacture_V2 = mkV2 (mkV "fabriquer") | mkV2 (mkV "manufacturer") ; -- tocheck
lin manufacturer_N = mkN "fabricant" masculine ; -- tocheck
lin manufacturing_A = variants {} ; --
lin manufacturing_N = variants {} ; --
lin manul_N = mkN "manul" ; -- tocheck
lin manumission_N = mkN "manumission" ; -- tocheck
lin manure_N = mkN "fumier" masculine ; -- tocheck
lin manuscript_N = mkN "manuscrit" masculine ; -- tocheck
lin many_Det = S.many_Det ;
lin map_N = mkN "plan" masculine | mkN "carte" feminine ; -- tocheck
lin map_V2 = variants {} ; --
lin mapinguari_N = mkN "mapinguari" ; -- UWN
lin maple_N = mkN "érable" masculine ; -- tocheck
lin mapmaking_N = mkN "cartographie" ; -- UWN
lin mapping_N = mkN "cartographie" feminine ; -- tocheck
lin maquiladora_N = mkN "maquila" | mkN "maquiladora" ; -- UWN
lin maquis_N = mkN "maquis" masculine ; -- tocheck
lin marabou_N = mkN "marabout" ; -- UWN
lin maracaibo_PN = mkPN "Maracaibo" ; -- status=guess src=geonames
lin marasmus_N = mkN "marasme" masculine ; -- tocheck
lin marathon_N = mkN "marathon" masculine ; -- tocheck
lin marathoner_N = mkN "marathonien" ; -- UWN
lin maraud_V = mkV (mkV "marauder") | mkV (mkV "piller") ; -- tocheck
lin marauder_N = mkN "maraudeur" masculine ; -- tocheck
lin marble_N = mkN "marbre" masculine | mkN "bille" feminine ; -- tocheck
lin marbles_N = mkN "billes" ; -- tocheck
lin march_V = variants {} ; -- mkV2 (mkV "marcher") ; -- tocheck
lin march_V2 = mkV2 (mkV "marcher") ; -- tocheck
lin marchioness_N = mkN "marquise" ; -- tocheck
lin mare_N = mkN "jument" feminine ; -- tocheck
lin margaret_PN = mkPN "Margaret" ; -- status=guess src=geonames
lin margarin_N = mkN "margarine" | mkN "marge" ; -- UWN
lin margarine_N = mkN "margarine" feminine ; -- tocheck
lin margarita_N = mkN "Margarita" | mkN "margarita" ; -- UWN
lin margate_PN = mkPN "Margate" ; -- status=guess src=geonames
lin margay_N = mkN "margay" masculine ; -- tocheck
lin marge_N = mkN "margarine" | mkN "marge" ; -- UWN
lin margin_N = mkN "marge" feminine ; -- tocheck
lin marginal_A = mkA "médiocre" | mkA "adjacent" | mkA "marginal" | mkA "pauvre" ; -- tocheck
lin marginalization_N = mkN "exclusion_sociale" | mkN "marginalisation" ; -- UWN
lin margrave_N = mkN "margrave" masculine ; -- tocheck
lin maria_PN = mkPN "Maria" ; -- status=guess src=geonames
lin mariachi_N = mkN "mariachi" ; -- UWN
lin marigold_N = mkN "souci" masculine ; -- tocheck
lin marihuana_N = mkN "cannabis" | mkN "herbe" | mkN "marijuana" ; -- UWN
lin marijuana_N = mkN "marijuana" feminine ; -- tocheck
lin marimba_N = mkN "marimba" masculine ; -- tocheck
lin marina_N = mkN "marina" ; -- UWN
lin marinade_N = mkN "marinade" feminine ; -- tocheck
lin marinate_V2 = mkV2 (mkV "mariner") ; -- tocheck
lin marine_A = mkA "marin" ; -- tocheck
lin marine_N = mkN "marinier" masculine ; -- tocheck
lin marion_PN = mkPN "Marion" ; -- status=guess src=geonames
lin marionette_N = mkN "marionnette" feminine ; -- tocheck
lin mariposa_N = mkN "mariposa" ; -- UWN
lin marital_A = mkA "matrimonial" ; -- tocheck
lin maritime_A = mkA "maritime" ; -- tocheck
lin marjoram_N = mkN "marjolaine" feminine ; -- tocheck
lin mark_N = mkN "note" feminine | mkN "pièce" | mkN "marque" feminine | mkN "marc" masculine | mkN "score" masculine | mkN "mark" masculine | mkN "trace" feminine ; -- tocheck
lin mark_V2 = variants {} ; -- mkV3 (mkV "tacher") | mkV3 (mkV "corriger") | mkV3 (mkV "marquer") | mkV3 (mkV "noter") ; -- tocheck
lin mark_V3 = mkV3 (mkV "tacher") | mkV3 (mkV "corriger") | mkV3 (mkV "marquer") | mkV3 (mkV "noter") ; -- tocheck
lin mark_down_V2 = prepV2 (lin V OP_mark_V2) OP_down_Prep ; -- guess-p-verb
lin mark_down_as_V3 = variants {} ; -- guess-p-verb
lin mark_off_V2 = prepV2 (lin V OP_mark_V2) OP_off_Prep ; -- guess-p-verb
lin mark_out_V2 = prepV2 (lin V OP_mark_V2) OP_out_Prep ; -- guess-p-verb
lin mark_out_for_V3 = variants {} ; -- guess-p-verb
lin mark_out_from_V3 = variants {} ; -- guess-p-verb
lin mark_up_V2 = prepV2 (lin V OP_mark_V2) OP_up_Prep ; -- guess-p-verb
lin marked_A = variants {} ; --
lin marker_N = mkN "marqueur" masculine ; -- tocheck
lin market_1_N = mkN "marché" masculine ;
lin market_2_N = mkN "marché" masculine ;
lin market_N = mkN "marché" masculine ;
lin market_V = variants {} ; -- mkV2 (mkV "commercialiser") ; -- tocheck
lin market_V2 = mkV2 (mkV "commercialiser") ; -- tocheck
lin marketable_A = mkA "commercialisable" ; -- UWN
lin marketing_N = mkN "mercatique" feminine ; -- tocheck
lin marketplace_N = mkN "marché" masculine ; -- tocheck
lin marking_N = mkN "marquage" ; -- UWN
lin marksman_N = mkN "tireur_d'élite" ; -- UWN
lin mark_up_N = mkN "majoration" feminine | mkN "balise" | mkN "marge" ; -- tocheck
lin marl_N = mkN "marne" feminine ; -- tocheck
lin marlborough_PN = mkPN "Marlborough" ; -- status=guess src=geonames
lin marlin_N = mkN "marlin" ; -- tocheck
lin marline_N = mkN "lusin" masculine ; -- tocheck
lin marlow_PN = mkPN "Marlow" ; -- status=guess src=geonames
lin marmalade_N = mkN "confiture" feminine ; -- tocheck
lin marmoreal_A = mkA "marmoréen" ; -- tocheck
lin marmoset_N = mkN "ouistiti" masculine ; -- tocheck
lin marmot_N = mkN "marmotte" feminine ; -- tocheck
lin marple_PN = mkPN "Marple" ; -- status=guess src=geonames
lin marquee_N = mkN "marquise" ; -- UWN
lin marquess_N = mkN "marquise" feminine ; -- tocheck
lin marquetry_N = mkN "marqueterie" ; -- UWN
lin marquis_N = mkN "marquis" masculine ; -- tocheck
lin marriage_N = mkN "mariage" masculine ; -- tocheck
lin married_A = variants {} ; --
lin married_A2 = L.married_A2 ;
lin marrow_N = mkN "courgette" feminine | mkN "moelle" feminine ; -- tocheck
lin marry_V = mkV "marier" | mkV "épouser" ; -- UWN
lin marry_V2 = mkV2 (mkV "marier") | mkV2 (reflV (mkV "marier")) ; -- tocheck
lin marry_in_V = advV OP_marry_V OP_in_Adv ; -- guess-p-verb
lin marry_out_V = advV OP_marry_V OP_out_Adv ; -- guess-p-verb
lin mars_PN = mkPN "Mars" ; -- status=guess src=geonames
lin marseille_N = mkN "marseille" ; -- UWN
lin marseilles_PN = mkPN "Marseilles" ; -- status=guess src=geonames
lin marsh_N = mkN "marais" ; -- tocheck
lin marshal_N = mkN "maréchal" | mkN "marshal" ; -- tocheck
lin marshmallow_N = mkN "guimauve" feminine ; -- tocheck
lin marshy_A = mkA "marécageux" ; -- tocheck
lin marsupial_A = mkA "marsupial" ; -- UWN
lin marsupial_N = mkN "marsupial" masculine ; -- tocheck
lin marsupium_N = mkN "marsupium" ; -- UWN
lin marten_N = mkN "marte" feminine ; -- tocheck
lin martensite_N = mkN "la_martensite" | mkN "martensite" ; -- UWN
lin martial_A = mkA "martial" ; -- tocheck
lin martin_N = mkN "martinet" masculine ; -- tocheck
lin martin_PN = mkPN "Martin" ; -- status=guess src=geonames
lin martinet_N = mkN "martinet" ; -- UWN
lin martini_N = mkN "martini" masculine ; -- tocheck
lin martyr_N = mkN "martyr" masculine ; -- tocheck
lin martyr_V2 = mkV2 (mkV "martyriser") ; -- tocheck
lin martyrdom_N = mkN "martyre" masculine ; -- tocheck
lin marvel_N = mkN "merveille" | mkN "se_demander" ; -- UWN
lin marvellous_A = variants {} ; --
lin marvelous_A = mkA "merveilleux" ; -- tocheck
lin marxistFem_N = variants {} ; ---- sense to be split
lin marxistMasc_N = variants {} ; ---- sense to be split
lin mary_PN = mkPN "Mary" ; -- status=guess src=geonames
lin maryport_PN = mkPN "Maryport" ; -- status=guess src=geonames
lin marzipan_N = mkN "massepain" masculine ; -- tocheck
lin mascara_N = mkN "rimmel" masculine ; -- tocheck
lin mascarpone_N = mkN "mascarpone" ; -- UWN
lin mascot_N = mkN "mascotte" feminine ; -- tocheck
lin masculine_A = mkA "masculin" ; -- tocheck
lin masculine_N = mkN "masculin" masculine ; -- tocheck
lin masculinity_N = mkN "masculinité" feminine ; -- tocheck
lin masculinization_N = mkN "masculinisation" feminine ; -- tocheck
lin masdevallia_N = mkN "masdevallia" ; -- UWN
lin maser_N = mkN "Maser" | mkN "maser" ; -- UWN
lin masjid_N = mkN "mosquée" | mkN "église" ; -- UWN
lin mask_N = mkN "masque" masculine | mkN "masque" ; -- tocheck
lin masochism_N = mkN "masochisme" masculine ; -- tocheck
lin masochist_N = mkN "masochiste" ; -- tocheck
lin mason_N = mkN "maçon" masculine ; -- tocheck
lin masquerade_N = mkN "mascarade" ; -- UWN
lin masquerade_V = mkV (mkV "mascarader") ; -- tocheck
lin mass_A = variants {} ; --
lin mass_N = mkN "masse" feminine | mkN "messe" feminine ; -- tocheck
lin massacre_N = mkN "massacre" masculine ; -- tocheck
lin massacre_V2 = mkV2 (mkV "massacrer") ; -- tocheck
lin massage_N = mkN "massage" masculine ; -- tocheck
lin massage_V2 = mkV2 (mkV "masser") ; -- tocheck
lin masseur_N = mkN "masseur" masculine ; -- tocheck
lin masseuse_N = mkN "masseuse" ; -- UWN
lin massif_N = mkN "massif" masculine ; -- tocheck
lin massive_A = mkA "massif" ; -- tocheck
lin massiveness_N = mkN "poids" ; -- UWN
lin mast_N = mkN "mât" masculine ; -- tocheck
lin mastaba_N = mkN "mastaba" ; -- UWN
lin mastectomy_N = mkN "masectomie" feminine ; -- tocheck
lin master_1_N = mkN "maître" masculine ;
lin master_2_N = mkN "maître" masculine ;
lin master_N = mkN "maître" masculine ;
lin master_V2 = mkV2 "maîtriser" ;
lin masterful_A = mkA "virtuose" ; -- UWN
lin masterly_A = mkA "virtuose" ; -- UWN
lin masterpiece_N = mkN "chef-d'oeuvre" masculine ; -- tocheck
lin mastic_N = mkN "mastic" ; -- tocheck
lin masticate_V2 = mkV2 (mkV "mastiquer") ; -- tocheck
lin mastication_N = mkN "mastication" | mkN "mâcher" ; -- UWN
lin mastiff_N = mkN "dogue" masculine ; -- tocheck
lin mastitis_N = mkN "mastite" masculine ; -- tocheck
lin mastoid_N = mkN "mastoïde" ; -- UWN
lin mastoiditis_N = mkN "mastoïdite" ; -- UWN
lin masturbate_V2 = mkV2 (mkV "masturber") ; -- tocheck
lin masturbation_N = mkN "masturbation" feminine ; -- tocheck
lin masturbator_N = mkN "masturbateur" masculine ; -- tocheck
lin mat_A = mkA "mat" ; -- UWN
lin mat_V = mkV "feutre" ; -- UWN
lin matador_N = mkN "matador" masculine ; -- tocheck
lin match_1_N = mkN "match" ; -- UWN
lin match_2_N = variants {} ; --
lin match_3_N = variants {} ; --
lin match_N = mkN "allumette" feminine | mkN "match" masculine ; -- tocheck
lin match_V2 = mkV2 (mkV "combiner") | mkV2 (mkV "concorder") ; -- tocheck
lin match_up_V = advV (lin V OP_match_V2) OP_up_Adv ; -- guess-p-verb
lin matchet_N = mkN "coupe-coupe" | mkN "coupecoupe" | mkN "machette" ; -- UWN
lin matchlock_N = mkN "Platine_à_mèche" | mkN "platine_à_mèche" ; -- UWN
lin matchmaker_N = mkN "entremetteur" ; -- tocheck
lin mateFem_1_N = variants {} ; ---- sense to be split
lin mateFem_2_N = variants {} ; ---- sense to be split
lin mateMasc_1_N = variants {} ; ---- sense to be split
lin mateMasc_2_N = variants {} ; ---- sense to be split
lin mate_1_N = variants {} ; --
lin mate_2_N = variants {} ; --
lin mate_N = mkN "copain" masculine ; -- tocheck
lin mate_V2 = mkV2 (reflV (mkV "accoupler")) | mkV2 (reflV (mkV "assembler")) ; -- tocheck
lin material_A = mkA "matériel" ; -- tocheck
lin material_N = mkN "matériel" masculine ;
lin materialism_N = mkN "matérialisme" masculine ; -- tocheck
lin materialistic_A = mkA "matérialiste" ; -- tocheck
lin materiel_N = mkN "matériel" ; -- tocheck
lin maternal_A = mkA "maternel" ; -- tocheck
lin maternity_N = mkN "maternité" ; -- UWN
lin mathematical_A = mkA "mathématique" ; -- tocheck
lin mathematicianFem_N = mkN "Mathématicien" | mkN "mathématicien" | mkN "mathématicienne" ; -- UWN
lin mathematicianMasc_N = mkN "Mathématicien" | mkN "mathématicien" | mkN "mathématicienne" ; -- UWN
lin mathematics_N = mkN "mathématiques" ; -- tocheck
lin maths_N = mkN "maths" ; -- tocheck
lin matins_N = mkN "matines" | mkN "vigiles" ; -- UWN
lin matlock_PN = mkPN "Matlock" ; -- status=guess src=geonames
lin matriarch_N = mkN "matriarche" feminine ; -- tocheck
lin matriarchal_A = mkA "matriarcal" ; -- UWN
lin matriarchy_N = mkN "matriarcat" | mkN "matriarchie" ; -- UWN
lin matrilineal_A = mkA "matrilinéaire" ; -- tocheck
lin matrimonial_A = mkA "marital" | mkA "marié" | mkA "mariée" | mkA "matrimonial" ; -- UWN
lin matrimony_N = mkN "mariage" masculine ; -- tocheck
lin matrix_N = mkN "matrice" feminine ; -- tocheck
lin matron_N = mkN "matrone" ; -- UWN
lin matt_A = mkA "mat" ; -- UWN
lin matter_1_N = mkN "matière" feminine ;
lin matter_2_N = mkN "affaire" feminine ;
lin matter_N = mkN "matière" feminine | mkN "affaire" feminine ;
lin matter_V = mkV (mkV "importer") ; -- tocheck
lin mattock_N = mkN "pioche" ; -- tocheck
lin mattress_N = mkN "matelas" masculine ; -- tocheck
lin maturate_V = mkV "suppurer" ; -- UWN
lin mature_A = mkA "mûr" ; -- tocheck
lin mature_V2 = mkV2 (mkV "mûrir") ; -- tocheck
lin maturity_1_N = variants {} ; --
lin maturity_2_N = variants {} ; --
lin maturity_3_N = mkN "maturité" ; -- UWN
lin maturity_N = variants {} ; --
lin matutinal_A = mkA "matutinal" ; -- tocheck
lin matzo_N = mkN "Matza" | mkN "matza" ; -- UWN
lin maud_PN = mkPN "Maud" ; -- status=guess src=geonames
lin maudlin_A = mkA "larmoyant" | mkA "histrionique" ; -- tocheck
lin maul_N = mkN "merlin" masculine ; -- tocheck
lin maul_V2 = mkV2 (mkV "maltraiter") ; -- tocheck
lin mauritania_PN = mkPN "Mauritanie" ; -- status=guess src=geonames
lin mauritius_PN = mkPN "Île Maurice" ; -- status=guess src=geonames
lin mausoleum_N = mkN "mausolée" masculine ; -- tocheck
lin mauve_A = mkA "mauve" ; -- tocheck
lin mauve_N = mkN "mauve" masculine ; -- tocheck
lin maverick_N = mkN "dissident" masculine | mkN "anticonformiste" ; -- tocheck
lin mawkish_A = mkA "affecté" | mkA "démonstratif" | mkA "histrionique" | mkA "hystérique" | mkA "larmoyant" | mkA "maniéré" | mkA "mièvre" | mkA "pleurnicheur" | mkA "sentimental" ; -- UWN
lin maxillaria_N = mkN "maxillaria" ; -- UWN
lin maxillary_A = mkA "maxillaire" ; -- UWN
lin maxim_N = mkN "maxime" feminine ; -- tocheck
lin maximal_A = mkA "maximal" ; -- tocheck
lin maximizing_A = mkA "maximaliste" ; -- UWN
lin maximum_A = mkA "maximum" ; -- tocheck
lin maximum_N = mkN "maximum" masculine ; -- tocheck
lin may_1_VV = S.can_VV ;
lin may_2_VV = S.can_VV ;
lin maybe_Adv = mkAdv "peut-être" ; -- tocheck
lin mayday_N = mkN "mayday" ; -- tocheck
lin mayfield_PN = mkPN "Mayfield" ; -- status=guess src=geonames
lin mayfly_N = mkN "Ephemeroptera" | mkN "ephemeroptera" | mkN "éphéméroptères" ; -- UWN
lin mayhem_N = mkN "grabuge" masculine | mkN "mutilation" feminine ; -- tocheck
lin mayo_PN = mkPN "Mayo" ; -- status=guess src=geonames
lin mayonnaise_N = mkN "mayonnaise" feminine ; -- tocheck
lin mayor_N = mkN "maire" masculine | mkN "maire" ; -- tocheck
lin maypole_N = mkN "mai" ; -- tocheck
lin maze_N = mkN "dédale" masculine ; -- tocheck
lin mazed_A = mkA "abasourdi" | mkA "désorienter" ; -- UWN
lin mazurka_N = mkN "mazurka" feminine ; -- tocheck
lin mead_N = mkN "hydromel" masculine ; -- tocheck
lin meadow_N = mkN "pré" masculine ; -- tocheck
lin meadowlark_N = mkN "sturnelle" feminine ; -- tocheck
lin meager_A = mkA "maigre" ; -- tocheck
lin meagerness_N = mkN "maigreur" feminine ; -- tocheck
lin meagre_A = mkA "maigre" ; -- tocheck
lin meagreness_N = mkN "maigreur" ; -- UWN
lin meal_N = mkN "moûture" feminine | mkN "repas" masculine ; -- tocheck
lin mealworm_N = mkN "ténébrion_meunier" ; -- UWN
lin mealy_A = mkA "farineux" ; -- tocheck
lin mealy_mouthed_A = mkA "hypocrite" ; -- tocheck
lin mean_A = mkA "méchant" | mkA "moyen" | mkA "inférieur" ; -- tocheck
lin mean_N = mkN "moyenne" feminine | mkN "moyen" masculine ; -- tocheck
lin mean_V2 = mkV2 "signifier" ;
lin mean_V2V = mkV2V (mkV "signifier") ; ----
lin mean_VS = mkVS (mkV I.dire_V2) ; ---- veut dire
lin mean_VV = aVV (mkV "penser") ;
lin meander_N = mkN "méandre" masculine ; -- tocheck
lin meander_V = mkV (mkV "errer") | mkV (mkV "méandrer") ; -- tocheck
lin meaning_N = mkN "sens" masculine | mkN "signification" feminine ; -- tocheck
lin meaningful_A = mkA "expressif" | mkA "sérieux" ; -- UWN
lin meaningless_A = mkA "aberrant" | mkA "absurde" ; -- UWN
lin meanness_N = mkN "parcimonie" | mkN "étroitesse" ; -- UWN
lin means_N = variants {} ; --
lin meantime_Adv = mkAdv "cependant" | mkAdv "entre-temps" | mkAdv "entretemps" | mkAdv "là" | mkAdv "pendant_ce_temps" ; -- UWN
lin meantime_N = mkN "décalage" | mkN "intervalle" ; -- UWN
lin meanwhile_Adv = mkAdv "pendant_ce_temps" ; -- UWN
lin measles_N = mkN "rougeole" feminine ; -- tocheck
lin measly_A = mkA "mesquin" | mkA "misérable" | mkA "pauvre" ; -- UWN
lin measure_N = mkN "mesure" | mkN "mesure" feminine ; -- tocheck
lin measure_V = variants {} ; -- mkV2 (mkV "mesurer") ; -- tocheck
lin measure_V2 = mkV2 (mkV "mesurer") ; -- tocheck
lin measure_against_V3 = variants {} ; -- guess-p-verb
lin measure_off_V2 = prepV2 OP_measure_V OP_off_Prep ; -- guess-p-verb
lin measure_out_V2 = prepV2 OP_measure_V OP_out_Prep ; -- guess-p-verb
lin measure_up_V = mkV "qualifier" ; -- UWN
lin measure_up_V2 = prepV2 OP_measure_V OP_up_Prep ; -- guess-p-verb
lin measure_up_to_V2 = prepV2 (advV OP_measure_V OP_up_Adv ) OP_to_Prep ; -- guess-p-verb
lin measuredly_Adv = mkAdv "délibérément" | mkAdv "sciemment" | mkAdv "volontairement" ; -- UWN
lin measurement_N = mkN "mesure" feminine ; -- tocheck
lin measurer_N = mkN "mesureur" | mkN "métreuse" ; -- UWN
lin meat_N = L.meat_N ;
lin meatball_N = mkN "boulette" feminine ; -- tocheck
lin meatus_N = mkN "méat" ; -- UWN
lin mecca_N = mkN "la_mecque" | mkN "la_mekke" ; -- UWN
lin mecca_PN = mkPN "La Mecque" ; -- status=guess src=geonames
lin mechanic_A = mkA "mécanicien" ; -- UWN
lin mechanic_N = mkN "mécanicien" masculine ; -- tocheck
lin mechanical_A = mkA "mécanique" ; -- tocheck
lin mechanics_N = mkN "mécanique" feminine ; -- tocheck
lin mechanism_N = mkN "mechanisme" masculine ; -- tocheck
lin mechanist_N = mkN "mécaniste" ; -- UWN
lin mechanization_N = mkN "mécanisation" feminine ; -- tocheck
lin mechanize_V2 = mkV2 (mkV "mécaniser") ; -- tocheck
lin meconium_N = mkN "méconium" ; -- UWN
lin medal_N = mkN "médaille" feminine ; -- tocheck
lin medalist_N = mkN "médaillé" masculine ; -- tocheck
lin medallion_N = mkN "médaillon" masculine ; -- tocheck
lin medan_PN = mkPN "Medan" ; -- status=guess src=geonames
lin meddle_V = mkV (reflV (mkV "mêler")) ; -- tocheck
lin meddlesome_A = mkA "importunément" ; -- tocheck
lin medellin_PN = mkPN "Medellin" ; -- status=guess src=geonames
lin media_N = mkN "médias" ; -- tocheck
lin medial_A = mkA "médiane" ; -- UWN
lin median_A = mkA "médian" ; -- tocheck
lin median_N = mkN "médiane" feminine ; -- tocheck
lin mediant_N = mkN "médiante" ; -- UWN
lin mediastinum_N = mkN "médiastin" ; -- UWN
lin mediator_N = mkN "médiateur" masculine ; -- tocheck
lin medical_A = mkA "médical" ; -- tocheck
lin medical_N = mkN "examen_médical" ; -- UWN
lin medicament_N = mkN "médicament" | mkN "remède" ; -- UWN
lin medication_N = mkN "médicament" | mkN "remède" ; -- UWN
lin medicative_A = mkA "médicamenteux" ; -- UWN
lin medicinal_A = mkA "médicinal" ; -- tocheck
lin medicine_N = mkN "médecine" feminine | mkN "médicament" masculine | mkN "traitement" masculine ; -- tocheck
lin medieval_A = mkA "médiéval" ; -- tocheck
lin medina_N = mkN "médina" feminine ; -- tocheck
lin mediocre_A = mkA "médiocre" ; -- tocheck
lin meditate_V2 = mkV2 (mkV "méditer") ; -- tocheck
lin meditation_N = mkN "méditation" feminine ; -- tocheck
lin meditative_A = mkA "pensif" | mkA "recueilli" ; -- UWN
lin medium_A = variants {} ; --
lin medium_N = mkN "médium" masculine | mkN "moyen" | mkN "milieu" masculine | mkN "médium" ; -- tocheck
lin medlar_N = mkN "nèfle" feminine | mkN "néflier" masculine ; -- tocheck
lin medley_N = mkN "pot-pourri" | mkN "mélange" masculine ; -- tocheck
lin meek_A = mkA "humble" ; -- tocheck
lin meerkat_N = mkN "suricate" masculine ; -- tocheck
lin meet_N = mkN "face" | mkN "rencontrer" | mkN "respect" ; -- UWN
lin meet_V = reflV (mkV I.voir_V2) ;
lin meet_V2 = I.rejoindre_V2 | mkV2 (mkV "rencontrer") ;
lin meet_up_V = advV OP_meet_V OP_up_Adv ; -- guess-p-verb
lin meet_with_V2 = prepV2 OP_meet_V OP_with_Prep ; -- guess-p-verb
lin meeting_N = mkN "réunion" feminine | mkN "rencontre" feminine ; ---- split
lin megabyte_N = mkN "mégaoctet" ; -- tocheck
lin megakaryocyte_N = mkN "mégacaryocyte" ; -- UWN
lin megalith_N = mkN "mégalithe" ; -- UWN
lin megalomania_N = mkN "mégalomanie" feminine ; -- tocheck
lin megalomaniac_N = mkN "mégalomane" ; -- UWN
lin megalomaniacal_A = mkA "mégalomane" ; -- UWN
lin megalopolis_N = mkN "mégalopole" feminine ; -- tocheck
lin megalosaur_N = mkN "megalosaurus" ; -- UWN
lin megaphone_N = mkN "porte-voix" masculine ; -- tocheck
lin megapode_N = mkN "megapodiidae" | mkN "mégapodiidés" ; -- UWN
lin megaton_N = mkN "mégatonne" feminine ; -- tocheck
lin megohm_N = mkN "mégohm" ; -- UWN
lin megrim_N = mkN "migraine" ; -- UWN
lin meiosis_N = mkN "méiose" feminine ; -- tocheck
lin meiotic_A = mkA "méiotique" ; -- UWN
lin meitnerium_N = mkN "meitnérium" masculine ; -- tocheck
lin melamine_N = mkN "formaldéhyde_de_mélamine" | mkN "mélamine" ; -- UWN
lin melancholia_N = mkN "Mélancolie" | mkN "abattement" | mkN "mélancolie" ; -- UWN
lin melancholic_A = mkA "mélancolique" ; -- tocheck
lin melancholic_N = mkN "mélancolique" ; -- UWN
lin melancholy_A = mkA "mélancolique" ; -- tocheck
lin melancholy_N = mkN "mélancolie" feminine ; -- tocheck
lin melanin_N = mkN "Mélanine" | mkN "mélanine" | mkN "mélanines" ; -- UWN
lin melanocyte_N = mkN "Mélanocyte" | mkN "mélanocyte" | mkN "mélanocytes" ; -- UWN
lin melanoderma_N = mkN "mélanodermie" ; -- UWN
lin melanoma_N = mkN "mélanome" masculine ; -- tocheck
lin melanosis_N = mkN "mélanisme" ; -- UWN
lin melatonin_N = mkN "hormone_du_sommeil" | mkN "mélatonine" ; -- UWN
lin melbourne_PN = mkPN "Melbourne" ; -- status=guess src=geonames
lin melilotus_N = mkN "melilotus" | mkN "mélilot" | mkN "mélilots" ; -- UWN
lin meliorate_V = mkV "amender" | mkV "améliorer" | mkV "réformer" ; -- UWN
lin melksham_PN = mkPN "Melksham" ; -- status=guess src=geonames
lin mellifluous_A = mkA "mélodieux" ; -- tocheck
lin mellow_A = mkA "moelleux" ; -- tocheck
lin melodious_A = mkA "mélodieux" ; -- tocheck
lin melodrama_N = mkN "mélodrame" masculine ; -- tocheck
lin melodramatic_A = mkA "mélodramatique" ; -- tocheck
lin melody_N = mkN "mélodie" feminine ; -- tocheck
lin melon_N = mkN "melon" | mkN "melon" masculine | mkN "melons" ; -- tocheck
lin melt_V = mkV "disparaître" | mkV "fondre" ; -- UWN
lin melt_V2 = variants {} ; --
lin meltdown_N = mkN "effondrement" ; -- UWN
lin melter_N = mkN "melter" ; -- UWN
lin meltham_PN = mkPN "Meltham" ; -- status=guess src=geonames
lin mem_N = mkN "mem" ; -- UWN
lin member_N = mkN "membre" masculine ;
lin membership_N = mkN "adhésion" feminine | mkN "appartenance" feminine ; -- tocheck
lin membrane_N = mkN "membrane" feminine ; -- tocheck
lin membranous_A = mkA "membraneux" ; -- tocheck
lin meme_N = mkN "mème" masculine ; -- tocheck
lin memento_N = mkN "souvenir" ; -- tocheck
lin memo_N = mkN "mémorandum" ; -- UWN
lin memoir_N = mkN "souvenir" ; -- UWN
lin memorable_A = mkA "mémorable" ; -- tocheck
lin memorandum_N = mkN "mémorandum" masculine ; -- tocheck
lin memorial_N = mkN "mémorial" masculine ; -- tocheck
lin memorize_V2 = mkV2 (mkV "mémoriser") ; -- tocheck
lin memory_N = mkN "mémoire" feminine | mkN "souvenir" masculine ; -- tocheck
lin memphis_PN = mkPN "Memphis" ; -- status=guess src=geonames
lin menagerie_N = mkN "ménagerie" ; -- tocheck
lin menarche_N = mkN "ménarche" feminine ; -- tocheck
lin mend_N = mkN "réparation" ; -- UWN
lin mend_V = mkV "réparer" ; -- UWN
lin mend_V2 = mkV2 (mkV "rapiécer") | mkV2 (mkV "réparer") ; -- tocheck
lin mendacious_A = mkA "fallacieux" ; -- tocheck
lin mendelevium_N = mkN "mendélévium" masculine ; -- tocheck
lin mendicant_A = mkA "mendiant" ; -- tocheck
lin mendicant_N = mkN "gueux" | mkN "mendiant" ; -- UWN
lin mending_N = mkN "réparation" ; -- UWN
lin menhir_N = mkN "menhir" masculine ; -- tocheck
lin menial_A = mkA "humble" ; -- UWN
lin meningeal_A = mkA "méningé" ; -- UWN
lin meningioma_N = mkN "méningiome" ; -- UWN
lin meningitis_N = mkN "méningite" feminine ; -- tocheck
lin meninx_N = mkN "Méninge" | mkN "méninge" ; -- UWN
lin meniscus_N = mkN "ménisque" masculine ; -- tocheck
lin menopause_N = mkN "ménopause" ; -- tocheck
lin menorah_N = mkN "menora" ; -- UWN
lin menorrhagia_N = mkN "ménorragie" feminine ; -- tocheck
lin menstrual_A = mkA "menstruel" | mkA "mensuel" ; -- tocheck
lin menstruation_N = mkN "menstruation" feminine ; -- tocheck
lin menstruum_N = mkN "catamenia" | mkN "menstruation" | mkN "période" ; -- UWN
lin mensuration_N = mkN "mesure" ; -- UWN
lin mental_A = mkA "mental" ; -- tocheck
lin mentalism_N = mkN "mentalisme" ; -- UWN
lin mentality_N = mkN "mentalité" feminine ; -- tocheck
lin mentholated_A = mkA "mentholé" ; -- UWN
lin mention_N = mkN "mention" | mkN "mentionner" | mkN "référence" ; -- UWN
lin mention_V = variants {} ; -- mkV2 (mkV "mentionner") ; -- tocheck
lin mention_V2 = mkV2 (mkV "mentionner") ; -- tocheck
lin mention_VS = variants {} ; -- mkV2 (mkV "mentionner") ; -- tocheck
lin mentor_N = mkN "mentor" masculine ; -- tocheck
lin menu_N = mkN "menu" masculine | mkN "carte" feminine ; -- tocheck
lin meopham_PN = mkPN "Meopham" ; -- status=guess src=geonames
lin meow_N = mkN "miaou" masculine ; -- tocheck
lin mercantile_A = mkA "mercantile" ; -- tocheck
lin mercantilism_N = mkN "commerce" | mkN "mercantilisme" ; -- UWN
lin mercenary_A = mkA "mercenaire" ; -- tocheck
lin mercenary_N = mkN "mercenaire" masculine ; -- tocheck
lin mercer_N = mkN "mercer" ; -- UWN
lin merchandise_N = mkN "marchandise" ; -- tocheck
lin merchant_N = mkN "marchand" masculine ; -- tocheck
lin merchantability_N = mkN "commerciabilité" feminine ; -- tocheck
lin merchantman_N = mkN "navire_marchand" ; -- UWN
lin merciful_A = mkA "miséricordieux" ; -- tocheck
lin mercifulness_N = mkN "clémence" | mkN "miséricorde" | mkN "pitié" ; -- UWN
lin merciless_A = mkA "impitoyable" ; -- tocheck
lin mercurial_A = mkA "mercuriel" ; -- tocheck
lin mercury_N = mkN "mercure" masculine ; -- tocheck
lin mercury_PN = mkPN "Mercury" ; -- status=guess src=geonames
lin mercy_N = mkN "miséricorde" feminine ; -- tocheck
lin mere_A = variants {} ; --
lin meretricious_A = mkA "racoleur" | mkA "spécieux" ; -- tocheck
lin meretriciousness_N = mkN "culot" ; -- UWN
lin merge_V = mkV "accoupler" | mkV "fusionner" | mkV "réunir" | mkV "unifier" | mkV "unir" ; -- UWN
lin merge_V2 = mkV2 (mkV "fusionner") | mkV2 (mkV "amalgamer") ; -- tocheck
lin merger_N = mkN "fusion" | mkN "fusion" feminine ; -- tocheck
lin merging_N = mkN "connexion" | mkN "rencontre" | mkN "réunion" ; -- UWN
lin meridian_A = mkA "méridien" ; -- UWN
lin meridian_N = mkN "méridien" masculine ; -- tocheck
lin meringue_N = mkN "meringue" feminine ; -- tocheck
lin meristem_N = mkN "Méristème" | mkN "méristème" ; -- UWN
lin merit_N = mkN "mérite" masculine ; -- tocheck
lin meritocracy_N = mkN "méritocratie" feminine ; -- tocheck
lin mermaid_N = mkN "sirène" feminine ; -- tocheck
lin meronym_N = mkN "méronyme" masculine ; -- tocheck
lin meronymy_N = mkN "méronymie" ; -- UWN
lin merozoite_N = mkN "mérozoïte" ; -- UWN
lin merriment_N = mkN "plaisir" ; -- UWN
lin merry_A = mkA "joyeux" ; -- tocheck
lin merry_christmas_Interj = mkInterj "joyeux noël" ; -- tocheck
lin merry_go_round_N = mkN "carrousel" masculine ; -- tocheck
lin merton_PN = mkPN "Merton" ; -- status=guess src=geonames
lin mescaline_N = mkN "mescaline" | mkN "peyotl" ; -- UWN
lin mesenchyme_N = mkN "mésenchyme" ; -- UWN
lin mesentery_N = mkN "mésentère" ; -- tocheck
lin mesh_N = mkN "engrenage" masculine | mkN "maillage" masculine | mkN "maille" feminine ; -- tocheck
lin mesh_V2 = mkV2 (mkV "concorder") ; -- tocheck
lin mesmerism_N = mkN "hypnotisme" | mkN "magnétisme" | mkN "suggestion" ; -- UWN
lin mesmerist_N = mkN "hypnotiseur" | mkN "magnétiseur" ; -- UWN
lin mesoblastic_A = mkA "mésoblastique" ; -- tocheck
lin mesocarp_N = mkN "mésocarpe" masculine ; -- tocheck
lin mesocolon_N = mkN "mesocolon" ; -- UWN
lin mesoderm_N = mkN "mésoderme" masculine ; -- tocheck
lin mesomorph_N = mkN "mésomorphe" ; -- UWN
lin mesomorphic_A = mkA "musclé" | mkA "musculaire" | mkA "mésomorphe" ; -- UWN
lin meson_N = mkN "méson" masculine ; -- tocheck
lin mesonic_A = mkA "mésonique" ; -- tocheck
lin mesosphere_N = mkN "mésosphère" ; -- tocheck
lin mesothelioma_N = mkN "mésothéliome" ; -- UWN
lin mesquite_N = mkN "mesquite" ; -- UWN
lin mess_N = mkN "fouillis" masculine | mkN "messe" feminine ; -- tocheck
lin message_N = mkN "message" masculine ; -- tocheck
lin messenger_N = mkN "messager" masculine ; -- tocheck
lin messiah_N = mkN "messie" masculine ; -- tocheck
lin messianic_A = mkA "messianique" ; -- tocheck
lin messina_PN = mkPN "Messine" ; -- status=guess src=geonames
lin messy_A = mkA "désordonné" ; -- tocheck
lin mestizo_N = mkN "métis" ; -- UWN
lin metabolism_N = mkN "métabolisme" masculine ; -- tocheck
lin metabolite_N = mkN "métabolite" ; -- UWN
lin metacarpus_N = mkN "canon" | mkN "métacarpe" ; -- UWN
lin metadata_N = mkN "métadonnées" ; -- tocheck
lin metaknowledge_N = mkN "métaconnaissance" ; -- UWN
lin metal_N = mkN "métal" masculine ; -- tocheck
lin metalanguage_N = mkN "métalangage" masculine ; -- tocheck
lin metalepsis_N = mkN "métalepse" ; -- UWN
lin metallic_A = mkA "métalisé" ; -- tocheck
lin metalloid_A = mkA "métalloïde" ; -- UWN
lin metallurgical_A = mkA "métallurgique" ; -- tocheck
lin metallurgist_N = mkN "métallurgiste" ; -- tocheck
lin metallurgy_N = mkN "métallurgie" feminine ; -- tocheck
lin metalwork_N = mkN "travail_des_métaux" ; -- UWN
lin metalworker_N = mkN "forgeron" ; -- UWN
lin metalworking_N = mkN "travail_des_métaux" ; -- UWN
lin metamathematics_N = mkN "métamathématiques" ; -- tocheck
lin metamere_N = mkN "Somite" | mkN "somite" | mkN "somites" ; -- UWN
lin metamorphism_N = mkN "métamorphisme" ; -- UWN
lin metamorphosis_N = mkN "métamorphose" feminine ; -- tocheck
lin metaphor_N = mkN "métaphore" feminine ; -- tocheck
lin metaphorical_A = mkA "métaphorique" ; -- UWN
lin metaphysical_A = mkA "métaphysique" ; -- tocheck
lin metaphysics_N = mkN "métaphysique" ; -- UWN
lin metastability_N = mkN "métastabilité" feminine ; -- tocheck
lin metastable_A = mkA "métastable" ; -- tocheck
lin metastasis_N = mkN "métastase" ; -- tocheck
lin metastatic_A = mkA "métastatique" ; -- UWN
lin metatarsus_N = mkN "canon" | mkN "métatarse" ; -- UWN
lin metathesis_N = mkN "métathèse" feminine ; -- tocheck
lin metazoan_N = mkN "métazoaire" masculine ; -- tocheck
lin metempsychosis_N = mkN "métempsycose" feminine ; -- tocheck
lin meteor_N = mkN "météore" masculine ; -- tocheck
lin meteorite_N = mkN "météorite" feminine ; -- tocheck
lin meteoritic_A = mkA "météoritique" ; -- UWN
lin meteoroid_N = mkN "météore" | mkN "météoroïde" ; -- UWN
lin meteorologic_A = mkA "météorologique" ; -- UWN
lin meteorological_A = mkA "météorologique" ; -- tocheck
lin meteorologist_N = mkN "météorologue" ; -- tocheck
lin meteorology_N = mkN "météorologie" feminine ; -- tocheck
lin meter_N = mkN "mètre" masculine ; -- tocheck
lin metformin_N = mkN "metformine" feminine ; -- tocheck
lin methadone_N = mkN "méthadone" feminine ; -- tocheck
lin methamphetamine_N = mkN "méthamphétamine" feminine ; -- tocheck
lin methane_N = mkN "méthane" masculine ; -- tocheck
lin methanogen_N = mkN "archéobactérie_méthanogène" ; -- UWN
lin methanol_N = mkN "alcool_méthylique" | mkN "carbinol" | mkN "d'alcool_de_bois" | mkN "d'esprit_de_bois" | mkN "de_naphte_de_bois" | mkN "le_méthanol" | mkN "méthanol" ; -- UWN
lin methionine_N = mkN "méthionine" feminine ; -- tocheck
lin method_N = mkN "méthode" feminine ;
lin methodical_A = mkA "méthodique" ; -- tocheck
lin methodological_A = mkA "méthodologique" ; -- tocheck
lin methodology_N = mkN "méthodologie" feminine ; -- tocheck
lin methotrexate_N = mkN "méthotrexate" ; -- UWN
lin methyl_N = mkN "groupe_méthyle" | mkN "méthyle" ; -- UWN
lin metic_N = mkN "métèque" ; -- tocheck
lin meticulous_A = mkA "méticuleux" ; -- tocheck
lin meticulousness_N = mkN "méticulosité" feminine ; -- tocheck
lin metonym_N = mkN "métonyme" masculine ; -- tocheck
lin metonymic_A = mkA "métonymique" ; -- tocheck
lin metonymy_N = mkN "métonymie" feminine ; -- tocheck
lin metre_N = mkN "mètre" masculine ; -- tocheck
lin metric_A = mkA "métrique" ; -- tocheck
lin metrical_A = mkA "métrique" ; -- UWN
lin metrication_N = mkN "métrification" ; -- UWN
lin metrification_N = mkN "métrification" ; -- UWN
lin metritis_N = mkN "endométrite" | mkN "métrite" ; -- UWN
lin metro_N = mkN "métro" masculine ; -- tocheck
lin metrological_A = mkA "métrologique" ; -- UWN
lin metrology_N = mkN "mesure" | mkN "métrologie" ; -- UWN
lin metronome_N = mkN "métronome" masculine ; -- tocheck
lin metropolis_N = mkN "métropole" masculine | mkN "métropole" feminine ; -- tocheck
lin metropolitan_A = mkA "métropolitain" ; -- tocheck
lin metrorrhagia_N = mkN "métrorragie" ; -- UWN
lin mettle_N = mkN "prouesse" feminine ; -- tocheck
lin mettlesome_A = mkA "jeu" ; -- UWN
lin metz_PN = mkPN "Metz" ; -- status=guess src=geonames
lin mexico_PN = mkPN "Mexique" ; -- status=guess src=geonames
lin mezuzah_N = mkN "mezouza" feminine ; -- tocheck
lin mezzanine_N = mkN "mezzanine" ; -- tocheck
lin mezzo_soprano_N = mkN "mezzo-soprano" masculine ; -- tocheck
lin mezzotint_N = mkN "manière_noire" | mkN "mezzo-tinto" ; -- UWN
lin mg_N = mkN "mg" | mkN "milligramme" ; -- UWN
lin mi_N = mkN "mi" masculine ; -- tocheck
lin miami_PN = mkPN "Miami" ; -- status=guess src=geonames
lin miaou_N = mkN "miaou" | mkN "miaulement" | mkN "miauler" ; -- UWN
lin miaow_N = mkN "miaou" | mkN "miaulement" | mkN "miauler" ; -- UWN
lin miasma_N = mkN "miasme" masculine ; -- tocheck
lin mica_N = mkN "mica" masculine ; -- tocheck
lin micelle_N = mkN "micelle" feminine ; -- tocheck
lin microbe_N = mkN "microbe" masculine ; -- tocheck
lin microbial_A = mkA "microbien" ; -- tocheck
lin microbiologist_N = mkN "microbiologiste" ; -- tocheck
lin microbiology_N = mkN "microbiologie" feminine ; -- tocheck
lin microbrewery_N = mkN "microbrasserie" ; -- UWN
lin microcephaly_N = mkN "microcephalus" | mkN "microcéphalie" ; -- UWN
lin microcosm_N = mkN "microcosme" masculine ; -- tocheck
lin microcosmic_A = mkA "microcosmique" ; -- tocheck
lin microcrystalline_A = mkA "microcristallin" ; -- UWN
lin microdot_N = mkN "micropoint" ; -- tocheck
lin microeconomic_A = mkA "microéconomique" ; -- UWN
lin microeconomics_N = mkN "microéconomie" ; -- UWN
lin microelectronics_N = mkN "micro-électronique" | mkN "microélectronique" ; -- UWN
lin microevolution_N = mkN "microévolution" ; -- UWN
lin microfilm_N = mkN "microfilm" ; -- UWN
lin microflora_N = mkN "microflore" feminine ; -- tocheck
lin microgram_N = mkN "microgramme" masculine ; -- tocheck
lin micrometeorite_N = mkN "micrométéorite" feminine ; -- tocheck
lin micrometer_N = mkN "micromètre" masculine ; -- tocheck
lin micron_N = mkN "micron" masculine ; -- tocheck
lin micronutrient_N = mkN "micro-élément" ; -- UWN
lin microorganism_N = mkN "microorganisme" masculine ; -- tocheck
lin micropaleontology_N = mkN "micropaléontologie" feminine ; -- tocheck
lin micropenis_N = mkN "micropénis" masculine ; -- tocheck
lin microphone_N = mkN "microphone" masculine ; -- tocheck
lin microprocessor_N = mkN "microprocesseur" masculine ; -- tocheck
lin micropyle_N = mkN "micropyle" masculine ; -- tocheck
lin microscope_N = mkN "microscope" masculine ; -- tocheck
lin microscopic_A = mkA "microscopique" ; -- tocheck
lin microscopical_A = mkA "microscopique" ; -- UWN
lin microscopy_N = mkN "microscopie" feminine ; -- tocheck
lin microsecond_N = mkN "microseconde" feminine ; -- tocheck
lin microsome_N = mkN "Microsome" | mkN "microsome" | mkN "microsomes" ; -- UWN
lin microsurgery_N = mkN "microchirurgie" feminine ; -- tocheck
lin microtome_N = mkN "microtome" ; -- UWN
lin microtubule_N = mkN "Microtubule" | mkN "microtubule" | mkN "microtubules" ; -- UWN
lin microwave_N = mkN "micro-onde" feminine ; -- tocheck
lin micturition_N = mkN "miction" ; -- tocheck
lin mid_A = mkA "mi-" ; -- tocheck
lin midbrain_N = mkN "mésencéphale" masculine ; -- tocheck
lin midday_N = mkN "midi" ; -- UWN
lin middle_A = mkA "milieu" ; -- tocheck
lin middle_N = mkN "milieu" masculine | mkN "milieu" ; -- tocheck
lin middle_class_A = mkA "petit-bourgeois" ; -- UWN
lin middlemanFem_N = mkN "contact" | mkN "contacter" ; -- UWN
lin middlemanMasc_N = mkN "contact" | mkN "contacter" ; -- UWN
lin middlesex_PN = mkPN "Middlesex" ; -- status=guess src=geonames
lin middleton_PN = mkPN "Middleton" ; -- status=guess src=geonames
lin middlewich_PN = mkPN "Middlewich" ; -- status=guess src=geonames
lin middling_A = mkA "moyen" | mkA "moyenne" | mkA "médiocre" ; -- UWN
lin midfield_N = variants {} ; --
lin midge_N = mkN "moucheron" masculine ; -- tocheck
lin midget_N = mkN "nain" masculine ; -- tocheck
lin midlands_PN = mkPN "Midlands" ; -- status=guess src=geonames
lin midmost_Adv = mkAdv "au_milieu" ; -- UWN
lin midnight_N = mkN "minuit" feminine ; -- tocheck
lin midriff_N = mkN "ventre" masculine ; -- tocheck
lin midshipman_N = mkN "aspirant" ; -- UWN
lin midway_Adv = mkAdv "mi-chemin" ; -- UWN
lin midwife_N = mkN "sage-femme" feminine ; -- tocheck
lin mien_N = mkN "méchanceté" feminine ; -- tocheck
lin might_N = mkN "force" ; -- tocheck
lin mighty_A = mkA "puissant" ; -- tocheck
lin mighty_Adv = mkAdv "droit" | mkAdv "puissant" ; -- UWN
lin migraine_N = mkN "migraine" feminine ; -- tocheck
lin migrant_A = mkA "migrateur" ; -- UWN
lin migrant_N = mkN "migrateur" masculine ; -- tocheck
lin migrate_V = mkV (mkV "migrer") ; -- tocheck
lin migration_N = mkN "free" ; -- tocheck
lin migratory_A = mkA "migrateur" ; -- tocheck
lin mikado_N = mkN "empereur_Japonais" | mkN "mikado" ; -- UWN
lin mike_N = mkN "micro" | mkN "microphone" | mkN "mike" ; -- UWN
lin mikvah_N = mkN "Mikvé" | mkN "mikvé" ; -- UWN
lin mil_N = mkN "millième" masculine ; -- tocheck
lin milady_N = mkN "milady" feminine ; -- tocheck
lin milan_PN = mkPN "Milan" ; -- status=guess src=geonames
lin milano_PN = mkPN "Milan" ; -- status=guess src=geonames
lin mild_A = mkA "doux" ; -- tocheck
lin mildenhall_PN = mkPN "Mildenhall" ; -- status=guess src=geonames
lin mildew_N = mkN "mildiou" masculine ; -- tocheck
lin mile_N = mkN "mille" masculine ; -- tocheck
lin mileometer_N = mkN "odomètre" ; -- UWN
lin milestone_N = mkN "jalon" masculine | mkN "borne" ; -- tocheck
lin milford_PN = mkPN "Milford" ; -- status=guess src=geonames
lin milieu_N = mkN "milieu" masculine ; -- tocheck
lin militancy_N = mkN "militance" feminine ; -- tocheck
lin militant_N = mkN "activiste" | mkN "défenseur" ; -- UWN
lin militarism_N = mkN "militarisme" masculine ; -- tocheck
lin militarist_N = mkN "militariste" ; -- tocheck
lin military_A = mkA "militaire" ; -- tocheck
lin military_N = mkN "armée" feminine ; -- tocheck
lin militate_V = mkV (mkV "militer") ; -- tocheck
lin militia_N = mkN "milice" feminine ; -- tocheck
lin militiaman_N = mkN "milicien" masculine ; -- tocheck
lin milk_N = L.milk_N ;
lin milk_V2 = mkV2 (mkV I.traire_V2) ; -- tocheck
lin milkmaid_N = mkN "laitière" feminine ; -- tocheck
lin milkman_N = mkN "laitier" masculine ; -- tocheck
lin milk_shake_N = mkN "milk-shake" masculine ; -- tocheck
lin milkwort_N = mkN "polygale" masculine ; -- tocheck
lin milky_A = mkA "laiteux" ; -- tocheck
lin mill_N = mkN "moulin" | mkN "manufacture" feminine | mkN "moulin" masculine ; -- tocheck
lin mill_V2 = mkV2 (mkV I.moudre_V2) ; -- tocheck
lin millenarian_A = mkA "chiliaste" ; -- UWN
lin millenarian_N = mkN "chiliaste" ; -- UWN
lin millenarianism_N = mkN "chiliasme" | mkN "millénarisme" ; -- UWN
lin millennial_A = mkA "millénaire" ; -- tocheck
lin millennium_N = mkN "millénaire" masculine ; -- tocheck
lin millipede_N = mkN "diplopoda" | mkN "diplopode jule" | mkN "diplopodes" | mkN "mille-pieds" | mkN "myriapode" ; -- UWN
lin miller_N = mkN "meunier" masculine ; -- tocheck
lin millet_N = mkN "millet" masculine ; -- tocheck
lin millettia_N = mkN "millettia" ; -- UWN
lin milliampere_N = mkN "milliampère" masculine ; -- tocheck
lin milliard_N = mkN "milliard" ; -- UWN
lin millibar_N = mkN "millibar" ; -- UWN
lin millicent_PN = mkPN "Millicent" ; -- status=guess src=geonames
lin milligram_N = mkN "milligramme" masculine ; -- tocheck
lin milliliter_N = mkN "centimètre_cube" | mkN "millilitre" | mkN "ml" ; -- UWN
lin millimetre_N = mkN "millimètre" masculine ; -- tocheck
lin milliner_N = mkN "chapelier" | mkN "modiste" ; -- UWN
lin million_N = mkN "millions" ; -- UWN
lin millionaire_N = mkN "millionnaire" ; -- tocheck
lin millionth_A = mkA "millionième" ; -- tocheck
lin millionth_N = mkN "millionième" masculine | mkN "millionième" ; -- tocheck
lin millisecond_N = mkN "milliseconde" feminine ; -- tocheck
lin millivolt_N = mkN "mv" ; -- UWN
lin millivoltmeter_N = mkN "millivoltmètre" ; -- UWN
lin millom_PN = mkPN "Millom" ; -- status=guess src=geonames
lin millstone_N = mkN "meulière" feminine | mkN "meule" feminine ; -- tocheck
lin milngavie_PN = mkPN "Milngavie" ; -- status=guess src=geonames
lin milnrow_PN = mkPN "Milnrow" ; -- status=guess src=geonames
lin milo_N = mkN "milo" ; -- UWN
lin milometer_N = mkN "odomètre" ; -- UWN
lin milord_N = mkN "milord" masculine ; -- tocheck
lin milt_N = mkN "laite" feminine ; -- tocheck
lin milwaukee_PN = mkPN "Milwaukee" ; -- status=guess src=geonames
lin mime_N = mkN "pantomime" feminine ; -- tocheck
lin mimeograph_V2 = mkV2 (mkV "polycopier") ; -- tocheck
lin mimicry_N = mkN "mimétisme" masculine ; -- tocheck
lin minaret_N = mkN "minaret" masculine ; -- tocheck
lin minatory_A = mkA "laid" | mkA "menaçant" | mkA "sinistre" | mkA "torve" ; -- UWN
lin mince_N = mkN "hachis" masculine ; -- tocheck
lin mince_V2 = mkV2 (mkV "hacher") ; -- tocheck
lin mincer_N = mkN "hachoir" masculine ; -- tocheck
lin mind_N = mkN "esprit" masculine ;
lin mind_V = variants {} ; --
lin mind_V2 = variants {} ; --
lin mind_VS = variants {} ; --
lin mindful_A = mkA "conscient" ; -- tocheck
lin mindfulness_N = mkN "Sati" | mkN "sati" ; -- UWN
lin mine_N = mkN "mine" feminine ; -- tocheck
lin minehead_PN = mkPN "Minehead" ; -- status=guess src=geonames
lin minelaying_N = mkN "mine" ; -- UWN
lin miner_N = mkN "mineur" masculine ; -- tocheck
lin mineral_A = mkA "minéral" ; -- tocheck
lin mineral_N = mkN "minéral" masculine ; -- tocheck
lin mineralocorticoid_N = mkN "Minéralocorticoïde" | mkN "minéralocorticoïde" | mkN "minéralocorticoïdes" ; -- UWN
lin mineralogist_N = mkN "minéralogiste" ; -- tocheck
lin mineralogy_N = mkN "minéralogie" feminine ; -- tocheck
lin minestrone_N = mkN "minestrone" masculine ; -- tocheck
lin minesweeper_N = mkN "démineur" masculine ; -- tocheck
lin mineworker_N = mkN "mineur" masculine ; -- tocheck
lin mingle_V = mkV "mélanger" | mkV "mêler" ; -- UWN
lin mingle_V2 = mkV2 (mkV "mélanger") ; -- tocheck
lin miniature_N = mkN "enluminure" feminine | mkN "miniature" feminine ; -- tocheck
lin miniaturization_N = mkN "miniaturisation" feminine ; -- tocheck
lin minibar_N = mkN "minibar" ; -- UWN
lin minibike_N = mkN "moto" | mkN "motocyclette" ; -- UWN
lin minibus_N = mkN "minibus" masculine ; -- tocheck
lin minicar_N = mkN "minicar" ; -- UWN
lin minim_N = mkN "minime" masculine ; -- tocheck
lin minimal_A = mkA "minimal" | mkA "minime" | mkA "minimum" ; -- UWN
lin minimalism_N = mkN "minimalisme" ; -- UWN
lin minimize_V2 = mkV2 (mkV I.réduire_V2) | mkV2 (mkV "minimiser") ; -- tocheck
lin minimum_A = mkA "minimum" ; -- tocheck
lin minimum_N = mkN "minimum" masculine ; -- tocheck
lin mining_N = mkN "excavation" | mkN "mine" ; -- UWN
lin minion_N = mkN "laquais" | mkN "subalterne" ; -- tocheck
lin miniskirt_N = mkN "minijupe" feminine ; -- tocheck
lin minister_1_N = mkN "ministre" masculine ;
lin minister_2_N = mkN "pasteur" ;
lin minister_N = mkN "pasteur" | mkN "ministre" masculine ;
lin minister_V = mkV "ministre" ; -- UWN
lin ministerial_A = variants {} ; --
lin ministration_N = mkN "relief" | mkN "secourir" ; -- UWN
lin ministry_N = mkN "ministère" masculine ; -- tocheck
lin mink_N = mkN "vison" masculine ; -- tocheck
lin minneapolis_PN = mkPN "Minneapolis" ; -- status=guess src=geonames
lin minnow_N = mkN "fretin" | mkN "vairon" ; -- tocheck
lin minor_A = variants {} ; --
lin minor_N = mkN "mineur" masculine ; -- tocheck
lin minority_N = mkN "minorité" feminine | mkN "minorité" ; -- tocheck
lin minotaur_N = mkN "minotaure" ; -- tocheck
lin minsk_PN = mkPN "Minsk" ; -- status=guess src=geonames
lin minstrel_N = mkN "ménestrel" masculine ; -- tocheck
lin mint_N = mkN "menthe" | mkN "fortune" feminine ; -- tocheck
lin mint_V2 = mkV2 (mkV "monnayer") ; -- tocheck
lin minuend_N = mkN "diminuende" masculine ; -- tocheck
lin minuet_N = mkN "menuet" masculine ; -- tocheck
lin minus_A = mkA "négatif" | mkA "moins" ; -- tocheck
lin minus_N = mkN "soustraction" ; -- UWN
lin minus_Prep = variants {} ; --
lin minuscule_A = mkA "minuscule" ; -- tocheck
lin minuscule_N = mkN "minuscule" feminine ; -- tocheck
lin minute_A = mkA "minuscule" | mkA "minutieux" ; -- tocheck
lin minute_N = mkN "minute" feminine | mkN "procès-verbal" masculine ; --- split: five minutes -- | take minutes
lin minutes_N = mkN "compte_rendu" | mkN "procès-verbal" | mkN "protocole" ; -- UWN
lin minutia_N = mkN "minutie" | mkN "petit_détail" ; -- UWN
lin minx_N = mkN "pimbêche" feminine ; -- tocheck
lin minyan_N = mkN "miniane" ; -- UWN
lin miracle_N = mkN "miracle" masculine ; -- tocheck
lin miraculous_A = mkA "miraculeux" ; -- tocheck
lin mirage_N = mkN "mirage" masculine ; -- tocheck
lin miranda_PN = mkPN "Miranda" ; -- status=guess src=geonames
lin mire_N = mkN "fange" feminine ; -- tocheck
lin mirror_N = mkN "copie" feminine | mkN "glace" feminine ; -- tocheck
lin mirth_N = mkN "gaieté" ; -- tocheck
lin miry_A = mkA "boueux" | mkA "marécageux" ; -- UWN
lin misadventure_N = mkN "accident" | mkN "malchance" | mkN "malheur" ; -- UWN
lin misanthrope_N = mkN "misanthrope" ; -- tocheck
lin misanthropic_A = mkA "misanthropique" ; -- tocheck
lin misanthropy_N = mkN "misanthropie" feminine ; -- tocheck
lin misapplication_N = mkN "dilapidation" | mkN "détournement" | mkN "détournement_de_fonds" | mkN "malversation" ; -- UWN
lin misbehavior_N = mkN "inconduite" feminine ; -- tocheck
lin misbehaviour_N = mkN "méfait" ; -- UWN
lin miscarriage_N = mkN "fausse-couche" | mkN "mortinaissance" | mkN "mortinatalité" ; -- UWN
lin miscarry_V2 = mkV2 (mkV "avorter") ; -- tocheck
lin miscegenation_N = mkN "métissage" masculine ; -- tocheck
lin miscellaneous_A = mkA "divers" ; -- tocheck
lin mischief_N = mkN "espièglerie" | mkN "espiègle" | mkN "sottise" ; -- tocheck
lin mischievous_A = mkA "espiègle" | mkA "méchant" ; -- tocheck
lin miscreant_N = mkN "mécréant" masculine ; -- tocheck
lin miscue_N = mkN "bévue" ; -- UWN
lin misdeed_N = mkN "méfait" feminine ; -- tocheck
lin misdemeanor_N = mkN "forfait" masculine ; -- tocheck
lin miser_N = mkN "avare" masculine ; -- tocheck
lin miserable_A = mkA "misérable" ; -- tocheck
lin miserliness_N = mkN "avarice" feminine ; -- tocheck
lin miserly_A = mkA "avare" ; -- tocheck
lin misery_N = mkN "misère" ; -- tocheck
lin misfit_N = mkN "inadapté" masculine ; -- tocheck
lin misfortune_N = mkN "mésaventure" feminine | mkN "malchance" feminine ; -- tocheck
lin mishap_N = mkN "erreur" feminine ; -- tocheck
lin mishmash_N = mkN "méli-mélo" ; -- tocheck
lin misinform_V2 = mkV2 (mkV "mésinformer") ; -- tocheck
lin misinterpretation_N = mkN "contresens" ; -- tocheck
lin mislead_V2 = mkV2 (mkV "égarer") ; -- tocheck
lin misleading_A = variants {} ; --
lin mismanagement_N = mkN "mégestion" ; -- UWN
lin misogynist_N = mkN "misogyne" ; -- tocheck
lin misogyny_N = mkN "misogynie" feminine ; -- tocheck
lin misology_N = mkN "misologie" feminine ; -- tocheck
lin misoneism_N = mkN "misonéisme" ; -- UWN
lin misplace_V2 = mkV2 (mkV "égarer") ; -- tocheck
lin misprint_N = mkN "coquille" | mkN "erratum" | mkN "erreur_de_frappe" | mkN "faute" | mkN "faute_de_frappe" | mkN "littéral" | mkN "typo" | mkN "typographe" | mkN "typote" ; -- UWN
lin mispronunciation_N = mkN "faute_de_prononciation" ; -- UWN
lin misrepresentation_N = mkN "supercherie" | mkN "tromperie" ; -- UWN
lin miss_N = mkN "mademoiselle" feminine ; -- tocheck
lin miss_V = mkV "manquer" ; -- UWN
lin miss_V2 = mkV2 (mkV "manquer") | mkV2 (mkV "rater") | mkV2 (mkV "languir") ; -- tocheck
lin miss_out_V = advV OP_miss_V OP_out_Adv ; -- guess-p-verb
lin miss_out_V2 = prepV2 OP_miss_V OP_out_Prep ; -- guess-p-verb
lin miss_out_on_V2 = prepV2 (advV OP_miss_V OP_out_Adv ) OP_on_Prep ; -- guess-p-verb
lin missal_N = mkN "missel" ; -- UWN
lin misshapen_A = mkA "difforme" ; -- UWN
lin missile_N = mkN "projectile" masculine | mkN "missile" masculine ; -- tocheck
lin missing_A = variants {} ; --
lin mission_N = mkN "mission" feminine ; -- tocheck
lin missionary_N = mkN "missionnaire" masculine ; -- tocheck
lin missis_N = mkN "Bourgeoise" | mkN "bobonne" ; -- UWN
lin missive_N = mkN "lettre" | mkN "missive" ; -- UWN
lin misspelling_N = mkN "faute_d'orthographe" ; -- UWN
lin missus_N = mkN "Bourgeoise" ; -- tocheck
lin mist_N = mkN "buée" feminine | mkN "brouillard" masculine ; -- tocheck
lin mistake_N = mkN "faute" feminine ; -- tocheck
lin mistake_V = variants {} ; -- mkV2 (reflV (mkV "tromper")) | mkV2 (mkV I.méprendre_V2) ; -- tocheck
lin mistake_V2 = mkV2 (reflV (mkV "tromper")) | mkV2 (mkV I.méprendre_V2) ; -- tocheck
lin mistaken_A = variants {} ;
lin mister_N = mkN "monsieur" masculine ; -- tocheck
lin mistletoe_N = mkN "gui" masculine ; -- tocheck
lin mistranslation_N = mkN "contresens" ; -- UWN
lin mistreat_V2 = mkV2 (mkV "maltraiter") ; -- tocheck
lin mistress_N = mkN "maîtresse" feminine ;
lin mistrust_N = mkN "défiance" ; -- tocheck
lin mistrustful_A = mkA "méfiant" ; -- UWN
lin misty_A = mkA "brumeux" ; -- tocheck
lin misunderstanding_N = mkN "malentendu" masculine ; -- tocheck
lin misuse_N = mkN "mésusage" masculine ; -- tocheck
lin mite_N = mkN "acarien" ; -- tocheck
lin miter_N = mkN "mitre" ; -- UWN
lin mitigate_V2 = mkV2 (mkV I.réduire_V2) ; -- tocheck
lin mitigation_N = mkN "soulagement" ; -- tocheck
lin mitochondrion_N = mkN "mitochondrie" feminine ; -- tocheck
lin mitosis_N = mkN "mitose" feminine ; -- tocheck
lin mitre_N = mkN "mitre" feminine ; -- tocheck
lin mitt_N = mkN "gant" ; -- UWN
lin mitten_N = mkN "moufle" feminine ; -- tocheck
lin mix_N = mkN "mélange" masculine ; -- tocheck
lin mix_V = variants {} ; -- mkV2 (mkV "mélanger") | mkV2 (mkV "mixer") ; -- tocheck
lin mix_V2 = mkV2 (mkV "mélanger") | mkV2 (mkV "mixer") ; -- tocheck
lin mix_up_V2 = prepV2 OP_mix_V OP_up_Prep ; -- guess-p-verb
lin mixed_A = variants {} ; --
lin mixer_N = mkN "batte-beurre" feminine ; -- tocheck
lin mixture_N = mkN "mélange" masculine ; -- tocheck
lin mizzen_N = mkN "artimon" masculine ; -- tocheck
lin mizzen_mast_N = mkN "artimon" masculine ; -- tocheck
lin ml_N = mkN "centimètre_cube" | mkN "millilitre" | mkN "ml" ; -- UWN
lin mnemonic_A = mkA "mnémonique" ; -- tocheck
lin mnemonic_N = mkN "mnémonique" ; -- tocheck
lin mnemonics_N = mkN "mnémotechnique" ; -- tocheck
lin mo_PN = mkPN "Mo" ; -- status=guess src=geonames
lin moan_N = mkN "gémissement" masculine ; -- tocheck
lin moan_V = variants {} ; -- mkV2 (reflV (mkV I.plaindre_V2)) | mkV2 (mkV "gémir") ; -- tocheck
lin moat_N = mkN "douve" feminine ; -- tocheck
lin mob_N = mkN "foule" feminine | mkN "troupeau" masculine ; -- tocheck
lin mobile_A = mkA "mobile" ; -- tocheck
lin mobile_N = mkN "mobile" masculine | mkN "portable" masculine ; -- tocheck
lin mobility_N = mkN "mobilité" feminine ; -- tocheck
lin mobilization_N = mkN "mobilisation" feminine ; -- tocheck
lin mobilize_V = mkV "circuler" | mkV "pratiquer" ; -- UWN
lin mobster_N = mkN "truand" masculine ; -- tocheck
lin moccasin_N = mkN "mocassin" masculine ; -- tocheck
lin mock_N = mkN "imitation" feminine ; -- tocheck
lin mock_V2 = mkV2 (mkV "imiter") ; -- tocheck
lin mockingbird_N = mkN "moqueur" masculine ; -- tocheck
lin mod_A = mkA "moderne" ; -- UWN
lin modal_A = mkA "modal" ; -- tocheck
lin modality_N = mkN "modalité" feminine ; -- tocheck
lin mode_N = mkN "mode" feminine ; -- tocheck
lin model_N = mkN "modèle" masculine | mkN "mannequin" | mkN "maquette" masculine ; ---- split
lin model_V = variants {} ; -- mkV2 (mkV "modeler") | mkV2 (mkV "modéliser") ; -- tocheck
lin model_V2 = mkV2 (mkV "modeler") | mkV2 (mkV "modéliser") ; -- tocheck
lin modeler_N = mkN "modéliste" ; -- UWN
lin modeling_N = mkN "mannequinat" masculine ; -- tocheck
lin modeller_N = mkN "modéliste" ; -- UWN
lin modelling_N = mkN "modèle" | mkN "modélisme" ; -- UWN
lin modem_N = mkN "modem" masculine ; -- tocheck
lin modena_PN = mkPN "Modène" ; -- status=guess src=geonames
lin moderate_A = mkA "modéré" ; -- tocheck
lin moderate_N = mkN "modéré" masculine ; -- tocheck
lin moderate_V2 = mkV2 (mkV "modérer") | mkV2 (mkV "modèrer") ; -- tocheck
lin moderation_N = mkN "modération" ; -- tocheck
lin moderationist_N = mkN "modérateur" | mkN "modération" ; -- UWN
lin moderator_N = mkN "modérateur" masculine ; -- tocheck
lin modern_A = mkA "moderne" ; -- tocheck
lin modernism_N = mkN "modernisme" masculine ; -- tocheck
lin modernist_N = mkN "moderniste" ; -- tocheck
lin modernistic_A = mkA "moderne" ; -- UWN
lin modernity_N = mkN "modernité" ; -- tocheck
lin modernization_N = mkN "modernisation" feminine ; -- tocheck
lin modernize_V2 = mkV2 (mkV "moderniser") ; -- tocheck
lin modest_A = mkA "modeste" ; -- tocheck
lin modesty_N = mkN "modestie" feminine ; -- tocheck
lin modicum_N = mkN "modique" ; -- tocheck
lin modifiable_A = mkA "modifiable" ; -- UWN
lin modification_N = mkN "modification" feminine ; -- tocheck
lin modifier_N = mkN "modificateur" masculine ; -- tocheck
lin modify_V2 = mkV2 (mkV "modifier") ; -- tocheck
lin modular_A = mkA "modulaire" ; -- tocheck
lin module_N = mkN "module" ; -- tocheck
lin modulus_N = mkN "module" ; -- tocheck
lin modus_operandi_N = mkN "modus_operandi" | mkN "routine" ; -- UWN
lin mogul_N = mkN "Magnat" | mkN "baron" | mkN "magnat" | mkN "pouvoir" | mkN "roi" ; -- UWN
lin mohair_N = mkN "mohair" ; -- UWN
lin moiety_N = mkN "groupement" ; -- tocheck
lin moira_PN = mkPN "Moira" ; -- status=guess src=geonames
lin moist_A = mkA "humide" ; -- tocheck
lin moisten_V2 = mkV2 (mkV "mouiller") | mkV2 (mkV "humidifier") ; -- tocheck
lin moisture_N = mkN "humidité" feminine ; -- tocheck
lin mojarra_N = mkN "gerreidae" ; -- UWN
lin molal_A = mkA "molaire" ; -- UWN
lin molar_N = mkN "molaire" feminine ; -- tocheck
lin molasses_N = mkN "mélasse" feminine ; -- tocheck
lin mold_PN = mkPN "Mold" ; -- status=guess src=geonames
lin moldboard_N = mkN "versoir" masculine ; -- tocheck
lin moldy_A = mkA "moisi" ; -- UWN
lin mole_N = mkN "taupe" feminine | mkN "mole" masculine | mkN "môle" feminine | mkN "môle" masculine | mkN "mole" feminine ; -- tocheck
lin molecular_A = mkA "moléculaire" ; -- tocheck
lin molecule_N = mkN "molécule" feminine ; -- tocheck
lin molehill_N = mkN "taupinière" feminine ; -- tocheck
lin moleskin_N = mkN "moleskine" feminine ; -- tocheck
lin mollie_N = mkN "molly" ; -- UWN
lin mollify_V2 = mkV2 (mkV "apaiser") ; -- tocheck
lin mollusc_N = mkN "mollusque" ; -- tocheck
lin mollusk_N = mkN "coquillage" | mkN "mollusque" ; -- UWN
lin mollycoddle_N = mkN "chouchou" ; -- UWN
lin mollycoddle_V2 = mkV2 (mkV "couver") ; -- tocheck
lin moloch_N = mkN "moloch" ; -- UWN
lin molt_N = mkN "mue" feminine ; -- tocheck
lin molten_A = mkA "fondu" ; -- tocheck
lin molybdenite_N = mkN "molybdénite" feminine ; -- tocheck
lin molybdenum_N = mkN "molybdène" masculine ; -- tocheck
lin moment_N = mkN "moment" masculine | mkN "instant" masculine ;
lin momentary_A = mkA "fugace" | mkA "fugitif" | mkA "momentané" | mkA "éphémère" ; -- UWN
lin momentous_A = mkA "capital" | mkA "grand" | mkA "primordial" ; -- UWN
lin momentum_N = mkN "élan" ; -- tocheck
lin mon_PN = mkPN "Mon" ; -- status=guess src=geonames
lin monaco_PN = mkPN "Monaco" ; -- status=guess src=geonames
lin monaghan_PN = mkPN "Monaghan" ; -- status=guess src=geonames
lin monal_N = mkN "lophophorus" | mkN "monal" ; -- UWN
lin monarch_N = mkN "monarque" masculine ; -- tocheck
lin monarchism_N = mkN "monarchisme" ; -- UWN
lin monarchist_N = mkN "monarchiste" ; -- UWN
lin monarchy_N = mkN "monarchie" feminine ; -- tocheck
lin monarda_N = mkN "monarda" ; -- UWN
lin monastery_N = mkN "monastère" ; -- tocheck
lin monastic_A = mkA "monastique" ; -- tocheck
lin monatomic_A = mkA "monoatomique" ; -- UWN
lin monaural_A = mkA "monophonique" ; -- UWN
lin monazite_N = mkN "monazite" ; -- UWN
lin monetarism_N = mkN "monétarisme" masculine ; -- tocheck
lin monetary_A = mkA "monétaire" ; -- tocheck
lin money_N = mkN "argent" ;
lin moneylender_N = mkN "shylock" | mkN "usurier" | mkN "usurière" ; -- UWN
lin moneymaker_N = mkN "vache_à_lait" ; -- UWN
lin monger_N = mkN "commerçant" | mkN "négociant" | mkN "opérateur" ; -- UWN
lin mongo_N = mkN "mongo" ; -- UWN
lin mongolia_PN = mkPN "Mongolie" ; -- status=guess src=geonames
lin mongoose_N = mkN "mangouste" ; -- tocheck
lin mongrel_N = mkN "bâtard" masculine ; -- tocheck
lin monism_N = mkN "monisme" masculine ; -- tocheck
lin monitor_N = mkN "écran" masculine | mkN "moniteur" masculine ; -- tocheck
lin monitor_V = variants {} ; -- mkV2 (mkV "contrôler") ; -- tocheck
lin monitor_V2 = mkV2 (mkV "contrôler") ; -- tocheck
lin monitoring_N = mkN "surveillance" feminine ; -- tocheck
lin monk_N = mkN "moine" ; -- tocheck
lin monkey_N = mkN "singe" masculine ; -- tocheck
lin monkey_wrench_N = mkN "clé_anglaise" ; -- UWN
lin monkshood_N = mkN "aconit" masculine ; -- tocheck
lin monmouth_PN = mkPN "Monmouth" ; -- status=guess src=geonames
lin mono_A = mkA "monophonique" ; -- UWN
lin monoamine_N = mkN "monoamine" ; -- UWN
lin monocarboxylic_A = mkA "monocarboxylique" ; -- UWN
lin monochrome_A = mkA "monochrome" ; -- tocheck
lin monochrome_N = mkN "monochrome" ; -- UWN
lin monocle_N = mkN "monocle" masculine ; -- tocheck
lin monoclinic_A = mkA "monoclinique" ; -- tocheck
lin monocot_N = mkN "monocotylédone" | mkN "monocotylédones" ; -- UWN
lin monoculture_N = mkN "monoculture" feminine ; -- tocheck
lin monocyte_N = mkN "monocyte" masculine ; -- tocheck
lin monodic_A = mkA "monodique" ; -- UWN
lin monoecious_A = mkA "monoïque" ; -- UWN
lin monogamous_A = mkA "monogame" ; -- tocheck
lin monogamy_N = mkN "monogamie" feminine ; -- tocheck
lin monogram_N = mkN "monogramme" masculine ; -- tocheck
lin monograph_N = mkN "monographie" ; -- tocheck
lin monolingual_A = mkA "monolingue" ; -- tocheck
lin monolith_N = mkN "monolithe" masculine ; -- tocheck
lin monologue_N = mkN "monologue" masculine ; -- tocheck
lin monomania_N = mkN "monomanie" feminine ; -- tocheck
lin monophony_N = mkN "monodie" ; -- UWN
lin monopolist_N = mkN "monopolisateur" | mkN "monopoliste" ; -- UWN
lin monopolistic_A = mkA "monopolistique" ; -- UWN
lin monopolization_N = mkN "monopolisation" ; -- UWN
lin monopolize_V2 = mkV2 (mkV "accaparer") | mkV2 (mkV "monopoliser") ; -- tocheck
lin monopoly_N = mkN "monopole" masculine ; -- tocheck
lin monopsony_N = mkN "monopole_d'achat" | mkN "monopsone" ; -- UWN
lin monorail_N = mkN "monorail" masculine ; -- tocheck
lin monosaccharide_N = mkN "monosaccharide" masculine ; -- tocheck
lin monosemy_N = mkN "monosémie" feminine ; -- tocheck
lin monosyllabic_A = mkA "monosyllabe" | mkA "monosyllabique" ; -- tocheck
lin monotheism_N = mkN "monothéisme" masculine ; -- tocheck
lin monotheist_N = mkN "monothéiste" ; -- tocheck
lin monotheistic_A = mkA "monothéiste" ; -- UWN
lin monotone_N = mkN "faux_bourdon" ; -- UWN
lin monotonic_A = mkA "monotone" ; -- tocheck
lin monotonous_A = mkA "monotone" ; -- tocheck
lin monotony_N = mkN "monotonie" ; -- UWN
lin monotreme_N = mkN "monotrème" masculine ; -- tocheck
lin monovalent_A = mkA "monovalent" | mkA "univalent" ; -- UWN
lin monoxide_N = mkN "protoxyde" ; -- tocheck
lin monozygotic_A = mkA "monozygote" ; -- UWN
lin mons_N = mkN "Mont_de_Vénus" | mkN "mons" | mkN "mont_de_Vénus" | mkN "mont_de_vénus" ; -- UWN
lin monsoon_N = mkN "mousson" feminine ; -- tocheck
lin monster_N = mkN "bête" feminine | mkN "monstre" masculine ; -- tocheck
lin monstrance_N = mkN "ostensoir" masculine ; -- tocheck
lin monstrosity_N = mkN "monstruosité" feminine ; -- tocheck
lin monstrous_A = mkA "monstrueux" ; -- tocheck
lin montage_N = mkN "montage" masculine | mkN "montage" ; -- tocheck
lin montana_PN = mkPN "Montana" ; -- status=guess src=geonames
lin monte_N = mkN "bonneteau" ; -- UWN
lin monterrey_PN = mkPN "Monterrey" ; -- status=guess src=geonames
lin montevideo_PN = mkPN "Montevideo" ; -- status=guess src=geonames
lin month_N = mkN "mois" masculine ;
lin monthly_A = mkA "mensuel" ; -- tocheck
lin monthly_Adv = mkAdv "mensuel" ; -- tocheck
lin monthly_N = mkN "mens" | mkN "mensuel" | mkN "mensuellement" ; -- UWN
lin montrose_PN = mkPN "Montrose" ; -- status=guess src=geonames
lin montserrat_PN = mkPN "Montserrat" ; -- status=guess src=geonames
lin monument_N = mkN "monument" masculine ; -- tocheck
lin monza_PN = mkPN "Monza" ; -- status=guess src=geonames
lin moo_N = mkN "meuglement" masculine ; -- tocheck
lin moo_V = mkV (mkV "meugler") ; -- tocheck
lin mooch_V = mkV (mkV "errer") ; -- tocheck
lin moocher_N = mkN "tapeur" masculine ; -- tocheck
lin mood_N = mkN "humeur" feminine | mkN "mode" masculine ; -- tocheck
lin moody_A = mkA "lugubre" | mkA "lunatique" | mkA "mélancolique" ; -- tocheck
lin moon_N = L.moon_N ;
lin moonstone_N = mkN "pierre_de_lune" ; -- UWN
lin moor_N = mkN "bruyère" feminine ; -- tocheck
lin moor_V2 = mkV2 (mkV "amarrer") ; -- tocheck
lin moorage_N = mkN "ligotage" ; -- UWN
lin mooring_N = mkN "amarrage" masculine ; -- tocheck
lin moorland_N = mkN "bruyère" ; -- UWN
lin moose_N = mkN "élan" masculine ; -- tocheck
lin moot_A = mkA "discutable" ; -- tocheck
lin mop_N = mkN "grimace" feminine | mkN "tignasse" feminine | mkN "serpillière" feminine ; -- tocheck
lin mop_V = mkV "faucher" ; -- UWN
lin moped_N = mkN "vélomoteur" masculine ; -- tocheck
lin mopper_N = mkN "essuyeur" ; -- UWN
lin moquette_N = mkN "moquette" ; -- UWN
lin moraine_N = mkN "moraine" feminine ; -- tocheck
lin moral_A = mkA "moral" ; -- tocheck
lin moral_N = mkN "morale" feminine | mkN "moralité" feminine ; -- tocheck
lin morale_N = mkN "enthousiasme" masculine ; -- tocheck
lin moralism_N = mkN "moralisme" masculine ; -- tocheck
lin morality_N = mkN "moralité" feminine | mkN "moralité" ; -- tocheck
lin morass_N = mkN "marais" ; -- tocheck
lin moratorium_N = mkN "moratoire" masculine ; -- tocheck
lin moray_N = mkN "muraenidae" | mkN "murène" | mkN "murènes" ; -- UWN
lin morbid_A = mkA "morbide" ; -- tocheck
lin morbidity_N = mkN "morbidité" ; -- tocheck
lin morbidness_N = mkN "morbidité" ; -- UWN
lin mordacious_A = mkA "mordant" ; -- tocheck
lin mordant_A = mkA "corrosif" ; -- UWN
lin more_Adv = mkAdv "plus" | mkAdv "davantage" ;
lin more_CAdv = S.more_CAdv ;
lin morecambe_PN = mkPN "Morecambe" ; -- status=guess src=geonames
lin morel_N = mkN "morille" ; -- tocheck
lin moreover_Adv = mkAdv "de_plus" | mkAdv "de_surcroît" | mkAdv "en_outre" | mkAdv "outre" ; -- UWN
lin mores_N = mkN "moeurs" ; -- tocheck
lin morganatic_A = mkA "morganatique" ; -- tocheck
lin morganite_N = mkN "béryl_rose" | mkN "morganite" ; -- UWN
lin morgue_N = mkN "morgue" ; -- tocheck
lin moribund_A = mkA "moribond" ; -- tocheck
lin morion_N = mkN "morion" ; -- tocheck
lin morley_PN = mkPN "Morley" ; -- status=guess src=geonames
lin morn_N = mkN "avant-midi" | mkN "matin" | mkN "matinée" ; -- UWN
lin morning_N = mkN "matin" masculine ;
lin morocco_PN = mkPN "Maroc" ; -- status=guess src=geonames
lin moron_N = mkN "attardé" | mkN "andouille" feminine ; -- tocheck
lin morose_A = mkA "sombre" ; -- tocheck
lin morpeth_PN = mkPN "Morpeth" ; -- status=guess src=geonames
lin morpheme_N = mkN "morphème" masculine ; -- tocheck
lin morphia_N = mkN "morphine" ; -- UWN
lin morphine_N = mkN "morphine" feminine ; -- tocheck
lin morphogenesis_N = mkN "morphogenèse" ; -- UWN
lin morphologic_A = mkA "morphologique" | mkA "structurel" ; -- UWN
lin morphological_A = mkA "morphologique" ; -- tocheck
lin morphology_N = mkN "morphologie" feminine ; -- tocheck
lin morris_dance_N = mkN "Morris_dance" | mkN "morris_dance" ; -- UWN
lin morrow_N = mkN "matin" masculine | mkN "lendemain" masculine ; -- tocheck
lin morsel_N = mkN "morceau" masculine ; -- tocheck
lin mortal_A = mkA "mortel" ; -- tocheck
lin mortal_N = mkN "mortel" masculine ; -- tocheck
lin mortality_N = mkN "mortalité" feminine ; -- tocheck
lin mortar_N = mkN "mortier" masculine ; -- tocheck
lin mortgage_N = mkN "hypothèque" feminine ; -- tocheck
lin mortgage_V2 = mkV2 (mkV "hypothéquer") ; -- tocheck
lin mortician_N = mkN "croque-mort" | mkN "croquemort" ; -- UWN
lin mortise_N = mkN "mortaise" feminine ; -- tocheck
lin mortmain_N = mkN "mainmorte" feminine ; -- tocheck
lin mortuary_N = mkN "morgue" ; -- UWN
lin morula_N = mkN "morula" ; -- UWN
lin mosaic_N = mkN "mosaïque" feminine ; -- tocheck
lin moscow_1_PN = mkPN "Moscou" ; -- status=guess src=geonames
lin moscow_2_PN = mkPN "Moscou" ; -- status=guess src=geonames
lin moshav_N = mkN "mochav" | mkN "moshav" ; -- UWN
lin mosque_N = mkN "mosquée" feminine ; -- tocheck
lin mosquito_N = mkN "moustique" masculine ; -- tocheck
lin moss_N = mkN "mousse" feminine ; -- tocheck
lin mossley_PN = mkPN "Mossley" ; -- status=guess src=geonames
lin mossy_A = mkA "moussu" ; -- tocheck
lin most_Adv = mkAdv "le plus" ;
lin most_Det = mkDet ("la plupart" ++ Ph.elisDe) ("la plupart" ++ Ph.elisDe) plural ;
lin most_Predet = S.most_Predet ;
lin mostly_Adv = mkAdv "surtout" ; -- tocheck
lin mote_N = mkN "atome" masculine ; -- tocheck
lin motel_N = mkN "motel" masculine ; -- tocheck
lin motet_N = mkN "motet" masculine ; -- tocheck
lin moth_N = mkN "mite" feminine ; -- tocheck
lin mother_N = mkN "mère" feminine ;
lin mother_N2 = L.mother_N2 ;
lin mother_V2 = mkV2 (mkV "materner") ; -- tocheck
lin mother_in_law_N = mkN "belle-mère" feminine ; -- tocheck
lin mother_of_pearl_N = mkN "nacre" feminine ; -- tocheck
lin motherhood_N = mkN "maternité" feminine ; -- tocheck
lin motherland_N = mkN "patrie" feminine ; -- tocheck
lin motherliness_N = mkN "maternité" ; -- UWN
lin motherwell_PN = mkPN "Motherwell" ; -- status=guess src=geonames
lin motif_N = mkN "motif" masculine ; -- tocheck
lin motility_N = mkN "mouvement" ; -- UWN
lin motion_N = mkN "mouvement" masculine | mkN "motion" feminine ; -- tocheck
lin motionless_A = mkA "immobile" ; -- tocheck
lin motivate_V2 = variants {} ; -- mkV2V (mkV "motiver") ; -- tocheck
lin motivate_V2V = mkV2V (mkV "motiver") ; -- tocheck
lin motivation_N = mkN "motivation" feminine ; -- tocheck
lin motivational_A = mkA "incitatif" ; -- UWN
lin motive_A = mkA "mouvant" ; -- tocheck
lin motive_N = mkN "motif" masculine ; -- tocheck
lin motley_A = mkA "bigarré" | mkA "multicolore" | mkA "pie" ; -- UWN
lin motmot_N = mkN "momotidae" | mkN "momotidés" | mkN "motmots" ; -- UWN
lin motor_N = mkN "moteur" masculine ; -- tocheck
lin motorbike_N = mkN "moto" | mkN "motocyclette" ; -- UWN
lin motorcar_N = mkN "auto" | mkN "automobile" | mkN "voiture" ; -- UWN
lin motorcoach_N = mkN "autobus" | mkN "autocar" | mkN "bus" ; -- UWN
lin motorcycle_N = mkN "moto" feminine ; -- tocheck
lin motorcyclist_N = mkN "motard" masculine ; -- tocheck
lin motoring_N = mkN "automobilisme" masculine ; -- tocheck
lin motorist_N = mkN "automobiliste" ; -- UWN
lin motorization_N = mkN "motorisation" feminine ; -- tocheck
lin motorway_N = mkN "autoroute" feminine ; -- tocheck
lin motto_N = mkN "devise" feminine ; -- tocheck
lin mouflon_N = mkN "mouflon" masculine ; -- tocheck
lin moujik_N = mkN "Moujik" | mkN "moujik" ; -- UWN
lin mould_N = mkN "moule" masculine | mkN "moulage" ; -- tocheck
lin moulding_N = mkN "modélisme" ; -- UWN
lin mouldy_A = mkA "moisi" ; -- tocheck
lin moult_N = mkN "mue" feminine ; -- tocheck
lin moult_V = mkV "muer" ; -- UWN
lin moult_V2 = mkV2 (mkV "muer") ; -- tocheck
lin mound_N = mkN "monticule" masculine | mkN "colline" feminine ; -- tocheck
lin mount_N = mkN "monture" feminine | mkN "mont" masculine | mkN "cavalier" masculine ; -- tocheck
lin mount_V = variants {} ; -- mkV2 (mkV "chevaucher") ; -- tocheck
lin mount_V2 = mkV2 (mkV "chevaucher") ; -- tocheck
lin mount_up_V = mkV "enfourcher" ; -- UWN
lin mountain_N = L.mountain_N ;
lin mountaineer_N = mkN "alpiniste" | mkN "montagnard" masculine ; -- tocheck
lin mountaineering_N = mkN "alpinisme" masculine ; -- tocheck
lin mountainous_A = mkA "montagneux" ; -- tocheck
lin mountebank_N = mkN "charlatan" ; -- UWN
lin mounter_N = mkN "alpiniste" ; -- UWN
lin mourn_V2 = mkV2 (mkV "déplorer") ; -- tocheck
lin mourning_N = mkN "deuil" masculine ; -- tocheck
lin mouse_N = mkN "souris" feminine ; -- tocheck
lin mousepad_N = mkN "tapis_de_souris" ; -- UWN
lin mouser_N = mkN "souricier" masculine ; -- tocheck
lin moussaka_N = mkN "moussaka" ; -- UWN
lin mousse_N = mkN "mousse" feminine ; -- tocheck
lin moustache_N = mkN "moustache" feminine ; -- tocheck
lin mouth_N = L.mouth_N ;
lin mouthful_N = mkN "bouchée" | mkN "gorgée" | mkN "goût" ; -- UWN
lin mouthpiece_N = mkN "embouchure" ; -- tocheck
lin mouton_N = mkN "mouton" ; -- UWN
lin movable_A = mkA "transférable" ; -- UWN
lin move_1_V = reflV (mkV I.mouvoir_V2) | reflV (mkV "bouger") ;
lin move_2_V = mkV "déménager" ;
lin move_N = mkN "coup" masculine | mkN "déménagement" masculine ; -- tocheck
lin move_V = reflV (mkV "bouger") | mkV "déménager" ;
lin move_V2 = I.émouvoir_V2 | mkV2 "déplacer" | mkV2 "déménager" | mkV2 "bouger" ; --- split move emotionally
lin move_ahead_V = advV OP_move_V OP_ahead_Adv ; -- guess-p-verb
lin move_along_V = advV OP_move_V OP_along_Adv ; -- guess-p-verb
lin move_away_V = advV OP_move_V OP_away_Adv ; -- guess-p-verb
lin move_away_from_V2 = prepV2 (advV OP_move_V OP_away_Adv ) OP_from_Prep ; -- guess-p-verb
lin move_down_V2 = prepV2 OP_move_V OP_down_Prep ; -- guess-p-verb
lin move_in_V = advV OP_move_V OP_in_Adv ; -- guess-p-verb
lin move_in_on_V2 = prepV2 (advV OP_move_V OP_in_Adv ) OP_on_Prep ; -- guess-p-verb
lin move_into_V2 = prepV2 OP_move_V OP_into_Prep ; -- guess-p-verb
lin move_on_V = advV OP_move_V OP_on_Adv ; -- guess-p-verb
lin move_on_V2 = prepV2 OP_move_V OP_on_Prep ; -- guess-p-verb
lin move_out_V = advV OP_move_V OP_out_Adv ; -- guess-p-verb
lin move_out_V2 = prepV2 OP_move_V OP_out_Prep ; -- guess-p-verb
lin move_towards_V2 = prepV2 OP_move_V OP_towards_Prep ; -- guess-p-verb
lin move_up_V = advV OP_move_V OP_up_Adv ; -- guess-p-verb
lin move_up_V2 = prepV2 OP_move_V OP_up_Prep ; -- guess-p-verb
lin movement_N = mkN "mouvement" masculine ;
lin movie_N = mkN "cinéma" masculine ; -- tocheck
lin moving_A = variants {} ; --
lin mow_N = mkN "fenil" ; -- UWN
lin mow_V = mkV "faucher" ; -- UWN
lin mower_N = mkN "tondeuse" | mkN "tondeuse_à_gazon" ; -- UWN
lin mown_A = mkA "fauché" | mkA "trancher" ; -- UWN
lin mozambique_PN = mkPN "Mozambique" ; -- status=guess src=geonames
lin mozzarella_N = mkN "mozzarelle" feminine ; -- tocheck
lin mu_N = mkN "mu" masculine ; -- tocheck
lin much_Adv = mkAdv "beaucoup" ;
lin much_Det = S.much_Det ;
lin mucin_N = mkN "Mucine" | mkN "mucine" ; -- UWN
lin muckraker_N = mkN "fouille-merde" ; -- tocheck
lin mucopolysaccharidosis_N = mkN "Mucopolysaccharidose" | mkN "mucopolysaccharidose" | mkN "mucopolysaccharidoses" ; -- UWN
lin mucor_N = mkN "mucor" ; -- UWN
lin mucous_A = mkA "muqueux" ; -- UWN
lin mucuna_N = mkN "mucuna" ; -- UWN
lin mucus_N = mkN "mucus" masculine ; -- tocheck
lin mud_N = mkN "boue" feminine ; -- tocheck
lin muddle_V2 = mkV2 (mkV I.confondre_V2) ; -- tocheck
lin muddy_A = mkA "boueux" ; -- tocheck
lin mudguard_N = mkN "garde-boue" masculine ; -- tocheck
lin mudra_N = mkN "mudrâ" ; -- tocheck
lin mudskipper_N = mkN "Periophthalmus" | mkN "periophthalmus" | mkN "périophthalmes" ; -- UWN
lin mudslinger_N = mkN "fouille-merde" ; -- UWN
lin muesli_N = mkN "céréales" | mkN "muesli" | mkN "musli" ; -- UWN
lin muezzin_N = mkN "muezzin" masculine ; -- tocheck
lin muff_N = mkN "manchon" masculine ; -- tocheck
lin muffin_N = mkN "muffin" masculine ; -- tocheck
lin muffler_N = mkN "amortisseur" ; -- UWN
lin mufti_N = mkN "mufti" masculine ; -- tocheck
lin mug_N = mkN "couillon" masculine | mkN "mug" masculine | mkN "gueule" feminine ; -- tocheck
lin mug_V2 = mkV2 (mkV "agresser") ; -- tocheck
lin muggy_A = mkA "étouffant" ; -- tocheck
lin mugwort_N = mkN "armoise" feminine ; -- tocheck
lin mugwump_N = mkN "indépendant" ; -- UWN
lin mujahid_N = mkN "moudjahid" masculine ; -- tocheck
lin mujahidin_N = mkN "moudjahid" | mkN "moudjahidin" | mkN "moudjahidine" | mkN "mujahidin" | mkN "mujâhid" ; -- UWN
lin mulatto_N = mkN "mulâtre" ; -- tocheck
lin mulberry_N = mkN "mûrier" | mkN "mûre" feminine ; -- tocheck
lin mulch_N = mkN "paillage" feminine ; -- tocheck
lin mulch_V2 = mkV2 (mkV "pailler") ; -- tocheck
lin mulct_V2 = mkV2 (mkV "mulcter") ; -- tocheck
lin mule_N = mkN "mule" feminine ; -- tocheck
lin muleteer_N = mkN "muletier" ; -- tocheck
lin mulhouse_PN = mkPN "Mulhouse" ; -- status=guess src=geonames
lin mulish_A = mkA "têtu" ; -- UWN
lin mulishness_N = mkN "entêtement" | mkN "obstination" | mkN "opiniâtreté" ; -- UWN
lin mullah_N = mkN "mollah" masculine ; -- tocheck
lin mullein_N = mkN "molène" feminine ; -- tocheck
lin mullet_N = mkN "mulet" masculine ; -- tocheck
lin mullion_N = mkN "meneau" masculine ; -- tocheck
lin multicellular_A = mkA "multicellulaire" ; -- tocheck
lin multicultural_A = mkA "multiculturel" ; -- tocheck
lin multiculturalism_N = mkN "multiculturalisme" masculine ; -- tocheck
lin multiethnic_A = mkA "multiethnique" ; -- tocheck
lin multifarious_A = mkA "divers" ; -- UWN
lin multilateral_A = mkA "multilatéral" ; -- tocheck
lin multi_lingual_A = mkA "plurilingue" ; -- tocheck
lin multimedia_N = mkN "multimédia" masculine ; -- tocheck
lin multinational_A = mkA "multinational" ; -- tocheck
lin multiple_A = mkA "multiple" ; -- tocheck
lin multiple_N = mkN "multiple" masculine ; -- tocheck
lin multiplexer_N = mkN "multiplexeur" masculine ; -- tocheck
lin multiplicand_N = mkN "multiplicande" masculine ; -- tocheck
lin multiplication_N = mkN "multiplication" feminine ; -- tocheck
lin multiplicative_A = mkA "multiplicatif" ; -- UWN
lin multiplicity_N = mkN "multiplicité" | mkN "multiplicité" feminine ; -- tocheck
lin multiplier_N = mkN "multiplicateur" masculine ; -- tocheck
lin multiply_V = mkV "procréer" ; -- UWN
lin multiply_V2 = mkV2 (reflV (mkV "multiplier")) | mkV2 (mkV "multiplier") ; -- tocheck
lin multiprocessing_N = mkN "multiprocesseur" | mkN "multitraitement" ; -- UWN
lin multiprocessor_N = mkN "multiprocesseur" ; -- UWN
lin multipurpose_A = mkA "polyvalent" ; -- tocheck
lin multiracial_A = mkA "multiracial" ; -- UWN
lin multitude_N = mkN "multitude" feminine ; -- tocheck
lin mum_A = mkA "maman" ; -- UWN
lin mum_N = mkN "maman" feminine ; -- tocheck
lin mumble_V2 = mkV2 (mkV "marmonner") ; -- tocheck
lin mummer_N = mkN "mime" masculine ; -- tocheck
lin mummery_N = mkN "mommerie" ; -- tocheck
lin mummy_N = mkN "maman" feminine | mkN "momie" feminine ; -- tocheck
lin mumps_N = mkN "oreillons" ; -- tocheck
lin mundane_A = mkA "prosaïque" ; -- tocheck
lin munich_PN = mkPN "Munich" ; -- status=guess src=geonames
lin municipal_A = mkA "municipal" ; -- tocheck
lin municipality_N = mkN "municipalité" ; -- tocheck
lin munificence_N = mkN "générosité" feminine ; -- tocheck
lin munificent_A = mkA "généreux" ; -- UWN
lin munition_N = mkN "fortification" ; -- UWN
lin munster_PN = mkPN "Munster" ; -- status=guess src=geonames
lin muntjac_N = mkN "muntiacus" ; -- UWN
lin muon_N = mkN "muon" masculine ; -- tocheck
lin muralist_N = mkN "ambianceur" | mkN "ambianceuse" ; -- UWN
lin murder_N = mkN "meurtre" masculine ; -- tocheck
lin murder_V2 = variants {} ; --
lin murderer_N = mkN "meurtrier" masculine ; -- tocheck
lin murderess_N = mkN "meurtrière" feminine ; -- tocheck
lin murderous_A = mkA "meurtrier" ; -- tocheck
lin murky_A = mkA "sombre" ; -- tocheck
lin murmur_N = mkN "murmure" masculine | mkN "rumeur" | mkN "souffle" masculine ; -- tocheck
lin murmur_V = mkV "râler" ; -- UWN
lin murmur_V2 = mkV2 (mkV "murmurer") ; -- tocheck
lin murton_PN = mkPN "Murton" ; -- status=guess src=geonames
lin muscle_N = mkN "muscle" masculine ; -- tocheck
lin muscleman_N = mkN "culturiste" ; -- UWN
lin muscular_A = mkA "musclé" | mkA "musculaire" ; -- tocheck
lin muse_N = mkN "muse" ; -- tocheck
lin muse_V = mkV (mkV "songer") ; -- tocheck
lin musette_N = mkN "musette" ; -- UWN
lin museum_N = mkN "musée" masculine ; -- tocheck
lin mushroom_N = mkN "champignon" masculine ; -- tocheck
lin mushroom_V = mkV (mkV "champignonner") ; -- tocheck
lin mushy_A = mkA "mou" ; -- tocheck
lin music_N = L.music_N ;
lin musical_A = mkA "musical" | mkA "mélodieux" | mkA "mélodique" ; -- UWN
lin musical_N = mkN "musical" ; -- UWN
lin musicality_N = mkN "musicalité" ; -- tocheck
lin musicianFem_N = mkN "musicienne" feminine ; -- tocheck
lin musicianMasc_N = mkN "musicien" masculine ;
lin musicological_A = mkA "musicologique" ; -- UWN
lin musicologist_N = mkN "musicologue" ; -- tocheck
lin musicology_N = mkN "musicologie" feminine ; -- tocheck
lin musk_N = mkN "musc" masculine ; -- tocheck
lin muskellunge_N = mkN "maskinongé" ; -- UWN
lin musket_N = mkN "mousquet" masculine ; -- tocheck
lin musketeer_N = mkN "mousquetaire" masculine ; -- tocheck
lin muskmelon_N = mkN "melon" ; -- UWN
lin muslin_N = mkN "mousseline" ; -- tocheck
lin mussel_N = mkN "moule" feminine ; -- tocheck
lin musselburgh_PN = mkPN "Musselburgh" ; -- status=guess src=geonames
lin must_N = mkN "must" | mkN "moût" ; -- tocheck
lin must_VV = S.must_VV ;
lin mustang_N = mkN "mustang" ; -- UWN
lin mustard_N = mkN "moutarde" feminine ; -- tocheck
lin muster_N = mkN "modèle" masculine ; -- tocheck
lin mustiness_N = mkN "devoir" | mkN "moût" | mkN "remugle" ; -- UWN
lin musty_A = mkA "moisi" ; -- tocheck
lin mutable_A = mkA "mutable" ; -- tocheck
lin mutagen_N = mkN "mutagène" ; -- tocheck
lin mutant_N = mkN "mutant" masculine ; -- tocheck
lin mutation_N = mkN "mutation" feminine ; -- tocheck
lin mute_A = mkA "muet" ; -- tocheck
lin mute_N = mkN "muet" masculine | mkN "sourdine" feminine ; -- tocheck
lin mute_V2 = mkV2 (mkV I.taire_V2) ; -- tocheck
lin muteness_N = mkN "mutité" feminine ; -- tocheck
lin mutilate_V2 = mkV2 (mkV "mutiler") ; -- tocheck
lin mutilation_N = mkN "mutilation" feminine ; -- tocheck
lin mutiny_N = mkN "révolte" feminine ; -- tocheck
lin mutisia_N = mkN "mutisia" ; -- UWN
lin mutt_N = mkN "batard" masculine | mkN "crétin" masculine ; -- tocheck
lin mutter_N = mkN "marmonnement" masculine ; -- tocheck
lin mutter_V = mkV "râler" ; -- UWN
lin mutter_V2 = mkV2 (mkV "grogner") | mkV2 (mkV "marmonner") | mkV2 (mkV "grommeler") ; -- tocheck
lin mutton_N = mkN "mouton" masculine ; -- tocheck
lin mutual_A = mkA "mutuel" ; -- tocheck
lin muzhik_N = mkN "Moujik" | mkN "moujik" ; -- UWN
lin muzzle_N = mkN "muselière" feminine | mkN "museau" masculine ; -- tocheck
lin muzzle_V2 = mkV2 (mkV "museler") ; -- tocheck
lin myalgia_N = mkN "myalgie" ; -- UWN
lin mycobacteria_N = mkN "mycobacterium" | mkN "mycobactéries" ; -- UWN
lin mycologist_N = mkN "mycologiste" ; -- tocheck
lin mycology_N = mkN "mycologie" feminine ; -- tocheck
lin mycoplasma_N = mkN "mycoplasma" | mkN "mycoplasme" | mkN "mycoplasmes" ; -- UWN
lin mycotoxin_N = mkN "Mycotoxine" | mkN "mycotoxine" ; -- UWN
lin mydriasis_N = mkN "mydriase" ; -- UWN
lin myelin_N = mkN "myéline" feminine ; -- tocheck
lin myelitis_N = mkN "myélite" ; -- UWN
lin myelofibrosis_N = mkN "myélofibrose_primitive" | mkN "splénomégalie_myéloïde" ; -- UWN
lin myelography_N = mkN "myélographie" ; -- UWN
lin myiasis_N = mkN "myiase" | mkN "myiases" ; -- UWN
lin mylodon_N = mkN "mylodon" ; -- UWN
lin myna_N = mkN "gracula" | mkN "mainate" | mkN "mainates" ; -- UWN
lin myocardium_N = mkN "myocarde" masculine ; -- tocheck
lin myoclonus_N = mkN "myoclonie" | mkN "rapide" ; -- UWN
lin myofibril_N = mkN "myofibrille" ; -- UWN
lin myoglobin_N = mkN "myoglobine" feminine ; -- tocheck
lin myology_N = mkN "myologie" ; -- UWN
lin myoma_N = mkN "myome" masculine ; -- tocheck
lin myometrium_N = mkN "myomètre" masculine ; -- tocheck
lin myopathy_N = mkN "Myopathie" | mkN "myopathie" | mkN "myopathies" ; -- UWN
lin myopia_N = mkN "myopie" ; -- UWN
lin myopic_A = mkA "myope" ; -- tocheck
lin myosin_N = mkN "myosine" ; -- UWN
lin myra_PN = mkPN "Myra" ; -- status=guess src=geonames
lin myriad_N = mkN "myriade" feminine ; -- tocheck
lin myrmecophile_N = mkN "myrmécophiles" | mkN "plante_myrmécophile" ; -- UWN
lin myrmecophilous_A = mkA "myrmécophile" ; -- UWN
lin myrrh_N = mkN "myrrhe" feminine ; -- tocheck
lin myrtle_N = mkN "myrte" ; -- tocheck
lin mysophilia_N = mkN "mysophilie" ; -- UWN
lin mysophobia_N = mkN "mysophobie" ; -- UWN
lin mysterious_A = mkA "mystérieux" ; -- tocheck
lin mystery_N = mkN "mystère" masculine ; -- tocheck
lin mysticFem_N = mkN "mystique" feminine ; -- tocheck
lin mysticMasc_N = mkN "mystique" feminine ; -- tocheck
lin mystic_A = mkA "mystique" ; -- tocheck
lin mysticism_N = mkN "mysticisme" masculine ; -- tocheck
lin myth_N = mkN "mythe" ; -- tocheck
lin mythical_A = mkA "mythique" ; -- tocheck
lin mythological_A = mkA "mythologique" ; -- tocheck
lin mythologist_N = mkN "mythologue" ; -- UWN
lin mythology_N = mkN "mythologie" feminine ; -- tocheck
lin myxedema_N = mkN "Myxœdème" | mkN "myxœdème" ; -- UWN
lin myxoma_N = mkN "myxome" masculine ; -- tocheck
lin myxomatosis_N = mkN "myxomatose" feminine ; -- tocheck
lin nab_V2 = mkV2 (mkV "choper") ; -- tocheck
lin nabob_N = mkN "nabab" masculine ; -- tocheck
lin nacelle_N = mkN "nacelle" ; -- UWN
lin nacho_N = mkN "nacho" ; -- UWN
lin nacre_N = mkN "nacre" feminine ; -- tocheck
lin nadir_N = mkN "nadir" masculine ; -- tocheck
lin nag_N = mkN "rosse" feminine ; -- tocheck
lin nagpur_PN = mkPN "Nagpur" ; -- status=guess src=geonames
lin naiant_A = mkA "natation" ; -- UWN
lin naif_N = mkN "naïf" ; -- tocheck
lin nail_N = mkN "seize" | mkN "ongle" masculine | mkN "clou" masculine ; -- tocheck
lin nail_V2 = mkV2 (mkV I.envoyer_V2) | mkV2 (mkV "choper") | mkV2 (mkV "clouer") | mkV2 (mkV "fourrer") | mkV2 (mkV "toucher") ; -- tocheck
lin nailsea_PN = mkPN "Nailsea" ; -- status=guess src=geonames
lin nairn_PN = mkPN "Nairn" ; -- status=guess src=geonames
lin nairobi_PN = mkPN "Nairobi" ; -- status=guess src=geonames
lin naive_A = mkA "naïf" ; -- tocheck
lin naivety_N = mkN "naïveté" feminine ; -- tocheck
lin naked_A = mkA "nu" ; -- tocheck
lin nakedness_N = mkN "nudité" feminine ; -- tocheck
lin namby_pamby_A = mkA "gnangnan" ; -- tocheck
lin namby_pamby_N = mkN "gnangnan" masculine ; -- tocheck
lin name_N = L.name_N ;
lin name_V2 = variants {} ; -- mkV3 (mkV "nommer") | mkV3 (mkV "préciser") | mkV3 (mkV "choisir") | mkV3 (mkV "identifier") ; -- tocheck
lin name_V3 = mkV3 (mkV "nommer") | mkV3 (mkV "préciser") | mkV3 (mkV "choisir") | mkV3 (mkV "identifier") ; -- tocheck
lin namely_Adv = mkAdv "nommément" ; -- tocheck
lin nameplate_N = mkN "plaque" ; -- tocheck
lin namesake_N = mkN "homonyme" masculine ; -- tocheck
lin namibia_PN = mkPN "Namibie" ; -- status=guess src=geonames
lin namibianFem_N = variants {} ; ---- sense to be split
lin namibianMasc_N = variants {} ; ---- sense to be split
lin naming_N = mkN "désignation" | mkN "nomination" ; -- UWN
lin nanchang_PN = mkPN "Nanchang" ; -- status=guess src=geonames
lin nancy_PN = mkPN "Nancy" ; -- status=guess src=geonames
lin nanning_PN = mkPN "Nanning" ; -- status=guess src=geonames
lin nanny_N = mkN "nounou" feminine ; -- tocheck
lin nanogram_N = mkN "ng" ; -- UWN
lin nanometer_N = mkN "nanomètre" | mkN "nm" ; -- UWN
lin nanosecond_N = mkN "nanoseconde" feminine ; -- tocheck
lin nanotechnology_N = mkN "nanotechnologie" feminine ; -- tocheck
lin nantwich_PN = mkPN "Nantwich" ; -- status=guess src=geonames
lin nap_N = mkN "sieste" feminine ; -- tocheck
lin napalm_N = mkN "napalm" masculine ; -- tocheck
lin nape_N = mkN "nuque" feminine ; -- tocheck
lin naphtha_N = mkN "naphte" masculine ; -- tocheck
lin naphthalene_N = mkN "naphtalène" masculine ; -- tocheck
lin napkin_N = mkN "serviette" feminine ; -- tocheck
lin naples_PN = mkPN "Naples" ; -- status=guess src=geonames
lin napoli_PN = mkPN "Naples" ; -- status=guess src=geonames
lin nappy_N = mkN "couche" | mkN "langer" | mkN "serviette" ; -- UWN
lin narborough_PN = mkPN "Narborough" ; -- status=guess src=geonames
lin narcissism_N = mkN "narcissisme" masculine ; -- tocheck
lin narcissist_N = mkN "narcissique" ; -- UWN
lin narcissus_N = mkN "narcisse" masculine ; -- tocheck
lin narcosis_N = mkN "narcose" ; -- UWN
lin narcoterrorism_N = mkN "narcoterrorisme" masculine ; -- tocheck
lin narcotic_A = mkA "narcotique" ; -- UWN
lin narcotic_N = mkN "narcotique" ; -- tocheck
lin nard_N = mkN "aralia" | mkN "aralies" | mkN "nard" ; -- UWN
lin narrate_V2 = mkV2 (mkV "rapporter") | mkV2 (mkV "raconter") ; -- tocheck
lin narration_N = mkN "narration" feminine ; -- tocheck
lin narrative_A = mkA "narratif" ; -- tocheck
lin narrative_N = mkN "récit" masculine ; -- tocheck
lin narrator_N = mkN "narrateur" masculine ; -- tocheck
lin narrow_A = L.narrow_A ;
lin narrow_N = mkN "étroit" ; -- UWN
lin narrow_V = variants {} ; -- mkV2 (mkV I.réduire_V2) ; -- tocheck
lin narrow_V2 = mkV2 (mkV I.réduire_V2) ; -- tocheck
lin narrow_minded_A = mkA "borné" | mkA "têtu" ; -- tocheck
lin narwhal_N = mkN "narval" masculine ; -- tocheck
lin nasal_A = mkA "nasal" ; -- tocheck
lin nasal_N = mkN "nasal" | mkN "os_propre_du_nez" ; -- UWN
lin nasalization_N = mkN "nasalisation" feminine ; -- tocheck
lin nasalize_V2 = mkV2 (mkV "nasaliser") ; -- tocheck
lin nascent_A = mkA "naissant" ; -- tocheck
lin nasty_A = variants {} ; --
lin nation_N = mkN "nation" feminine ; -- tocheck
lin national_A = mkA "national" ;
lin national_N = mkN "sujet" ; -- UWN
lin nationalism_N = mkN "nationalisme" masculine ; -- tocheck
lin nationalist_A = mkA "nationaliste" ; -- tocheck
lin nationalist_N = mkN "nationaliste" ; -- tocheck
lin nationalistic_A = mkA "nationaliste" ; -- UWN
lin nationality_N = mkN "nationalité" feminine ; -- tocheck
lin native_A = mkA "natif" | mkA "maternel" ; -- tocheck
lin native_N = variants {} ; --
lin nato_PN = mkPN "Nato" ; -- status=guess src=geonames
lin natrolite_N = mkN "natrolite" feminine ; -- tocheck
lin natter_V = mkV (mkV "bavarder") ; -- tocheck
lin natty_A = mkA "chic" ; -- tocheck
lin natural_A = mkA "normal" | mkA "naturel" ; -- tocheck
lin natural_N = mkN "naturel" ; -- UWN
lin naturalist_N = mkN "naturaliste" ; -- tocheck
lin naturalistic_A = mkA "naturaliste" ; -- tocheck
lin naturalization_N = mkN "naturalisation" feminine ; -- tocheck
lin naturalize_V = mkV "cultiver" | mkV "domestiquer" | mkV "dompter" ; -- UWN
lin naturalize_V2 = mkV2 (mkV "naturaliser") ; -- tocheck
lin nature_N = mkN "nature" feminine ;
lin naturism_N = mkN "naturisme" masculine ; -- tocheck
lin naturist_N = mkN "naturiste" | mkN "nudiste" ; -- UWN
lin naturopathy_N = mkN "naturopathie" feminine ; -- tocheck
lin naughtiness_N = mkN "méchanceté" ; -- UWN
lin naughty_A = mkA "méchant" | mkA "risqué" ; -- tocheck
lin naumachy_N = mkN "naumachie" ; -- UWN
lin nauru_PN = mkPN "Nauru" ; -- status=guess src=geonames
lin nausea_N = mkN "haut-le-coeur" masculine | mkN "nausée" feminine | mkN "dégoût" masculine ; -- tocheck
lin nauseating_A = mkA "nauséabond" | mkA "nauséeux" | mkA "répugnant" | mkA "écœurant" ; -- UWN
lin nauseous_A = mkA "nauséeux" ; -- tocheck
lin nautical_A = mkA "nautique" ; -- tocheck
lin nautilus_N = mkN "nautilus" masculine ; -- tocheck
lin naval_A = mkA "naval" ; -- tocheck
lin nave_N = mkN "nef" feminine ; -- tocheck
lin navel_N = mkN "nombril" masculine ; -- tocheck
lin navigability_N = mkN "navigabilité" feminine ; -- tocheck
lin navigable_A = mkA "navigable" ; -- tocheck
lin navigate_V2 = mkV2 (mkV "naviguer") ; -- tocheck
lin navigation_N = mkN "navigation" feminine ; -- tocheck
lin navvy_N = mkN "Peon" | mkN "galérien" | mkN "peon" ; -- UWN
lin navy_N = mkN "bleu_marine" | mkN "marine" ; -- UWN
lin nawab_N = mkN "nabab" | mkN "nawab" ; -- UWN
lin nay_Adv = mkAdv "non" ; -- UWN
lin nay_N = mkN "non" ; -- UWN
lin ne'er_Adv = mkAdv "jamais" ; -- UWN
lin ne_plus_ultra_N = mkN "perfection" ; -- UWN
lin neanderthal_A = mkA "néandertalien" ; -- tocheck
lin near_A = L.near_A ;
lin near_Adv = mkAdv "près" ; -- tocheck
lin near_Prep = variants {} ; --
lin near_V2 = mkV2 (mkV "approcher") ; -- tocheck
lin nearby_A = mkA "proche" ; -- tocheck
lin nearby_Adv = variants {} ; --
lin nearly_Adv = adjAdv near_A ; -- -- derived
lin nearness_N = mkN "proximité" | mkN "voisinage" ; -- UWN
lin near_sighted_A = mkA "myope" ; -- UWN
lin neat_A = mkA "pur" | mkA "net" ; -- tocheck
lin neath_PN = mkPN "Neath" ; -- status=guess src=geonames
lin nebuchadnezzar_N = mkN "nabuchodonosor" ; -- UWN
lin nebula_N = mkN "nébuleuse" ; -- tocheck
lin nebulous_A = mkA "nébuleux" ; -- tocheck
lin necessary_A = mkA "nécessaire" ;
lin necessary_N = mkN "besoin" | mkN "condition" | mkN "demande" | mkN "exigence" | mkN "nécessaire" | mkN "nécessité" | mkN "prescription" ; -- UWN
lin necessity_N = mkN "nécessité" | mkN "nécessité" feminine ; -- tocheck
lin neck_N = L.neck_N ;
lin necker_N = mkN "necker" ; -- UWN
lin necklace_N = mkN "collier" masculine ; -- tocheck
lin neckline_N = mkN "décolleté" ; -- UWN
lin necktie_N = mkN "cravate" feminine ; -- tocheck
lin necrology_N = mkN "nécrologie" feminine ; -- tocheck
lin necrolysis_N = mkN "nécrolyse" ; -- UWN
lin necromancy_N = mkN "nécromancie" feminine ; -- tocheck
lin necrophagia_N = mkN "nécrophagie" ; -- UWN
lin necrophilia_N = mkN "nécrophilie" feminine ; -- tocheck
lin necropolis_N = mkN "nécropole" feminine ; -- tocheck
lin necrosis_N = mkN "nécrose" feminine ; -- tocheck
lin necrotic_A = mkA "nécrotique" ; -- tocheck
lin nectar_N = mkN "nectar" masculine ; -- tocheck
lin nectarine_N = mkN "nectarine" feminine ; -- tocheck
lin nectary_N = mkN "nectaire" masculine ; -- tocheck
lin nee_A = mkA "née" ; -- tocheck
lin need_N = mkN "besoin" masculine ;
lin need_V = mkV "nécessiter" ;
lin need_V2 = mkV2 (mkV (mkV I.avoir_V2) "besoin") ParadigmsFre.genitive ;
lin need_VV = deVV (mkV (mkV I.avoir_V2) "besoin") ;
lin needful_A = mkA "nécessaire" | mkA "requis" ; -- UWN
lin needle_N = mkN "aiguille" feminine ; -- tocheck
lin needle_V2 = mkV2 (mkV I.coudre_V2) | mkV2 (mkV "taquiner") ; -- tocheck
lin needlefish_N = mkN "aiguillette" feminine ; -- tocheck
lin needless_A = mkA "superflu" ; -- tocheck
lin needlewoman_N = mkN "couturier" | mkN "couturière" ; -- UWN
lin needlework_N = mkN "ouvrage" masculine ; -- tocheck
lin nefarious_A = mkA "infâme" ; -- tocheck
lin negation_N = mkN "négation" feminine ; -- tocheck
lin negative_A = mkA "négatif" ; -- tocheck
lin negative_N = mkN "négatif" masculine ; -- tocheck
lin negativist_N = mkN "défaitiste" ; -- UWN
lin neglect_N = mkN "négligence" feminine | mkN "négligence" ; -- tocheck
lin neglect_V2 = mkV2 (mkV "négliger") ; -- tocheck
lin neglectful_A = mkA "négligent" ; -- tocheck
lin neglectfulness_N = mkN "abandon" | mkN "négligence" | mkN "négligence_coupable" ; -- UWN
lin negligee_N = mkN "déshabillé" | mkN "peignoir" ; -- UWN
lin negligence_N = mkN "incurie" | mkN "négligence" ; -- UWN
lin negligent_A = mkA "négligent" | mkA "distrait" ; -- tocheck
lin negligible_A = mkA "négligeable" ; -- tocheck
lin negotiable_A = mkA "assignable" | mkA "négociable" | mkA "transférable" ; -- UWN
lin negotiate_V = mkV "négocier" ; -- UWN
lin negotiate_V2 = mkV2 (mkV "négocier") ; -- tocheck
lin negotiate_VV = mkvVV "négocier" ; -- UWN
lin negotiation_N = mkN "négociation" feminine ; -- tocheck
lin negotiator_N = mkN "négociateur" masculine ; -- tocheck
lin negress_N = mkN "négresse" feminine ; -- tocheck
lin negro_A = mkA "nègre" ; -- UWN
lin negroid_A = mkA "négroïde" ; -- UWN
lin negus_N = mkN "négus" ; -- UWN
lin neigh_N = mkN "hennissement" masculine ; -- tocheck
lin neigh_V = mkV (mkV "hennir") ; -- tocheck
lin neighbour_N = mkN "voisin" masculine ; -- tocheck
lin neighbourhood_N = mkN "voisinage" masculine ; -- tocheck
lin neighbouring_A = variants {} ; --
lin neither_Adv = variants {} ; --
lin neither_Det = variants {} ; --
lin nekton_N = mkN "necton" masculine ; -- tocheck
lin nelson_PN = mkPN "Nelson" ; -- status=guess src=geonames
lin nem_con_Adv = mkAdv "unanimement" ; -- UWN
lin nematode_N = mkN "nématode" masculine ; -- tocheck
lin neoclassic_A = mkA "néo-classique" | mkA "néoclassique" ; -- UWN
lin neoclassicism_N = mkN "néoclassicisme" masculine ; -- tocheck
lin neocolonialism_N = mkN "néo-colonialisme" | mkN "néocolonialisme" ; -- UWN
lin neoconservative_N = mkN "néo-conservateur" ; -- UWN
lin neodymium_N = mkN "néodyme" masculine ; -- tocheck
lin neoliberalism_N = mkN "néolibéralisme" masculine ; -- tocheck
lin neolithic_A = mkA "neolithique" ; -- UWN
lin neologism_N = mkN "néologisme" masculine ; -- tocheck
lin neon_N = mkN "néon" masculine ; -- tocheck
lin neonatal_A = mkA "néonatal" ; -- UWN
lin neonate_N = mkN "nouveau-né" masculine ; -- tocheck
lin neonatology_N = mkN "néonatologie" feminine ; -- tocheck
lin neophyte_N = mkN "néophyte" ; -- tocheck
lin neoplasia_N = mkN "néoplasie" | mkN "néoplasme" ; -- UWN
lin neoplasm_N = mkN "néoplasme" masculine ; -- tocheck
lin neoplastic_A = mkA "néoplastique" ; -- tocheck
lin neoprene_N = mkN "néoprène" masculine ; -- tocheck
lin neoteny_N = mkN "néoténie" feminine ; -- tocheck
lin nepal_PN = mkPN "Népal" ; -- status=guess src=geonames
lin nepaliFem_N = variants {} ; ---- sense to be split
lin nepaliMasc_N = variants {} ; ---- sense to be split
lin nepheline_N = mkN "néphéline" | mkN "néphélite" ; -- UWN
lin nephelinite_N = mkN "néphélinite" ; -- tocheck
lin nephew_N = mkN "neveu" masculine ; -- tocheck
lin nephritis_N = mkN "néphrite" feminine ; -- tocheck
lin nephrocalcinosis_N = mkN "néphrocalcinose" ; -- UWN
lin nephrology_N = mkN "néphrologie" feminine ; -- tocheck
lin nephron_N = mkN "néphron" masculine ; -- tocheck
lin nephrosclerosis_N = mkN "néphro-angiosclérose" ; -- UWN
lin nephrotoxic_A = mkA "néphrotoxique" ; -- tocheck
lin nephrotoxin_N = mkN "néphrotoxine" feminine ; -- tocheck
lin nepotism_N = mkN "népotisme" masculine ; -- tocheck
lin neptunium_N = mkN "neptunium" masculine ; -- tocheck
lin nerd_N = mkN "nerd" masculine ; -- tocheck
lin nerve_N = mkN "toupet" masculine | mkN "nervure" | mkN "nerf" masculine ; -- tocheck
lin nerveless_A = mkA "cool" ; -- UWN
lin nervous_A = mkA "nerveux" ; -- tocheck
lin nervousness_N = mkN "nervosité" ; -- tocheck
lin ness_N = mkN "cap" | mkN "cape" | mkN "ness" ; -- UWN
lin nest_N = mkN "repaire" masculine | mkN "nid" masculine | mkN "refuge" masculine ; -- tocheck
lin nest_V = mkV (mkV "nicher") | mkV (mkV "emménager") | mkV (reflV (mkV "emboîter")) | mkV (mkV "emboîter") ; -- tocheck
lin nestle_V2 = mkV2 (reflV (mkV "pelotonner")) ; -- tocheck
lin nestling_N = mkN "oisillon" masculine ; -- tocheck
lin neston_PN = mkPN "Neston" ; -- status=guess src=geonames
lin net_A = mkA "net" ; -- tocheck
lin net_N = mkN "réseau" masculine | mkN "filet" masculine | mkN "netto" masculine ; -- tocheck
lin netball_N = mkN "netball" masculine ; -- tocheck
lin nether_A = mkA "souterrain" | mkA "inférieur" ; -- tocheck
lin netherlands_PN = mkPN "Pays-Bas" ; -- status=guess src=geonames
lin netley_PN = mkPN "Netley" ; -- status=guess src=geonames
lin nett_A = mkA "réseau" ; -- UWN
lin nettle_N = mkN "ortie" feminine ; -- tocheck
lin nettle_V2 = mkV2 (mkV "piquer") ; -- tocheck
lin network_N = mkN "réseau" masculine | mkN "tissus" masculine ; -- tocheck
lin neural_A = mkA "neuronal" ; -- UWN
lin neuralgia_N = mkN "névralgie" ; -- UWN
lin neuralgic_A = mkA "névralgique" ; -- tocheck
lin neurinoma_N = mkN "neurinome" ; -- UWN
lin neuroanatomy_N = mkN "neuroanatomie" ; -- UWN
lin neurobiology_N = mkN "neurobiologie" ; -- UWN
lin neuroblastoma_N = mkN "neuroblastome" ; -- UWN
lin neurofibromatosis_N = mkN "neurofibromatose" | mkN "neurofibromatoses" ; -- UWN
lin neurogenesis_N = mkN "neurogenèse" ; -- UWN
lin neurogliacyte_N = mkN "Cellule_gliale" | mkN "cellule_gliale" ; -- UWN
lin neurohormone_N = mkN "neurohormone" ; -- UWN
lin neurolinguistics_N = mkN "neurolinguistique" ; -- UWN
lin neurological_A = mkA "neurologique" ; -- tocheck
lin neurologistFem_N = mkN "neurologue" ; -- tocheck
lin neurologistMasc_N = mkN "neurologue" ; -- tocheck
lin neurology_N = mkN "neurologie" feminine ; -- tocheck
lin neuromuscular_A = mkA "neuromusculaire" ; -- tocheck
lin neurophysiology_N = mkN "neurophysiologie" ; -- UWN
lin neuropsychiatry_N = mkN "neuropsychiatrie" ; -- UWN
lin neuroscience_N = mkN "neuroscience" ; -- tocheck
lin neurosis_N = mkN "névrose" feminine ; -- tocheck
lin neurosurgeon_N = mkN "neurochirurgien" masculine ; -- tocheck
lin neurosurgery_N = mkN "neurochirurgie" feminine ; -- tocheck
lin neurotic_A = mkA "névrotique" ; -- tocheck
lin neurotic_N = mkN "névrotique" ; -- tocheck
lin neurotoxin_N = mkN "neurotoxine" feminine ; -- tocheck
lin neuss_PN = mkPN "Neuss" ; -- status=guess src=geonames
lin neuter_A = mkA "neutre" | mkA "intransitif" | mkA "asexuel" | mkA "impartial" ; -- tocheck
lin neuter_N = mkN "neutre" masculine ; -- tocheck
lin neuter_V2 = mkV2 (mkV "castrer") ; -- tocheck
lin neutral_A = mkA "neutre" ; -- tocheck
lin neutral_N = mkN "neutre" ; -- UWN
lin neutralism_N = mkN "neutralisme" ; -- UWN
lin neutrality_N = mkN "neutralité" feminine ; -- tocheck
lin neutralization_N = mkN "neutralisation" feminine ; -- tocheck
lin neutrino_N = mkN "neutrino" masculine ; -- tocheck
lin neutron_N = mkN "neutron" masculine ; -- tocheck
lin neutropenia_N = mkN "neutropénie" ; -- UWN
lin nevada_PN = mkPN "Nevada" ; -- status=guess src=geonames
lin never_AdV = lin AdV (ss "jamais") ;
lin never_Adv = mkAdv "jamais" ;
lin nevertheless_Adv = mkAdv "néanmoins" ; -- tocheck
lin new_A = L.new_A ;
lin new_cumnock_PN = mkPN "New Cumnock" ; -- status=guess src=geonames
lin new_mills_PN = mkPN "New Mills" ; -- status=guess src=geonames
lin new_orleans_PN = mkPN "La Nouvelle-Orléans" ; -- status=guess src=geonames
lin new_tredegar_PN = mkPN "New Tredegar" ; -- status=guess src=geonames
lin new_windsor_PN = mkPN "New Windsor" ; -- status=guess src=geonames
lin newark_PN = mkPN "Newark" ; -- status=guess src=geonames
lin newarthill_PN = mkPN "Newarthill" ; -- status=guess src=geonames
lin newbiggin_PN = mkPN "Newbiggin" ; -- status=guess src=geonames
lin newborn_A = mkA "nouveau-né" ; -- tocheck
lin newbury_PN = mkPN "Newbury" ; -- status=guess src=geonames
lin newcastle_PN = mkPN "Newcastle" ; -- status=guess src=geonames
lin newcomer_N = mkN "arpette" | mkN "bizut" | mkN "newbie" | mkN "nouveau_venu" ; -- UWN
lin newfangled_A = mkA "neuf" | mkA "nouveau" ; -- UWN
lin newhaven_PN = mkPN "Newhaven" ; -- status=guess src=geonames
lin newmains_PN = mkPN "Newmains" ; -- status=guess src=geonames
lin newmarket_PN = mkPN "Newmarket" ; -- status=guess src=geonames
lin newness_N = mkN "primeur" ; -- UWN
lin newport_PN = mkPN "Newport" ; -- status=guess src=geonames
lin newport_pagnell_PN = mkPN "Newport Pagnell" ; -- status=guess src=geonames
lin newquay_PN = mkPN "Newquay" ; -- status=guess src=geonames
lin newry_PN = mkPN "Newry" ; -- status=guess src=geonames
lin news_N = mkN "nouvelles" | mkN "téléjournal" ; -- tocheck
lin newscaster_N = mkN "présentateur" masculine ; -- tocheck
lin newsflash_N = mkN "flash" ; -- UWN
lin newsletter_N = mkN "cyberlettre" | mkN "infolettre" | mkN "lettre_d'information" ; -- UWN
lin newsmonger_N = mkN "cancan" | mkN "commérage" ; -- UWN
lin newspaper_N = L.newspaper_N ;
lin newspaperman_N = mkN "épistolier" ; -- UWN
lin newspeak_N = mkN "novlangue" ; -- UWN
lin newsprint_N = mkN "Papier_journal" | mkN "journal" | mkN "journaux" | mkN "papier_journal" ; -- UWN
lin newssheet_N = mkN "cyberlettre" | mkN "infolettre" | mkN "lettre_d'information" ; -- UWN
lin newsstand_N = mkN "kiosque" ; -- tocheck
lin newsworthiness_N = mkN "actualité" ; -- UWN
lin newt_N = mkN "salamandridae" | mkN "triton" | mkN "tritons" ; -- UWN
lin newton_N = mkN "newton" masculine ; -- tocheck
lin newtown_PN = mkPN "Newtown" ; -- status=guess src=geonames
lin next_A = mkA "proche" | mkA "prochain" ; -- tocheck
lin nexus_N = mkN "nexus" masculine ; -- tocheck
lin niacin_N = mkN "vitamine_b&lt;sub&gt;3&lt;/sub&gt;" | mkN "vitamine_b3" ; -- UWN
lin nib_N = mkN "bec" masculine | mkN "plume" feminine ; -- tocheck
lin nibble_N = mkN "nibble" ; -- tocheck
lin nibble_V = mkV "prendre" ; -- UWN
lin nibble_V2 = mkV2 (mkV "grignoter") ; -- tocheck
lin nibbler_N = mkN "Nibbler" | mkN "grignoteur" | mkN "nibbler" ; -- UWN
lin nicaragua_PN = mkPN "Nicaragua" ; -- status=guess src=geonames
lin nice_A = mkA "beau" | mkA "bon" ; -- tocheck
lin nice_PN = mkPN "Nice" ; -- status=guess src=geonames
lin niceness_N = mkN "subtilité" ; -- UWN
lin nick_V2 = mkV2 (mkV "piquer") ; -- tocheck
lin nickel_N = mkN "nickel" masculine ; -- tocheck
lin nickel_V2 = mkV2 (mkV "nickeler") ; -- tocheck
lin nicknack_N = mkN "bric-à-brac" ; -- UWN
lin nickname_N = mkN "surnom" masculine ; -- tocheck
lin nickname_V3 = mkV3 (mkV "surnommer") ; -- tocheck
lin nicotine_N = mkN "nicotine" feminine ; -- tocheck
lin nidicolous_A = mkA "nidicole" ; -- tocheck
lin niece_N = mkN "nièce" feminine ; -- tocheck
lin niff_N = mkN "pong" ; -- UWN
lin nigel_PN = mkPN "Nigel" ; -- status=guess src=geonames
lin nigella_N = mkN "nigelle" feminine ; -- tocheck
lin niger_PN = mkPN "Niger" ; -- status=guess src=geonames
lin nigeria_PN = mkPN "Nigeria" ; -- status=guess src=geonames
lin niggard_N = mkN "avare" | mkN "radin" ; -- UWN
lin niggardliness_N = mkN "parcimonie" | mkN "étroitesse" ; -- UWN
lin niggardly_A = mkA "mesquinement" ; -- UWN
lin nigger_N = mkN "bougnoule" ; -- tocheck
lin nigh_Adv = mkAdv "fermer" | mkAdv "proche" | mkAdv "près" ; -- UWN
lin night_N = L.night_N | mkN "soirée" ; ---- split
lin nightcap_N = mkN "bonnet_de_nuit" ; -- UWN
lin nightclub_N = mkN "boite_de_nuit" | mkN "boîte" | mkN "boîte_de_nuit" | mkN "cabaret" | mkN "club" | mkN "disco" | mkN "discothèque" ; -- UWN
lin nightdress_N = mkN "Une_chemise_de_nuit" | mkN "chemise_de_nuit" | mkN "nuisette" | mkN "une_chemise_de_nuit" ; -- UWN
lin nightfall_N = mkN "automne" | mkN "crépuscule" | mkN "tomber" | mkN "tombée_de_la_nuit" ; -- UWN
lin nightgown_N = mkN "Une_chemise_de_nuit" | mkN "chemise_de_nuit" | mkN "nuisette" | mkN "une_chemise_de_nuit" ; -- UWN
lin nightie_N = mkN "Une_chemise_de_nuit" | mkN "chemise_de_nuit" | mkN "nuisette" | mkN "une_chemise_de_nuit" ; -- UWN
lin nightjar_N = mkN "engoulevent" masculine ; -- tocheck
lin nightly_A = variants {} ;
lin nightly_Adv = adjAdv nightly_A ; -- derived
lin nightmare_N = mkN "cauchemar" masculine ; -- tocheck
lin nightmarish_A = mkA "cauchemardesque" ; -- tocheck
lin nightshade_N = mkN "belladone" feminine | mkN "morelle" feminine ; -- tocheck
lin nihilism_N = mkN "nihilisme" ; -- tocheck
lin nihilist_N = mkN "nihiliste" ; -- tocheck
lin nijmegen_PN = mkPN "Nimègue" ; -- status=guess src=geonames
lin nim_N = mkN "jeux_de_nim" ; -- UWN
lin nimble_A = mkA "agile" | mkA "vif" ; -- tocheck
lin nimbleness_N = mkN "agilité" ; -- UWN
lin nimbus_N = mkN "nimbe" masculine | mkN "nimbus" masculine ; -- tocheck
lin nincompoop_N = mkN "crétin" ; -- tocheck
lin ninepin_N = mkN "quille" ; -- UWN
lin ninepins_N = mkN "quille" ; -- UWN
lin ninja_N = mkN "ninja" ; -- tocheck
lin ninjutsu_N = mkN "ninjutsu" ; -- UWN
lin ninth_N = mkN "neuvième" masculine | mkN "neuvième" ; -- tocheck
lin niobium_N = mkN "niobium" masculine ; -- tocheck
lin nip_N = mkN "pincer" ; -- UWN
lin nipper_N = mkN "griffe" | mkN "pince" ; -- UWN
lin nipple_N = mkN "tétine" feminine | mkN "mamelon" masculine ; -- tocheck
lin nippy_A = mkA "fissa" ; -- UWN
lin niqab_N = mkN "niqab" ; -- UWN
lin nirvana_N = mkN "nirvana" masculine ; -- tocheck
lin nit_N = mkN "lente" feminine ; -- tocheck
lin nitpicker_N = mkN "pinailleur" ; -- tocheck
lin nitrate_N = mkN "nitrate" masculine ; -- tocheck
lin nitrazepam_N = mkN "nitrazépam" ; -- UWN
lin nitre_N = mkN "nitre" | mkN "salpêtre" ; -- UWN
lin nitride_N = mkN "nitride" ; -- tocheck
lin nitrile_N = mkN "cyanure" | mkN "groupement_nitrile" | mkN "nitrile" ; -- UWN
lin nitrite_N = mkN "Nitrite" | mkN "nitrite" | mkN "nitrites" ; -- UWN
lin nitrobenzene_N = mkN "nitrobenzol" | mkN "nitrobenzène" | mkN "nitrophène" ; -- UWN
lin nitrogen_N = mkN "azote" masculine ; -- tocheck
lin nitrogenase_N = mkN "nitrogénase" ; -- UWN
lin nitrogenous_A = mkA "azoté" ; -- tocheck
lin nitroglycerine_N = mkN "nitroglycérine" feminine ; -- tocheck
lin nitwit_N = mkN "four" ; -- UWN
lin no_Interj = mkInterj "non" ;
lin no_Quant = S.no_Quant ;
lin no_Utt = S.no_Utt ;
lin nobelium_N = mkN "nobélium" masculine ; -- tocheck
lin nobility_N = mkN "noblesse" feminine | mkN "noblesse" ; -- tocheck
lin nobleFem_N = mkN "noble" ; -- tocheck
lin nobleMasc_N = mkN "noble" ; -- tocheck
lin noble_A = mkA "noble" ; -- tocheck
lin nobleman_N = mkN "noble" ; -- tocheck
lin nobody_NP = S.nobody_NP ;
lin noctambulist_N = mkN "somnambule" ; -- UWN
lin noctilucent_A = mkA "noctiluque" ; -- tocheck
lin nocturia_N = mkN "nycturie" ; -- UWN
lin nocturnal_A = mkA "nocturne" ; -- tocheck
lin nod_V = variants {} ; --
lin nod_off_V = advV OP_nod_V OP_off_Adv ; -- guess-p-verb
lin nod_through_V2 = prepV2 OP_nod_V OP_through_Prep ; -- guess-p-verb
lin node_N = mkN "noeud" masculine ; -- tocheck
lin nodular_A = mkA "nodulaire" ; -- tocheck
lin nodulated_A = mkA "nodulaire" ; -- UWN
lin nodule_N = mkN "nodule" masculine ; -- tocheck
lin noel_PN = mkPN "Noel" ; -- status=guess src=geonames
lin noggin_N = mkN "dôme" | mkN "haricot" | mkN "nouille" ; -- UWN
lin noise_N = mkN "bruit" masculine ; -- tocheck
lin noiseless_A = mkA "silencieux" ; -- tocheck
lin noisome_A = mkA "nocif" | mkA "désagréable" | mkA "répugnant" ; -- tocheck
lin noisy_A = mkA "bruyant" ; -- tocheck
lin noma_N = mkN "noma" ; -- UWN
lin nomad_N = mkN "nomade" ; -- tocheck
lin nomadic_A = mkA "mobile" ; -- UWN
lin nomenclature_N = mkN "nomenclature" feminine ; -- tocheck
lin nomenklatura_N = mkN "nomenklatura" feminine ; -- tocheck
lin nominal_A = mkA "nominal" ; -- tocheck
lin nominalism_N = mkN "nominalisme" ; -- UWN
lin nominate_V2 = variants {} ; --
lin nomination_N = mkN "candidature" | mkN "désignation" ; -- UWN
lin nominative_A = mkA "nominatif" ; -- tocheck
lin nominative_N = mkN "nominatif" ; -- UWN
lin nominator_N = mkN "nominateur" masculine ; -- tocheck
lin nominee_N = mkN "candidat" masculine ; -- tocheck
lin nomogram_N = mkN "nomogramme" masculine ; -- tocheck
lin nomothetic_A = mkA "nomothétique" ; -- UWN
lin nonagon_N = mkN "nonagone" masculine ; -- tocheck
lin nonaligned_A = mkA "non-aligné" ; -- tocheck
lin nonalignment_N = mkN "non-alignement" masculine ; -- tocheck
lin nonce_N = mkN "hapax" masculine ; -- tocheck
lin nonchalance_N = mkN "nonchalance" ; -- UWN
lin nonchalant_A = mkA "décontracté" ; -- tocheck
lin noncombustible_A = mkA "incombustible" ; -- UWN
lin nonconductor_N = mkN "diélectrique" | mkN "isolant" | mkN "isolateur" ; -- UWN
lin nonconformism_N = mkN "anticonformisme" masculine ; -- tocheck
lin nonconformist_A = mkA "anticonformiste" ; -- tocheck
lin nonconformist_N = mkN "anticonformiste" ; -- tocheck
lin none_NP = variants {} ; --
lin nonentity_N = mkN "moins-que-rien" | mkN "personne" ; -- UWN
lin nonetheless_Adv = variants {} ; --
lin nonexistence_N = mkN "non-existence" feminine ; -- tocheck
lin nonextant_A = mkA "éteint" ; -- UWN
lin nonfat_A = mkA "light" ; -- UWN
lin nonfiction_N = mkN "nonfiction" ; -- tocheck
lin nonintervention_N = mkN "non-intervention" ; -- UWN
lin nonlinear_A = mkA "non-linéaire" ; -- tocheck
lin nonmetal_N = mkN "non-métal" masculine ; -- tocheck
lin nonmetallic_A = mkA "non-métal" ; -- UWN
lin nonmigratory_A = mkA "habitant" ; -- UWN
lin nonnegative_A = mkA "positif" ; -- tocheck
lin nonoperational_A = mkA "inactif" ; -- UWN
lin nonpayment_N = mkN "non-paiement" masculine ; -- tocheck
lin nonrational_A = mkA "intuitif" ; -- UWN
lin nonreader_N = mkN "analphabète" | mkN "illettré" ; -- UWN
lin nonsense_N = mkN "non-sens" masculine | mkN "bêtise" | mkN "sottise" ; -- tocheck
lin nonsensical_A = mkA "absurde" ; -- tocheck
lin nonsmoker_N = mkN "non-fumeur" ; -- UWN
lin nonsteroidal_A = mkA "non-stéroïdien" ; -- tocheck
lin nonviolence_N = mkN "non-violence" feminine ; -- tocheck
lin nonwashable_A = mkA "inlavable" ; -- UWN
lin noodle_N = mkN "nouille" feminine ; -- tocheck
lin nook_N = mkN "recoin" masculine | mkN "coin" masculine ; -- tocheck
lin noon_N = mkN "midi" masculine ; -- tocheck
lin noontide_N = mkN "midi" ; -- UWN
lin nor_Conj = mkConj "ni" ; -- tocheck
lin nora_PN = mkPN "Nora" ; -- status=guess src=geonames
lin noradrenaline_N = mkN "noradrénaline" ; -- UWN
lin nordic_A = mkA "nordique" | mkA "septentrional" ; -- UWN
lin norfolk_PN = mkPN "Norfolk" ; -- status=guess src=geonames
lin noria_N = mkN "noria" feminine ; -- tocheck
lin norm_N = mkN "norme" feminine ; -- tocheck
lin normal_A = mkA "normal" ; -- tocheck
lin normal_N = mkN "normale" feminine ; -- tocheck
lin normalization_N = mkN "normalisation" feminine ; -- tocheck
lin normalize_V2 = mkV2 (mkV "normaliser") ; -- tocheck
lin norman_PN = mkPN "Norman" ; -- status=guess src=geonames
lin normanton_PN = mkPN "Normanton" ; -- status=guess src=geonames
lin normative_A = mkA "normatif" ; -- tocheck
lin north_A = mkA "nord" ; -- tocheck
lin north_N = mkN "nord" masculine ; -- tocheck
lin north_northeast_N = mkN "nord-nord-est" masculine ; -- tocheck
lin north_northwest_N = mkN "nord-nord-ouest" ; -- tocheck
lin northallerton_PN = mkPN "Northallerton" ; -- status=guess src=geonames
lin northam_PN = mkPN "Northam" ; -- status=guess src=geonames
lin northampton_PN = mkPN "Northampton" ; -- status=guess src=geonames
lin northeast_Adv = mkAdv "nord-est" ; -- UWN
lin northeast_N = mkN "nord-est" masculine ; -- tocheck
lin northerly_A = variants {} ;
lin northerly_Adv = adjAdv northerly_A ; -- derived
lin northern_A = mkA "septentrional" | mkA "bise" ; -- tocheck
lin northland_N = mkN "Nord" | mkN "North" ; -- UWN
lin northumberland_PN = mkPN "Northumberland" ; -- status=guess src=geonames
lin northwest_Adv = mkAdv "nord-ouest" ; -- UWN
lin northwest_N = mkN "nord-ouest" masculine ; -- tocheck
lin northwich_PN = mkPN "Northwich" ; -- status=guess src=geonames
lin norton_PN = mkPN "Norton" ; -- status=guess src=geonames
lin norway_PN = mkPN "Norvège" ; -- status=guess src=geonames
lin norwegianFem_N = variants {} ; ---- sense to be split
lin norwegianMasc_N = variants {} ; ---- sense to be split
lin norwich_PN = mkPN "Norwich" ; -- status=guess src=geonames
lin nose_N = L.nose_N ;
lin noseband_N = mkN "bridge" | mkN "pont" ; -- UWN
lin nosebleed_N = mkN "saignement_de_nez" | mkN "épistaxis" ; -- UWN
lin nosegay_N = mkN "bouquet" ; -- UWN
lin nosocomial_A = mkA "nosocomial" ; -- UWN
lin nosology_N = mkN "diagnostic" | mkN "les_critères_de_classification_des_maladies" | mkN "nosologie" ; -- UWN
lin nostalgia_N = mkN "nostalgie" feminine ; -- tocheck
lin nostalgic_A = mkA "nostalgique" ; -- tocheck
lin nostoc_N = mkN "nostoc" ; -- UWN
lin nostril_N = mkN "narine" feminine ; -- tocheck
lin nosy_A = mkA "fouineur" ; -- tocheck
lin not_Predet = S.not_Predet ;
lin notability_N = mkN "notabilité" feminine ; -- tocheck
lin notable_A = mkA "remarquable" ; -- tocheck
lin notable_N = mkN "notable" ; -- tocheck
lin notary_N = mkN "notaire" masculine ; -- tocheck
lin notch_N = mkN "cran" masculine | mkN "encoche" feminine | mkN "entaille" feminine ; -- tocheck
lin note_1_N = mkN "annotation" | mkN "note" | mkN "ton" ; -- UWN
lin note_2_N = mkN "annotation" | mkN "note" | mkN "ton" ; -- UWN
lin note_3_N = mkN "note" | mkN "ton" ; -- UWN
lin note_N = mkN "note" | mkN "note" feminine ; -- tocheck
lin note_V = variants {} ; -- mkV2 (mkV "noter") ; -- tocheck
lin note_V2 = mkV2 (mkV "noter") ; -- tocheck
lin note_VS = mkvVS "apercevoir" | mkvVS "mentionner" | mkvVS "noter" | mkvVS "observer" | mkvVS "remarquer" | mkvVS "souligner" ; -- UWN
lin note_down_V2 = prepV2 OP_note_V OP_down_Prep ; -- guess-p-verb
lin notebook_N = mkN "cahier" masculine ; -- tocheck
lin notecase_N = mkN "porte-monnaie" | mkN "portefeuille" | mkN "sacoche" ; -- UWN
lin notepad_N = mkN "bloc-notes" masculine ; -- tocheck
lin noteworthy_A = mkA "notable" | mkA "remarquable" | mkA "saillant" ; -- UWN
lin nothing_NP = S.nothing_NP ;
lin nothingness_N = mkN "néant" masculine | mkN "vide" masculine ; -- tocheck
lin nothosaur_N = mkN "nothosaurus" ; -- UWN
lin notice_N = mkN "observation" ; -- UWN
lin notice_V2 = mkV2 (mkV "remarquer") | mkV2 (reflV (mkV I.apercevoir_V2)) ; -- tocheck
lin notice_VS = variants {} ; -- mkV2 (mkV "remarquer") | mkV2 (reflV (mkV I.apercevoir_V2)) ; -- tocheck
lin noticeable_A = mkA "remarquable" ; -- tocheck
lin notification_N = mkN "notification" feminine ; -- tocheck
lin notify_V2 = mkV2 (mkV "notifier") ; -- tocheck
lin notion_N = mkN "notion" feminine ; -- tocheck
lin notochord_N = mkN "notochorde" ; -- UWN
lin notorious_A = mkA "notoire" ; -- tocheck
lin nottingham_PN = mkPN "Nottingham" ; -- status=guess src=geonames
lin notwithstanding_Adv = mkAdv "cependant" | mkAdv "encore" | mkAdv "nonobstant" | mkAdv "néanmoins" | mkAdv "pourtant" | mkAdv "toutefois" ; -- UWN
lin nougat_N = mkN "nougat" ; -- tocheck
lin nought_N = mkN "zéro" ; -- tocheck
lin noun_N = mkN "nom" masculine ; -- tocheck
lin nourish_V2 = mkV2 (mkV "nourrir") ; -- tocheck
lin nourishment_N = mkN "nourriture" feminine ; -- tocheck
lin nous_N = mkN "nous" masculine ; -- tocheck
lin nov_PN = mkPN "Nov" ; -- status=guess src=geonames
lin nova_N = mkN "nova" feminine ; -- tocheck
lin novara_PN = mkPN "Novare" ; -- status=guess src=geonames
lin novel_A = mkA "nouveau" ; -- tocheck
lin novel_N = mkN "roman" masculine ; -- tocheck
lin novelette_N = mkN "nouvelle" ; -- UWN
lin novelist_N = mkN "romancier" masculine ; -- tocheck
lin novelization_N = mkN "novélisation" ; -- UWN
lin novelty_N = mkN "nouveauté" feminine ; -- tocheck
lin novice_N = mkN "débutant" masculine ; -- tocheck
lin novitiate_N = mkN "débutant" ; -- UWN
lin novokuznetsk_PN = mkPN "Novokouznetsk" ; -- status=guess src=geonames
lin novosibirsk_PN = mkPN "Novossibirsk" ; -- status=guess src=geonames
lin now_Adv = L.now_Adv ;
lin nowadays_Adv = mkAdv "actuellement" ; -- tocheck
lin nowhere_Adv = mkAdv "nulle part" ;
lin noxious_A = mkA "nocif" ; -- tocheck
lin nozzle_N = mkN "bec" masculine ; -- tocheck
lin nth_A = mkA "énième" ; -- tocheck
lin nu_N = mkN "nu" masculine ; -- tocheck
lin nuance_N = mkN "nuance" feminine ; -- tocheck
lin nubile_A = mkA "nubile" ; -- tocheck
lin nuclear_A = mkA "nucléaire" ; -- tocheck
lin nuclease_N = mkN "nucléase" feminine ; -- tocheck
lin nucleic_A = mkA "nucléique" ; -- tocheck
lin nucleolus_N = mkN "nucléole" masculine ; -- tocheck
lin nucleon_N = mkN "nucléon" masculine ; -- tocheck
lin nucleoplasm_N = mkN "nucléoplasme" ; -- UWN
lin nucleoside_N = mkN "Nucléoside" | mkN "nucléoside" | mkN "nucléosides" ; -- UWN
lin nucleosynthesis_N = mkN "nucléosynthèse" feminine ; -- tocheck
lin nucleotide_N = mkN "nucléotide" masculine ; -- tocheck
lin nucleus_N = mkN "noyau" masculine | mkN "noyau" ; -- tocheck
lin nude_A = mkA "nu" ; -- tocheck
lin nude_N = mkN "nu" masculine ; -- tocheck
lin nudge_N = mkN "jogger" ; -- UWN
lin nudism_N = mkN "nudisme" masculine ; -- tocheck
lin nudist_N = mkN "naturiste" | mkN "nudiste" ; -- UWN
lin nudity_N = mkN "nudité" feminine ; -- tocheck
lin nugatory_A = mkA "inefficace" | mkA "insignifiant" ; -- tocheck
lin nuisance_N = mkN "embêtement" masculine ; -- tocheck
lin null_A = mkA "nul" | mkA "zéro" ; -- UWN
lin nullify_V2 = mkV2 (mkV "annuler") ; -- tocheck
lin numb_A = mkA "gourd" ; -- tocheck
lin numb_V2 = mkV2 (mkV "engourdir") ; -- tocheck
lin numbat_N = mkN "numbat" masculine ; -- tocheck
lin number_1_N = L.number_N ;
lin number_2_N = L.number_N ;
lin number_3_N = L.number_N ;
lin number_N = L.number_N ;
lin number_V2 = mkV2 (mkV "numéroter") ; -- tocheck
lin numberplate_N = mkN "plaque_d'immatriculation" ; -- UWN
lin numbness_N = mkN "engourdissement" masculine ; -- tocheck
lin numen_N = mkN "numen" ; -- UWN
lin numerable_A = mkA "dénombrable" | mkA "énumérable" ; -- UWN
lin numeral_A = mkA "chiffre" | mkA "numéral" | mkA "numérique" ; -- UWN
lin numeral_N = mkN "chiffre" masculine ; -- tocheck
lin numeration_N = mkN "numération" feminine ; -- tocheck
lin numerator_N = mkN "numérateur" masculine ; -- tocheck
lin numeric_A = mkA "numérique" ; -- tocheck
lin numerical_A = mkA "numérique" ; -- tocheck
lin numerologistFem_N = variants {} ; ---- sense to be split
lin numerologistMasc_N = variants {} ; ---- sense to be split
lin numerology_N = mkN "numérologie" feminine ; -- tocheck
lin numerous_A = mkA "nombreux" ; -- tocheck
lin numerousness_N = mkN "multiplicité" ; -- UWN
lin numismatics_N = mkN "numismatique" feminine ; -- tocheck
lin numismatist_N = mkN "numismate" ; -- tocheck
lin nummulite_N = mkN "nummulitidae" ; -- UWN
lin nun_N = mkN "nonne" feminine ; -- tocheck
lin nuncio_N = mkN "nonce" masculine ; -- tocheck
lin nuneaton_PN = mkPN "Nuneaton" ; -- status=guess src=geonames
lin nuptial_A = mkA "nuptial" ; -- tocheck
lin nurse_N = mkN "infirmière" feminine | mkN "nourrice" feminine ; -- tocheck
lin nurse_V2 = mkV2 (mkV "allaiter") | mkV2 (mkV "soigner") ; -- tocheck
lin nursemaid_N = mkN "nounou" feminine ; -- tocheck
lin nursery_N = mkN "crèche" feminine | mkN "pépinière" masculine ; -- tocheck
lin nurseryman_N = mkN "pépiniériste" ; -- tocheck
lin nursing_A = variants {} ; --
lin nursing_N = variants {} ; --
lin nut_N = mkN "fou" masculine | mkN "couille" feminine | mkN "écrou" masculine ; -- tocheck
lin nutation_N = mkN "nutation" feminine ; -- tocheck
lin nutcracker_N = mkN "casse-noix" masculine ; -- tocheck
lin nuthatch_N = mkN "sittelle" feminine ; -- tocheck
lin nutmeg_N = mkN "muscadier" masculine ; -- tocheck
lin nutrient_A = mkA "nutriment" ; -- tocheck
lin nutrient_N = mkN "nutriment" masculine ; -- tocheck
lin nutriment_N = mkN "aliment" | mkN "alimentation" | mkN "nourriture" | mkN "nutriment" | mkN "nutrition" ; -- UWN
lin nutrition_N = mkN "nutrition" feminine ; -- tocheck
lin nutritional_A = mkA "alimentaire" ; -- tocheck
lin nutritious_A = mkA "nutriment" ; -- UWN
lin nutritive_A = mkA "nutriment" ; -- UWN
lin nuts_A = mkA "cinglé" ; -- tocheck
lin nutshell_N = mkN "coquille" ; -- UWN
lin nutty_A = mkA "cinglé" ; -- tocheck
lin nyctalopia_N = mkN "Héméralopie" | mkN "cécité_nocturne" | mkN "héméralopie" ; -- UWN
lin nyctophobia_N = mkN "nyctophobie" ; -- UWN
lin nylon_N = mkN "nylon" masculine ; -- tocheck
lin nymph_N = mkN "nymphe" feminine ; -- tocheck
lin nymphalid_N = mkN "nymphalidé" ; -- tocheck
lin nymphet_N = mkN "nymphette" feminine ; -- tocheck
lin nympho_N = mkN "nymphomane" | mkN "saute-au-paf" ; -- UWN
lin nymphomania_N = mkN "nymphomanie" feminine ; -- tocheck
lin nymphomaniac_A = mkA "nymphomane" ; -- tocheck
lin nymphomaniac_N = mkN "nymphomane" feminine ; -- tocheck
lin nymphomaniacal_A = mkA "nymphomane" ; -- UWN
lin nystagmus_N = mkN "nystagmus" ; -- UWN
lin o'er_Adv = mkAdv "outre" ; -- UWN
lin oaf_N = mkN "crétin" ; -- tocheck
lin oak_N = mkN "chêne" masculine | mkN "chêne" ; -- tocheck
lin oakengates_PN = mkPN "Oakengates" ; -- status=guess src=geonames
lin oakum_N = mkN "étoupe" ; -- tocheck
lin oar_N = mkN "rame" ; -- tocheck
lin oarsman_N = mkN "avironneur" | mkN "rameur" ; -- UWN
lin oasis_N = mkN "oasis" feminine ; -- tocheck
lin oat_N = mkN "avoine" feminine ; -- tocheck
lin oath_N = mkN "juron" masculine | mkN "serment" masculine ; -- tocheck
lin oatmeal_N = mkN "gruau" masculine | mkN "grège" masculine ; -- tocheck
lin oban_PN = mkPN "Oban" ; -- status=guess src=geonames
lin obdurate_A = mkA "opiniâtre" ; -- tocheck
lin obedience_N = mkN "obéissance" feminine ; -- tocheck
lin obedient_A = mkA "obéissant" ; -- tocheck
lin obeisance_N = mkN "obéissance" ; -- UWN
lin obelisk_N = mkN "obélisque" masculine ; -- tocheck
lin oberhausen_PN = mkPN "Oberhausen" ; -- status=guess src=geonames
lin obese_A = mkA "obèse" ; -- tocheck
lin obesity_N = mkN "obésité" feminine ; -- tocheck
lin obey_V = mkV "obéir" ; -- UWN
lin obey_V2 = mkV2 (mkV "obéir") ; -- tocheck
lin obfuscate_V2 = mkV2 (mkV "obscurcir") ; -- tocheck
lin obi_N = mkN "obi" masculine ; -- tocheck
lin obituary_N = mkN "nécrologie" feminine ; -- tocheck
lin object_N = mkN "objet" masculine ; -- tocheck
lin object_V = variants {} ; -- mkV2 (reflV (mkV "opposer")) ; -- tocheck
lin object_V2 = mkV2 (reflV (mkV "opposer")) ; -- tocheck
lin objection_N = mkN "objection" feminine ; -- tocheck
lin objective_A = mkA "objectif" ; -- tocheck
lin objective_N = mkN "objectif" masculine ; -- tocheck
lin objectivity_N = mkN "objectivité" feminine ; -- tocheck
lin oblateness_N = mkN "ellipticité" ; -- UWN
lin oblation_N = mkN "oblation" feminine ; -- tocheck
lin obligation_N = mkN "obligation" feminine | mkN "engagement" masculine ; -- tocheck
lin obligatory_A = mkA "obligatoire" ; -- tocheck
lin oblige_V2 = variants {} ; -- mkV2V (mkV "imposer") ; -- tocheck
lin oblige_V2V = mkV2V (mkV "imposer") ; -- tocheck
lin obliging_A = mkA "affable" ; -- UWN
lin obliquity_N = mkN "obliquité" feminine ; -- tocheck
lin oblivion_N = mkN "oubli" masculine | mkN "oubli" ; -- tocheck
lin oblivious_A = mkA "distrait" | mkA "ignorant" ; -- tocheck
lin obliviousness_N = mkN "oubli" ; -- UWN
lin oblong_A = mkA "oblong" ; -- tocheck
lin obloquy_N = mkN "opprobre" masculine ; -- tocheck
lin obnoxious_A = mkA "ennuyeux" ; -- tocheck
lin oboe_N = mkN "hautbois" masculine ; -- tocheck
lin oboist_N = mkN "hautboïste" ; -- tocheck
lin obolus_N = mkN "obole" ; -- UWN
lin obscene_A = mkA "obscène" ; -- tocheck
lin obscenity_N = mkN "obscénité" feminine ; -- tocheck
lin obscurantism_N = mkN "obscurantisme" masculine ; -- tocheck
lin obscurantist_N = mkN "obscurantiste" ; -- UWN
lin obscure_A = mkA "sibyllin" | mkA "obscur" ; -- tocheck
lin obscure_V2 = mkV2 (mkV "obscurcir") ; -- tocheck
lin obscureness_N = mkN "obscurité" ; -- UWN
lin obscurity_N = mkN "obscurité" feminine ; -- tocheck
lin obsequious_A = mkA "obséquieux" ; -- tocheck
lin observable_A = mkA "observable" ; -- tocheck
lin observance_N = mkN "observance" ; -- tocheck
lin observation_N = mkN "observation" feminine | mkN "remarque" feminine ; -- tocheck
lin observatory_N = mkN "observatoire" masculine ; -- tocheck
lin observe_V2 = mkV2 (mkV "observer") | mkV2 (mkV "respecter") ; -- tocheck
lin observe_VS = variants {} ; -- mkV2 (mkV "observer") | mkV2 (mkV "respecter") ; -- tocheck
lin observer_N = mkN "observateur" masculine ; -- tocheck
lin obsession_N = mkN "obsession" feminine ; -- tocheck
lin obsessive_A = mkA "obsessif" ; -- tocheck
lin obsessive_N = mkN "obsédé" masculine ; -- tocheck
lin obsidian_N = mkN "obsidienne" feminine ; -- tocheck
lin obsolescence_N = mkN "désuétude" | mkN "obsolescence" | mkN "vieillisement" ; -- UWN
lin obsolescent_A = mkA "obsolescent" ; -- tocheck
lin obsolete_A = mkA "obsolète" ; -- tocheck
lin obsoleteness_N = mkN "désuétude" feminine ; -- tocheck
lin obstacle_N = mkN "obstacle" ; -- tocheck
lin obstetrician_N = mkN "gynécologue" masculine ; -- tocheck
lin obstetrics_N = mkN "obstétrique" ; -- tocheck
lin obstinacy_N = mkN "entêtement" masculine ; -- tocheck
lin obstinate_A = mkA "obstiné" ; -- tocheck
lin obstruct_V2 = mkV2 (mkV "obstruer") | mkV2 (mkV "bloquer") ; -- tocheck
lin obstructionist_N = mkN "empêcheur" | mkN "obstructionniste" ; -- UWN
lin obstructive_A = mkA "obstructif" ; -- UWN
lin obtain_V = mkV "avoir" | mkV "obtenir" | mkV "recevoir" ; -- UWN
lin obtain_V2 = mkV2 (mkV I.obtenir_V2) | mkV2 (reflV (mkV "établir")) | mkV2 (mkV I.avoir_V2) | mkV2 (mkV "réussir") ; -- tocheck
lin obtainable_A = mkA "accessible" ; -- UWN
lin obtainment_N = mkN "obtention" ; -- UWN
lin obtrude_V = mkV "transparaître" ; -- UWN
lin obtrude_V2 = mkV2 (mkV "empiéter") ; -- tocheck
lin obtuse_A = mkA "sourd" | mkA "obtus" ; -- tocheck
lin obverse_N = mkN "avers" ; -- UWN
lin obvious_A = mkA "évident" ; -- tocheck
lin ocarina_N = mkN "ocarina" masculine ; -- tocheck
lin occasion_N = mkN "occasion" feminine ; -- tocheck
lin occasional_A = mkA "occasionnel" ; -- tocheck
lin occidental_A = mkA "occidental" ; -- tocheck
lin occipital_A = mkA "occipital" ; -- UWN
lin occult_A = mkA "occulte" ; -- tocheck
lin occult_N = mkN "occulte" ; -- tocheck
lin occultism_N = mkN "occultisme" masculine ; -- tocheck
lin occultist_N = mkN "occultiste" ; -- UWN
lin occupancy_N = mkN "occupation" ; -- UWN
lin occupant_N = mkN "occupant" masculine | mkN "habitant" masculine ; -- tocheck
lin occupation_N = mkN "occupation" feminine ; -- tocheck
lin occupational_A = variants {} ; --
lin occupy_V = variants {} ; -- mkV2 (mkV "occuper") ; -- tocheck
lin occupy_V2 = mkV2 (mkV "occuper") ; -- tocheck
lin occur_V = mkV (reflV (mkV I.produire_V2)) | mkV (mkV "arriver") | mkV (reflV (mkV "retrouver")) ; -- tocheck
lin occur_to_V2 = prepV2 OP_occur_V OP_to_Prep ; -- guess-p-verb
lin occurrence_N = mkN "occurrence" feminine ; -- tocheck
lin ocean_N = mkN "océan" masculine ; -- tocheck
lin oceanic_A = mkA "océanique" ; -- tocheck
lin oceanographer_N = mkN "océanographe" ; -- tocheck
lin oceanography_N = mkN "océanographie" feminine ; -- tocheck
lin ocelot_N = mkN "ocelot" masculine ; -- tocheck
lin ochre_N = mkN "ocre" feminine ; -- tocheck
lin ochronosis_N = mkN "alcaptonurie" | mkN "ochronose" ; -- UWN
lin octagon_N = mkN "octogone" masculine ; -- tocheck
lin octagonal_A = mkA "octogonal" ; -- tocheck
lin octahedron_N = mkN "octaèdre" masculine ; -- tocheck
lin octal_A = mkA "octal" ; -- UWN
lin octane_N = mkN "octane" masculine ; -- tocheck
lin octangular_A = mkA "octogonal" | mkA "octogone" ; -- UWN
lin octave_N = mkN "octave" ; -- UWN
lin octopus_N = mkN "octopode" ; -- tocheck
lin octroi_N = mkN "octroi" ; -- UWN
lin octuple_A = mkA "octuple" ; -- UWN
lin ocular_A = mkA "oculaire" ; -- tocheck
lin oculist_N = mkN "oculiste" | mkN "ophtalmologiste" ; -- UWN
lin odalisque_N = mkN "odalisque" ; -- tocheck
lin odd_A = mkA "bizarre" | mkA "impair" ; -- tocheck
lin odd_N = variants {} ; --
lin oddity_N = mkN "bizarrerie" feminine ; -- tocheck
lin oddment_N = mkN "bizarrerie" | mkN "curiosité" ; -- UWN
lin oddness_N = mkN "bizarrerie" ; -- UWN
lin ode_N = mkN "ode" feminine ; -- tocheck
lin odessa_PN = mkPN "Odessa" ; -- status=guess src=geonames
lin odious_A = mkA "odieux" ; -- tocheck
lin odometer_N = mkN "odomètre" masculine | mkN "odomètre" ; -- tocheck
lin odontoglossum_N = mkN "odontoglossum" ; -- UWN
lin odoriferous_A = mkA "odorant" ; -- UWN
lin odorless_A = mkA "inodore" ; -- UWN
lin odorous_A = mkA "odorant" ; -- tocheck
lin odour_N = mkN "odeur" feminine ; -- tocheck
lin odourless_A = mkA "inodore" ; -- UWN
lin odyssey_N = mkN "odyssée" feminine ; -- tocheck
lin oesophagus_N = mkN "oesophage" masculine ; -- tocheck
lin oeuvre_N = mkN "oeuvres" | mkN "oeuvre" feminine ; -- tocheck
lin of_Prep = ParadigmsFre.genitive ;
lin of_course_Adv = mkAdv "bien_entendu" | mkAdv "bien_sûr" | mkAdv "naturellement" ; -- UWN
lin off_Adv = mkAdv "dehors" ; ----
lin off_Prep = P.mkPrep ("à part") P.genitive ;
lin offal_N = mkN "corps" masculine | mkN "abats" | mkN "charogne" feminine | mkN "déchets" ; -- tocheck
lin offenbach_PN = mkPN "Offenbach" ; -- status=guess src=geonames
lin offence_N = mkN "crime" | mkN "délit" ; -- UWN
lin offend_V = variants {} ; -- mkV2 (mkV "offenser") ; -- tocheck
lin offend_V2 = mkV2 (mkV "offenser") ; -- tocheck
lin offenderFem_N = mkN "contrevenant" | mkN "malfaiteur" ; -- UWN
lin offenderMasc_N = mkN "offendeur" ; -- tocheck
lin offensive_A = mkA "offensant" | mkA "offensif" ; -- tocheck
lin offensive_N = mkN "offensive" feminine ; -- tocheck
lin offer_N = mkN "offre" feminine | mkN "offre" ; -- tocheck
lin offer_V2 = I.offrir_V2 ;
lin offer_VV = deVV I.offrir_V2 ;
lin offer_up_V = mkV "consacrer" | mkV "offrir" | mkV "proposer" | mkV "sacrifier" ; -- UWN
lin offering_N = mkN "offre" feminine | mkN "offrande" feminine ; -- tocheck
lin offhand_A = mkA "négligent" | mkA "spontanément" ; -- tocheck
lin office_N = mkN "bureau" masculine | mkN "office" masculine ;
lin officer_1_N = mkN "officier" masculine ;
lin officer_2_N = mkN "fonctionnaire" masculine ;
lin officer_3_N = mkN "officier" masculine | mkN "fonctionnaire" masculine ; ----
lin officer_N = mkN "officier" masculine | mkN "fonctionnaire" masculine ;
lin officialFem_N = variants {} ; ---- sense to be split
lin officialMasc_N = mkN "fonctionnaire" ;
lin official_A = mkA "officiel" ; -- tocheck
lin officiate_V = mkV "officier" ; -- UWN
lin officious_A = mkA "occupé" | mkA "officieux" ; -- UWN
lin offprint_N = mkN "séparer" ; -- UWN
lin offset_N = mkN "compensation" | mkN "contrepartie" feminine | mkN "décalage" masculine | mkN "début" masculine ; -- tocheck
lin offset_V2 = mkV2 (mkV "compenser") ; -- tocheck
lin offshoot_N = mkN "dérivé" masculine ; -- tocheck
lin offshore_A = mkA "offshore" ; -- tocheck
lin offside_A = mkA "hors-jeu" ; -- UWN
lin offside_N = mkN "hors-jeu" masculine ; -- tocheck
lin offspring_N = mkN "descendance" | mkN "enfant" | mkN "progéniture" feminine | mkN "enfance" ; -- tocheck
lin oft_Adv = mkAdv "beaucoup" | mkAdv "fréquemment" | mkAdv "souvent" ; -- UWN
lin often_Adv = mkAdv "souvent" ;
lin ogee_N = mkN "doucine" feminine ; -- tocheck
lin ogle_V2 = mkV2 (mkV "reluquer") ; -- tocheck
lin ogre_N = mkN "ogre" ; -- UWN
lin oh_Interj = mkInterj "oh" ; -- tocheck
lin ohm_N = mkN "ohm" masculine ; -- tocheck
lin ohmmeter_N = mkN "ohmmètre" masculine ; -- tocheck
lin oil_N = L.oil_N ;
lin oilcan_N = mkN "burette" feminine ; -- tocheck
lin oiler_N = mkN "navire-citerne" | mkN "pétrolier" | mkN "pétrolier-minéralier" | mkN "tankiste" ; -- UWN
lin oilfield_N = mkN "gisement" | mkN "gisement_de_pétrole" ; -- UWN
lin oiliness_N = mkN "onction" ; -- UWN
lin oilskin_N = mkN "ciré" | mkN "toile_huilée" ; -- UWN
lin oily_A = mkA "onctueux" | mkA "huileux" ; -- tocheck
lin ointment_N = mkN "pommade" feminine ; -- tocheck
lin ok_Interj = variants {} ; --
lin okapi_N = mkN "okapi" masculine ; -- tocheck
lin okay_A = variants {} ; --
lin okay_Adv = variants {} ; --
lin old_A = L.old_A ;
lin old_N = mkN "ancien" | mkN "vieille" | mkN "vieux" ; -- UWN
lin old_fashioned_A = mkA "démodé" ; -- tocheck
lin oldenburg_PN = mkPN "Oldenbourg" ; -- status=guess src=geonames
lin oldham_PN = mkPN "Oldham" ; -- status=guess src=geonames
lin oldness_N = mkN "vieillesse" feminine ; -- tocheck
lin oleander_N = mkN "laurier-rose" masculine ; -- tocheck
lin olecranon_N = mkN "olécrane" masculine ; -- tocheck
lin olfactory_A = mkA "olfactif" ; -- tocheck
lin oligarch_N = mkN "oligarque" ; -- tocheck
lin oligarchic_A = mkA "oligarchique" ; -- tocheck
lin oligarchy_N = mkN "oligarchie" feminine ; -- tocheck
lin oligodendrocyte_N = mkN "oligodendrocyte" ; -- UWN
lin oligopoly_N = mkN "Oligopole" | mkN "oligopole" ; -- UWN
lin oligosaccharide_N = mkN "Oligosaccharide" | mkN "oligosaccharide" ; -- UWN
lin olive_N = mkN "olive" feminine ; -- tocheck
lin olivenite_N = mkN "Olivénite" | mkN "olivénite" ; -- UWN
lin oliver_PN = mkPN "Oliver" ; -- status=guess src=geonames
lin olivia_PN = mkPN "Olivia" ; -- status=guess src=geonames
lin olivine_N = mkN "olivine" feminine ; -- tocheck
lin oman_PN = mkPN "Oman" ; -- status=guess src=geonames
lin ombudsman_N = mkN "médiateur" ; -- tocheck
lin omega_N = mkN "oméga" masculine ; -- tocheck
lin omelet_N = mkN "omelette" ; -- UWN
lin omelette_N = mkN "omelette" feminine ; -- tocheck
lin omen_N = mkN "présage" masculine ; -- tocheck
lin omentum_N = mkN "omentum" ; -- UWN
lin omicron_N = mkN "omicron" masculine ; -- tocheck
lin ominous_A = mkA "sinistre" ; -- tocheck
lin omission_N = mkN "omission" feminine ; -- tocheck
lin omit_V2 = mkV2 (mkV I.omettre_V2) ; -- tocheck
lin ommastrephes_N = mkN "ommastrephes" ; -- UWN
lin ommatidium_N = mkN "ommatidie" feminine ; -- tocheck
lin omnibus_N = mkN "omnibus" masculine ; -- tocheck
lin omnidirectional_A = mkA "omnidirectionnel" ; -- tocheck
lin omnipotence_N = mkN "omnipotence" ; -- UWN
lin omnipotent_A = mkA "omnipotent" ; -- tocheck
lin omnipresent_A = mkA "omniprésent" ; -- tocheck
lin omniscience_N = mkN "omniscience" ; -- tocheck
lin omniscient_A = mkA "omniscient" ; -- tocheck
lin omnivore_N = mkN "omnivore" masculine ; -- tocheck
lin omnivorous_A = mkA "omnivore" ; -- tocheck
lin omsk_PN = mkPN "Omsk" ; -- status=guess src=geonames
lin on_Adv = mkAdv "là-dessus" ; ----
lin on_Prep = S.on_Prep ;
lin onager_N = mkN "onagre" masculine ; -- tocheck
lin once_Adv = mkAdv "une fois" ;
lin once_Subj = variants {} ; --
lin onchocerciasis_N = mkN "onchocercose" ; -- UWN
lin oncidium_N = mkN "oncidium" | mkN "oncidiums" ; -- UWN
lin oncogene_N = mkN "Oncogène" | mkN "oncogène" | mkN "oncogènes" ; -- UWN
lin oncologist_N = mkN "oncologue" masculine ; -- tocheck
lin oncology_N = mkN "oncologie" feminine ; -- tocheck
lin oncoming_N = mkN "attaque" ; -- UWN
lin one_eyed_A = mkA "borgne" ; -- tocheck
lin oneiric_A = mkA "onirique" ; -- tocheck
lin oneness_N = mkN "union" | mkN "unité" ; -- UWN
lin onerous_A = mkA "ardu" | mkA "casse-cul" | mkA "emmerdant" | mkA "fastidieux" | mkA "lourd" | mkA "onéreux" | mkA "pesant" | mkA "pénible" | mkA "écrasant" ; -- UWN
lin ongoing_A = mkA "continuel" | mkA "actuel" ; -- tocheck
lin onion_N = mkN "oignon" masculine ; -- tocheck
lin onlooker_N = mkN "badaud" masculine ; -- tocheck
lin only_Adv = mkAdv "seulement" ;
lin only_Predet = S.only_Predet ;
lin onomastics_N = mkN "onomastique" feminine ; -- tocheck
lin onomatopoeia_N = mkN "onomatopée" feminine ; -- tocheck
lin onomatopoeic_A = mkA "onomatopéique" ; -- tocheck
lin onrush_N = mkN "assaut" | mkN "attaque" ; -- UWN
lin onset_N = mkN "onset" | mkN "attaque" ; -- tocheck
lin onslaught_N = mkN "assaut" masculine | mkN "assaut" ; -- tocheck
lin ontario_PN = mkPN "Ontario" ; -- status=guess src=geonames
lin onto_Prep = variants {} ; --
lin ontogenetic_A = mkA "ontogénétique" ; -- tocheck
lin ontological_A = mkA "ontologique" ; -- tocheck
lin ontology_N = mkN "ontologie" feminine ; -- tocheck
lin onus_N = mkN "charge" | mkN "fardeau" ; -- UWN
lin onward_Adv = mkAdv "en_avant" ; -- UWN
lin onwards_Adv = mkAdv "en_avant" ; -- UWN
lin onychophoran_N = mkN "Onychophora" | mkN "onychophora" | mkN "onychophores" ; -- UWN
lin onyx_N = mkN "onyx" masculine ; -- tocheck
lin oocyte_N = mkN "ovocyte" masculine ; -- tocheck
lin oogenesis_N = mkN "ovogenèse" ; -- UWN
lin oomph_N = mkN "dynamisme" ; -- UWN
lin oophorectomy_N = mkN "ovariectomie" ; -- UWN
lin oospore_N = mkN "Oospore" | mkN "oospore" ; -- UWN
lin ooze_V2 = mkV2 (mkV "suinter") ; -- tocheck
lin op_PN = mkPN "Op" ; -- status=guess src=geonames
lin op_art_N = mkN "op_art" ; -- UWN
lin opacity_N = mkN "opacité" feminine ; -- tocheck
lin opal_N = mkN "opale" feminine ; -- tocheck
lin opalescence_N = mkN "opalescence" ; -- UWN
lin opaque_A = mkA "opaque" ; -- tocheck
lin opaqueness_N = mkN "opacité" ; -- UWN
lin open_A = mkA "ouvert" ;
lin open_Adv = variants {} ; --
lin open_N = mkN "ouvert" | mkN "ouverture" | mkN "ouvrir" | mkN "pouvoir" | mkN "superficie" | mkN "surface" ; -- UWN
lin open_V = mkV L.open_V2 ;
lin open_V2 = L.open_V2 ;
lin open_up_V = advV OP_open_V OP_up_Adv ; -- guess-p-verb
lin open_up_V2 = prepV2 OP_open_V OP_up_Prep ; -- guess-p-verb
lin open_hearted_A = mkA "accommodant" | mkA "affable" | mkA "amène" | mkA "gentil" ; -- UWN
lin opening_N = mkN "ouverture" feminine | mkN "trou" masculine ; -- tocheck
lin opera_N = mkN "opéra" masculine ; -- tocheck
lin operand_N = mkN "opérande" masculine ; -- tocheck
lin operate_V = variants {} ; -- mkV2 (mkV "opérer") ; -- tocheck
lin operate_V2 = mkV2 (mkV "opérer") ; -- tocheck
lin operate_on_V2 = prepV2 OP_operate_V OP_on_Prep ; -- guess-p-verb
lin operating_N = variants {} ; --
lin operation_N = mkN "opération" feminine ; -- tocheck
lin operational_A = mkA "opérationnel" ; -- UWN
lin operative_N = mkN "agent" | mkN "agent_secret" ; -- UWN
lin operator_N = mkN "opérateur" masculine | mkN "téléphoniste" ; -- tocheck
lin operculum_N = mkN "opercule" masculine ; -- tocheck
lin operetta_N = mkN "opérette" feminine ; -- tocheck
lin operon_N = mkN "opéron" ; -- UWN
lin ophidism_N = mkN "ophidisme" ; -- UWN
lin ophthalmic_A = mkA "ophtalmique" ; -- tocheck
lin ophthalmologist_N = mkN "ophtalmologiste" ; -- tocheck
lin ophthalmology_N = mkN "ophtalmologie" ; -- tocheck
lin ophthalmoscope_N = mkN "ophtalmoscope" ; -- UWN
lin opiate_N = mkN "opiacé" masculine ; -- tocheck
lin opinion_N = mkN "avis" masculine ; -- tocheck
lin opinionated_A = mkA "opiniâtre" ; -- UWN
lin opinionative_A = mkA "opiniâtre" ; -- UWN
lin opium_N = mkN "opium" masculine ; -- tocheck
lin opopanax_N = mkN "opopanax" ; -- UWN
lin opossum_N = mkN "sarigue" feminine ; -- tocheck
lin opp_PN = mkPN "Opp" ; -- status=guess src=geonames
lin opponentFem_N = mkN "adversaire" feminine ; -- tocheck
lin opponentMasc_N = mkN "adversaire" masculine ;
lin opponent_A = mkA "adversaire" | mkA "opposant" ; -- UWN
lin opportune_A = mkA "opportun" ; -- tocheck
lin opportunism_N = mkN "opportunisme" masculine ; -- tocheck
lin opportunistFem_N = mkN "opportuniste" ; -- UWN
lin opportunistMasc_N = mkN "opportuniste" ; -- UWN
lin opportunist_A = mkA "opportuniste" | mkA "profiteur" ; -- UWN
lin opportunity_N = mkN "opportunité" feminine | mkN "occasion" feminine ; -- tocheck
lin oppose_V = variants {} ; -- mkV2 (mkV "opposer") ; -- tocheck
lin oppose_V2 = mkV2 (mkV "opposer") ; -- tocheck
lin opposed_A = variants {} ; --
lin opposite_A = mkA "opposé" ; -- tocheck
lin opposite_Adv = variants {} ; --
lin opposite_N = mkN "contraire" masculine | mkN "adversaire" ; -- tocheck
lin opposition_N = mkN "opposition" feminine ; -- tocheck
lin oppress_V2 = mkV2 (mkV "opprimer") ; -- tocheck
lin oppression_N = mkN "oppression" feminine ; -- tocheck
lin oppressive_A = mkA "tyrannique" ; -- UWN
lin oppressor_N = mkN "oppresseur" masculine ; -- tocheck
lin opprobrious_A = mkA "honteux" | mkA "ignominieux" | mkA "noir" ; -- UWN
lin opprobrium_N = mkN "opprobre" masculine ; -- tocheck
lin opsin_N = mkN "opsine" ; -- UWN
lin opt_V = variants {} ; -- mkV2V (mkV "opter") ; -- tocheck
lin opt_VV = mkvVV "choisir" | mkvVV "décider" | mkvVV "désigner" | mkvVV "opter" | mkvVV "préférer" ; -- UWN
lin optative_N = mkN "optatif" ; -- UWN
lin optical_A = mkA "optique" ; -- tocheck
lin optician_N = mkN "opticien" masculine ; -- tocheck
lin optimal_A = mkA "optimal" ; -- tocheck
lin optimism_N = mkN "optimisme" masculine ; -- tocheck
lin optimistFem_N = mkN "optimiste" feminine ; -- tocheck
lin optimistMasc_N = mkN "optimiste" masculine ; -- tocheck
lin optimistic_A = mkA "optimiste" ; -- tocheck
lin optimization_N = mkN "Optimisation" | mkN "optimisation" ; -- UWN
lin optimum_A = mkA "optimal" ; -- tocheck
lin optimum_N = mkN "optimum" masculine ; -- tocheck
lin option_N = mkN "choix" masculine ; -- tocheck
lin optional_A = mkA "optionnel" ; -- tocheck
lin optometrist_N = mkN "optométriste" ; -- tocheck
lin optometry_N = mkN "optométrie" feminine ; -- tocheck
lin opulence_N = mkN "fortune" | mkN "luxe" | mkN "richesse" | mkN "somptuosité" ; -- UWN
lin opulent_A = mkA "luxueux" | mkA "opulent" | mkA "somptueux" ; -- UWN
lin opus_N = mkN "composition" | mkN "morceau" | mkN "opus" | mkN "pièce" ; -- UWN
lin or_Conj = S.or_Conj ;
lin orach_N = mkN "arroche" ; -- UWN
lin oracle_N = mkN "oracle" ; -- tocheck
lin oral_A = mkA "oral" ; -- tocheck
lin oral_N = mkN "oral" ; -- UWN
lin orange_1_N = variants {} ; --
lin orange_2_N = variants {} ; --
lin orange_A = mkA "orange" ; -- tocheck
lin orange_N = variants {} ; --
lin orangeade_N = mkN "orangeade" feminine ; -- tocheck
lin orangery_N = mkN "orangerie" feminine ; -- tocheck
lin orangutan_N = mkN "orang-outan" masculine ; -- tocheck
lin orate_V = mkV (mkV I.discourir_V2) | mkV (mkV "haranguer") ; -- tocheck
lin oration_N = mkN "oraison" ; -- UWN
lin oratorFem_N = mkN "oratrice" feminine ; -- tocheck
lin oratorMasc_N = mkN "orateur" masculine ; -- tocheck
lin oratorical_A = mkA "oratoire" ; -- UWN
lin oratorio_N = mkN "cantate" | mkN "oratorio" ; -- UWN
lin oratory_N = mkN "oratoire" masculine ; -- tocheck
lin orb_N = mkN "sphère" feminine | mkN "orbe" masculine | mkN "oeil" masculine ; -- tocheck
lin orbiculate_A = mkA "orbiculé" ; -- tocheck
lin orbit_N = mkN "orbite" feminine ; -- tocheck
lin orbital_A = mkA "orbital" ; -- tocheck
lin orchard_N = mkN "verger" masculine ; -- tocheck
lin orchestra_N = mkN "orchestre" masculine ; -- tocheck
lin orchestral_A = mkA "orchestral" ; -- tocheck
lin orchid_N = mkN "orchidée" feminine ; -- tocheck
lin orchis_N = mkN "Testicule" | mkN "couille" | mkN "fou" | mkN "gosse" | mkN "testicule" | mkN "testicules" | mkN "œuf" ; -- UWN
lin orchitis_N = mkN "orchite" ; -- UWN
lin ordeal_N = mkN "épreuve" feminine | mkN "ordalie" feminine ; -- tocheck
lin order_N = mkN "ordre" masculine | mkN "commande" feminine ; --- split
lin order_V = variants {} ; -- mkV2V (mkV "commander") | mkV2V (mkV "ranger") ; -- tocheck
lin order_V2 = variants {} ; -- mkV2V (mkV "commander") | mkV2V (mkV "ranger") ; -- tocheck
lin order_V2V = mkV2V (mkV "commander") | mkV2V (mkV "ranger") ; -- tocheck
lin order_VS = variants {} ; -- mkV2V (mkV "commander") | mkV2V (mkV "ranger") ; -- tocheck
lin ordinal_A = mkA "ordinal" ; -- tocheck
lin ordinal_N = mkN "ordinal" ; -- tocheck
lin ordinance_N = mkN "ordonnance" ; -- tocheck
lin ordinary_A = mkA "ordinaire" ; -- tocheck
lin ordinate_N = mkN "ordonnée" feminine ; -- tocheck
lin ordination_N = mkN "ordination" feminine ; -- tocheck
lin ordnance_N = mkN "artillerie" | mkN "canon" | mkN "fusil" | mkN "munition" | mkN "pistolet" ; -- UWN
lin ore_N = mkN "minerai" masculine ; -- tocheck
lin oregano_N = mkN "origan" | mkN "marjolaine" feminine ; -- tocheck
lin oregon_PN = mkPN "Oregon" ; -- status=guess src=geonames
lin oreo_N = mkN "oreo" ; -- UWN
lin organ_N = mkN "orgue" masculine | mkN "organe" masculine ; -- tocheck
lin organelle_N = mkN "organite" masculine ; -- tocheck
lin organic_A = mkA "organique" | mkA "bio" ; -- tocheck
lin organic_N = mkN "engrais_organique" | mkN "organique" ; -- UWN
lin organisation_N = variants {} ; --
lin organism_N = mkN "organisme" masculine ; -- tocheck
lin organist_N = mkN "organiste" ; -- tocheck
lin organization_N = mkN "organisation" feminine ; -- tocheck
lin organizational_A = variants {} ; --
lin organize_V2 = variants {} ; -- mkV2V (mkV "organiser") ; -- tocheck
lin organize_V2V = mkV2V (mkV "organiser") ; -- tocheck
lin organizer_N = mkN "organiseur" | mkN "organisateur" masculine ; -- tocheck
lin organon_N = mkN "organon" ; -- UWN
lin orgasm_N = mkN "orgasme" masculine ; -- tocheck
lin orgiastic_A = mkA "orgiastique" ; -- tocheck
lin orgy_N = mkN "orgie" feminine | mkN "partouze" feminine ; -- tocheck
lin oriel_N = mkN "bow-window" | mkN "oriel" ; -- UWN
lin orient_N = mkN "hémisphère_est" | mkN "orienter" ; -- UWN
lin orient_V2 = mkV2 (reflV (mkV "orienter")) ; -- tocheck
lin oriental_A = mkA "oriental" ; -- tocheck
lin orientalistFem_N = variants {} ; ---- sense to be split
lin orientalistMasc_N = variants {} ; ---- sense to be split
lin orientation_N = mkN "orientation" feminine ; -- tocheck
lin orifice_N = mkN "orifice" masculine ; -- tocheck
lin origami_N = mkN "origami" masculine ; -- tocheck
lin origanum_N = mkN "origanum" ; -- UWN
lin origin_N = mkN "origine" feminine | mkN "source" feminine ; -- tocheck
lin original_A = mkA "original" ; -- tocheck
lin original_N = mkN "original" masculine ; -- tocheck
lin originality_N = mkN "originalité" feminine ; -- tocheck
lin originate_V = variants {} ; --
lin originate_V2 = variants {} ; --
lin originatorFem_N = mkN "demandeuse" feminine ; -- tocheck
lin originatorMasc_N = mkN "demandeur" masculine ; -- tocheck
lin oriole_N = mkN "loriot" ; -- tocheck
lin orison_N = mkN "oraison" feminine ; -- tocheck
lin orkney_PN = mkPN "Orcades" ; -- status=guess src=geonames
lin orleans_PN = mkPN "Orleans" ; -- status=guess src=geonames
lin ormskirk_PN = mkPN "Ormskirk" ; -- status=guess src=geonames
lin ornament_N = mkN "ornement" masculine ; -- tocheck
lin ornamental_A = mkA "cosmétique" | mkA "décoratif" | mkA "ornemental" ; -- UWN
lin ornamental_N = mkN "ornemental" masculine ; -- tocheck
lin ornamentation_N = mkN "embellissement" ; -- UWN
lin ornery_A = mkA "acariâtre" ; -- UWN
lin ornithine_N = mkN "ornithine" feminine ; -- tocheck
lin ornithological_A = mkA "ornithologique" ; -- tocheck
lin ornithologistFem_N = mkN "ornithologue" feminine ; -- tocheck
lin ornithologistMasc_N = mkN "ornithologue" masculine ; -- tocheck
lin ornithology_N = mkN "ornithologie" feminine ; -- tocheck
lin ornithopod_N = mkN "Ornithopoda" | mkN "ornithopoda" | mkN "ornithopodes" ; -- UWN
lin orogeny_N = mkN "orogenèse" ; -- UWN
lin orologistFem_N = variants {} ; ---- sense to be split
lin orologistMasc_N = variants {} ; ---- sense to be split
lin orotund_A = mkA "rond" ; -- UWN
lin orphan_N = mkN "orphelin" masculine ; -- tocheck
lin orphanage_N = mkN "orphelinat" masculine ; -- tocheck
lin orphrey_N = mkN "orfroi" ; -- UWN
lin orpiment_N = mkN "orpiment" ; -- UWN
lin orthoclase_N = mkN "orthoclase" | mkN "orthose" ; -- UWN
lin orthodontics_N = mkN "orthodontie" ; -- tocheck
lin orthodontist_N = mkN "orthodontiste" ; -- tocheck
lin orthodox_A = mkA "orthodoxe" ; -- tocheck
lin orthodoxy_N = mkN "orthodoxie" feminine ; -- tocheck
lin orthogonal_A = mkA "indépendant" | mkA "orthogonal" ; -- tocheck
lin orthogonality_N = mkN "orthogonalité" ; -- UWN
lin orthography_N = mkN "orthographe" feminine ; -- tocheck
lin orthomolecular_A = mkA "orthomoléculaire" ; -- tocheck
lin orthopaedic_A = mkA "orthopédiste" ; -- UWN
lin orthopaedics_N = mkN "médecine_orthopédique" | mkN "orthopédie" ; -- UWN
lin orthopedist_N = mkN "orthopédiste" ; -- tocheck
lin orthoptics_N = mkN "orthoptie" ; -- UWN
lin orthoptist_N = mkN "orthoptiste" ; -- UWN
lin orthoscope_N = mkN "orthoscope" ; -- UWN
lin orthostatic_A = mkA "orthostatique" ; -- UWN
lin ortolan_N = mkN "ortolan" ; -- tocheck
lin oryx_N = mkN "oryx" ; -- UWN
lin os_N = mkN "os" ; -- UWN
lin oscillate_V = mkV "osciller" | mkV "vibrer" ; -- UWN
lin oscillate_V2 = mkV2 (mkV "osciller") ; -- tocheck
lin oscillation_N = mkN "oscillation" feminine ; -- tocheck
lin oscillator_N = mkN "oscillateur" masculine ; -- tocheck
lin oscillogram_N = mkN "oscillogramme" ; -- UWN
lin oscillograph_N = mkN "oscillographe" ; -- UWN
lin oscitancy_N = mkN "bâillement" | mkN "bâiller" ; -- UWN
lin osier_N = mkN "osier" ; -- UWN
lin oslo_PN = mkPN "Oslo" ; -- status=guess src=geonames
lin osmium_N = mkN "osmium" masculine ; -- tocheck
lin osmosis_N = mkN "osmose" feminine ; -- tocheck
lin osmotic_A = mkA "osmotique" ; -- tocheck
lin osprey_N = mkN "balbuzard" masculine ; -- tocheck
lin osseous_A = mkA "osseux" ; -- tocheck
lin ossett_PN = mkPN "Ossett" ; -- status=guess src=geonames
lin ossification_N = mkN "conformité" ; -- UWN
lin ossuary_N = mkN "ossuaire" masculine ; -- tocheck
lin osteal_A = mkA "osseux" ; -- UWN
lin ostensible_A = mkA "apparent" ; -- tocheck
lin ostentation_N = mkN "ostentation" masculine ; -- tocheck
lin ostentatious_A = mkA "ostentatoire" ; -- tocheck
lin osteoarthritis_N = mkN "arthrose" feminine ; -- tocheck
lin osteoclast_N = mkN "Ostéoclaste" | mkN "ostéoclaste" | mkN "ostéoclastes" ; -- UWN
lin osteocyte_N = mkN "ostéocyte" ; -- UWN
lin osteolysis_N = mkN "ostéolyse" ; -- UWN
lin osteoma_N = mkN "ostéome" ; -- UWN
lin osteomalacia_N = mkN "ostéomalacie" ; -- UWN
lin osteomyelitis_N = mkN "ostéomyélite" feminine ; -- tocheck
lin osteopath_N = mkN "ostéopathe" ; -- UWN
lin osteophyte_N = mkN "ostéophyte" ; -- UWN
lin osteoporosis_N = mkN "ostéoporose" feminine ; -- tocheck
lin osteosarcoma_N = mkN "ostéosarcome" ; -- UWN
lin ostinato_N = mkN "obstinément" | mkN "ostinato" ; -- UWN
lin ostiole_N = mkN "Ostiole" | mkN "ostiole" ; -- UWN
lin ostracism_N = mkN "ostracisme" masculine ; -- tocheck
lin ostracoderm_N = mkN "Ostracoderme" | mkN "ostracoderme" | mkN "ostracodermi" ; -- UWN
lin ostrich_N = mkN "autruche" feminine ; -- tocheck
lin oswestry_PN = mkPN "Oswestry" ; -- status=guess src=geonames
lin other_A = mkA "autre" ;
lin other_N = mkN "autre" masculine ; ---- l'enfer c'est les autres :-)
lin otherness_N = mkN "altérité" feminine ; -- tocheck
lin otherwise_A = mkA "autrement" ; -- UWN
lin otherwise_Adv = mkAdv "autrement" | mkAdv "sinon" ; -- tocheck
lin otherwise_PConj = S.otherwise_PConj ;
lin otic_A = mkA "otique" ; -- tocheck
lin otitis_N = mkN "otite" ; -- tocheck
lin otley_PN = mkPN "Otley" ; -- status=guess src=geonames
lin otology_N = mkN "otologie" feminine ; -- tocheck
lin otosclerosis_N = mkN "Otospongiose" | mkN "otospongiose" ; -- UWN
lin otoscope_N = mkN "otoscope" ; -- UWN
lin ototoxic_A = mkA "ototoxique" ; -- UWN
lin ottawa_PN = mkPN "Ottawa" ; -- status=guess src=geonames
lin otter_N = mkN "loutre" feminine ; -- tocheck
lin ottomanFem_N = mkN "divan" feminine ; -- tocheck
lin ottomanMasc_N = mkN "divan" masculine ; -- tocheck
lin oubliette_N = mkN "Oubliette" | mkN "oubliette" | mkN "oubliettes" ; -- UWN
lin ounce_N = mkN "once" feminine ; -- tocheck
lin oust_V2 = mkV2 (mkV "expulser") ; -- tocheck
lin ouster_N = mkN "limogeage" masculine ; -- tocheck
lin out_Adv = mkAdv "dehors" ;
lin out_N = mkN "retrait" masculine ; -- tocheck
lin out_Prep = variants {} ; --
lin out_V2 = mkV2 (mkV "outer") ; -- tocheck
lin outage_N = mkN "panne" ; -- tocheck
lin outback_N = mkN "outback" ; -- UWN
lin outbreak_N = mkN "irruption" feminine | mkN "éruption" ; -- tocheck
lin outbuilding_N = mkN "dépendance" ; -- tocheck
lin outcast_N = mkN "paria" ; -- tocheck
lin outclass_V2 = mkV2 (mkV "surclasser") ; -- tocheck
lin outcome_N = mkN "issue" feminine ; -- tocheck
lin outcrop_N = mkN "affleurement" masculine ; -- tocheck
lin outdated_A = mkA "périmé" ; -- tocheck
lin outdo_V2 = mkV2 (mkV "surpasser") ; -- tocheck
lin outdoor_A = mkA "dehors" | mkA "extérieur" ; -- UWN
lin outdoors_Adv = mkAdv "dehors" ; -- UWN
lin outdoors_N = mkN "dehors" masculine ; -- tocheck
lin outer_A = mkA "extérieur" ; -- tocheck
lin outfit_N = mkN "maison" feminine | mkN "nécessaire" masculine | mkN "tenue" feminine ; -- tocheck
lin outflow_N = mkN "sortie" feminine ; -- tocheck
lin outhouse_N = mkN "cabanon" masculine ; -- tocheck
lin outing_N = mkN "outing" ; -- tocheck
lin outlandishness_N = mkN "bizarrerie" ; -- UWN
lin outlaw_N = mkN "hors-la-loi" ; -- tocheck
lin outlay_N = mkN "déboursement" | mkN "dépense" | mkN "paiement" ; -- UWN
lin outlet_N = mkN "issue" feminine | mkN "exutoire" masculine ; -- tocheck
lin outlier_N = mkN "lambeau" | mkN "valeur" ; -- tocheck
lin outline_N = mkN "contour" masculine | mkN "synopsis" | mkN "aperçu" masculine | mkN "silhouette" feminine | mkN "ébauche" feminine | mkN "esquisse" feminine | mkN "résumé" masculine ; -- tocheck
lin outline_V2 = mkV2 (mkV "entourer") ; -- tocheck
lin outlook_N = mkN "perspective" | mkN "vue" feminine ; -- tocheck
lin outmoded_A = mkA "dépassé" | mkA "démodé" ; -- tocheck
lin outpost_N = mkN "avant-poste" masculine ; -- tocheck
lin outpouring_N = mkN "déversement" ; -- tocheck
lin output_N = variants {} ; --
lin outrage_N = mkN "colère" feminine | mkN "offence" feminine | mkN "outrage" masculine ; -- tocheck
lin outrage_V2 = mkV2 (mkV "indigner") ; -- tocheck
lin outrageous_A = mkA "outrageant" ; -- tocheck
lin outrageousness_N = mkN "énormité" ; -- UWN
lin outreach_N = mkN "sensibilisation" ; -- tocheck
lin outright_A = mkA "illimité" ; -- UWN
lin outright_Adv = mkAdv "immédiatement" | mkAdv "complètement" | mkAdv "ouvertement" ; -- tocheck
lin outrun_V2 = mkV2 (mkV "dépasser") ; -- tocheck
lin outset_N = mkN "début" ; -- UWN
lin outside_A = mkA "dehors" ; -- tocheck
lin outside_Adv = mkAdv "hors" | mkAdv "dehors" ; -- tocheck
lin outside_N = mkN "extérieur" masculine ; -- tocheck
lin outside_Prep = variants {} ; --
lin outsider_N = mkN "outsider" | mkN "exclu" masculine ; -- tocheck
lin outsize_A = mkA "surdimensionné" ; -- UWN
lin outskirt_N = mkN "périphérie" ; -- UWN
lin outskirts_N = mkN "banlieue" feminine ; -- tocheck
lin outspoken_A = mkA "franc" ; -- tocheck
lin outspokenness_N = mkN "franchise" ; -- UWN
lin outstanding_A = mkA "exceptionnel" | mkA "débiteur" | mkA "saillant" ; -- tocheck
lin outstation_N = mkN "avant-poste" ; -- UWN
lin ouzo_N = mkN "ouzo" masculine ; -- tocheck
lin oval_A = mkA "ovale" ; -- tocheck
lin oval_N = mkN "ovale" masculine ; -- tocheck
lin ovary_N = mkN "ovaire" masculine ; -- tocheck
lin ovate_A = mkA "elliptique" | mkA "ovale" | mkA "ovoïde" ; -- UWN
lin ovation_N = mkN "ovation" feminine ; -- tocheck
lin oven_N = mkN "four" masculine ; -- tocheck
lin over_Adv = mkAdv "fini" ; --- split sense:
lin over_N = mkN "relais" | mkN "silence" | mkN "supérieur" | mkN "sur" ; -- UWN
lin over_Prep = {s = "à travers" ; c = CPrep P_de ; isDir = False} ; --- split sense
lin overactive_A = mkA "hyperactif" ; -- UWN
lin overall_A = variants {} ; --
lin overall_Adv = variants {} ; --
lin overall_N = mkN "blouse" feminine ; -- tocheck
lin overbearing_A = mkA "dominateur" ; -- tocheck
lin overbold_A = mkA "frais" | mkA "impertinent" | mkA "impudent" | mkA "insolent" ; -- UWN
lin overcapitalization_N = mkN "surcapitalisation" ; -- UWN
lin overcapitalize_V2 = mkV2 (mkV "surcapitaliser") ; -- tocheck
lin overcast_A = mkA "couvert" | mkA "nuageux" ; -- tocheck
lin overcharge_V2 = mkV2 (mkV "surcharger") ; -- tocheck
lin overcoat_N = mkN "pardessus" masculine ; -- tocheck
lin overcome_V = variants {} ; -- mkV2 (mkV I.vaincre_V2) ; -- tocheck
lin overcome_V2 = mkV2 (mkV I.vaincre_V2) ; -- tocheck
lin overconfidence_N = mkN "certitude" ; -- UWN
lin overcook_V2 = mkV2 (mkV "surcuire") ; -- tocheck
lin overdose_V = mkV (mkV "surdoser") ; -- tocheck
lin overdraw_V = mkV "agrandir" | mkV "augmenter" | mkV "exagérer" | mkV "étendre" ; -- UWN
lin overeat_V = mkV "bâfrer" | mkV "goinfrer" | mkV "gueuletonner" | mkV "mettre" | mkV "s'empiffrer" ; -- UWN
lin overestimate_V2 = mkV2 (mkV "surestimer") ; -- tocheck
lin overexploitation_N = mkN "surexploitation" | mkN "surutilisation" ; -- UWN
lin overflow_N = mkN "débordement" masculine ; -- tocheck
lin overflow_V2 = mkV2 (mkV "déborder") ; -- tocheck
lin overgenerous_A = mkA "généreux" ; -- UWN
lin overheat_V2 = mkV2 (mkV "échauffer") ; -- tocheck
lin overindulge_V = mkV "bâfrer" | mkV "goinfrer" | mkV "gueuletonner" | mkV "mettre" | mkV "s'empiffrer" ; -- UWN
lin overindulgence_N = mkN "dérive" | mkN "excédent" | mkN "supérieur" ; -- UWN
lin overjealous_A = mkA "jaloux" ; -- UWN
lin overkill_N = mkN "surpuissance" ; -- tocheck
lin overlap_V2 = mkV2 (mkV "chevaucher") | mkV2 (reflV (mkV "chevaucher")) ; -- tocheck
lin overlook_V2 = mkV2 (mkV "surveiller") | mkV2 (mkV "négliger") | mkV2 (mkV "surplomber") ; -- tocheck
lin overly_Adv = mkAdv "trop" ; -- tocheck
lin overmuch_Adv = mkAdv "trop" ; -- UWN
lin overnight_Adv = variants {} ; --
lin overpass_N = mkN "autopont" masculine ; -- tocheck
lin overpay_V = mkV "surpayer" ; -- UWN
lin overplay_V2 = mkV2 (mkV "exagérer") ; -- tocheck
lin overpopulation_N = mkN "surpopulation" feminine ; -- tocheck
lin overpressure_N = mkN "surpression" ; -- UWN
lin overproduction_N = mkN "surproduction" feminine ; -- tocheck
lin overrate_V2 = mkV2 (mkV "surévaluer") ; -- tocheck
lin overreact_V = mkV (reflV (mkV "emporter")) ; -- tocheck
lin overriding_A = mkA "primordial" | mkA "prépondérant" | mkA "souverain" ; -- UWN
lin over_ripe_A = mkA "blet" ; -- UWN
lin overrun_V2 = mkV2 (mkV "exceder") ; -- tocheck
lin oversea_A = mkA "outre-mer" ; -- UWN
lin overseas_A = mkA "outremer" ; -- tocheck
lin overseas_Adv = mkAdv "outre-mer" ; -- tocheck
lin oversee_V2 = mkV2 (mkV "superviser") ; -- tocheck
lin overseer_N = mkN "contremaître" masculine ; -- tocheck
lin overshadow_V2 = mkV2 (mkV "ombrager") ; -- tocheck
lin overshoe_N = mkN "galoche" ; -- UWN
lin oversight_N = mkN "oubli" masculine ; -- tocheck
lin oversize_A = mkA "surdimensionné" ; -- UWN
lin overstatement_N = mkN "agrandissement" | mkN "exagération" ; -- UWN
lin overt_A = variants {} ;
lin overtake_V2 = mkV2 (mkV "dépasser") ; -- tocheck
lin overthrow_V2 = mkV2 (mkV "renverser") ; -- tocheck
lin overtime_Adv = mkAdv "heures_supplémentaires" ; -- UWN
lin overtime_N = mkN "prolongation" feminine ; -- tocheck
lin overtone_N = mkN "sous-entendu" masculine | mkN "partiel" masculine ; -- tocheck
lin overture_N = mkN "ouverture" feminine ; -- tocheck
lin overturn_N = mkN "renverser" ; -- UWN
lin overturn_V = mkV "révolutionner" ; -- UWN
lin overturn_V2 = mkV2 (mkV "casser") | mkV2 (mkV "renverser") ; -- tocheck
lin overview_N = variants {} ; --
lin overweening_A = mkA "confiant" ; -- tocheck
lin overweight_N = mkN "adipose" | mkN "corpulence" | mkN "surpoids" ; -- UWN
lin overwhelm_V2 = mkV2 (mkV "accabler") ; -- tocheck
lin overwhelming_A = variants {} ; --
lin oviduct_N = mkN "oviducte" masculine ; -- tocheck
lin oviedo_PN = mkPN "Oviedo" ; -- status=guess src=geonames
lin ovine_A = mkA "ovin" ; -- tocheck
lin oviparous_A = mkA "ovipare" ; -- tocheck
lin ovipositor_N = mkN "Ovipositeur" | mkN "ovipositeur" ; -- UWN
lin ovoid_A = mkA "ovoïde" ; -- tocheck
lin ovoid_N = mkN "ovoïde" ; -- UWN
lin ovolo_N = mkN "pouce" ; -- UWN
lin ovoviviparous_A = mkA "ovovivipare" ; -- tocheck
lin ovulation_N = mkN "ovulation" feminine ; -- tocheck
lin ovule_N = mkN "ovule" ; -- UWN
lin ovum_N = mkN "ovule" masculine ; -- tocheck
lin owe_V = variants {} ; -- mkV2 (mkV I.devoir_V2) ; -- tocheck
lin owe_V2 = mkV2 (mkV I.devoir_V2) ; -- tocheck
lin owl_N = mkN "hibou" masculine ; -- tocheck
lin own_A = mkA "posséder" | mkA "propre" ; -- UWN
lin own_V2 = mkV2 (mkV "posséder") ; -- tocheck
lin own_up_V = advV (lin V OP_own_V2) OP_up_Adv ; -- guess-p-verb
lin owner_N = mkN "propriétaire" masculine ; -- tocheck
lin ownership_N = mkN "possession" ; -- tocheck
lin ox_N = mkN "boeuf" masculine ; -- tocheck
lin oxalate_N = mkN "oxalate" masculine ; -- tocheck
lin oxalis_N = mkN "oseille" | mkN "oxalis" ; -- UWN
lin oxford_N = mkN "oxford" | mkN "université" ; -- UWN
lin oxford_PN = mkPN "Oxford" ; -- status=guess src=geonames
lin oxidant_N = mkN "oxydant" masculine ; -- tocheck
lin oxidase_N = mkN "oxydase" ; -- UWN
lin oxidation_N = mkN "oxydation" feminine ; -- tocheck
lin oxide_N = mkN "oxyde" masculine ; -- tocheck
lin oxidization_N = mkN "oxydation" ; -- UWN
lin oxidize_V2 = mkV2 (mkV "oxyder") ; -- tocheck
lin oxime_N = mkN "Oxime" | mkN "oxime" ; -- UWN
lin oxted_PN = mkPN "Oxted" ; -- status=guess src=geonames
lin oxygen_N = mkN "oxygène" masculine ; -- tocheck
lin oxygenate_V2 = mkV2 (mkV "oxygéner") ; -- tocheck
lin oxymoron_N = mkN "oxymore" masculine ; -- tocheck
lin oxytocin_N = mkN "ocytocine" ; -- tocheck
lin oyster_N = mkN "sot-l'y-laisse" | mkN "huître" feminine ; -- tocheck
lin oyster_catcher_N = mkN "huîtrier" masculine ; -- tocheck
lin ozena_N = mkN "ozaena" ; -- UWN
lin ozone_N = mkN "ozone" masculine ; -- tocheck
lin ozonide_N = mkN "Ozonide" | mkN "ozonide" ; -- UWN
lin pa_N = mkN "pépé" masculine | mkN "papa" masculine ; -- tocheck
lin pace_N = mkN "pas" masculine | mkN "rythme" masculine ; -- tocheck
lin pace_V = mkV "mesurer" ; -- UWN
lin pace_V2 = mkV2 (mkV "arpenter") ; -- tocheck
lin pacemaker_N = mkN "pacemaker" ; -- UWN
lin pacesetter_N = mkN "pacemaker" ; -- UWN
lin pachinko_N = mkN "pachinko" ; -- UWN
lin pachisi_N = mkN "pachisi" ; -- UWN
lin pachycephalosaur_N = mkN "pachycephalosaurus" ; -- UWN
lin pachyderm_N = mkN "pachyderme" ; -- UWN
lin pachysandra_N = mkN "pachysandra" ; -- UWN
lin pacific_A = mkA "pacifique" ; -- tocheck
lin pacific_PN = mkPN "Pacific" ; -- status=guess src=geonames
lin pacification_N = mkN "pacification" feminine ; -- tocheck
lin pacifier_N = mkN "suce" | mkN "pacificateur" masculine ; -- tocheck
lin pacifism_N = mkN "pacifisme" masculine ; -- tocheck
lin pacifistFem_N = mkN "pacifiste" feminine ; -- tocheck
lin pacifistMasc_N = mkN "pacifiste" masculine ; -- tocheck
lin pacify_V2 = mkV2 (mkV "pacifier") ; -- tocheck
lin pack_N = mkN "meute" feminine ; -- tocheck
lin pack_V = variants {} ; -- mkV2 (mkV "emballer") ; -- tocheck
lin pack_V2 = mkV2 (mkV "emballer") ; -- tocheck
lin pack_away_V2 = mkV2 (advV OP_pack_V OP_away_Adv ) ; -- guess-p-verb
lin pack_in_V = advV OP_pack_V OP_in_Adv ; -- guess-p-verb
lin pack_in_V2 = prepV2 OP_pack_V OP_in_Prep ; -- guess-p-verb
lin pack_it_in_V = variants {} ; -- guess-p-verb
lin pack_off_V2 = prepV2 OP_pack_V OP_off_Prep ; -- guess-p-verb
lin pack_out_V2 = prepV2 OP_pack_V OP_out_Prep ; -- guess-p-verb
lin pack_up_V = advV OP_pack_V OP_up_Adv ; -- guess-p-verb
lin pack_up_V2 = prepV2 OP_pack_V OP_up_Prep ; -- guess-p-verb
lin package_N = mkN "paquet" masculine ; -- tocheck
lin package_V2 = mkV2 (mkV "empaqueter") ; -- tocheck
lin packaging_N = mkN "emballage" masculine ; -- tocheck
lin packer_N = mkN "emballeur" masculine ; -- tocheck
lin packet_N = mkN "paquet" ; -- tocheck
lin pact_N = mkN "pacte" masculine ; -- tocheck
lin pad_N = mkN "coussinet" masculine | mkN "bloc" | mkN "piaule" feminine | mkN "coussinet" | mkN "tampon" masculine | mkN "pieu" masculine ; -- tocheck
lin pad_V2 = mkV2 (mkV "rembourrer") ; -- tocheck
lin padding_N = mkN "rembourrage" masculine ; -- tocheck
lin paddle_N = mkN "palette" feminine | mkN "pale" feminine | mkN "pagaie" feminine | mkN "palme" feminine | mkN "volet" masculine | mkN "spatule" feminine | mkN "hélice" feminine | mkN "raquette" feminine | mkN "pagayage" masculine ; -- tocheck
lin paddle_V2 = mkV2 (mkV "pagayer") | mkV2 (mkV "paletter") ; -- tocheck
lin paddle_wheel_N = mkN "roue à aubes" ; -- UWN
lin paddock_N = mkN "paddock" ; -- UWN
lin paddy_N = mkN "rizière" ; -- tocheck
lin pademelon_N = mkN "thylogale" masculine ; -- tocheck
lin padlock_N = mkN "cadenas" masculine ; -- tocheck
lin padlock_V2 = mkV2 (mkV "cadenasser") ; -- tocheck
lin padova_PN = mkPN "Padoue" ; -- status=guess src=geonames
lin paean_N = mkN "péan" ; -- tocheck
lin paederasty_N = mkN "Pédérastie" | mkN "pédérastie" ; -- UWN
lin paediatrics_N = mkN "pédiatrie" ; -- UWN
lin paella_N = mkN "paella" feminine ; -- tocheck
lin paeony_N = mkN "pivoine" ; -- UWN
lin pagan_A = mkA "immoral" | mkA "païen" ; -- tocheck
lin pagan_N = mkN "païen" masculine ; -- tocheck
lin paganism_N = mkN "paganisme" masculine ; -- tocheck
lin page_N = mkN "page" feminine ; -- tocheck
lin pageant_N = mkN "cortège" masculine | mkN "spectacle" masculine ; -- tocheck
lin pageantry_N = mkN "faste" ; -- tocheck
lin pagination_N = mkN "pagination" feminine ; -- tocheck
lin paging_N = mkN "pagination" ; -- UWN
lin pagoda_N = mkN "pagode" feminine ; -- tocheck
lin pahoehoe_N = mkN "pahoehoe" ; -- UWN
lin paid_A = variants {} ; --
lin pail_N = mkN "bac" | mkN "baquet" | mkN "seau" ; -- UWN
lin pailful_N = mkN "seau" ; -- UWN
lin pain_N = mkN "casse-pied" | mkN "douleur" feminine ; -- tocheck
lin painful_A = mkA "pénible" | mkA "douloureux" | mkA "laborieux" ; -- tocheck
lin painkiller_N = mkN "analgésique" ; -- tocheck
lin painless_A = mkA "indolore" ; -- tocheck
lin painstaking_A = mkA "méticuleux" ; -- tocheck
lin paint_N = mkN "peinture" feminine ; -- tocheck
lin paint_V = variants {} ; -- mkV2 (mkV I.peindre_V2) ; -- tocheck
lin paint_V2 = mkV2 (mkV I.peindre_V2) ; -- tocheck
lin paint_V2A = L.paint_V2A ;
lin paintbrush_N = mkN "pinceau" ; -- tocheck
lin painter_N = variants {} ; --
lin painting_N = mkN "peinture" ; -- tocheck
lin pair_N = mkN "paire" feminine ; -- tocheck
lin pair_off_V = mkV "apparier" | mkV "paire" ; -- UWN
lin paisley_N = mkN "paisley" ; -- UWN
lin paisley_PN = mkPN "Paisley" ; -- status=guess src=geonames
lin pajama_N = mkN "pyjama" ; -- UWN
lin pakistan_PN = mkPN "Pakistan" ; -- status=guess src=geonames
lin pakistaniFem_N = variants {} ; ---- sense to be split
lin pakistaniMasc_N = variants {} ; ---- sense to be split
lin pal_N = variants {} ; --
lin palace_N = mkN "palais" masculine ; -- tocheck
lin paladin_N = mkN "champion" | mkN "héros" | mkN "paladin" ; -- UWN
lin palaeontologist_N = mkN "paléontologue" ; -- UWN
lin palaeontology_N = mkN "paléontologie" ; -- UWN
lin palankeen_N = mkN "palanquin" ; -- UWN
lin palanquin_N = mkN "palanquin" ; -- tocheck
lin palatable_A = mkA "bon" | mkA "passable" ; -- tocheck
lin palatal_A = mkA "palatal" ; -- tocheck
lin palate_N = mkN "palais" masculine ; -- tocheck
lin palatine_N = mkN "os_palatin" ; -- UWN
lin palaver_N = mkN "palabre" | mkN "palabres" ; -- tocheck
lin pale_A = mkA "pâle" ; -- tocheck
lin pale_N = mkN "pal" ; -- tocheck
lin pale_V = mkV (mkV "pâlir") ; -- tocheck
lin palembang_PN = mkPN "Palembang" ; -- status=guess src=geonames
lin paleness_N = mkN "pâleur" feminine ; -- tocheck
lin paleoanthropology_N = mkN "paléoanthropologie" feminine ; -- tocheck
lin paleobotany_N = mkN "paléobotanique" feminine ; -- tocheck
lin paleoclimatology_N = mkN "paléoclimatologie" ; -- UWN
lin paleoecology_N = mkN "paléoécologie" ; -- UWN
lin paleogeography_N = mkN "paléogéographie" ; -- UWN
lin paleography_N = mkN "paléographie" ; -- UWN
lin paleontological_A = mkA "paléontologique" ; -- tocheck
lin paleontologist_N = mkN "paléontologiste" ; -- tocheck
lin paleontology_N = mkN "paléontologie" feminine ; -- tocheck
lin paleopathology_N = mkN "paléopathologie" ; -- UWN
lin paleozoology_N = mkN "paléozoologie" feminine ; -- tocheck
lin palermo_PN = mkPN "Palerme" ; -- status=guess src=geonames
lin palestine_PN = mkPN "Palestine" ; -- status=guess src=geonames
lin palestra_N = mkN "palestre" ; -- UWN
lin palette_N = mkN "palette" feminine ; -- tocheck
lin palfrey_N = mkN "palefrenier" ; -- UWN
lin palilalia_N = mkN "palilalie" ; -- UWN
lin palimpsest_N = mkN "palimpseste" masculine ; -- tocheck
lin palindrome_N = mkN "palindrome" masculine ; -- tocheck
lin paling_N = mkN "pieu" masculine ; -- tocheck
lin palisade_N = mkN "palissade" feminine ; -- tocheck
lin palish_A = mkA "pâlichon" ; -- UWN
lin pall_N = mkN "linceul" | mkN "suaire" ; -- UWN
lin pall_V = mkV "ennuyer" | mkV "fatiguer" | mkV "lasser" ; -- UWN
lin palladium_N = mkN "palladium" masculine ; -- tocheck
lin pallbearer_N = mkN "porteur" ; -- UWN
lin pallet_N = mkN "paillasse" feminine | mkN "palette" feminine ; -- tocheck
lin palliate_V2 = mkV2 (mkV "pallier") ; -- tocheck
lin palliation_N = mkN "atténuation" | mkN "mitigation" ; -- UWN
lin palliative_A = mkA "palliatif" ; -- tocheck
lin palliative_N = mkN "palliatif" ; -- UWN
lin pallidness_N = mkN "pâleur" ; -- UWN
lin pallor_N = mkN "pâleur" feminine ; -- tocheck
lin palm_N = mkN "paume" feminine ; -- tocheck
lin palm_V2 = mkV2 (mkV "enpalmer") ; -- tocheck
lin palmy_A = mkA "prospère" ; -- UWN
lin palomino_N = mkN "palomino" ; -- UWN
lin palpable_A = mkA "palpable" ; -- tocheck
lin palpitation_N = mkN "palpitation" feminine ; -- tocheck
lin palsy_N = mkN "paralysie" feminine ; -- tocheck
lin paltry_A = mkA "misérable" | mkA "dérisoire" ; -- tocheck
lin pamper_V2 = mkV2 (mkV "choyer") ; -- tocheck
lin pamphleteerFem_N = variants {} ; ---- sense to be split
lin pamphleteerMasc_N = variants {} ; ---- sense to be split
lin pamplona_PN = mkPN "Pampelune" ; -- status=guess src=geonames
lin pan_N = mkN "poêle" feminine ; -- tocheck
lin panacea_N = mkN "panacea" | mkN "panacée" ; -- UWN
lin panache_N = mkN "panache" masculine ; -- tocheck
lin panama_PN = mkPN "Panamá" ; -- status=guess src=geonames
lin pancake_N = mkN "crêpe" feminine ; -- tocheck
lin pancreas_N = mkN "pancréas" masculine ; -- tocheck
lin pancreatic_A = mkA "pancréatique" ; -- tocheck
lin pancreatin_N = mkN "pancréatine" ; -- UWN
lin pancreatitis_N = mkN "Pancréatite" | mkN "pancréatite" ; -- UWN
lin pancytopenia_N = mkN "pancytopénie" ; -- UWN
lin panda_N = mkN "panda" masculine ; -- tocheck
lin pandemic_N = mkN "pandémie" feminine ; -- tocheck
lin pandemonium_N = mkN "chaos" masculine ; -- tocheck
lin pander_N = mkN "entremetteur" ; -- tocheck
lin panegyric_N = mkN "panégyrique" masculine ; -- tocheck
lin panel_N = mkN "panneau" | mkN "panneau" masculine | mkN "case" feminine ; -- tocheck
lin paneling_N = mkN "boiserie" | mkN "lambris" | mkN "panneautage" ; -- UWN
lin panelling_N = mkN "boiserie" feminine ; -- tocheck
lin panga_N = mkN "coupe-coupe" | mkN "coupecoupe" | mkN "machette" ; -- UWN
lin pangolin_N = mkN "pangolin" masculine ; -- tocheck
lin panic_N = mkN "panique" feminine ; -- tocheck
lin panicky_A = mkA "panique" ; -- UWN
lin panicle_N = mkN "panicule" ; -- UWN
lin panoply_N = mkN "panoplie" ; -- tocheck
lin panopticon_N = mkN "panoptique" masculine ; -- tocheck
lin panorama_N = mkN "panorama" masculine ; -- tocheck
lin panoramic_A = mkA "panoramique" ; -- tocheck
lin pansy_N = mkN "pensée" feminine ; -- tocheck
lin pant_N = mkN "halètement" masculine ; -- tocheck
lin pant_V2 = mkV2 (mkV "désirer") | mkV2 (mkV "palpiter") | mkV2 (mkV "haleter") ; -- tocheck
lin pantheism_N = mkN "panthéisme" masculine ; -- tocheck
lin pantheist_A = mkA "panthéiste" ; -- UWN
lin pantheistic_A = mkA "panthéistique" ; -- tocheck
lin pantheon_N = mkN "panthéon" masculine ; -- tocheck
lin panther_N = mkN "panthère" feminine ; -- tocheck
lin pantograph_N = mkN "pantographe" masculine ; -- tocheck
lin pantomime_N = mkN "pantomime" feminine ; -- tocheck
lin pantry_N = mkN "garde-manger" masculine ; -- tocheck
lin pantryman_N = mkN "bouteiller" | mkN "butler" | mkN "majordome" | mkN "sommelier" ; -- UWN
lin pantyhose_N = mkN "collants" ; -- tocheck
lin pap_N = mkN "bouton" | mkN "mamelon" | mkN "mésange" | mkN "trayon" | mkN "téterelle" | mkN "tétine" | mkN "téton" ; -- UWN
lin papacy_N = mkN "papauté" masculine ; -- tocheck
lin papain_N = mkN "papaïne" ; -- UWN
lin papal_A = mkA "papal" ; -- tocheck
lin paparazzo_N = mkN "paparazzo" masculine ; -- tocheck
lin papaya_N = mkN "papaye" feminine ; -- tocheck
lin paper_N = L.paper_N ;
lin paperback_A = mkA "broché" ; -- tocheck
lin paperboard_N = mkN "bristol" masculine ; -- tocheck
lin paperboy_N = mkN "camelot" | mkN "livreur_de_journaux" ; -- UWN
lin paperclip_N = mkN "trombone" ; -- UWN
lin paperknife_N = mkN "coupe-papier" ; -- UWN
lin papermaking_N = mkN "papeterie" ; -- UWN
lin paperweight_N = mkN "presse-papiers" masculine ; -- tocheck
lin papillon_N = mkN "papillon" ; -- UWN
lin papist_N = mkN "papiste" ; -- UWN
lin papoose_N = mkN "papoose" ; -- UWN
lin papovavirus_N = mkN "papovaviridae" ; -- UWN
lin paprika_N = mkN "paprika" masculine ; -- tocheck
lin papule_N = mkN "papule" ; -- UWN
lin papyrus_N = mkN "papyrus" masculine ; -- tocheck
lin par_N = variants {} ; --
lin par_excellence_Adv = mkAdv "excellemment" ; -- UWN
lin parable_N = mkN "parabole" ; -- tocheck
lin parabola_N = mkN "parabole" feminine ; -- tocheck
lin paraboloid_N = mkN "paraboloïde" masculine ; -- tocheck
lin parachute_N = mkN "parachute" masculine ; -- tocheck
lin parachute_V2 = mkV2 (mkV "parachuter") ; -- tocheck
lin parachutist_N = mkN "parachutiste" ; -- tocheck
lin parade_N = mkN "défilé" masculine | mkN "parade" feminine ; -- tocheck
lin paradigm_N = mkN "paradigme" masculine | mkN "préjudice" ; -- tocheck
lin paradise_N = mkN "paradis" masculine ; -- tocheck
lin paradisiac_A = mkA "paradisiaque" ; -- UWN
lin paradisiacal_A = mkA "paradisiaque" ; -- tocheck
lin paradox_N = mkN "paradoxe" masculine ; -- tocheck
lin paradoxical_A = mkA "paradoxal" ; -- tocheck
lin paragon_N = mkN "parangon" ; -- tocheck
lin paragraph_N = mkN "paragraphe" masculine ; -- tocheck
lin paraguay_PN = mkPN "Paraguay" ; -- status=guess src=geonames
lin parakeet_N = mkN "perruche" ; -- tocheck
lin paralanguage_N = mkN "paralangage" masculine ; -- tocheck
lin paraldehyde_N = mkN "paraldéhyde" ; -- UWN
lin paralegal_N = mkN "paralégal" ; -- UWN
lin parallax_N = mkN "parallaxe" feminine ; -- tocheck
lin parallel_A = mkA "parallèle" ; -- tocheck
lin parallel_N = mkN "parallèle" ; -- tocheck
lin parallelepiped_N = mkN "parallélépipède" masculine ; -- tocheck
lin parallelism_N = mkN "parallélisme" ; -- tocheck
lin parallelogram_N = mkN "parallélogramme" masculine ; -- tocheck
lin paralogism_N = mkN "paralogisme" ; -- UWN
lin paralysis_N = mkN "paralysie" feminine ; -- tocheck
lin paralyze_V2 = mkV2 (mkV "paralyser") ; -- tocheck
lin paramagnetism_N = mkN "paramagnétisme" ; -- UWN
lin paramecium_N = mkN "paramécie" feminine ; -- tocheck
lin paramedic_N = mkN "ambulancier" masculine ; -- tocheck
lin parameter_N = mkN "paramètre" masculine | mkN "paramètre" ; -- tocheck
lin parametric_A = mkA "paramétrique" ; -- tocheck
lin paramilitary_A = mkA "paramilitaire" ; -- tocheck
lin paramilitary_N = mkN "paramilitaire" ; -- tocheck
lin paramnesia_N = mkN "paramnésie" ; -- UWN
lin paramount_A = mkA "primordial" | mkA "prépondérant" | mkA "souverain" ; -- UWN
lin paramountcy_N = mkN "prépondérance" ; -- UWN
lin paramour_N = mkN "amant" ; -- tocheck
lin paramyxovirus_N = mkN "paramyxoviridae" | mkN "paramyxovirus" ; -- UWN
lin paranoia_N = mkN "paranoïa" feminine ; -- tocheck
lin paranoiac_N = mkN "paranoïaque" ; -- UWN
lin paranoid_A = mkA "paranoïaque" ; -- tocheck
lin paranoid_N = mkN "paranoïaque" ; -- tocheck
lin paranormal_A = mkA "paranormal" ; -- tocheck
lin parapet_N = mkN "parapet" masculine ; -- tocheck
lin paraph_N = mkN "paraphe" masculine ; -- tocheck
lin paraphilia_N = mkN "paraphilie" ; -- UWN
lin paraphrase_N = mkN "paraphrase" feminine ; -- tocheck
lin paraphrase_V2 = mkV2 (mkV "paraphraser") ; -- tocheck
lin paraphrastic_A = mkA "paraphrastique" ; -- tocheck
lin paraplegia_N = mkN "paraplégie" ; -- tocheck
lin parapsychological_A = mkA "parapsychologique" ; -- UWN
lin parapsychologist_N = mkN "parapsychologue" ; -- UWN
lin paraquat_N = mkN "paraquat" ; -- UWN
lin parasite_N = mkN "parasite" masculine ; -- tocheck
lin parasitic_A = mkA "épenthétique" ; -- UWN
lin parasitical_A = mkA "parasite" ; -- UWN
lin parasitism_N = mkN "parasitisme" ; -- UWN
lin parasol_N = mkN "ombrelle" feminine ; -- tocheck
lin parasympathetic_A = mkA "parasympathique" ; -- UWN
lin paratrooper_N = mkN "para" masculine ; -- tocheck
lin parcel_N = mkN "parcelle" feminine | mkN "colis" masculine ; -- tocheck
lin parcel_out_V = mkV "dispenser" | mkV "distribuer" ; -- UWN
lin parchment_N = mkN "parchemin" masculine | mkN "vélin" masculine ; -- tocheck
lin pardon_N = mkN "pardon" masculine | mkN "grâce" feminine ; -- tocheck
lin pardon_V2 = mkV2 (mkV "pardonner") ;
lin pardonable_A = mkA "pardonnable" ; -- tocheck
lin pare_V2 = mkV2 (mkV "éplucher") | mkV2 (mkV "rogner") ; -- tocheck
lin paregoric_N = mkN "teinture_d'opium_benzoïque" | mkN "élixir_parégorique" ; -- UWN
lin parent_N = mkN "parent" masculine ;
lin parentage_N = mkN "parenté" feminine ; -- tocheck
lin parental_A = mkA "parental" ; -- tocheck
lin parenteral_A = mkA "parentéral" ; -- tocheck
lin parenthesis_N = mkN "parenthèse" feminine ; -- tocheck
lin parenthood_N = mkN "parenté" feminine ; -- tocheck
lin paresis_N = mkN "parésie" feminine ; -- tocheck
lin paresthesia_N = mkN "paresthésie" feminine ; -- tocheck
lin parfait_N = mkN "parfait" ; -- UWN
lin parhelion_N = mkN "parhélie" ; -- tocheck
lin paris_1_PN = mkPN "Paris" ; -- status=guess src=geonames
lin paris_2_PN = mkPN "Paris" ; -- status=guess src=geonames
lin paris_PN = L.paris_PN ;
lin parish_N = mkN "commune" feminine | mkN "paroisse" feminine ; -- tocheck
lin parishioner_N = mkN "paroissien" masculine ; -- tocheck
lin parity_N = mkN "parité" ; -- UWN
lin park_N = mkN "parc" masculine ; -- tocheck
lin park_V = variants {} ; -- mkV2 (mkV "garer") ; -- tocheck
lin park_V2 = mkV2 (mkV "garer") ; -- tocheck
lin parka_N = mkN "parka" ; -- tocheck
lin parking_N = mkN "stationnement" masculine | mkN "parking" masculine ; -- tocheck
lin parley_N = mkN "pourparlers" masculine ; -- tocheck
lin parliament_N = mkN "parlement" masculine ; -- tocheck
lin parliamentarian_N = mkN "parlementaire" ; -- tocheck
lin parliamentary_A = mkA "parlementaire" ; -- tocheck
lin parlor_N = mkN "salon" masculine ; -- tocheck
lin parlour_N = mkN "salon" masculine | mkN "parloir" masculine ; -- tocheck
lin parlous_A = mkA "dangereux" | mkA "perilleux" | mkA "précaire" | mkA "périlleux" | mkA "redoutable" ; -- UWN
lin parma_PN = mkPN "Parme" ; -- status=guess src=geonames
lin parmesan_N = mkN "parmesan" masculine ; -- tocheck
lin parnassia_N = mkN "parnassia" ; -- UWN
lin parochial_A = mkA "étriqué" | mkA "paroissial" ; -- tocheck
lin parody_N = mkN "parodie" feminine ; -- tocheck
lin parody_V2 = mkV2 (mkV "parodier") ; -- tocheck
lin paroquet_N = mkN "perruche" ; -- UWN
lin parotid_A = mkA "parotide" ; -- UWN
lin parotitis_N = mkN "parotidite" feminine ; -- tocheck
lin paroxysm_N = mkN "paroxysme" ; -- UWN
lin paroxysmal_A = mkA "paroxystique" ; -- UWN
lin paroxytone_N = mkN "paroxyton" ; -- tocheck
lin parquet_N = mkN "parquet" masculine ; -- tocheck
lin parricide_N = mkN "parricide" ; -- UWN
lin parrot_N = mkN "perroquet" masculine ; -- tocheck
lin parrotfish_N = mkN "Scaridae" | mkN "poissons_perroquets" | mkN "scare" | mkN "scaridae" ; -- UWN
lin parry_V2 = mkV2 (mkV "parer") ; -- tocheck
lin parse_V2 = mkV2 (mkV "analyser") ; -- tocheck
lin parsec_N = mkN "parsec" masculine ; -- tocheck
lin parsimonious_A = mkA "pincé" ; -- tocheck
lin parsimony_N = mkN "parcimonie" feminine ; -- tocheck
lin parsley_N = mkN "persil" masculine ; -- tocheck
lin parsnip_N = mkN "panais" masculine ; -- tocheck
lin parson_N = mkN "Pasteur_protestant" | mkN "Recteur" | mkN "curé" | mkN "ministre" | mkN "pasteur" | mkN "recteur" | mkN "vicaire" ; -- UWN
lin parsonage_N = mkN "cure" feminine ; -- tocheck
lin part_Adv = mkAdv "en_partie" | mkAdv "partie" | mkAdv "partiellement" ; -- UWN
lin part_N = mkN "part" feminine | mkN "partie" feminine ;
lin part_Prep = S.part_Prep ;
lin part_V = mkV "diviser" | mkV "partager" | mkV "séparer" ; -- UWN
lin part_V2 = mkV2 (reflV (mkV "séparer")) | mkV2 (mkV "séparer") ; -- tocheck
lin part_time_A = variants {} ; --
lin partake_V = mkV "toucher" ; -- UWN
lin partake_V2 = mkV2 (mkV "participer") ; -- tocheck
lin parthenocarpy_N = mkN "parthénocarpie" ; -- UWN
lin parthenogenesis_N = mkN "parthénogenèse" ; -- tocheck
lin partial_A = mkA "partial" | mkA "partiel" ; -- tocheck
lin partiality_N = mkN "partialité" feminine ; -- tocheck
lin participant_N = mkN "participant" masculine ; -- tocheck
lin participate_V = variants {} ; --
lin participate_V2 = variants {} ; --
lin participation_N = mkN "participation" feminine ; -- tocheck
lin participle_N = mkN "participe" masculine ; -- tocheck
lin particle_N = mkN "particule" feminine ; -- tocheck
lin particular_A = mkA "particulier" ;
lin particular_N = variants {} ; --
lin particularity_N = mkN "particularité" | mkN "propre" ; -- UWN
lin parting_N = mkN "adieu" masculine ; -- tocheck
lin partisan_A = mkA "partisan" ; -- tocheck
lin partisan_N = mkN "partisan" masculine | mkN "militant" masculine | mkN "pertuisane" feminine ; -- tocheck
lin partition_N = mkN "division" | mkN "partition" feminine ; -- tocheck
lin partitive_A = mkA "partitif" ; -- tocheck
lin partitive_N = mkN "partitif" masculine ; -- tocheck
lin partly_Adv = mkAdv "en_partie" | mkAdv "partie" | mkAdv "partiellement" ; -- UWN
lin partner_N = mkN "partenaire" masculine ; -- tocheck
lin partnership_N = variants {} ; --
lin partridge_N = mkN "perdrix" feminine ; -- tocheck
lin parturiency_N = mkN "accouchement" | mkN "travailler" ; -- UWN
lin parturition_N = mkN "accouchement" ; -- tocheck
lin party_1_N = mkN "fète" ;
lin party_2_N = mkN "parti" masculine ;
lin party_N = mkN "parti" masculine ;
lin partygoer_N = mkN "ambianceur" | mkN "ambianceuse" ; -- UWN
lin parvenu_N = mkN "parvenu" masculine ; -- tocheck
lin parvovirus_N = mkN "Parvoviridae" | mkN "parvoviridae" | mkN "parvovirus" ; -- UWN
lin pas_N = mkN "pas" masculine ; -- tocheck
lin pascal_N = mkN "pascal" masculine ; -- tocheck
lin paschal_A = mkA "pascal" ; -- UWN
lin pasha_N = mkN "pacha" masculine ; -- tocheck
lin pasqueflower_N = mkN "pulsatilla" | mkN "pulsatille" ; -- UWN
lin pass_N = mkN "laissez-passer" | mkN "passe" feminine ; -- tocheck
lin pass_V = mkV "passer" ;
lin pass_around_V2 = prepV2 OP_pass_V OP_around_Prep ; -- guess-p-verb
lin pass_as_V2 = prepV2 OP_pass_V OP_as_Prep ; -- guess-p-verb
lin pass_away_V = advV OP_pass_V OP_away_Adv ; -- guess-p-verb
lin pass_back_V2 = mkV2 (advV OP_pass_V OP_back_Adv ) ; -- guess-p-verb
lin pass_by_V = mkV "dépasser" ; -- UWN
lin pass_by_V2 = prepV2 OP_pass_V OP_by_Prep ; -- guess-p-verb
lin pass_down_V2 = prepV2 OP_pass_V OP_down_Prep ; -- guess-p-verb
lin pass_for_V2 = prepV2 OP_pass_V OP_for_Prep ; -- guess-p-verb
lin pass_off_V = mkV "respirer" | mkV "émettre" ; -- UWN
lin pass_off_V2 = prepV2 OP_pass_V OP_off_Prep ; -- guess-p-verb
lin pass_on_V = mkV "communiquer" | mkV "passer" ; -- UWN
lin pass_on_V2 = prepV2 OP_pass_V OP_on_Prep ; -- guess-p-verb
lin pass_on_to_V2 = prepV2 (advV OP_pass_V OP_on_Adv ) OP_to_Prep ; -- guess-p-verb
lin pass_out_V = advV OP_pass_V OP_out_Adv ; -- guess-p-verb
lin pass_out_V2 = prepV2 OP_pass_V OP_out_Prep ; -- guess-p-verb
lin pass_over_V = mkV "sauter" ; -- UWN
lin pass_over_V2 = prepV2 OP_pass_V OP_over_Prep ; -- guess-p-verb
lin pass_round_V2 = prepV2 OP_pass_V OP_round_Prep ; -- guess-p-verb
lin pass_through_V2 = prepV2 OP_pass_V OP_through_Prep ; -- guess-p-verb
lin pass_to_V2 = prepV2 OP_pass_V OP_to_Prep ; -- guess-p-verb
lin pass_up_V2 = prepV2 OP_pass_V OP_up_Prep ; -- guess-p-verb
lin passage_N = mkN "passage" masculine ; -- tocheck
lin passageway_N = mkN "passage" masculine ; -- tocheck
lin passenger_N = mkN "passager" masculine ; -- tocheck
lin passer_N = mkN "passant" masculine | mkN "passante" | mkN "passer" ; -- UWN
lin passing_N = mkN "passing" masculine ; -- tocheck
lin passion_N = mkN "passion" feminine | mkN "Passion" feminine ; -- tocheck
lin passionate_A = mkA "passionné" ; -- tocheck
lin passive_A = mkA "passive" ; -- tocheck
lin passive_N = mkN "mode_passif" | mkN "passif" | mkN "voix_passive" ; -- UWN
lin passivity_N = mkN "passivité" feminine ; -- tocheck
lin passkey_N = mkN "passe-partout" masculine ; -- tocheck
lin passport_N = mkN "passeport" masculine ; -- tocheck
lin password_N = mkN "mdp" | mkN "mot" | mkN "mot_de_passe" | mkN "parole" ; -- UWN
lin past_A = mkA "passé" | mkA "dernier" ; -- tocheck
lin past_Adv = mkAdv "auparavant" | mkAdv "autour_de" | mkAdv "autrefois" | mkAdv "passé" ; -- UWN
lin past_N = mkN "passé" masculine ; -- tocheck
lin past_Prep = variants {} ; --
lin pasta_N = mkN "pâtes" ; -- tocheck
lin paste_N = mkN "strass" masculine | mkN "pâte" feminine | mkN "pâte" ; -- tocheck
lin paste_V2 = mkV2 (mkV "coller") ; -- tocheck
lin pasteboard_N = mkN "carton" ; -- UWN
lin pastel_A = mkA "pastel" ; -- UWN
lin pastel_N = mkN "pastel" ; -- UWN
lin paster_N = mkN "autocollant" ; -- UWN
lin pasteurization_N = mkN "pasteurisation" ; -- UWN
lin pasteurize_V2 = mkV2 (mkV "pasteuriser") ; -- tocheck
lin pastiche_N = mkN "pastiche" masculine ; -- tocheck
lin pastille_N = mkN "pastille" feminine ; -- tocheck
lin pastime_N = mkN "passe-temps" masculine ; -- tocheck
lin pastis_N = mkN "pastis" ; -- UWN
lin pastor_N = mkN "pasteur" masculine ; -- tocheck
lin pastoral_A = mkA "pastoral" ; -- tocheck
lin pastorale_N = mkN "idylle" ; -- UWN
lin pastrami_N = mkN "pastrami" masculine ; -- tocheck
lin pastry_N = mkN "pâtisserie" feminine ; -- tocheck
lin pasture_N = mkN "pâture" feminine ; -- tocheck
lin pat_N = mkN "limande" | mkN "robinet" | mkN "taper" ; -- UWN
lin pat_V = variants {} ; -- mkV2 (mkV "tapoter") ; -- tocheck
lin pat_V2 = mkV2 (mkV "tapoter") ; -- tocheck
lin pataca_N = mkN "pataca" feminine ; -- tocheck
lin patch_N = mkN "patch" masculine ; -- tocheck
lin pate_1_N = variants {} ; ---- sense to be split
lin pate_2_N = variants {} ; ---- sense to be split
lin pate_de_foie_gras_N = mkN "foie_gras" ; -- UWN
lin patent_A = mkA "apparent" | mkA "brevet" | mkA "manifeste" | mkA "plaine" | mkA "évident" ; -- UWN
lin patent_N = mkN "brevet" masculine ; -- tocheck
lin paterfamilias_N = mkN "patriarche" ; -- UWN
lin paternal_A = mkA "paternel" ; -- tocheck
lin paternalism_N = mkN "paternalisme" ; -- UWN
lin paternalistic_A = mkA "paternaliste" ; -- UWN
lin paternity_N = mkN "paternité" ; -- UWN
lin paternoster_N = mkN "Notre_Père" | mkN "paternoster" ; -- UWN
lin path_N = mkN "chemin" masculine | mkN "sentier" masculine ; -- tocheck
lin pathetic_A = mkA "pathétique" ; -- tocheck
lin pathogen_N = mkN "pathogénique" ; -- tocheck
lin pathogenesis_N = mkN "pathogénie" | mkN "pathogénèse" ; -- UWN
lin pathological_A = mkA "pathologique" ; -- tocheck
lin pathologist_N = mkN "pathologiste" ; -- tocheck
lin pathology_N = mkN "pathologie" feminine ; -- tocheck
lin pathway_N = mkN "voie" ; -- UWN
lin patience_N = mkN "patience" feminine ; -- tocheck
lin patient_A = mkA "patient" ; -- tocheck
lin patient_N = mkN "patient" masculine ;
lin patina_N = mkN "patine" feminine | mkN "patène" feminine ; -- tocheck
lin patio_N = mkN "patio" | mkN "terrasse" ; -- UWN
lin patisserie_N = mkN "pâtisserie" feminine ; -- tocheck
lin patriarch_N = mkN "patriarche" masculine ; -- tocheck
lin patriarchy_N = mkN "patriarcat" ; -- UWN
lin patrician_N = mkN "aristocrate" | mkN "noble" | mkN "sang_bleu" ; -- UWN
lin patrimonial_A = mkA "ancestral" | mkA "héréditaire" ; -- UWN
lin patrimony_N = mkN "patrimoine" masculine ; -- tocheck
lin patriot_N = mkN "patriote" ; -- tocheck
lin patriotic_A = mkA "patriotique" ; -- tocheck
lin patriotism_N = mkN "patriotisme" masculine ; -- tocheck
lin patrol_N = mkN "patrouille" | mkN "patrouille" feminine ; -- tocheck
lin patrolman_N = mkN "gendarme" ; -- UWN
lin patron_N = mkN "client" masculine | mkN "mécène" masculine ; -- tocheck
lin patronage_N = mkN "clientèle" feminine | mkN "clientélisme" masculine | mkN "patronage" masculine | mkN "soutien" masculine ; -- tocheck
lin patronize_V2 = mkV2 (mkV "fréquenter") ; -- tocheck
lin patronizing_A = mkA "affable" | mkA "condescendant" | mkA "méprisant" ; -- UWN
lin patronymic_N = mkN "patronyme" masculine ; -- tocheck
lin patten_N = mkN "geta" ; -- UWN
lin pattern_N = mkN "patron" masculine | mkN "modèle" feminine ; -- tocheck
lin paucity_N = mkN "disette" | mkN "pénurie" ; -- UWN
lin paul_PN = mkPN "Paul" ; -- status=guess src=geonames
lin paunch_N = mkN "bedaine" feminine | mkN "panse" feminine ; -- tocheck
lin pauper_N = mkN "pauvre" ; -- tocheck
lin pauperism_N = mkN "besoin" | mkN "manque" | mkN "nécessité" | mkN "paupérisme" | mkN "requérir" ; -- UWN
lin pauperization_N = mkN "paupérisation" ; -- UWN
lin pause_N = mkN "pause" feminine ; -- tocheck
lin pause_V = variants {} ; --
lin pause_V2V = variants {} ; --
lin pavane_N = mkN "pavane" feminine ; -- tocheck
lin pave_V2 = mkV2 (mkV "paver") ; -- tocheck
lin pavement_N = mkN "trottoir" masculine | mkN "revêtement" masculine ; -- tocheck
lin pavilion_N = mkN "pavillon" masculine ; -- tocheck
lin pavis_N = mkN "pavois" ; -- UWN
lin pavonia_N = mkN "pavonia" ; -- UWN
lin paw_N = mkN "patte" feminine ; -- tocheck
lin paw_V2 = mkV2 (mkV "tripoter") ; -- tocheck
lin pawl_N = mkN "cliquet" masculine ; -- tocheck
lin pawn_N = mkN "gage" masculine | mkN "occasion" feminine | mkN "pion" masculine | mkN "mont-de-piété" masculine ; -- tocheck
lin pawn_V2 = mkV2 (mkV "engager") ; -- tocheck
lin pawpaw_N = mkN "asimina" feminine ; -- tocheck
lin pax_N = mkN "pax" ; -- UWN
lin pay_N = mkN "gaine" | mkN "loyer" | mkN "rémunération" | mkN "sala" | mkN "salaire" | mkN "salarié" | mkN "traitement" ; -- UWN
lin pay_V = reflV (mkV "payer") ;
lin pay_V2 = mkV2 (mkV "payer") ;
lin pay_V2V = mkV2V (mkV "payer") ; --- subcat
lin pay_V3 = mkV3 (mkV "payer") ;
lin pay_back_V = advV OP_pay_V OP_back_Adv ; -- guess-p-verb
lin pay_back_V2 = mkV2 (advV OP_pay_V OP_back_Adv ) ; -- guess-p-verb
lin pay_down_V2 = prepV2 OP_pay_V OP_down_Prep ; -- guess-p-verb
lin pay_for_V3 = variants {} ; -- guess-p-verb
lin pay_into_V3 = variants {} ; -- guess-p-verb
lin pay_off_V = advV OP_pay_V OP_off_Adv ; -- guess-p-verb
lin pay_off_V2 = prepV2 OP_pay_V OP_off_Prep ; -- guess-p-verb
lin pay_out_V = advV OP_pay_V OP_out_Adv ; -- guess-p-verb
lin pay_up_V = mkV "payer" | mkV "rembourser" ; -- UWN
lin payable_A = mkA "analogue" | mkA "manifeste" ; -- UWN
lin payback_N = mkN "revanche" | mkN "vengeance" ; -- UWN
lin payer_N = mkN "payeur" masculine ; -- tocheck
lin payload_N = mkN "fret" masculine ; -- tocheck
lin payment_N = mkN "paiement" masculine ; -- tocheck
lin payoff_N = mkN "gaine" | mkN "récompenser" | mkN "salaire" ; -- UWN
lin payola_N = mkN "Payola" | mkN "corruption" | mkN "payola" ; -- UWN
lin pe_N = mkN "pé" masculine ; -- tocheck
lin pea_N = mkN "pois" masculine | mkN "pois" ; -- tocheck
lin peace_N = L.peace_N ;
lin peaceable_A = mkA "pacifique" ; -- UWN
lin peaceful_A = mkA "paisible" | mkA "placide" ; -- tocheck
lin peacefulness_N = mkN "paix" | mkN "quiétude" | mkN "salle" ; -- UWN
lin peacehaven_PN = mkPN "Peacehaven" ; -- status=guess src=geonames
lin peach_N = mkN "pêche" feminine | mkN "pêcher" masculine ; -- tocheck
lin peacock_N = mkN "paon" masculine ; -- tocheck
lin peafowl_N = mkN "paon" masculine ; -- tocheck
lin peahen_N = mkN "paonne" ; -- UWN
lin peak_N = mkN "cime" feminine ; -- tocheck
lin peanut_N = mkN "arachide" feminine ; -- tocheck
lin pear_N = mkN "poire" feminine | mkN "poirier" masculine ; -- tocheck
lin pearl_N = mkN "perle" feminine ; -- tocheck
lin pearl_PN = mkPN "Pearl" ; -- status=guess src=geonames
lin pearlite_N = mkN "perlite" ; -- UWN
lin pearly_A = mkA "nacré" ; -- UWN
lin peasantFem_N = mkN "paysanne" feminine ; -- tocheck
lin peasantMasc_N = mkN "paysan" masculine ;
lin peasantry_N = mkN "paysannerie" feminine ; -- tocheck
lin peat_N = mkN "tourbe" feminine ; -- tocheck
lin pebble_N = mkN "galet" ; -- tocheck
lin pecan_N = mkN "pacanier" masculine ; -- tocheck
lin peccadillo_N = mkN "peccadille" feminine ; -- tocheck
lin peccary_N = mkN "pécari" masculine ; -- tocheck
lin peck_V2 = mkV2 (mkV "becqueter") ; -- tocheck
lin pecker_N = mkN "bec" | mkN "plume" ; -- UWN
lin peckish_A = mkA "affamé" ; -- tocheck
lin pectin_N = mkN "pectine" feminine ; -- tocheck
lin pectoral_A = mkA "pectoral" ; -- tocheck
lin peculate_V = mkV "dilapider" | mkV "divertir" | mkV "détourner" | mkV "malverser" ; -- UWN
lin peculation_N = mkN "dilapidation" | mkN "détournement" | mkN "détournement_de_fonds" | mkN "malversation" ; -- UWN
lin peculiar_A = mkA "particulier" ; -- tocheck
lin peculiarity_N = mkN "particularité" feminine | mkN "singularité" feminine ; -- tocheck
lin pedagogic_A = mkA "pédagogique" ; -- tocheck
lin pedagogical_A = mkA "pédagogique" ; -- UWN
lin pedagogueFem_N = mkN "instituteur" | mkN "pédagogue" | mkN "éducateur" ; -- UWN
lin pedagogueMasc_N = mkN "instituteur" | mkN "pédagogue" | mkN "éducateur" ; -- UWN
lin pedal_A = mkA "pédale" | mkA "pédaler" ; -- UWN
lin pedal_N = mkN "pédale" feminine ; -- tocheck
lin pedal_V2 = mkV2 (mkV "pédaler") ; -- tocheck
lin pedant_N = mkN "pédant" masculine ; -- tocheck
lin pedantic_A = mkA "pointilleux" | mkA "pédant" | mkA "méticuleux" ; -- tocheck
lin pedantry_N = mkN "pédanterie" feminine ; -- tocheck
lin peddler_N = mkN "colporteur" masculine ; -- tocheck
lin pederast_N = mkN "pédéraste" ; -- tocheck
lin pederastic_A = mkA "pédérastique" ; -- tocheck
lin pederasty_N = mkN "pédérastie" feminine ; -- tocheck
lin pedestal_N = mkN "piédestal" masculine ; -- tocheck
lin pedestrian_A = mkA "banal" | mkA "piéton" ; -- tocheck
lin pedestrian_N = mkN "piéton" masculine ; -- tocheck
lin pediatric_A = mkA "pédiatrique" ; -- UWN
lin pediatricianFem_N = mkN "pédiatre" ; -- tocheck
lin pediatricianMasc_N = mkN "pédiatre" ; -- tocheck
lin pediatrician_N = mkN "pédiatre" ; -- UWN
lin pediatrics_N = mkN "pédiatrie" feminine ; -- tocheck
lin pedicab_N = mkN "velotaxi" masculine ; -- tocheck
lin pedicel_N = mkN "pédicelle" ; -- tocheck
lin pedicure_N = mkN "pédicure" feminine ; -- tocheck
lin pedigree_N = mkN "pedigree" masculine ; -- tocheck
lin pediment_N = mkN "fronton" masculine ; -- tocheck
lin pedometer_N = mkN "podomètre" masculine ; -- tocheck
lin pedophile_N = mkN "pédophile" ; -- tocheck
lin pedophilia_N = mkN "pédophilie" feminine ; -- tocheck
lin pee_N = mkN "pipi" masculine ; -- tocheck
lin peebles_PN = mkPN "Peebles" ; -- status=guess src=geonames
lin peeing_N = mkN "pipi" | mkN "pisser" | mkN "urine" ; -- UWN
lin peel_N = mkN "écorce" feminine ; -- tocheck
lin peel_V2 = mkV2 (mkV "éplucher") ; -- tocheck
lin peel_off_V = mkV "desquamer" ; -- UWN
lin peeler_N = mkN "épluchoir" masculine | mkN "éplucheur" ; -- tocheck
lin peep_N = mkN "pépiement" masculine ; -- tocheck
lin peephole_N = mkN "judas" masculine ; -- tocheck
lin peer_N = mkN "pair" masculine ; -- tocheck
lin peer_V = variants {} ; --
lin peerage_N = mkN "pairie" feminine ; -- tocheck
lin peerless_A = mkA "inégalable" | mkA "un" ; -- UWN
lin peevish_A = mkA "maussade" ; -- UWN
lin peg_N = mkN "cheville" feminine | mkN "porte-manteau" masculine ; -- tocheck
lin pegmatite_N = mkN "Pegmatite" | mkN "pegmatite" ; -- UWN
lin peignoir_N = mkN "déshabillé" | mkN "peignoir" ; -- UWN
lin pejorative_A = mkA "péjoratif" ; -- tocheck
lin pelican_N = mkN "pélican" masculine ; -- tocheck
lin pell_mell_Adv = mkAdv "pêle-mêle" ; -- tocheck
lin pellet_N = mkN "plomb" masculine | mkN "granule" | mkN "pelote" ; -- tocheck
lin pellucid_A = mkA "claire" | mkA "limpide" ; -- UWN
lin pelmet_N = mkN "corniche" ; -- UWN
lin pelt_N = mkN "peau" feminine ; -- tocheck
lin pelt_V2 = mkV2 (mkV "bombarder") ; -- tocheck
lin pelton_PN = mkPN "Pelton" ; -- status=guess src=geonames
lin pelvic_A = mkA "pelvien" ; -- tocheck
lin pelvimeter_N = mkN "pelvimètre" masculine ; -- tocheck
lin pelvis_N = mkN "bassin" masculine ; -- tocheck
lin pelycosaur_N = mkN "pelycosauria" ; -- UWN
lin pembroke_PN = mkPN "Pembroke" ; -- status=guess src=geonames
lin pemphigus_N = mkN "pemphigus" ; -- UWN
lin pen_N = L.pen_N ;
lin pen_V2 = mkV2 (mkV I.écrire_V2) ; -- tocheck
lin penalization_N = mkN "châtiment" | mkN "correction" | mkN "peine" | mkN "punition" | mkN "sanction" ; -- UWN
lin penalize_V2 = mkV2 (mkV "pénaliser") ; -- tocheck
lin penalty_N = mkN "penalty" masculine | mkN "penalisation" feminine | mkN "peine" feminine ; -- tocheck
lin penance_N = mkN "pénitence" | mkN "pénitence" feminine ; -- tocheck
lin penarth_PN = mkPN "Penarth" ; -- status=guess src=geonames
lin penchant_N = mkN "penchant" masculine ; -- tocheck
lin pencil_N = mkN "crayon" masculine ; -- tocheck
lin pendant_N = mkN "pendentif" masculine ; -- tocheck
lin pendragon_N = mkN "pendragon" ; -- UWN
lin pendulum_N = mkN "pendule" masculine ; -- tocheck
lin peneplain_N = mkN "pénéplaine" ; -- UWN
lin penetrate_V = variants {} ; -- mkV2 (mkV "pénétrer") ; -- tocheck
lin penetrate_V2 = mkV2 (mkV "pénétrer") ; -- tocheck
lin penetration_N = mkN "pénétration" feminine ; -- tocheck
lin penguin_N = mkN "manchot" masculine ; -- tocheck
lin penicillin_N = mkN "pénicilline" feminine ; -- tocheck
lin penicillinase_N = mkN "bêta-lactamase" | mkN "bêta-lactamases" ; -- UWN
lin penicuik_PN = mkPN "Penicuik" ; -- status=guess src=geonames
lin penile_A = mkA "pénien" ; -- tocheck
lin peninsula_N = mkN "péninsule" feminine ; -- tocheck
lin peninsular_A = mkA "péninsulaire" ; -- tocheck
lin penis_N = mkN "pénis" masculine ; -- tocheck
lin penitence_N = mkN "pénitence" | mkN "repentance" | mkN "repenti" | mkN "repentir" ; -- UWN
lin penitent_A = mkA "pénitent" ; -- UWN
lin penitent_N = mkN "pénitent" ; -- UWN
lin penitentiary_N = mkN "pénitencier" masculine ; -- tocheck
lin penknife_N = mkN "canif" masculine ; -- tocheck
lin penmanship_N = mkN "calligraphie" | mkN "manuscriture" ; -- UWN
lin pennant_N = mkN "fanion" masculine ; -- tocheck
lin pennate_A = mkA "penné" ; -- UWN
lin penne_N = mkN "penne" ; -- UWN
lin penniless_A = mkA "désargenté" ; -- tocheck
lin penny_N = mkN "penny" masculine ; -- tocheck
lin pennywhistle_N = mkN "flûte_irlandaise" | mkN "siffler" | mkN "sifflet" ; -- UWN
lin penology_N = mkN "pénologie" ; -- UWN
lin pen_pusher_N = mkN "gratte-papier" ; -- UWN
lin penrith_PN = mkPN "Penrith" ; -- status=guess src=geonames
lin penryn_PN = mkPN "Penryn" ; -- status=guess src=geonames
lin pension_N = mkN "pension" feminine ; -- tocheck
lin pension_V2 = mkV2 (mkV "pensioner") ; -- tocheck
lin pensioner_N = mkN "pension" | mkN "pensionnaire" | mkN "pensionné" | mkN "rente" | mkN "retraité" | mkN "titulaire" ; -- UWN
lin pensive_A = mkA "pensif" ; -- tocheck
lin penstock_N = mkN "écluse" ; -- UWN
lin pentacle_N = mkN "pentacle" masculine ; -- tocheck
lin pentagon_N = mkN "pentagone" masculine ; -- tocheck
lin pentagonal_A = mkA "pentagone" ; -- UWN
lin pentahedron_N = mkN "pentaèdre" ; -- tocheck
lin pentameter_N = mkN "pentamètre" ; -- UWN
lin pentangular_A = mkA "pentagone" ; -- UWN
lin pentatonic_A = mkA "pentatonique" ; -- tocheck
lin pentavalent_A = mkA "pentavalent" ; -- tocheck
lin pentecostalism_N = mkN "mouvement_de_pentecôte" | mkN "pentecôtisme" ; -- UWN
lin penthouse_N = mkN "attique" | mkN "appentis" masculine ; -- tocheck
lin pentlandite_N = mkN "pentlandite" ; -- UWN
lin pentode_N = mkN "pentode" ; -- UWN
lin pentose_N = mkN "pentose" | mkN "pentoses" ; -- UWN
lin penult_N = mkN "avant-dernier" | mkN "pénultième" ; -- UWN
lin penultimate_A = mkA "avant-dernier" ; -- tocheck
lin penultimate_N = mkN "avant-dernier" | mkN "pénultième" ; -- UWN
lin penumbra_N = mkN "pénombre" feminine ; -- tocheck
lin penury_N = mkN "besoin" | mkN "manque" | mkN "nécessité" | mkN "paupérisme" | mkN "requérir" ; -- UWN
lin penzance_PN = mkPN "Penzance" ; -- status=guess src=geonames
lin peon_N = mkN "péon" masculine ; -- tocheck
lin peony_N = mkN "pivoine" feminine ; -- tocheck
lin people_N = mkN "peuple" masculine | mkN "gens" ;
lin pep_N = mkN "pep" masculine ; -- tocheck
lin pep_V2 = mkV2 (mkV "énergiser") ; -- tocheck
lin peplos_N = mkN "péplos" ; -- UWN
lin peplum_N = mkN "péplos" ; -- UWN
lin pepper_N = mkN "poivrier" masculine | mkN "poivre" masculine ; -- tocheck
lin pepper_V2 = mkV2 (mkV "poivrer") ; -- tocheck
lin peppercorn_N = mkN "poivre" ; -- UWN
lin pepperoni_N = mkN "pepperoni" ; -- UWN
lin peppery_A = mkA "chaud" | mkA "piquant" | mkA "épicé" ; -- UWN
lin pepsin_N = mkN "pepsine" feminine ; -- tocheck
lin peptide_N = mkN "peptide" masculine ; -- tocheck
lin per_Prep = variants {} ; --
lin perambulation_N = mkN "flâner" | mkN "promenade" ; -- UWN
lin percale_N = mkN "percale" ; -- UWN
lin perceivable_A = mkA "comprenable" | mkA "compréhensible" ; -- UWN
lin perceive_V2 = variants {} ; -- mkV2V (mkV I.percevoir_V2) ; -- tocheck
lin perceive_V2V = mkV2V (mkV I.percevoir_V2) ; -- tocheck
lin perceive_VS = variants {} ; -- mkV2V (mkV I.percevoir_V2) ; -- tocheck
lin perceived_A = variants {} ; --
lin percent_N = mkN "pourcent" masculine ;
lin percentage_N = mkN "pourcentage" masculine ; -- tocheck
lin percept_N = mkN "Percept" | mkN "percept" | mkN "perception" ; -- UWN
lin perceptible_A = mkA "perceptible" ; -- tocheck
lin perception_N = mkN "perception" feminine ; -- tocheck
lin perceptive_A = mkA "perspicace" ; -- tocheck
lin perch_N = mkN "perche" feminine | mkN "perchoir" masculine ; -- tocheck
lin perchlorate_N = mkN "Perchlorate" | mkN "perchlorate" | mkN "perchlorates" ; -- UWN
lin percolate_V2 = mkV2 (mkV "percoler") ; -- tocheck
lin percolation_N = mkN "percolation" feminine ; -- tocheck
lin percolator_N = mkN "percolateur" ; -- UWN
lin percussionist_N = mkN "percussionniste" ; -- tocheck
lin percy_PN = mkPN "Percy" ; -- status=guess src=geonames
lin peregrination_N = mkN "pérégrination" ; -- UWN
lin peremptory_A = mkA "impérieux" | mkA "irréfutable" | mkA "péremptoire" ; -- tocheck
lin perennial_A = mkA "pérenne" ; -- tocheck
lin perennial_N = mkN "vivace" ; -- tocheck
lin perestroika_N = mkN "perestroïka" feminine ; -- tocheck
lin perfect_A = mkA "parfait" ; -- tocheck
lin perfect_V2 = mkV2 (mkV "perfectionner") ; -- tocheck
lin perfectibility_N = mkN "perfectibilité" feminine ; -- tocheck
lin perfection_N = mkN "perfection" feminine ; -- tocheck
lin perfectionism_N = mkN "perfectionnisme" masculine ; -- tocheck
lin perfectionist_N = mkN "perfectionniste" ; -- tocheck
lin perfective_N = mkN "perfectif" masculine ; -- tocheck
lin perfervid_A = mkA "fervent" | mkA "torride" ; -- UWN
lin perfidious_A = mkA "perfide" ; -- tocheck
lin perfidiousness_N = mkN "perfidie" ; -- UWN
lin perfidy_N = mkN "perfidie" feminine ; -- tocheck
lin perform_V = variants {} ; --
lin perform_V2 = variants {} ; --
lin performance_1_N = mkN "fonctionnement" | mkN "opération" | mkN "performance" ; -- UWN
lin performance_2_N = variants {} ; --
lin performance_N = mkN "performance" feminine | mkN "représentation" feminine | mkN "exécution" feminine ; -- tocheck
lin performer_N = mkN "artiste" ; -- tocheck
lin perfume_N = mkN "parfum" masculine ; -- tocheck
lin perfume_V2 = mkV2 (mkV "parfumer") ; -- tocheck
lin perfumerFem_N = mkN "parfumeuse" feminine ; -- tocheck
lin perfumerMasc_N = mkN "parfumeur" masculine ; -- tocheck
lin perfumery_N = mkN "parfumerie" feminine ; -- tocheck
lin perfunctory_A = mkA "sommaire" ; -- tocheck
lin pergola_N = mkN "pergola" feminine ; -- tocheck
lin perhaps_Adv = mkAdv "peut-être" ;
lin perianth_N = mkN "périanthe" masculine ; -- tocheck
lin periapsis_N = mkN "périapse" ; -- tocheck
lin pericarditis_N = mkN "péricardite" ; -- UWN
lin pericardium_N = mkN "Péricarde" | mkN "péricarde" ; -- UWN
lin pericarp_N = mkN "péricarpe" masculine ; -- tocheck
lin periclase_N = mkN "oxyde_de_magnésium" | mkN "périclase" ; -- UWN
lin peridot_N = mkN "péridot" masculine ; -- tocheck
lin peridotite_N = mkN "péridotite" ; -- UWN
lin perigee_N = mkN "périgée" masculine ; -- tocheck
lin perihelion_N = mkN "périhélie" masculine ; -- tocheck
lin peril_N = mkN "péril" | mkN "risque" masculine ; -- tocheck
lin perilous_A = mkA "périlleux" ; -- tocheck
lin perimeter_N = mkN "périmètre" masculine ; -- tocheck
lin perinatal_A = mkA "périnatal" ; -- UWN
lin perineal_A = mkA "périnéal" ; -- tocheck
lin perineum_N = mkN "périnée" masculine ; -- tocheck
lin period_1_N = mkN "période" feminine ;
lin period_2_N = mkN "point" masculine ;
lin period_3_N = mkN "menstruation" feminine ;
lin period_N = mkN "période" feminine | mkN "point" masculine ;
lin periodic_A = mkA "périodique" ; -- tocheck
lin periodical_A = mkA "périodique" ; -- UWN
lin periodical_N = mkN "périodique" masculine ; -- tocheck
lin periodontic_A = mkA "parodontal" ; -- UWN
lin periodontist_N = mkN "parodontologue" ; -- UWN
lin periosteum_N = mkN "périoste" ; -- UWN
lin peripeteia_N = mkN "péripétie" ; -- UWN
lin peripheral_A = mkA "périphérique" ; -- UWN
lin peripheral_N = mkN "périphérique" | mkN "périphérique_informatique" ; -- UWN
lin periphery_N = mkN "périphérie" feminine ; -- tocheck
lin periphrasis_N = mkN "périphrase" feminine ; -- tocheck
lin periphrastic_A = mkA "périphrastique" ; -- tocheck
lin periscope_N = mkN "périscope" masculine ; -- tocheck
lin perish_V2 = mkV2 (mkV "périr") ; -- tocheck
lin perishable_A = mkA "périssable" ; -- tocheck
lin perishable_N = mkN "périssable" ; -- tocheck
lin peristalsis_N = mkN "péristaltisme" masculine ; -- tocheck
lin peristome_N = mkN "péristome" ; -- UWN
lin peristyle_N = mkN "péristyle" masculine ; -- tocheck
lin peritoneal_A = mkA "péritonéal" ; -- tocheck
lin peritoneum_N = mkN "péritoine" masculine ; -- tocheck
lin peritonitis_N = mkN "péritonite" ; -- tocheck
lin periwig_N = mkN "perruque" ; -- UWN
lin periwinkle_N = mkN "pervenche" feminine | mkN "bigorneau" masculine ; -- tocheck
lin perjure_V2 = mkV2 (mkV "parjurer") ; -- tocheck
lin perjury_N = mkN "parjure" masculine ; -- tocheck
lin perky_A = mkA "gai" | mkA "ferme" ; -- tocheck
lin perm_N = mkN "permanent" ; -- UWN
lin perm_PN = mkPN "Perm" ; -- status=guess src=geonames
lin permafrost_N = mkN "pergélisol" masculine ; -- tocheck
lin permanence_N = mkN "permanence" feminine ; -- tocheck
lin permanency_N = mkN "permanence" ; -- UWN
lin permanent_A = mkA "permanent" ; -- tocheck
lin permanganate_N = mkN "permanganate" ; -- UWN
lin permeability_N = mkN "perméabilité" feminine ; -- tocheck
lin permeable_A = mkA "perméable" ; -- tocheck
lin permeate_V2 = mkV2 (reflV (mkV "infiltrer")) | mkV2 (mkV "imprégner") ; -- tocheck
lin permission_N = mkN "permission" feminine ; -- tocheck
lin permissive_A = mkA "permissif" ; -- tocheck
lin permissiveness_N = mkN "permissivité" | mkN "tolérance" ; -- UWN
lin permit_N = mkN "permis" masculine ; -- tocheck
lin permit_V = variants {} ; -- mkV2V (mkV I.permettre_V2) ; -- tocheck
lin permit_V2 = variants {} ; -- mkV2V (mkV I.permettre_V2) ; -- tocheck
lin permit_V2V = mkV2V (mkV I.permettre_V2) ; -- tocheck
lin permutation_N = mkN "permutation" feminine ; -- tocheck
lin permute_V2 = mkV2 (mkV "permuter") ; -- tocheck
lin pernicious_A = mkA "nocif" ; -- tocheck
lin perniciousness_N = mkN "toxicité" ; -- UWN
lin pernickety_A = mkA "chipoteur" ; -- UWN
lin peroration_N = mkN "péroraison" feminine ; -- tocheck
lin peroxidase_N = mkN "Peroxydase" | mkN "peroxydase" ; -- UWN
lin peroxide_N = mkN "peroxyde" masculine ; -- tocheck
lin perpendicular_A = mkA "perpendiculaire" ; -- tocheck
lin perpendicular_N = mkN "perpendiculaire" feminine ; -- tocheck
lin perpetration_N = mkN "commission" ; -- UWN
lin perpetrator_N = mkN "coupable" ; -- tocheck
lin perpetual_A = mkA "perpétuel" ; -- tocheck
lin perpetuate_V2 = mkV2 (mkV "perpétuer") ; -- tocheck
lin perpetuation_N = mkN "prolongation" | mkN "prorogation" ; -- UWN
lin perpetuity_N = mkN "perpétuité" ; -- UWN
lin perplexity_N = mkN "perplexité" ; -- tocheck
lin perquisite_N = mkN "don" masculine | mkN "gratification" feminine | mkN "privilège" masculine ; -- tocheck
lin perry_N = mkN "perry" | mkN "poiré" ; -- UWN
lin persecute_V2 = mkV2 (mkV "persécuter") ; -- tocheck
lin persecution_N = mkN "persécution" feminine ; -- tocheck
lin perseverance_N = mkN "persévérance" feminine ; -- tocheck
lin perseveration_N = mkN "persistance" | mkN "persévérance" ; -- UWN
lin persevere_V = mkV (mkV "persévérer") ; -- tocheck
lin pershore_PN = mkPN "Pershore" ; -- status=guess src=geonames
lin persianFem_N = variants {} ; ---- sense to be split
lin persianMasc_N = variants {} ; ---- sense to be split
lin persimmon_N = mkN "kaki" | mkN "plaqueminier" ; -- UWN
lin persist_V = mkV (mkV "persister") ; -- tocheck
lin persistence_N = mkN "persistance" ; -- tocheck
lin persistent_A = mkA "persistant" ; -- tocheck
lin person_N = L.person_N ;
lin persona_N = mkN "personnage" masculine | mkN "persona" feminine ; -- tocheck
lin personage_N = mkN "personnage" masculine ; -- tocheck
lin personal_A = mkA "personnel" ;
lin personal_N = mkN "personnel" ; -- UWN
lin personality_N = mkN "personnalité" feminine ; -- tocheck
lin personalty_N = mkN "propriété_personnelle" | mkN "propriété_privée" ; -- UWN
lin personation_N = mkN "caractérisation" ; -- UWN
lin personification_N = mkN "personnification" feminine ; -- tocheck
lin personnel_N = mkN "effectif" | mkN "personnel" ; -- UWN
lin perspective_N = mkN "perspective" feminine ; -- tocheck
lin perspicacious_A = mkA "clairvoyant" | mkA "perspicace" ; -- tocheck
lin perspicacity_N = mkN "perspicacité" feminine ; -- tocheck
lin perspicuous_A = mkA "claire" | mkA "limpide" ; -- UWN
lin perspiration_N = mkN "transpiration" feminine ; -- tocheck
lin perspire_V = mkV (mkV "transpirer") ; -- tocheck
lin perspirer_N = mkN "chandail" | mkN "pull-over" ; -- UWN
lin persuade_V2 = variants {} ; -- mkV2V (mkV "persuader") ; -- tocheck
lin persuade_V2V = mkV2V (mkV "persuader") ; -- tocheck
lin persuader_N = mkN "persuader" ; -- UWN
lin persuasion_N = mkN "persuasion" feminine ; -- tocheck
lin persuasiveness_N = mkN "force" ; -- UWN
lin pert_A = mkA "impertinent" | mkA "animé" | mkA "ouvert" ; -- tocheck
lin pertain_V = mkV (mkV I.appartenir_V2) ; -- tocheck
lin perth_PN = mkPN "Perth" ; -- status=guess src=geonames
lin pertinence_N = mkN "pertinence" feminine ; -- tocheck
lin pertinent_A = mkA "pertinent" ; -- tocheck
lin perturbation_N = mkN "perturbation" ; -- UWN
lin peru_PN = mkPN "Pérou" ; -- status=guess src=geonames
lin perugia_PN = mkPN "Pérouse" ; -- status=guess src=geonames
lin peruke_N = mkN "perruque" feminine ; -- tocheck
lin peruse_V2 = mkV2 (mkV "examiner") ; -- tocheck
lin pervade_V2 = mkV2 (mkV "saturer") ; -- tocheck
lin pervaporation_N = mkN "pervaporation" ; -- UWN
lin pervasive_A = mkA "pénétrant" ; -- tocheck
lin perverse_A = mkA "pervers" ; -- tocheck
lin perverseness_N = mkN "perversité" ; -- UWN
lin perversion_N = mkN "perversion" ; -- UWN
lin perversity_N = mkN "perversité" ; -- UWN
lin pervert_N = mkN "déviant" masculine | mkN "pervers" masculine ; -- tocheck
lin pescara_PN = mkPN "Pescara" ; -- status=guess src=geonames
lin peseta_N = mkN "peseta" feminine ; -- tocheck
lin peshmerga_N = mkN "peshmerga" ; -- UWN
lin pesky_A = mkA "agaçant" ; -- tocheck
lin peso_N = mkN "peso" masculine ; -- tocheck
lin pessary_N = mkN "Pessaire" | mkN "diaphragme" | mkN "pessaire" ; -- UWN
lin pessimism_N = mkN "pessimisme" masculine ; -- tocheck
lin pessimistFem_N = mkN "chevêche" | mkN "pessimiste" ; -- UWN
lin pessimistMasc_N = mkN "chevêche" | mkN "pessimiste" ; -- UWN
lin pessimistic_A = mkA "pessimiste" ; -- tocheck
lin pest_N = mkN "peste" ; -- tocheck
lin pesticide_N = mkN "pesticide" masculine ; -- tocheck
lin pestiferous_A = mkA "agaçant" | mkA "embêtant" | mkA "ennuyeux" | mkA "gênant" | mkA "pénible" ; -- UWN
lin pestle_N = mkN "pilon" ; -- tocheck
lin pesto_N = mkN "pesto" masculine ; -- tocheck
lin pet_N = mkN "chouchou" masculine ; -- tocheck
lin pet_V2 = mkV2 (mkV "caresser") | mkV2 (mkV "peloter") | mkV2 (reflV (mkV "peloter")) ; -- tocheck
lin petabyte_N = mkN "pétaoctet" masculine ; -- tocheck
lin petal_N = mkN "pétale" masculine ; -- tocheck
lin petaloid_A = mkA "pétaloïde" ; -- tocheck
lin petechia_N = mkN "pétéchie" ; -- UWN
lin peterborough_PN = mkPN "Peterborough" ; -- status=guess src=geonames
lin peterhead_PN = mkPN "Peterhead" ; -- status=guess src=geonames
lin peterlee_PN = mkPN "Peterlee" ; -- status=guess src=geonames
lin petersfield_PN = mkPN "Petersfield" ; -- status=guess src=geonames
lin petfood_N = mkN "aliment_pour_animal_de_compagnie" ; -- UWN
lin petit_bourgeois_N = mkN "petite_bourgeoisie" ; -- UWN
lin petition_N = mkN "pétition" ; -- tocheck
lin petition_V2 = mkV2 (mkV "pétitionner") ; -- tocheck
lin petitioner_N = mkN "pétitionnaire" ; -- tocheck
lin petrel_N = mkN "pétrel" masculine ; -- tocheck
lin petrify_V2 = mkV2 (mkV "pétrifier") ; -- tocheck
lin petrol_N = variants {} ; --
lin petrolatum_N = mkN "vaseline" ; -- UWN
lin petroleum_N = mkN "pétrole" | mkN "pétrole_brut" ; -- UWN
lin petrology_N = mkN "pétrologie" ; -- UWN
lin petter_N = mkN "petter" ; -- UWN
lin petticoat_N = mkN "cotillon" masculine | mkN "jupon" masculine ; -- tocheck
lin pettish_A = mkA "maussade" ; -- UWN
lin petty_A = mkA "petit" ; -- tocheck
lin petulant_A = mkA "maussade" ; -- UWN
lin pew_N = mkN "banc_d'église" | mkN "banc_d'œuvre" | mkN "banc_de_fidèle" | mkN "banc_de_l'œuvre" ; -- UWN
lin pewter_N = mkN "alliage_plomb-étain" | mkN "alliages_plomb-étain" | mkN "métal_blanc" | mkN "potin" | mkN "étain" ; -- UWN
lin peyote_N = mkN "peyotl" masculine ; -- tocheck
lin pfennig_N = mkN "pfennig" ; -- UWN
lin ph_N = mkN "potentiel_hydrogène" ; -- UWN
lin phagocyte_N = mkN "phagocyte" masculine ; -- tocheck
lin phagocytosis_N = mkN "phagocytose" ; -- tocheck
lin phaius_N = mkN "phaius" ; -- UWN
lin phalangeal_A = mkA "phalangien" ; -- UWN
lin phalanger_N = mkN "opossum" | mkN "phalanger" | mkN "sarigue" ; -- UWN
lin phalanx_N = mkN "phalange" feminine ; -- tocheck
lin phalarope_N = mkN "phalarope" masculine ; -- tocheck
lin phallic_A = mkA "phallique" ; -- tocheck
lin phalloplasty_N = mkN "phalloplastie" ; -- UWN
lin phallus_N = mkN "phallus" masculine ; -- tocheck
lin phantasm_N = mkN "fantôme" | mkN "ombre" ; -- UWN
lin phantasmagoria_N = mkN "fantasmagorie" feminine ; -- tocheck
lin phantasmagoric_A = mkA "surréaliste" ; -- UWN
lin phantasmal_A = mkA "fantomatique" | mkA "spectral" ; -- UWN
lin phantom_A = mkA "fantôme" ; -- UWN
lin phantom_N = mkN "fantôme" masculine ; -- tocheck
lin pharaoh_N = mkN "pharaon" masculine ; -- tocheck
lin pharisee_N = mkN "pharisien" ; -- UWN
lin pharmaceutical_A = mkA "pharmaceutique" ; -- tocheck
lin pharmacist_N = mkN "pharmacien" masculine ; -- tocheck
lin pharmacogenetics_N = mkN "pharmacogénétique" ; -- UWN
lin pharmacokinetics_N = mkN "pharmacocinétique" ; -- UWN
lin pharmacological_A = mkA "pharmacologique" ; -- tocheck
lin pharmacologist_N = mkN "pharmacologue" masculine ; -- tocheck
lin pharmacology_N = mkN "pharmacologie" feminine ; -- tocheck
lin pharmacopoeia_N = mkN "pharmacopée" ; -- UWN
lin pharmacy_N = mkN "pharmacie" feminine ; -- tocheck
lin pharos_N = mkN "feu" | mkN "phare" ; -- UWN
lin pharyngeal_A = mkA "pharyngé" ; -- tocheck
lin pharyngitis_N = mkN "pharyngite" feminine ; -- tocheck
lin pharynx_N = mkN "pharynx" masculine ; -- tocheck
lin phase_N = variants {} ; --
lin phasmid_N = mkN "phasmide" ; -- UWN
lin pheasant_N = mkN "faisan" masculine ; -- tocheck
lin phellem_N = mkN "liège" ; -- UWN
lin phenol_N = mkN "phénol" masculine ; -- tocheck
lin phenolphthalein_N = mkN "phénolphtaléine" ; -- UWN
lin phenomenal_A = mkA "phénoménal" ; -- tocheck
lin phenomenology_N = mkN "phénoménologie" ; -- tocheck
lin phenomenon_N = mkN "phénomène" masculine ; -- tocheck
lin phenothiazine_N = mkN "phénothiazines" ; -- UWN
lin phenotype_N = mkN "phénotype" masculine ; -- tocheck
lin phenylalanine_N = mkN "phénylalanine" feminine ; -- tocheck
lin phenylpropanolamine_N = mkN "noréphédrine" | mkN "phénylpropanolamine" ; -- UWN
lin pheochromocytoma_N = mkN "phéochromocytome" ; -- UWN
lin pheromone_N = mkN "phéromone" feminine ; -- tocheck
lin phi_N = mkN "phi" masculine ; -- tocheck
lin phial_N = mkN "ampoule" | mkN "fiole" ; -- UWN
lin philadelphia_PN = mkPN "Philadelphie" ; -- status=guess src=geonames
lin philadelphus_N = mkN "philadelphus" | mkN "seringas" | mkN "seringats" ; -- UWN
lin philanderer_N = mkN "flirteur" masculine ; -- tocheck
lin philanthropic_A = mkA "philanthropique" ; -- tocheck
lin philanthropist_N = mkN "philanthrope" ; -- tocheck
lin philanthropy_N = mkN "philantropie" feminine ; -- tocheck
lin philatelic_A = mkA "philatélique" ; -- tocheck
lin philatelist_N = mkN "philatéliste" ; -- tocheck
lin philately_N = mkN "philatélie" feminine ; -- tocheck
lin philip_PN = mkPN "Philip" ; -- status=guess src=geonames
lin philippines_PN = mkPN "Philippines" ; -- status=guess src=geonames
lin philistine_N = mkN "philistin" ; -- UWN
lin philistinism_N = mkN "matérialisme" ; -- UWN
lin philodendron_N = mkN "philodendron" ; -- UWN
lin philological_A = mkA "philologique" ; -- tocheck
lin philologist_N = mkN "philologue" ; -- tocheck
lin philology_N = mkN "philologie" feminine ; -- tocheck
lin philosopher_N = mkN "philosophe" ; -- tocheck
lin philosophical_A = variants {} ; --
lin philosophize_V = mkV "philosopher" ; -- UWN
lin philosophy_N = mkN "philosophie" feminine | mkN "philosophie" ; -- tocheck
lin philter_N = mkN "philtre" masculine ; -- tocheck
lin phimosis_N = mkN "phimosis" ; -- tocheck
lin phlebitis_N = mkN "phlébite" feminine ; -- tocheck
lin phlegm_N = mkN "flegme" masculine | mkN "glaire" feminine ; -- tocheck
lin phlegmatic_A = mkA "flegmatique" ; -- tocheck
lin phloem_N = mkN "phloème" masculine ; -- tocheck
lin phlogiston_N = mkN "phlogiston" ; -- tocheck
lin phlogopite_N = mkN "phlogopite" ; -- UWN
lin phobia_N = mkN "phobie" feminine ; -- tocheck
lin phobic_A = mkA "phobique" ; -- UWN
lin phocomelia_N = mkN "phocomélie" ; -- UWN
lin phoenix_N = mkN "phénix" masculine ; -- tocheck
lin phoenix_PN = mkPN "Phoenix" ; -- status=guess src=geonames
lin phon_N = mkN "phone" masculine ; -- tocheck
lin phone_N = mkN "téléphone" masculine ; -- tocheck
lin phone_V = mkV "appeler" | mkV "téléphoner" ; -- UWN
lin phone_V2 = mkV2 (mkV "téléphoner") ; -- tocheck
lin phonebook_N = mkN "annuaire_téléphonique" | mkN "liste" ; -- UWN
lin phoneme_N = mkN "phonème" masculine ; -- tocheck
lin phonemic_A = mkA "phonémique" ; -- tocheck
lin phonemics_N = mkN "phonologie" ; -- UWN
lin phonetic_A = mkA "phonétique" ; -- tocheck
lin phonetician_N = mkN "phonéticien" masculine ; -- tocheck
lin phonetics_N = mkN "phonétique" feminine ; -- tocheck
lin phoney_A = mkA "baisé" | mkA "bidouillé" | mkA "falsifié" | mkA "faux" | mkA "fichu" | mkA "foutu" | mkA "maquillé" | mkA "niqué" | mkA "trafiqué" | mkA "truqué" ; -- UWN
lin phoney_N = mkN "charlatan" | mkN "faux" | mkN "hypocrite" | mkN "mystificateur" | mkN "trompeur" ; -- UWN
lin phonic_A = mkA "phonique" ; -- tocheck
lin phonological_A = mkA "phonologique" ; -- tocheck
lin phonologist_N = mkN "phonologue" ; -- tocheck
lin phonology_N = mkN "phonologie" feminine ; -- tocheck
lin phony_A = mkA "frauduleux" ; -- tocheck
lin phony_N = mkN "usurpateur" masculine | mkN "mystificateur" masculine | mkN "escroc" ; -- tocheck
lin phoronid_N = mkN "Phoronida" | mkN "phoronida" ; -- UWN
lin phosgene_N = mkN "dichlorure_de_carbonyle" | mkN "dichlorure_de_méthanoyle" | mkN "oxychlorure_de_carbone" | mkN "phosgène" ; -- UWN
lin phosphate_N = mkN "phosphate" masculine ; -- tocheck
lin phosphine_N = mkN "phosphine" ; -- UWN
lin phosphocreatine_N = mkN "phosphate_de_créatine" | mkN "phosphocréatine" ; -- UWN
lin phospholipid_N = mkN "phospholipide" masculine ; -- tocheck
lin phosphorescence_N = mkN "phosphorescence" feminine ; -- tocheck
lin phosphorescent_A = mkA "phosphorescent" ; -- tocheck
lin phosphorous_A = mkA "phosphorique" ; -- tocheck
lin phosphorus_N = mkN "phosphore" masculine ; -- tocheck
lin photic_A = mkA "photique" ; -- tocheck
lin photo_N = mkN "photo" feminine ; -- tocheck
lin photocathode_N = mkN "photocathode" ; -- UWN
lin photochemical_A = mkA "photochimique" ; -- tocheck
lin photochemistry_N = mkN "Photochimie" | mkN "photochimie" ; -- UWN
lin photoconductivity_N = mkN "photoconductivité" feminine ; -- tocheck
lin photocopy_N = mkN "photocopie" ; -- UWN
lin photoelectric_A = mkA "photoélectrique" ; -- UWN
lin photoemission_N = mkN "photoémission" feminine ; -- tocheck
lin photoemissive_A = mkA "photoémissif" ; -- tocheck
lin photogenic_A = mkA "photogénique" ; -- tocheck
lin photograph_N = mkN "photographie" feminine ; -- tocheck
lin photograph_V2 = mkV2 (mkV "photographier") ; -- tocheck
lin photographer_N = mkN "photographe" ; -- tocheck
lin photographic_A = mkA "photographique" ; -- UWN
lin photography_N = mkN "photographie" feminine ; -- tocheck
lin photojournalism_N = mkN "photojournalisme" masculine ; -- tocheck
lin photojournalist_N = mkN "photojournaliste" ; -- UWN
lin photometer_N = mkN "photomètre" masculine ; -- tocheck
lin photometry_N = mkN "photométrie" ; -- UWN
lin photomicrograph_N = mkN "photomicrographie" ; -- UWN
lin photomontage_N = mkN "photomontage" masculine ; -- tocheck
lin photon_N = mkN "photon" masculine ; -- tocheck
lin photophobia_N = mkN "photophobie" ; -- tocheck
lin photosensitivity_N = mkN "photosensibilité" ; -- UWN
lin photosphere_N = mkN "photosphère" ; -- UWN
lin photosynthesis_N = mkN "photosynthèse" feminine ; -- tocheck
lin phototherapy_N = mkN "photothérapie" feminine ; -- tocheck
lin phototropism_N = mkN "héliotropisme" masculine ; -- tocheck
lin photovoltaic_A = mkA "photovoltaïque" ; -- tocheck
lin phrase_N = mkN "expression" feminine | mkN "syntagme" masculine | mkN "phrase" feminine ; -- tocheck
lin phrase_V2 = mkV2 (mkV "phraser") | mkV2 (mkV "exprimer") ; -- tocheck
lin phraseology_N = mkN "phraséologie" feminine ; -- tocheck
lin phrasing_N = mkN "phrasé" ; -- UWN
lin phreatic_A = mkA "phréatique" ; -- tocheck
lin phrenological_A = mkA "phrénologique" ; -- tocheck
lin phrenologist_N = mkN "phrénologiste" ; -- tocheck
lin phrenology_N = mkN "phrénologie" feminine ; -- tocheck
lin phthisis_N = mkN "alimentation" | mkN "consommation" | mkN "tuberculose" ; -- UWN
lin phycoerythrin_N = mkN "phycoérythrine" ; -- UWN
lin phycology_N = mkN "phycologie" ; -- tocheck
lin phylactery_N = mkN "phylactère" masculine ; -- tocheck
lin phyle_N = mkN "tribus" ; -- UWN
lin phylogenetic_A = mkA "phylogénétique" ; -- UWN
lin phylum_N = mkN "embranchement" masculine ; -- tocheck
lin physa_N = mkN "physa" ; -- UWN
lin physical_A = mkA "physiologique" | mkA "physique" ; -- tocheck
lin physician_N = mkN "médecin" masculine ; -- tocheck
lin physicist_N = mkN "physicien" ; -- tocheck
lin physicochemical_A = mkA "physico-chimique" ; -- UWN
lin physics_N = mkN "physique" feminine ; -- tocheck
lin physiognomy_N = mkN "physiognomonie" feminine ; -- tocheck
lin physiologist_N = mkN "physiologiste" ; -- UWN
lin physiology_N = mkN "physiologie" feminine ; -- tocheck
lin physiotherapist_N = mkN "physiothérapeute" ; -- tocheck
lin physiotherapy_N = mkN "kinésithérapie" feminine ; -- tocheck
lin physostegia_N = mkN "physostegia" ; -- UWN
lin phytelephas_N = mkN "Phytelephas" ; -- UWN
lin phytohormone_N = mkN "phytohormone" ; -- UWN
lin phytotherapy_N = mkN "phytothérapie" ; -- UWN
lin pi_N = mkN "pi" masculine ; -- tocheck
lin piacenza_PN = mkPN "Plaisance" ; -- status=guess src=geonames
lin pianism_N = mkN "pianisme" ; -- UWN
lin pianistFem_N = mkN "pianiste" feminine ; -- tocheck
lin pianistMasc_N = mkN "pianiste" masculine ; -- tocheck
lin piano_A = mkA "molle" | mkA "mou" | mkA "piano" ; -- UWN
lin piano_Adv = mkAdv "piano" ; -- UWN
lin piano_N = mkN "piano" masculine ; -- tocheck
lin pianoforte_N = mkN "piano" ; -- UWN
lin piazza_N = mkN "esplanade" | mkN "place" | mkN "rond-point" ; -- UWN
lin picador_N = mkN "picador" masculine ; -- tocheck
lin piccalilli_N = mkN "le_piccalilli" | mkN "piccalilli" ; -- UWN
lin piccolo_N = mkN "piccolo" ; -- tocheck
lin pick_N = mkN "écran" | mkN "choix" masculine | mkN "médiator" masculine | mkN "pioche" feminine ; -- tocheck
lin pick_V = mkV "cueillir" ; -- UWN
lin pick_V2 = mkV2 (mkV "choisir") | mkV2 (mkV I.prendre_V2) | mkV2 (mkV I.cueillir_V2) ; -- tocheck
lin pick_at_V2 = prepV2 OP_pick_V OP_at_Prep ; -- guess-p-verb
lin pick_away_V = advV OP_pick_V OP_away_Adv ; -- guess-p-verb
lin pick_off_V2 = prepV2 OP_pick_V OP_off_Prep ; -- guess-p-verb
lin pick_on_V2 = prepV2 OP_pick_V OP_on_Prep ; -- guess-p-verb
lin pick_out_V2 = prepV2 OP_pick_V OP_out_Prep ; -- guess-p-verb
lin pick_through_V2 = prepV2 OP_pick_V OP_through_Prep ; -- guess-p-verb
lin pick_up_V = advV OP_pick_V OP_up_Adv ; -- guess-p-verb
lin pick_up_V2 = prepV2 OP_pick_V OP_up_Prep ; -- guess-p-verb
lin pick_up_after_V2 = prepV2 (advV OP_pick_V OP_up_Adv ) OP_after_Prep ; -- guess-p-verb
lin pick_up_on_V2 = prepV2 (advV OP_pick_V OP_up_Adv ) OP_on_Prep ; -- guess-p-verb
lin pick_yourself_up_V = variants {} ; -- guess-p-verb
lin pickaxe_N = mkN "pioche" feminine ; -- tocheck
lin pickelhaube_N = mkN "casque_à_pointe" ; -- UWN
lin pickle_N = mkN "pickles" | mkN "cornichon" masculine ; -- tocheck
lin pickle_V2 = mkV2 (mkV "saler") ; -- tocheck
lin pickpocket_N = mkN "pickpocket" masculine ; -- tocheck
lin picnic_N = mkN "pique-nique" masculine ; -- tocheck
lin picnicker_N = mkN "piqueniqueur" masculine ; -- tocheck
lin picornavirus_N = mkN "picornaviridae" | mkN "picornaviridés" ; -- UWN
lin picosecond_N = mkN "picoseconde" ; -- UWN
lin pictorial_N = mkN "illustré" masculine ; -- tocheck
lin picture_N = mkN "cinéma" masculine | mkN "photo" feminine | mkN "image" feminine ; -- tocheck
lin picture_V2 = variants {} ; --
lin picturesque_A = mkA "pittoresque" ; -- tocheck
lin piculet_N = mkN "picumnes" | mkN "picumninae" | mkN "picumninés" ; -- UWN
lin piddle_N = mkN "eau" | mkN "pipi" | mkN "urine" ; -- UWN
lin pidgin_N = mkN "pidgin" masculine ; -- tocheck
lin pie_N = mkN "tourte" feminine | mkN "tarte" feminine | mkN "gâteau" ; -- tocheck
lin piebald_A = mkA "pie" ; -- tocheck
lin piece_N = mkN "pièce" feminine | mkN "morceau" masculine ; -- tocheck
lin pied_A = mkA "bigarré" | mkA "multicolore" | mkA "pie" ; -- UWN
lin pieplant_N = mkN "rhubarbe" ; -- UWN
lin pier_N = mkN "jetée" feminine | mkN "pilier" masculine | mkN "pile" feminine ; -- tocheck
lin pierce_V = mkV "percer" ; -- UWN
lin pierce_V2 = mkV2 (mkV "percer") ; -- tocheck
lin piety_N = mkN "piété" feminine ; -- tocheck
lin piezoelectric_A = mkA "piézoélectrique" ; -- tocheck
lin piezoelectricity_N = mkN "piézoélectricité" feminine ; -- tocheck
lin piezometer_N = mkN "piézomètre" masculine ; -- tocheck
lin piffle_N = mkN "babil" ; -- tocheck
lin piffle_V = mkV (mkV "babiller") ; -- tocheck
lin pig_N = mkN "flic" masculine | mkN "cochon" masculine | mkN "salaud" masculine ; -- tocheck
lin pig_out_V = mkV "bâfrer" | mkV "goinfrer" | mkV "gueuletonner" | mkV "mettre" | mkV "s'empiffrer" ; -- UWN
lin pigeon_N = mkN "pigeon" masculine ; -- tocheck
lin piggery_N = mkN "porcherie" ; -- tocheck
lin piglet_N = mkN "cochonnet" masculine ; -- tocheck
lin pigment_N = mkN "pigment" masculine ; -- tocheck
lin pigmentation_N = mkN "pigmentation" feminine ; -- tocheck
lin pigsty_N = mkN "porcherie" feminine ; -- tocheck
lin pigtail_N = mkN "couette" feminine | mkN "tresse" feminine ; -- tocheck
lin pigweed_N = mkN "pourpier" ; -- UWN
lin pika_N = mkN "pika" ; -- UWN
lin pike_N = mkN "brochet" masculine | mkN "pique" feminine ; -- tocheck
lin pilaff_N = mkN "pilaf" masculine ; -- tocheck
lin pilaster_N = mkN "pilastre" ; -- UWN
lin pilchard_N = mkN "sardine" ; -- UWN
lin pile_N = mkN "pile" feminine | mkN "monceau" masculine | mkN "pieu" ; -- tocheck
lin pile_V = variants {} ; --
lin pile_V2 = variants {} ; --
lin pile_up_N = mkN "carambolage" masculine ; -- tocheck
lin pilfer_V2 = mkV2 (mkV "piquer") ; -- tocheck
lin pilferage_N = mkN "chapardage" ; -- tocheck
lin pilgrim_N = mkN "pèlerin" masculine ; -- tocheck
lin pilgrimage_N = mkN "pèlerinage" ; -- tocheck
lin pill_N = mkN "pilule" | mkN "pilule" feminine ; -- tocheck
lin pill_PN = mkPN "Pill" ; -- status=guess src=geonames
lin pillage_N = mkN "pillage" ; -- UWN
lin pillage_V2 = mkV2 (mkV "piller") ; -- tocheck
lin pillager_N = mkN "pillard" | mkN "pilleur" | mkN "saccageur" ; -- UWN
lin pillar_N = mkN "pilier" masculine ; -- tocheck
lin pillory_N = mkN "pilori" masculine ; -- tocheck
lin pillow_N = mkN "oreiller" masculine ; -- tocheck
lin pillowcase_N = mkN "cas" | mkN "taie" ; -- UWN
lin pilocarpine_N = mkN "pilocarpine" ; -- UWN
lin pilot_N = mkN "pilote" masculine ; -- tocheck
lin pimp_N = mkN "souteneur" ; -- tocheck
lin pimpernel_N = mkN "mouron" masculine ; -- tocheck
lin pimple_N = mkN "casse-couilles" masculine | mkN "bouton" masculine ; -- tocheck
lin pin_N = mkN "clouage" masculine | mkN "épingle" feminine | mkN "quille" feminine | mkN "pin's" masculine ; -- tocheck
lin pin_V2 = mkV2 (mkV "clouer") | mkV2 (mkV "épingler") ; -- tocheck
lin pin_up_N = mkN "pin-up" ; -- tocheck
lin pinafore_N = mkN "tablier" masculine ; -- tocheck
lin pinball_N = mkN "bille" feminine | mkN "flipper" masculine ; -- tocheck
lin pince_nez_N = mkN "pince-nez" masculine ; -- tocheck
lin pincer_N = mkN "griffe" | mkN "pince" ; -- UWN
lin pinch_N = mkN "pincement" masculine | mkN "pincée" feminine ; -- tocheck
lin pinch_V2 = mkV2 (mkV "pincer") | mkV2 (mkV "chiper") ; -- tocheck
lin pine_N = mkN "pin" masculine ; -- tocheck
lin pine_V = mkV (mkV "languir") ; -- tocheck
lin pineapple_N = mkN "ananas" masculine ; -- tocheck
lin pinhole_N = mkN "sténopé" ; -- UWN
lin pink_A = mkA "rose" ; -- tocheck
lin pink_N = mkN "rose" masculine | mkN "oeillet" masculine ; -- tocheck
lin pinkish_A = mkA "rosâtre" ; -- tocheck
lin pinna_N = mkN "pavillon" masculine ; -- tocheck
lin pinnace_N = mkN "pinasse_du_bassin_d'arcachon" ; -- UWN
lin pinnacle_N = mkN "cime" | mkN "pic" ; -- tocheck
lin pinny_N = mkN "tablier" ; -- UWN
lin pinochle_N = mkN "bésigue" ; -- UWN
lin pinocytosis_N = mkN "pinocytose" ; -- UWN
lin pinon_N = mkN "pinon" ; -- UWN
lin pint_N = mkN "chopine" | mkN "demi" ; -- tocheck
lin pinto_N = mkN "pinto" ; -- UWN
lin pion_N = mkN "pion" masculine ; -- tocheck
lin pioneer_N = mkN "pionnier" masculine ; -- tocheck
lin pious_A = mkA "pieux" ; -- tocheck
lin pip_N = mkN "pépin" masculine | mkN "top" masculine ; -- tocheck
lin pipe_N = mkN "cornemuse" feminine | mkN "conduit" masculine ; -- tocheck
lin pipefish_N = mkN "syngnathus" ; -- UWN
lin pipeline_N = mkN "pipeline" masculine ; -- tocheck
lin piper_N = mkN "cornemuseur" | mkN "cornemuseux" | mkN "joueur" | mkN "piper" ; -- UWN
lin piperazine_N = mkN "pipérazine" ; -- UWN
lin piperin_N = mkN "pipérine" ; -- UWN
lin pipet_N = mkN "pipette" ; -- UWN
lin pipette_N = mkN "pipette" feminine ; -- tocheck
lin pipework_N = mkN "pipe" | mkN "tuyau_d'orgue" ; -- UWN
lin pipit_N = mkN "alouette" | mkN "pipit" | mkN "pipits" ; -- UWN
lin piquet_N = mkN "piquet" masculine ; -- tocheck
lin piracy_N = mkN "piraterie" feminine | mkN "piratage" feminine ; -- tocheck
lin piraeus_PN = mkPN "Le Pirée" ; -- status=guess src=geonames
lin piranha_N = mkN "piranha" masculine ; -- tocheck
lin pirate_N = mkN "pirate" | mkN "pirate" masculine ; -- tocheck
lin pirate_V2 = mkV2 (mkV "pirater") ; -- tocheck
lin pirogi_N = mkN "pirojki" ; -- UWN
lin piroplasm_N = mkN "piroplasme" ; -- UWN
lin pirouette_N = mkN "pirouette" feminine ; -- tocheck
lin pisa_PN = mkPN "Pise" ; -- status=guess src=geonames
lin pisanosaur_N = mkN "pisanosaurus" ; -- UWN
lin piscine_A = mkA "ichthyique" ; -- tocheck
lin piscivorous_A = mkA "piscivore" ; -- UWN
lin pisiform_N = mkN "os_pisiforme" ; -- UWN
lin piss_N = mkN "pisse" feminine ; -- tocheck
lin piss_V2 = mkV2 (mkV "pisser") ; -- tocheck
lin pisser_N = mkN "pisseur" masculine ; -- tocheck
lin pistachio_N = mkN "pistache" feminine ; -- tocheck
lin pistil_N = mkN "pistil" masculine ; -- tocheck
lin pistol_N = mkN "pistolet" masculine ; -- tocheck
lin piston_N = mkN "piston" masculine ; -- tocheck
lin pit_N = mkN "fosse" feminine | mkN "noyau" masculine ; -- tocheck
lin pit_V2 = mkV2 (mkV "dénoyauter") ; -- tocheck
lin pita_N = mkN "pain_pita" | mkN "pita" ; -- UWN
lin pitch_N = mkN "tangage" masculine | mkN "poix" feminine | mkN "pas" masculine | mkN "laïus" masculine | mkN "résine" feminine | mkN "lancer" masculine | mkN "inclinaison" feminine | mkN "terrain" masculine | mkN "ton" masculine ; -- tocheck
lin pitch_V = mkV "adapter" | mkV "axer" ; -- UWN
lin pitch_V2 = mkV2 (mkV "lancer") | mkV2 (mkV "monter") | mkV2 (mkV "promouvoir") | mkV2 (mkV "jeter") | mkV2 (mkV "lancer") ; -- tocheck
lin pitchblende_N = mkN "pechblende" ; -- UWN
lin pitcher_N = mkN "cruche" feminine | mkN "pichet" masculine | mkN "lanceur" masculine ; -- tocheck
lin pitchfork_N = mkN "fourche" feminine ; -- tocheck
lin pitchy_A = mkA "résineux" ; -- UWN
lin piteous_A = mkA "pitoyable" ; -- tocheck
lin pitfall_N = mkN "piège" masculine ; -- tocheck
lin pith_N = mkN "moelle" ; -- tocheck
lin pithy_A = mkA "moelleux" | mkA "succint" ; -- tocheck
lin pitiful_A = mkA "pitoyable" ; -- tocheck
lin pitman_N = mkN "charbonnier" | mkN "pitman" ; -- UWN
lin piton_N = mkN "piton" ; -- UWN
lin pitta_N = mkN "pitta" | mkN "pittidae" ; -- UWN
lin pittsburgh_PN = mkPN "Pittsburgh" ; -- status=guess src=geonames
lin pituitary_A = mkA "pituitaire" ; -- tocheck
lin pituitary_N = mkN "hypophyse" feminine ; -- tocheck
lin pity_N = mkN "pitié" feminine | mkN "compassion" feminine | mkN "dommage" masculine ; -- tocheck
lin pity_V2 = mkV2 (mkV I.plaindre_V2) ; -- tocheck
lin pityriasis_N = mkN "pityriasis" ; -- UWN
lin pivot_N = mkN "pivotement" masculine | mkN "pivot" masculine ; -- tocheck
lin pixel_N = mkN "pixel" masculine ; -- tocheck
lin pixie_N = mkN "lutin" ; -- tocheck
lin pixilated_A = mkA "bourré" | mkA "empégué" | mkA "gris" | mkA "grise" | mkA "mouillé" | mkA "pompette" | mkA "rigide" | mkA "schlass" | mkA "trempé" | mkA "émeché" | mkA "éméché" | mkA "éméchée" ; -- UWN
lin pizza_N = mkN "pizza" feminine ; -- tocheck
lin pizzeria_N = mkN "pizzeria" ; -- tocheck
lin pizzicato_Adv = mkAdv "pizzicato" ; -- tocheck
lin placard_N = mkN "affiche" feminine ; -- tocheck
lin placate_V2 = mkV2 (mkV "apaiser") ; -- tocheck
lin placation_N = mkN "conciliation" ; -- UWN
lin place_N = mkN "place" feminine | mkN "lieu" masculine ;
lin place_V2 = mkV2 (mkV I.faire_V2) | mkV2 (reflV (mkV "placer")) | mkV2 (mkV I.mettre_V2) ; -- tocheck
lin placebo_N = mkN "placebo" masculine ; -- tocheck
lin placeholder_N = mkN "marque_substitutive" ; -- UWN
lin placement_N = mkN "placement" masculine ; -- tocheck
lin placenta_N = mkN "placenta" masculine ; -- tocheck
lin placental_A = mkA "placentaire" ; -- tocheck
lin placental_N = mkN "placentaire" masculine ; -- tocheck
lin placer_N = mkN "placer" ; -- UWN
lin placid_A = mkA "placide" ; -- tocheck
lin placidity_N = mkN "calme" | mkN "sérénité" | mkN "tranquillité" ; -- UWN
lin plage_N = mkN "plage" ; -- UWN
lin plagiarism_N = mkN "plagiat" masculine ; -- tocheck
lin plagiocephaly_N = mkN "plagiocéphalie" ; -- UWN
lin plague_N = mkN "peste" feminine | mkN "plaie" feminine | mkN "fléau" masculine ; -- tocheck
lin plague_V2 = mkV2 (mkV "affliger") ; -- tocheck
lin plaguy_A = mkA "agaçant" | mkA "embêtant" | mkA "ennuyeux" | mkA "gênant" | mkA "pénible" ; -- UWN
lin plaice_N = mkN "carrelet" masculine | mkN "plie" feminine ; -- tocheck
lin plaid_N = mkN "cube" | mkN "dé_à_jouer" | mkN "tartan" | mkN "tartane" ; -- UWN
lin plain_A = mkA "simple" | mkA "nature" ; -- tocheck
lin plain_Adv = mkAdv "apparemment" | mkAdv "clairement" | mkAdv "de_toute_évidence" | mkAdv "manifestement" | mkAdv "naturellement" | mkAdv "plaine" | mkAdv "strictement" | mkAdv "visiblement" | mkAdv "évidemment" ; -- UWN
lin plain_N = mkN "plaine" ; -- tocheck
lin plaintiff_N = mkN "demandeur" ; -- tocheck
lin plaintive_A = mkA "sombre" ; -- UWN
lin plait_N = mkN "natte" feminine | mkN "pli" masculine ; -- tocheck
lin plait_V2 = mkV2 (mkV "natter") ; -- tocheck
lin plan_N = mkN "plan" masculine ;
lin plan_V = variants {} ; -- mkV2V (mkV "projeter") ; -- tocheck
lin plan_V2 = variants {} ; -- mkV2V (mkV "projeter") ; -- tocheck
lin plan_V2V = mkV2V (mkV "projeter") ; -- tocheck
lin plan_VS = variants {} ; -- mkV2V (mkV "projeter") ; -- tocheck
lin plan_VV = variants {} ; -- mkV2V (mkV "projeter") ; -- tocheck
lin planar_A = mkA "plan" ; -- UWN
lin planarian_N = mkN "turbellarié" ; -- UWN
lin planate_A = mkA "écrasé" ; -- UWN
lin plane_N = mkN "avion" masculine | mkN "rabot" masculine | mkN "platane" masculine | mkN "plan" masculine ; -- tocheck
lin plane_V2 = mkV2 (mkV "planer") ; -- tocheck
lin planet_N = L.planet_N ;
lin planetal_A = mkA "planétaire" ; -- UWN
lin planetarium_N = mkN "planétarium" masculine ; -- tocheck
lin planetary_A = mkA "planétaire" ; -- tocheck
lin plangency_N = mkN "résonance" | mkN "écho" ; -- UWN
lin plank_N = mkN "planche" feminine ; -- tocheck
lin plankton_N = mkN "plancton" masculine ; -- tocheck
lin planned_A = variants {} ; --
lin planner_N = mkN "organisateur" ; -- UWN
lin planning_N = variants {} ; --
lin plant_N = mkN "matériel" masculine | mkN "végétal" masculine | mkN "plante" feminine ; -- tocheck
lin plant_V2 = mkV2 (mkV "planter") ; -- tocheck
lin plant_out_V2 = prepV2 (lin V OP_plant_V2) OP_out_Prep ; -- guess-p-verb
lin plantain_N = mkN "plantain" masculine ; -- tocheck
lin plantation_N = mkN "plantation" feminine ; -- tocheck
lin planter_N = mkN "planteur" masculine ; -- tocheck
lin plaque_N = mkN "laiton" | mkN "plaque" ; -- UWN
lin plasma_N = variants {} ; --
lin plasmacytoma_N = mkN "plasmocytome" ; -- UWN
lin plasmapheresis_N = mkN "plasmaphérèse" ; -- UWN
lin plasmid_N = mkN "plasmide" ; -- tocheck
lin plaster_N = mkN "plâtre" masculine | mkN "onguent" masculine ; -- tocheck
lin plaster_V2 = mkV2 (mkV "plâtrer") | mkV2 (mkV I.enduire_V2) ; -- tocheck
lin plasterer_N = mkN "plâtrier" masculine ; -- tocheck
lin plastic_A = mkA "plastique" ; -- tocheck
lin plastic_N = L.plastic_N ;
lin plasticity_N = mkN "plasticité" feminine ; -- tocheck
lin plasticizer_N = mkN "plastifiant" ; -- UWN
lin plastid_N = mkN "plaste" ; -- UWN
lin plastination_N = mkN "plastination" ; -- UWN
lin plate_N = mkN "plat" masculine | mkN "plaque" feminine | mkN "assiette" feminine | mkN "dentier" masculine | mkN "planche" feminine ; -- tocheck
lin plate_V2 = mkV2 (mkV "plaquer") ; -- tocheck
lin plateau_N = mkN "plateau" masculine ; -- tocheck
lin plateful_N = mkN "assiette" ; -- UWN
lin platelet_N = mkN "thrombocyte" masculine ; -- tocheck
lin platform_N = mkN "scène" feminine | mkN "plateforme" feminine | mkN "quai" masculine ; -- tocheck
lin platinum_N = mkN "platine" masculine ; -- tocheck
lin platitude_N = mkN "platitude" feminine ; -- tocheck
lin platonic_A = mkA "platonique" ; -- tocheck
lin platoon_N = mkN "peloton" masculine ; -- tocheck
lin platter_N = mkN "plat" masculine | mkN "platine" feminine ; -- tocheck
lin platypus_N = mkN "ornithorynque" masculine ; -- tocheck
lin plaudit_N = mkN "acclamation" | mkN "agrément" ; -- UWN
lin plausibility_N = mkN "vraisemblance" ; -- UWN
lin plausible_A = variants {} ; --
lin play_1_V = mkV "jouer" ;
lin play_1_V2 = mkV2 (mkV "jouer") P.dative ;
lin play_2_V = mkV "jouer" ;
lin play_2_V2 = mkV2 (mkV "jouer") P.dative ;
lin play_3_V = mkV "jouer" ;
lin play_3_V2 = mkV2 (mkV "jouer") P.genitive ;
lin play_N = mkN "jeu" masculine ; -- tocheck
lin play_V = L.play_V ;
lin play_V2 = L.play_V2 ;
lin play_along_V = mkV "accompagner" | mkV "suivre" ; -- UWN
lin play_around_V = advV OP_play_V OP_around_Adv ; -- guess-p-verb
lin play_at_V2 = prepV2 OP_play_V OP_at_Prep ; -- guess-p-verb
lin play_away_V = advV OP_play_V OP_away_Adv ; -- guess-p-verb
lin play_back_V2 = mkV2 (advV OP_play_V OP_back_Adv ) ; -- guess-p-verb
lin play_down_V2 = prepV2 OP_play_V OP_down_Prep ; -- guess-p-verb
lin play_off_V = advV OP_play_V OP_off_Adv ; -- guess-p-verb
lin play_off_V2 = prepV2 OP_play_V OP_off_Prep ; -- guess-p-verb
lin play_on_V = advV OP_play_V OP_on_Adv ; -- guess-p-verb
lin play_on_V2 = prepV2 OP_play_V OP_on_Prep ; -- guess-p-verb
lin play_out_V = advV OP_play_V OP_out_Adv ; -- guess-p-verb
lin play_out_V2 = prepV2 OP_play_V OP_out_Prep ; -- guess-p-verb
lin play_up_V = advV OP_play_V OP_up_Adv ; -- guess-p-verb
lin play_up_V2 = prepV2 OP_play_V OP_up_Prep ; -- guess-p-verb
lin play_up_to_V2 = prepV2 (advV OP_play_V OP_up_Adv ) OP_to_Prep ; -- guess-p-verb
lin play_upon_V2 = prepV2 OP_play_V OP_upon_Prep ; -- guess-p-verb
lin play_with_V2 = prepV2 OP_play_V OP_with_Prep ; -- guess-p-verb
lin playback_N = mkN "reprise" feminine ; -- tocheck
lin playboy_N = mkN "playboy" masculine ; -- tocheck
lin player_N = mkN "joueur" masculine | mkN "lecteur" masculine ; -- tocheck
lin playfellow_N = mkN "playmate" ; -- UWN
lin playful_A = mkA "folâtre" ; -- tocheck
lin playlist_N = mkN "playlist" feminine ; -- tocheck
lin playmate_N = mkN "playmate" ; -- UWN
lin play_off_N = mkN "série_éliminatoire" ; -- UWN
lin playpen_N = mkN "parc" ; -- UWN
lin playroom_N = mkN "salle_de_jeux" ; -- UWN
lin plaything_N = mkN "jouet" ; -- UWN
lin playtime_N = mkN "récré" ; -- UWN
lin playwright_N = mkN "dramaturge" ; -- tocheck
lin plaza_N = mkN "place" ; -- tocheck
lin plea_N = mkN "supplication" feminine ; -- tocheck
lin plead_V = variants {} ; -- mkV2 (mkV "plaider") ; -- tocheck
lin plead_V2 = mkV2 (mkV "plaider") ; -- tocheck
lin plead_VS = variants {} ; -- mkV2 (mkV "plaider") ; -- tocheck
lin pleasance_N = mkN "plaisir" ; -- UWN
lin pleasant_A = mkA "agréable" ; -- tocheck
lin pleasantness_N = mkN "agrément" | mkN "douceur" ; -- UWN
lin please_Adv = mkAdv "allez" ; -- tocheck
lin please_V = I.plaire_V2 ;
lin please_V2 = mkV2 (mkV I.plaire_V2) P.dative ;
lin please_V2V = mkV2V (mkV I.plaire_V2) ; -- tocheck
lin please_VV = variants {} ; -- mkV2V (mkV I.plaire_V2) ; -- tocheck
lin please_Voc = S.please_Voc ;
lin pleased_A = variants {} ; --
lin pleasurable_A = mkA "agréable" | mkA "drôle" ; -- UWN
lin pleasure_N = mkN "désir" masculine | mkN "plaisir" masculine ; -- tocheck
lin pleat_N = mkN "pli" masculine ; -- tocheck
lin pleat_V2 = mkV2 (mkV "plisser") ; -- tocheck
lin plebeian_N = mkN "plébéien" masculine ; -- tocheck
lin plebiscite_N = mkN "plébiscite" masculine ; -- tocheck
lin plectranthus_N = mkN "plectranthus" ; -- UWN
lin plectrum_N = mkN "plectre" masculine ; -- tocheck
lin pledge_N = mkN "gage" masculine ; -- tocheck
lin pledge_V2 = variants {} ; -- mkV2V (mkV I.promettre_V2) ; -- tocheck
lin pledge_V2V = mkV2V (mkV I.promettre_V2) ; -- tocheck
lin pledge_VS = variants {} ; -- mkV2V (mkV I.promettre_V2) ; -- tocheck
lin plenary_A = mkA "plénier" ; -- tocheck
lin plenipotentiary_N = mkN "plénipotentiaire" masculine ; -- tocheck
lin plenitude_N = mkN "abondance" | mkN "multitude" | mkN "tout" ; -- UWN
lin plentiful_A = mkA "ample" ; -- tocheck
lin plenty_N = mkN "abondance" feminine ; -- tocheck
lin plenty_NP = variants {} ; --
lin plenum_N = mkN "plénum" ; -- UWN
lin pleochroism_N = mkN "polychroïsme" ; -- UWN
lin pleomorphic_A = mkA "polymorphe" ; -- UWN
lin pleonasm_N = mkN "pléonasme" masculine ; -- tocheck
lin pleonastic_A = mkA "pléonastique" ; -- tocheck
lin plesiosaur_N = mkN "Plesiosauroidea" | mkN "plesiosauroidea" | mkN "plésiosaures" ; -- UWN
lin plethora_N = mkN "pléthore" feminine ; -- tocheck
lin pleurisy_N = mkN "pleurésie" feminine ; -- tocheck
lin plexus_N = mkN "Plexus" | mkN "plexus" ; -- UWN
lin pliable_A = mkA "pliable" ; -- tocheck
lin pliers_N = mkN "pince" feminine ; -- tocheck
lin plight_N = mkN "dilemme" | mkN "embarras" ; -- UWN
lin plimsoll_N = mkN "basket" | mkN "plimsoll" ; -- UWN
lin plinth_N = mkN "plinthe" masculine ; -- tocheck
lin plodder_N = mkN "bâilleur" ; -- tocheck
lin plonk_N = mkN "pinard" masculine ; -- tocheck
lin plosion_N = mkN "plosion" feminine ; -- tocheck
lin plosive_N = mkN "occlusif" masculine ; -- tocheck
lin plot_N = mkN "lopin" masculine | mkN "diagramme" masculine | mkN "complot" masculine | mkN "intrigue" feminine ; -- tocheck
lin plot_V = variants {} ; -- mkV2 (mkV "conspirer") | mkV2 (mkV "tracer") ; -- tocheck
lin plot_V2 = mkV2 (mkV "conspirer") | mkV2 (mkV "tracer") ; -- tocheck
lin plough_N = mkN "charrue" feminine ; -- tocheck
lin plough_V2 = mkV2 (mkV "labourer") ; -- tocheck
lin plover_N = mkN "pluvier" masculine ; -- tocheck
lin plow_V = mkV "traiter" ; -- UWN
lin plowshare_N = mkN "soc" masculine ; -- tocheck
lin ploy_N = mkN "truc" masculine ; -- tocheck
lin pluck_N = mkN "persévérence" feminine ; -- tocheck
lin pluck_V2 = mkV2 (mkV "pincer") | mkV2 (mkV "tirer") | mkV2 (mkV "plumer") | mkV2 (mkV "voler") ; -- tocheck
lin plug_N = mkN "fiche" feminine ; -- tocheck
lin plug_V = variants {} ; -- mkV2 (mkV "boucher") ; -- tocheck
lin plug_V2 = mkV2 (mkV "boucher") ; -- tocheck
lin plum_N = mkN "prune" feminine | mkN "prunier" masculine ; -- tocheck
lin plumage_N = mkN "plumage" masculine ; -- tocheck
lin plumb_Adv = mkAdv "nettoyer" | mkAdv "prune" | mkAdv "prunier" ; -- UWN
lin plumbago_N = mkN "plombagine" feminine | mkN "plumbago" feminine ; -- tocheck
lin plumber_N = mkN "plombier" masculine ; -- tocheck
lin plumbic_A = mkA "saturnin" ; -- tocheck
lin plumbing_N = mkN "plombage" masculine | mkN "tuyauterie" feminine | mkN "plomberie" feminine ; -- tocheck
lin plume_N = mkN "plumeau" masculine | mkN "plume" feminine ; -- tocheck
lin plummet_V2 = mkV2 (mkV "dégringoler") ; -- tocheck
lin plump_A = mkA "potelé" ; -- tocheck
lin plumpness_N = mkN "embonpoint" ; -- UWN
lin plunder_N = mkN "pillage" masculine ; -- tocheck
lin plunder_V2 = mkV2 (mkV "piller") ; -- tocheck
lin plunderer_N = mkN "pillard" | mkN "pilleur" | mkN "saccageur" ; -- UWN
lin plundering_N = mkN "pillage" ; -- UWN
lin plunge_V = variants {} ; -- mkV2 (mkV "plonger") ; -- tocheck
lin plunge_V2 = mkV2 (mkV "plonger") ; -- tocheck
lin plunger_N = mkN "ventouse" feminine | mkN "plongeur" masculine ; -- tocheck
lin pluperfect_A = mkA "plus-que-parfait" ; -- UWN
lin pluperfect_N = mkN "plus-que-parfait" masculine ; -- tocheck
lin plural_A = mkA "pluriel" ; -- tocheck
lin plural_N = mkN "pluriel" masculine ; -- tocheck
lin pluralism_N = mkN "pluralisme" masculine ; -- tocheck
lin pluralist_N = mkN "pluraliste" ; -- tocheck
lin pluralistic_A = mkA "pluraliste" ; -- tocheck
lin plurality_N = mkN "pluralité" ; -- UWN
lin plus_A = mkA "plus" | mkA "positif" ; -- tocheck
lin plus_Conj = mkConj "plus" ; -- tocheck
lin plus_N = mkN "plus" ; -- tocheck
lin plus_Prep = variants {} ; --
lin plush_A = mkA "peluche" ; -- UWN
lin plush_N = mkN "peluche" feminine | mkN "peluche" masculine ; -- tocheck
lin plushy_A = mkA "peluche" ; -- UWN
lin plutocracy_N = mkN "ploutocratie" feminine ; -- tocheck
lin plutocrat_N = mkN "ploutocrate" masculine ; -- tocheck
lin plutocratic_A = mkA "ploutocratique" ; -- tocheck
lin plutonium_N = mkN "plutonium" masculine ; -- tocheck
lin ply_V2A = mkV2A (mkV "plier") ; -- tocheck
lin plymouth_PN = mkPN "Plymouth" ; -- status=guess src=geonames
lin plywood_N = mkN "contreplaqué" masculine ; -- tocheck
lin pneumatic_A = mkA "pneumatique" ; -- tocheck
lin pneumatics_N = mkN "pneumatique" feminine ; -- tocheck
lin pneumoconiosis_N = mkN "pneumoconiose" ; -- tocheck
lin pneumocytosis_N = mkN "pneumocystose" ; -- UWN
lin pneumonia_N = mkN "pneumonie" feminine ; -- tocheck
lin pneumonic_A = mkA "pulmonaire" ; -- UWN
lin pneumothorax_N = mkN "pneumothorax" ; -- UWN
lin poach_V2 = mkV2 (mkV "pocher") | mkV2 (mkV "braconner") ; -- tocheck
lin poacher_N = mkN "braconnier" masculine ; -- tocheck
lin poaching_N = mkN "braconnage" masculine ; -- tocheck
lin pocket_N = mkN "poche" feminine ; -- tocheck
lin pocket_V2 = mkV2 (mkV "empocher") ; -- tocheck
lin pocket_book_N = mkN "porte-monnaie" | mkN "sac" | mkN "sac_à_main" ; -- UWN
lin pocket_knife_N = mkN "canif" masculine ; -- tocheck
lin pod_N = mkN "cosse" feminine | mkN "nacelle" feminine ; -- tocheck
lin podgy_A = mkA "replet" ; -- tocheck
lin podiatry_N = mkN "podologie" ; -- UWN
lin podium_N = mkN "chaire" | mkN "dais" | mkN "estrade" | mkN "podium" | mkN "tribune" ; -- UWN
lin podzol_N = mkN "podzol" | mkN "podzosol" ; -- UWN
lin poem_N = mkN "poème" masculine ; -- tocheck
lin poet_N = mkN "poète" masculine ; -- tocheck
lin poetess_N = mkN "poétesse" feminine ; -- tocheck
lin poetic_A = mkA "poétique" ; -- tocheck
lin poetics_N = mkN "La_poétique" | mkN "la_poétique" | mkN "poétique" ; -- UWN
lin poetry_N = mkN "poésie" feminine ; -- tocheck
lin pogrom_N = mkN "pogrom" masculine ; -- tocheck
lin poikilotherm_N = mkN "ectotherme" ; -- UWN
lin poilu_N = mkN "poilu" ; -- UWN
lin point_1_N = mkN "point" ;
lin point_2_N = mkN "point" ;
lin point_N = mkN "point" ;
lin point_V = variants {} ; -- mkV2 (mkV "pointer") ; -- tocheck
lin point_V2 = mkV2 (mkV "pointer") ; -- tocheck
lin point_out_V2 = prepV2 OP_point_V OP_out_Prep ; -- guess-p-verb
lin point_out_VS = mkvVS "indiquer" | mkvVS "montrer" ; -- UWN
lin point_up_V = advV OP_point_V OP_up_Adv ; -- guess-p-verb
lin pointer_N = mkN "aiguille" feminine | mkN "pointeur" masculine ; -- tocheck
lin pointillism_N = mkN "pointillisme" masculine ; -- tocheck
lin poise_N = mkN "l'assurance" feminine ; -- tocheck
lin poise_V = mkV "concilier" | mkV "déséquilibrer" | mkV "rééquilibrer" | mkV "équilibre" ; -- UWN
lin poison_N = mkN "poison" masculine ; -- tocheck
lin poison_V2 = mkV2 (mkV "empoisonner") ; -- tocheck
lin poisoner_N = mkN "empoisonneur" ; -- UWN
lin poisoning_N = mkN "empoisonnement" masculine | mkN "intoxication" feminine ; -- tocheck
lin poisonous_A = mkA "poisoneux" ; -- tocheck
lin poke_N = mkN "coup" ; -- UWN
lin poke_V2 = mkV2 (mkV "piquer") | mkV2 (mkV "attiser") ; -- tocheck
lin poker_N = mkN "poker" masculine | mkN "tisonnier" masculine ; -- tocheck
lin pokeweed_N = mkN "phytolacca" | mkN "phytolaques" ; -- UWN
lin poland_PN = mkPN "Pologne" ; -- status=guess src=geonames
lin polar_A = mkA "polaire" ; -- tocheck
lin polarization_N = mkN "polarisation" ; -- tocheck
lin pole_N = mkN "pôle" | mkN "perche" feminine ; -- tocheck
lin polecat_N = mkN "putois" masculine ; -- tocheck
lin polemic_A = mkA "polémique" ; -- tocheck
lin polemic_N = mkN "polémique" feminine ; -- tocheck
lin polemicist_N = mkN "polémique" ; -- UWN
lin polemonium_N = mkN "polemonium" ; -- UWN
lin polenta_N = mkN "polenta" ; -- UWN
lin police_N = mkN "police" feminine | mkN "policier" masculine ; --- split -- | police institution -- | policeman
lin policeman_N = L.policeman_N ;
lin policewoman_N = mkN "policière" feminine ; -- tocheck
lin policy_N = mkN "politique" feminine ;
lin polio_N = mkN "maladie_de_Heine-Medin" | mkN "maladie_de_heine-medin" | mkN "polio" | mkN "poliomyélite" ; -- UWN
lin poliomyelitis_N = mkN "poliomyélite" feminine ; -- tocheck
lin poliovirus_N = mkN "poliovirus" ; -- UWN
lin polishFem_N = mkN "vernis" feminine ; -- tocheck
lin polishMasc_N = mkN "vernis" masculine ; -- tocheck
lin polish_A = variants {} ; --
lin polish_V = variants {} ; -- mkV2 (mkV "polir") ; -- tocheck
lin polish_V2 = mkV2 (mkV "polir") ; -- tocheck
lin politburo_N = mkN "bureau_politique" | mkN "politburo" ; -- UWN
lin polite_A = mkA "poli" ; -- tocheck
lin politeness_N = mkN "politesse" feminine ; -- tocheck
lin political_A = mkA "politique" ;
lin politician_N = mkN "politicien" masculine ; -- tocheck
lin politicize_V2 = mkV2 (mkV "politiser") ; -- tocheck
lin politics_N = mkN "politique" feminine ; -- tocheck
lin poll_N = mkN "sondage" masculine ; -- tocheck
lin pollack_N = mkN "lieu_jaune" ; -- UWN
lin pollen_N = mkN "pollen" masculine ; -- tocheck
lin pollinate_V2 = mkV2 (mkV "polleniser") ; -- tocheck
lin pollination_N = mkN "pollinisation" feminine ; -- tocheck
lin pollster_N = mkN "enquêteur" ; -- UWN
lin pollucite_N = mkN "pollucite" ; -- UWN
lin pollutant_N = mkN "polluant" masculine ; -- tocheck
lin pollute_V2 = mkV2 (mkV "polluer") ; -- tocheck
lin polluter_N = mkN "pollueur" ; -- tocheck
lin pollution_N = mkN "défilement" masculine | mkN "pollution" feminine ; -- tocheck
lin polo_N = mkN "polo" masculine ; -- tocheck
lin polonaise_N = mkN "polonaise" ; -- UWN
lin polonium_N = mkN "polonium" masculine ; -- tocheck
lin poltergeist_N = mkN "Poltergeist" | mkN "esprit_frappeur" | mkN "poltergeist" ; -- UWN
lin poltroon_N = mkN "lâche" ; -- tocheck
lin polyamide_N = mkN "polyamide" ; -- UWN
lin polyandrous_A = mkA "polyandre" ; -- tocheck
lin polyandry_N = mkN "polyandrie" ; -- tocheck
lin polychaete_N = mkN "Polychaeta" | mkN "polychaeta" ; -- UWN
lin polycythemia_N = mkN "maladie_de_Vaquez" | mkN "maladie_de_vaquez" | mkN "polycythemia_vera_ou_rubra" | mkN "polyglobulie_essentielle" ; -- UWN
lin polydactyl_A = mkA "polydactyle" ; -- UWN
lin polydipsia_N = mkN "polydipsie" ; -- UWN
lin polyester_N = mkN "polyester" masculine ; -- tocheck
lin polyethylene_N = mkN "polyéthylène" masculine ; -- tocheck
lin polygamist_N = mkN "polygame" ; -- UWN
lin polygamy_N = mkN "polygamie" feminine ; -- tocheck
lin polyglotFem_N = mkN "polyglotte" feminine ; -- tocheck
lin polyglotMasc_N = mkN "polyglotte" masculine ; -- tocheck
lin polyglot_A = mkA "polyglotte" ; -- tocheck
lin polygon_N = mkN "polygone" masculine ; -- tocheck
lin polygonal_A = mkA "polygonal" ; -- tocheck
lin polygraph_N = mkN "polygraphe" masculine ; -- tocheck
lin polygyny_N = mkN "polygynie" feminine ; -- tocheck
lin polyhedron_N = mkN "polyèdre" masculine ; -- tocheck
lin polymath_N = mkN "polymathe" ; -- tocheck
lin polymer_N = mkN "polymère" ; -- tocheck
lin polymerase_N = mkN "Polymérase" | mkN "polymérase" | mkN "polymérases" ; -- UWN
lin polymerization_N = mkN "polymérisation" ; -- UWN
lin polymorphism_N = mkN "polymorphisme" masculine ; -- tocheck
lin polymyxin_N = mkN "polymyxines" ; -- UWN
lin polyneuritis_N = mkN "polynévrite" ; -- UWN
lin polynomial_A = mkA "polynomial" | mkA "polynominal" ; -- tocheck
lin polynomial_N = mkN "polynôme" masculine ; -- tocheck
lin polynya_N = mkN "polynie" ; -- tocheck
lin polyp_N = mkN "polype" masculine ; -- tocheck
lin polyphony_N = mkN "polyphonie" feminine ; -- tocheck
lin polyploidy_N = mkN "polyploïdie" ; -- UWN
lin polypore_N = mkN "Polyporaceae" | mkN "polyporaceae" | mkN "polyporacées" ; -- UWN
lin polypropylene_N = mkN "polypropylène" masculine ; -- tocheck
lin polyptoton_N = mkN "polyptote" masculine ; -- tocheck
lin polysaccharide_N = mkN "polysaccharide" masculine ; -- tocheck
lin polysemous_A = mkA "polysémique" ; -- UWN
lin polysemy_N = mkN "polysémie" feminine ; -- tocheck
lin polysomy_N = mkN "polysomie" ; -- UWN
lin polystyrene_N = mkN "polystyrène" masculine ; -- tocheck
lin polysyllabic_A = mkA "polysyllabique" ; -- tocheck
lin polysyndeton_N = mkN "polysyndète" ; -- UWN
lin polytechnic_N = mkN "polytechnique" ; -- tocheck
lin polytheism_N = mkN "polythéisme" masculine ; -- tocheck
lin polytheist_N = mkN "polythéiste" ; -- tocheck
lin polythene_N = mkN "Polyéthylène" | mkN "polyéthylène" | mkN "polyéthène" ; -- UWN
lin polytonal_A = mkA "polytonal" ; -- UWN
lin polytonality_N = mkN "polytonalité" ; -- UWN
lin polyurethane_N = mkN "polyuréthane" masculine ; -- tocheck
lin polyuria_N = mkN "polyurie" ; -- UWN
lin pom_N = mkN "pom" ; -- UWN
lin pomade_N = mkN "pommade" feminine ; -- tocheck
lin pome_N = mkN "Piridion" | mkN "faux-fruit" | mkN "piridion" ; -- UWN
lin pomegranate_N = mkN "grenade" feminine | mkN "grenadier" masculine ; -- tocheck
lin pomelo_N = mkN "pamplemousse" ; -- tocheck
lin pommel_N = mkN "pommeau" ; -- tocheck
lin pommy_N = mkN "pom" ; -- UWN
lin pomology_N = mkN "pomologie" ; -- tocheck
lin pomp_N = mkN "pompe" | mkN "splendeur" ; -- UWN
lin pompadour_N = mkN "banane" feminine ; -- tocheck
lin pompon_N = mkN "pompon" masculine ; -- tocheck
lin pomposity_N = mkN "inflation" | mkN "ostentation" ; -- UWN
lin pompous_A = mkA "pompeux" ; -- tocheck
lin ponce_N = mkN "barbeau" | mkN "maquereau" | mkN "proxénète" | mkN "souteneur" ; -- UWN
lin poncho_N = mkN "poncho" ; -- tocheck
lin pond_N = mkN "étang" masculine ; -- tocheck
lin ponder_V2 = mkV2 (mkV "songer") | mkV2 (reflV (mkV "interroger")) ; -- tocheck
lin ponderous_A = mkA "lourd" | mkA "pesant" ; -- tocheck
lin ponderousness_N = mkN "poids" ; -- UWN
lin pons_N = mkN "Pont_de_Varole" | mkN "pont_de_varole" ; -- UWN
lin pontardulais_PN = mkPN "Pontardulais" ; -- status=guess src=geonames
lin pontefract_PN = mkPN "Pontefract" ; -- status=guess src=geonames
lin pontiff_N = mkN "pontife" masculine ; -- tocheck
lin pontifical_A = mkA "pontifical" ; -- tocheck
lin pontificate_N = mkN "pontificat" masculine ; -- tocheck
lin pontificate_V = mkV (mkV "pontifier") ; -- tocheck
lin pontoon_N = mkN "ponton" masculine ; -- tocheck
lin pontypool_PN = mkPN "Pontypool" ; -- status=guess src=geonames
lin pony_N = mkN "poney" masculine ; -- tocheck
lin ponytail_N = mkN "queue-de-cheval" feminine ; -- tocheck
lin pooch_N = mkN "bâtard" masculine | mkN "clébard" masculine ; -- tocheck
lin poodle_N = mkN "caniche" masculine ; -- tocheck
lin poof_N = mkN "tapette" feminine | mkN "pet" masculine ; -- tocheck
lin pool_N = mkN "piscine" | mkN "piscine" feminine ; -- tocheck
lin poole_PN = mkPN "Poole" ; -- status=guess src=geonames
lin poop_N = mkN "poupe" ; -- tocheck
lin poor_1_A = mkA "pauvre" ;
lin poor_2_A = mkA "pauvre" | mkA "pitoyable" ;
lin poor_3_A = mkA "pauvre" | mkA "inférieur" ; ----
lin poor_A = mkA "pauvre" | mkA "pitoyable" ;
lin poorly_A = variants {} ;
lin pop_A = mkA "populaire" ; -- UWN
lin pop_N = mkN "pop" feminine ; -- tocheck
lin pop_V2 = variants {} ; --
lin popcorn_N = mkN "popcorn" masculine ; -- tocheck
lin pope_N = mkN "pope" masculine | mkN "pape" masculine ; -- tocheck
lin popery_N = mkN "papisme" ; -- UWN
lin poplar_N = mkN "peuplier" masculine ; -- tocheck
lin poplin_N = mkN "popeline" ; -- UWN
lin popliteal_A = mkA "poplité" ; -- tocheck
lin poppet_N = mkN "soupape" ; -- UWN
lin poppy_N = mkN "pavot" masculine ; -- tocheck
lin poppycock_N = mkN "non-sens" ; -- UWN
lin populace_N = mkN "monde" | mkN "public" ; -- UWN
lin popular_A = mkA "populaire" ; -- tocheck
lin popularity_N = mkN "popularité" feminine ; -- tocheck
lin popularizer_N = mkN "vulgarisateur" ; -- UWN
lin populate_V2 = mkV2 (mkV "peupler") | mkV2 (mkV "remplir") ; -- tocheck
lin population_N = mkN "population" feminine ; -- tocheck
lin populism_N = mkN "populisme" masculine ; -- tocheck
lin populist_N = mkN "populiste" ; -- tocheck
lin populous_A = mkA "populeux" ; -- tocheck
lin porcelain_N = mkN "porcelaine" ; -- tocheck
lin porch_N = mkN "porche" masculine ; -- tocheck
lin porcine_A = mkA "porcin" ; -- tocheck
lin porcupine_N = mkN "porc-épic" masculine ; -- tocheck
lin pore_N = mkN "pore" masculine ; -- tocheck
lin pork_N = mkN "porc" masculine ; -- tocheck
lin porn_N = mkN "cul" | mkN "porno" | mkN "pornographie" | mkN "érotisme" ; -- UWN
lin pornographer_N = mkN "pornographe" masculine ; -- tocheck
lin pornographic_A = mkA "pornographique" ; -- tocheck
lin pornography_N = mkN "pornographie" feminine ; -- tocheck
lin porosity_N = mkN "porosité" feminine ; -- tocheck
lin porous_A = mkA "poreux" ; -- tocheck
lin porousness_N = mkN "porosité" ; -- UWN
lin porphyria_N = mkN "Porphyrie" | mkN "porphyrie" | mkN "porphyries" ; -- UWN
lin porphyrin_N = mkN "Porphyrine" | mkN "porphyrine" | mkN "porphyrines" ; -- UWN
lin porphyry_N = mkN "porphyre" ; -- UWN
lin porpoise_N = mkN "marsouin" masculine ; -- tocheck
lin porridge_N = mkN "gruau" masculine ; -- tocheck
lin port_N = mkN "port" masculine ; -- tocheck
lin port_glasgow_PN = mkPN "Port Glasgow" ; -- status=guess src=geonames
lin port_talbot_PN = mkPN "Port Talbot" ; -- status=guess src=geonames
lin portable_A = mkA "portable" ; -- tocheck
lin portable_N = mkN "portable" | mkN "portatif" ; -- UWN
lin portal_N = mkN "portail" masculine | mkN "portique" masculine ; -- tocheck
lin portcullis_N = mkN "herse" feminine ; -- tocheck
lin portend_V2 = mkV2 (mkV "annoncer") ; -- tocheck
lin portent_N = mkN "augure" | mkN "pronostic" | mkN "présage" ; -- UWN
lin portentous_A = mkA "emphatique" | mkA "pompeux" ; -- UWN
lin porter_N = mkN "porteur" masculine | mkN "porter" masculine ; -- tocheck
lin portfolio_N = variants {} ; --
lin porthcawl_PN = mkPN "Porthcawl" ; -- status=guess src=geonames
lin porthmadog_PN = mkPN "Porthmadog" ; -- status=guess src=geonames
lin porthole_N = mkN "hublot" masculine ; -- tocheck
lin portico_N = mkN "portique" masculine ; -- tocheck
lin portion_N = mkN "part" feminine ; -- tocheck
lin portishead_PN = mkPN "Portishead" ; -- status=guess src=geonames
lin portland_PN = mkPN "Portland" ; -- status=guess src=geonames
lin portly_A = mkA "fort" ; -- tocheck
lin portmanteau_N = mkN "portemanteau" masculine ; -- tocheck
lin portrait_N = mkN "portrait" masculine ; -- tocheck
lin portraitist_N = mkN "portraitiste" ; -- tocheck
lin portray_V2 = mkV2 (mkV I.dépeindre_V2) ; -- tocheck
lin portrayal_N = mkN "caractérisation" ; -- UWN
lin portsmouth_PN = mkPN "Portsmouth" ; -- status=guess src=geonames
lin portugal_PN = mkPN "Portugal" ; -- status=guess src=geonames
lin portulaca_N = mkN "portulaca" | mkN "pourpier" ; -- UWN
lin pose_N = mkN "pose" feminine ; -- tocheck
lin pose_V = variants {} ; -- mkV2 (mkV "poser") | mkV2 (mkV "représenter") | mkV2 (mkV I.mettre_V2) ; -- tocheck
lin pose_V2 = mkV2 (mkV "poser") | mkV2 (mkV "représenter") | mkV2 (mkV I.mettre_V2) ; -- tocheck
lin poser_N = mkN "autocollant" | mkN "colle" ; -- UWN
lin poseur_N = mkN "poseur" masculine ; -- tocheck
lin posh_A = mkA "chic" ; -- tocheck
lin posit_V2 = mkV2 (mkV "postuler") ; -- tocheck
lin position_N = mkN "position" feminine ;
lin position_V2 = variants {} ; --
lin positional_A = mkA "pondéré" | mkA "positionnel" ; -- UWN
lin positive_A = mkA "positif" ; -- tocheck
lin positive_N = mkN "positif" masculine ; -- tocheck
lin positivism_N = mkN "postivisme" masculine ; -- tocheck
lin positivity_N = mkN "positivité" feminine ; -- tocheck
lin positron_N = mkN "positron" masculine ; -- tocheck
lin posology_N = mkN "posologie" ; -- tocheck
lin posse_N = mkN "bande" feminine ; -- tocheck
lin possess_Prep = S.possess_Prep ;
lin possess_V2 = mkV2 (mkV "posséder") ; -- tocheck
lin possession_N = mkN "possession" feminine | mkN "bien" masculine ; -- tocheck
lin possessive_A = mkA "possessif" ; -- tocheck
lin possessor_N = mkN "possesseur" masculine ; -- tocheck
lin possibility_N = mkN "possibilité" feminine ; -- tocheck
lin possible_A = mkA "possible" ;
lin possible_N = mkN "possible" masculine ; -- tocheck
lin possum_N = mkN "possum" masculine ; -- tocheck
lin post_N = mkN "message" masculine | mkN "courrier" | mkN "poteau" masculine ; -- tocheck
lin post_V = variants {} ; --
lin post_V2 = variants {} ; --
lin post_horse_N = mkN "affiche" ; -- UWN
lin post_war_A = variants {} ; --
lin postage_N = mkN "affranchissement" | mkN "timbre" | mkN "timbre-poste" | mkN "timbre_postal" | mkN "timbres-poste" ; -- UWN
lin postal_A = mkA "postal" ; -- tocheck
lin postcard_N = mkN "carte_postale" ; -- UWN
lin poster_N = mkN "affiche" feminine | mkN "poster" masculine ; -- tocheck
lin posterior_A = mkA "postérieur" ; -- tocheck
lin posterior_N = mkN "Derrière" ; -- tocheck
lin posterity_N = mkN "postérité" feminine ; -- tocheck
lin postern_N = mkN "poterne" feminine ; -- tocheck
lin posthumous_A = mkA "posthume" ; -- tocheck
lin postilion_N = mkN "postillon" masculine ; -- tocheck
lin postmodernism_N = mkN "post-modernisme" masculine ; -- tocheck
lin postmodernist_A = mkA "postmoderne" ; -- tocheck
lin postnatal_A = mkA "postnatal" ; -- tocheck
lin postpone_V2 = mkV2 (mkV "ajourner") ; -- tocheck
lin postponement_N = mkN "ajournement" masculine ; -- tocheck
lin postposition_N = mkN "postposition" feminine ; -- tocheck
lin postscript_N = mkN "addendum" | mkN "appendice" | mkN "complément" | mkN "post-scriptum" | mkN "supplément" ; -- UWN
lin postulate_N = mkN "postulat" masculine ; -- tocheck
lin postulate_V2 = mkV2 (mkV "postuler") ; -- tocheck
lin posture_N = mkN "posture" feminine ; -- tocheck
lin posy_N = mkN "bouquet" ; -- UWN
lin pot_N = mkN "herbe" feminine | mkN "pot" masculine ; -- tocheck
lin potable_A = mkA "potable" ; -- tocheck
lin potash_N = mkN "hydroxyde_de_potassium" | mkN "potasse" | mkN "potasse_caustique" ; -- UWN
lin potassium_N = mkN "potassium" masculine ; -- tocheck
lin potato_N = mkN "pomme de terre" "pommes de terre" feminine | mkN "patate" feminine ;
lin potbellied_A = mkA "ventru" ; -- tocheck
lin potency_N = mkN "autorité" | mkN "dominance" ; -- UWN
lin potent_A = mkA "fort" | mkA "présent" | mkA "puissant" | mkA "tensioactives" ; -- UWN
lin potentate_N = mkN "potentat" ; -- tocheck
lin potential_A = mkA "potentiel" ; -- tocheck
lin potential_N = mkN "possibilités" ; -- tocheck
lin potentiality_N = mkN "capacité" ; -- UWN
lin potholder_N = mkN "poignée" ; -- UWN
lin pothole_N = mkN "Nid-de-poule" | mkN "fondrière" | mkN "nid-de-poule" | mkN "nid_de_poule" ; -- UWN
lin potholer_N = mkN "spéléologue" ; -- UWN
lin potion_N = mkN "potion" ; -- tocheck
lin potlatch_N = mkN "potlatch" masculine ; -- tocheck
lin potoroo_N = mkN "potorous" ; -- UWN
lin potpourri_N = mkN "pot-pourri" masculine ; -- tocheck
lin potsdam_PN = mkPN "Potsdam" ; -- status=guess src=geonames
lin potter_N = mkN "potier" masculine ; -- tocheck
lin potter_around_V = mkV "potier" ; -- UWN
lin pottery_N = mkN "poterie" feminine | mkN "poterie" ; -- tocheck
lin pouch_N = mkN "sachet" | mkN "poche" feminine ; -- tocheck
lin pouf_N = mkN "pouf" ; -- tocheck
lin poultice_N = mkN "cataplasme" masculine ; -- tocheck
lin poultry_N = mkN "volaille" ; -- tocheck
lin pound_N = mkN "livre" feminine ;
lin pound_V2 = mkV2 (mkV "pilonner") ; -- tocheck
lin pounder_N = mkN "pilon" ; -- UWN
lin pour_V = mkV "affluer" ; -- UWN
lin pour_V2 = mkV2 (mkV "verser") | mkV2 (reflV (mkV "déverser")) ; -- tocheck
lin pour_down_V = advV OP_pour_V OP_down_Adv ; -- guess-p-verb
lin pour_forth_V = advV OP_pour_V OP_forth_Adv ; -- guess-p-verb
lin pour_in_V2 = prepV2 OP_pour_V OP_in_Prep ; -- guess-p-verb
lin pour_out_V = advV OP_pour_V OP_out_Adv ; -- guess-p-verb
lin pout_N = mkN "moue" feminine ; -- tocheck
lin pout_V = mkV "faucher" ; -- UWN
lin pout_V2 = mkV2 (mkV "bouder") ; -- tocheck
lin poverty_N = mkN "pauvreté" feminine ; -- tocheck
lin powder_N = mkN "poudre" masculine | mkN "poudreuse" feminine ; -- tocheck
lin powder_V = mkV "poudre" ; -- UWN
lin powder_V2 = mkV2 (mkV "poudrer") | mkV2 (reflV (mkV "poudrer")) ; -- tocheck
lin powderpuff_N = mkN "bouffée" ; -- UWN
lin powdery_A = mkA "poudreux" ; -- tocheck
lin power_N = mkN "puissance" feminine | mkN "pouvoir" masculine | mkN "électricité" feminine ; --- split
lin power_V2 = variants {} ; --
lin powerful_A = mkA "puissant" ; -- tocheck
lin powerhouse_N = mkN "centrale" | mkN "centrale_électrique" | mkN "station_énergétique" ; -- UWN
lin powerless_A = mkA "impuissant" ; -- tocheck
lin powerlessness_N = mkN "impuissance" feminine ; -- tocheck
lin poynton_PN = mkPN "Poynton" ; -- status=guess src=geonames
lin practicability_N = mkN "praticabilité" feminine ; -- tocheck
lin practicable_A = mkA "praticable" ; -- tocheck
lin practical_A = variants {} ; --
lin practice_N = mkN "pratique" feminine ;
lin practice_V2 = mkV2 (reflV (mkV "entrainer")) | mkV2 (mkV "pratiquer") | mkV2 (mkV "entrainer") ; -- tocheck
lin practician_N = mkN "langagier" | mkN "praticien" | mkN "pratiquant" ; -- UWN
lin practise_V = variants {} ; --
lin practise_V2 = variants {} ; --
lin practitionerFem_N = mkN "praticienne" feminine ; -- tocheck
lin practitionerMasc_N = mkN "praticien" masculine ; -- tocheck
lin praenomen_N = mkN "prénom_romain" | mkN "prénoms" ; -- UWN
lin praesidium_N = mkN "præsidium" | mkN "présidium" ; -- UWN
lin praetor_N = mkN "préteur" masculine ; -- tocheck
lin praetorium_N = mkN "prétoire" ; -- UWN
lin pragmatic_A = mkA "pragmatique" ; -- tocheck
lin pragmatics_N = mkN "pragmatique" ; -- UWN
lin pragmatism_N = mkN "pragmatisme" masculine ; -- tocheck
lin prague_PN = mkPN "Prague" ; -- status=guess src=geonames
lin prairie_N = mkN "prairie" feminine ; -- tocheck
lin praise_N = mkN "louange" feminine ; -- tocheck
lin praise_V2 = mkV2 (mkV "louer") ; -- tocheck
lin praiseworthy_A = mkA "louable" ; -- tocheck
lin praline_N = mkN "praline" ; -- UWN
lin pram_N = mkN "landau" masculine ; -- tocheck
lin prance_V = mkV (reflV (mkV "cabrer")) | mkV (mkV "parader") ; -- tocheck
lin prandial_A = mkA "dinatoire" ; -- tocheck
lin prank_N = mkN "farce" feminine ; -- tocheck
lin prankster_N = mkN "farceur" masculine ; -- tocheck
lin praseodymium_N = mkN "praséodyme" masculine ; -- tocheck
lin prate_N = mkN "bavarder" ; -- UWN
lin prate_V = mkV (mkV "bavarder") ; -- tocheck
lin pratincole_N = mkN "glaréole" | mkN "glaréolidés" ; -- UWN
lin prato_PN = mkPN "Prato" ; -- status=guess src=geonames
lin prattle_N = mkN "bavarder" ; -- UWN
lin prattle_V = mkV (mkV "bavarder") ; -- tocheck
lin prawn_N = mkN "crevette" feminine ; -- tocheck
lin pray_V = variants {} ; -- mkV2 (mkV "prier") ; -- tocheck
lin pray_V2 = mkV2 (mkV "prier") ; -- tocheck
lin prayer_N = mkN "prière" feminine ; -- tocheck
lin preach_V = variants {} ; -- mkV2 (mkV "prêcher") ; -- tocheck
lin preach_V2 = mkV2 (mkV "prêcher") ; -- tocheck
lin preacher_N = mkN "prédicateur" ; -- tocheck
lin preachify_V = mkV "sermonner" ; -- UWN
lin preamble_N = mkN "préambule" masculine ; -- tocheck
lin prebend_N = mkN "prébende" feminine ; -- tocheck
lin prebendary_N = mkN "prébendier" ; -- UWN
lin precarious_A = mkA "précaire" ; -- tocheck
lin precariousness_N = mkN "précarité" feminine ; -- tocheck
lin precaution_N = mkN "précaution" feminine ; -- tocheck
lin precede_V2 = mkV2 (mkV "précéder") ; -- tocheck
lin precedence_N = mkN "préséance" feminine ; -- tocheck
lin precedent_A = mkA "précédent" ; -- tocheck
lin precedent_N = mkN "précédent" | mkN "jurisprudence" ; -- tocheck
lin precept_N = mkN "précepte" ; -- tocheck
lin precession_N = mkN "précession" feminine ; -- tocheck
lin precinct_N = mkN "enceinte" | mkN "bureau" | mkN "district" ; -- tocheck
lin precious_A = mkA "précieux" ; -- tocheck
lin precipice_N = mkN "précipice" masculine ; -- tocheck
lin precipitate_V2 = mkV2 (mkV "précipiter") ; -- tocheck
lin precipitation_N = mkN "précipitation" feminine ; -- tocheck
lin precipitous_A = mkA "hâtif" | mkA "précipité" ; -- UWN
lin precise_A = mkA "précis" ; -- tocheck
lin preciseness_N = mkN "Précision" | mkN "ponctualité" | mkN "précision" | mkN "régularité" ; -- UWN
lin precision_N = mkN "précision" ; -- tocheck
lin preclude_V2 = mkV2 (mkV I.exclure_V2) ; -- tocheck
lin precocious_A = mkA "précoce" ; -- tocheck
lin precociousness_N = mkN "précocité" ; -- UWN
lin precocity_N = mkN "précocité" ; -- UWN
lin precognition_N = mkN "précognition" ; -- tocheck
lin preconception_N = mkN "préconception" feminine ; -- tocheck
lin precooked_A = mkA "précuit" ; -- UWN
lin precursor_N = mkN "réactif" masculine | mkN "précurseur" masculine ; -- tocheck
lin precursory_A = mkA "précurseur" ; -- tocheck
lin predation_N = mkN "prédation" ; -- tocheck
lin predator_N = mkN "prédateur" masculine ; -- tocheck
lin predecease_V2 = mkV2 (mkV "prédécéder") ; -- tocheck
lin predecessor_N = mkN "précédent" masculine | mkN "prédécesseur" masculine ; -- tocheck
lin predestination_N = mkN "prédestination" feminine ; -- tocheck
lin predicament_N = mkN "dilemme" | mkN "embarras" ; -- UWN
lin predicate_N = mkN "prédicat" masculine ; -- tocheck
lin predicative_A = mkA "attribut" ; -- tocheck
lin predict_V2 = mkV2 (mkV I.prédire_V2) ; -- tocheck
lin predict_VS = variants {} ; -- mkV2 (mkV I.prédire_V2) ; -- tocheck
lin predictability_N = mkN "prédictibilité" feminine ; -- tocheck
lin predictable_A = mkA "prédictible" ; -- tocheck
lin prediction_N = mkN "prédiction" feminine ; -- tocheck
lin predictive_A = mkA "pronostic" | mkA "prédictif" ; -- UWN
lin predisposition_N = mkN "prédisposition" feminine ; -- tocheck
lin predominance_N = mkN "prédominance" ; -- UWN
lin predominant_A = mkA "prédominant" ; -- tocheck
lin predominate_V = mkV "dominer" | mkV "gouverner" | mkV "régner" ; -- UWN
lin predomination_N = mkN "prédominance" ; -- UWN
lin preemption_N = mkN "préemption" feminine ; -- tocheck
lin prefabrication_N = mkN "préfabrication" ; -- UWN
lin preface_N = mkN "préface" feminine ; -- tocheck
lin preface_V2 = mkV2 (mkV "préfacer") ; -- tocheck
lin prefect_N = mkN "préfet" masculine ; -- tocheck
lin prefecture_N = mkN "préfecture" feminine ; -- tocheck
lin prefer_V2 = mkV2 (mkV "préférer") ;
lin prefer_VV = deVV (mkV "préférer") ;
lin preferable_A = mkA "préférable" ; -- tocheck
lin preference_N = mkN "préférence" feminine ; -- tocheck
lin preferential_A = mkA "préférentiel" ; -- tocheck
lin preferred_A = variants {} ; --
lin prefix_N = mkN "préfixe" masculine ; -- tocheck
lin prefix_V2 = mkV2 (mkV "préfixer") ; -- tocheck
lin prefixation_N = mkN "préfixation" feminine ; -- tocheck
lin pregnancy_N = mkN "grossesse" feminine | mkN "gestation" feminine ; -- tocheck
lin pregnant_A = mkA "enceinte" ; -- tocheck
lin preheat_V2 = mkV2 (mkV "préchauffer") ; -- tocheck
lin prehensile_A = mkA "préhensile" ; -- tocheck
lin prehistoric_A = mkA "préhistorique" ; -- tocheck
lin prehistorical_A = mkA "préhistorique" ; -- UWN
lin prehistory_N = mkN "préhistoire" feminine ; -- tocheck
lin prejudice_N = mkN "préjugé" masculine | mkN "préjudice" masculine ; -- tocheck
lin prejudicial_A = mkA "préjudiciable" ; -- tocheck
lin prelate_N = mkN "prélat" masculine ; -- tocheck
lin preliminary_A = mkA "préliminaire" ; -- tocheck
lin preliminary_N = mkN "ouverture" | mkN "préalable" | mkN "prélude" ; -- UWN
lin prelude_N = mkN "ouverture" | mkN "préalable" | mkN "prélude" ; -- UWN
lin premature_A = mkA "prématuré" ; -- tocheck
lin premier_A = variants {} ; --
lin premiere_N = mkN "première" feminine ; -- tocheck
lin premiere_V2 = mkV2 (mkV "première") ; -- tocheck
lin premise_N = variants {} ; --
lin premises_N = mkN "prémisse" ; -- UWN
lin premium_A = mkA "supérieur" ; -- UWN
lin premium_N = variants {} ; --
lin premolar_N = mkN "Prémolaire" | mkN "prémolaire" | mkN "prémolaires" ; -- UWN
lin premonitory_A = mkA "précurseur" ; -- UWN
lin prenatal_A = mkA "anténatal" | mkA "prénatal" ; -- UWN
lin prentice_N = mkN "apprenti" ; -- UWN
lin prenuptial_A = mkA "prénuptial" ; -- tocheck
lin preoccupation_N = variants {} ; --
lin prep_N = mkN "prep" ; -- tocheck
lin preparation_N = mkN "préparation" feminine ; -- tocheck
lin preparatory_A = mkA "liminaire" | mkA "préparatoire" ; -- UWN
lin prepare_V = mkV "fixer" | mkV "préparer" ; -- UWN
lin prepare_V2 = variants {} ; -- mkV2V (mkV "préparer") | mkV2V (reflV (mkV "préparer")) ; -- tocheck
lin prepare_V2V = mkV2V (mkV "préparer") | mkV2V (reflV (mkV "préparer")) ; -- tocheck
lin prepare_VV = variants {} ; -- mkV2V (mkV "préparer") | mkV2V (reflV (mkV "préparer")) ; -- tocheck
lin preparedness_N = mkN "disponibilité" | mkN "empressement" | mkN "préparatif" | mkN "préparation" ; -- UWN
lin prepay_V2 = mkV2 (mkV "prépayer") ; -- tocheck
lin preponderant_A = mkA "primordial" | mkA "prépondérant" | mkA "souverain" ; -- UWN
lin preposition_N = mkN "préposition" ; -- tocheck
lin prepositional_A = mkA "prépositionnel" ; -- tocheck
lin preposterous_A = mkA "insensé" ; -- tocheck
lin prepubescent_A = mkA "prépubère" ; -- tocheck
lin prepuce_N = mkN "prépuce" masculine ; -- tocheck
lin prerequisite_A = mkA "préalable" ; -- UWN
lin prerequisite_N = mkN "prérequis" masculine ; -- tocheck
lin prerogative_N = mkN "prérogative" feminine ; -- tocheck
lin presage_N = mkN "présage" masculine ; -- tocheck
lin presage_V2 = mkV2 (mkV "présager") ; -- tocheck
lin presbyopia_N = mkN "presbytie" feminine ; -- tocheck
lin presbyter_N = mkN "prêtre" masculine ; -- tocheck
lin presbytery_N = mkN "consistoire" | mkN "presbytère" ; -- UWN
lin preschool_N = mkN "préscolaire" ; -- UWN
lin prescience_N = mkN "prescience" ; -- tocheck
lin prescient_A = mkA "prescient" ; -- UWN
lin prescot_PN = mkPN "Prescot" ; -- status=guess src=geonames
lin prescribe_V = mkV "commander" | mkV "dicter" | mkV "ordonner" | mkV "ordre" | mkV "prescrire" ; -- UWN
lin prescribe_V2 = mkV2 (mkV I.prescrire_V2) | mkV2 (mkV "ordonner") ; -- tocheck
lin prescription_N = mkN "ordonnance" feminine ; -- tocheck
lin presence_N = mkN "présence" feminine ; -- tocheck
lin present_A = mkA "présent" ;
lin present_N = mkN "cadeau" ;
lin present_V2 = mkV2 (mkV "présenter") ;
lin presentable_A = mkA "présentable" ; -- tocheck
lin presentation_N = mkN "exposé" masculine ; -- tocheck
lin presenter_N = mkN "présentateur" masculine ; -- tocheck
lin presentiment_N = mkN "pressentiment" masculine ; -- tocheck
lin preservation_N = mkN "préservation" feminine ; -- tocheck
lin preservative_N = mkN "conservateur" ; -- UWN
lin preserve_N = mkN "conserver" | mkN "maintenir" ; -- UWN
lin preserve_V2 = mkV2 (mkV "préserver") ; -- tocheck
lin preside_V = mkV (mkV "présider") ; -- tocheck
lin presidency_N = mkN "présidence" feminine ; -- tocheck
lin presidentFem_N = mkN "président" ; -- UWN
lin presidentMasc_N = mkN "président" ;
lin presidential_A = mkA "présidentiel" ; -- tocheck
lin presidium_N = mkN "présidium" masculine ; -- tocheck
lin press_N = mkN "pressoir" masculine | mkN "presse" feminine | mkN "imprimerie" ; -- tocheck
lin press_V = variants {} ; -- mkV2V (mkV "appuyer") | mkV2V (mkV "presser") ; -- tocheck
lin press_V2 = variants {} ; -- mkV2V (mkV "appuyer") | mkV2V (mkV "presser") ; -- tocheck
lin press_V2V = mkV2V (mkV "appuyer") | mkV2V (mkV "presser") ; -- tocheck
lin press_ahead_V = advV OP_press_V OP_ahead_Adv ; -- guess-p-verb
lin press_for_V2 = prepV2 OP_press_V OP_for_Prep ; -- guess-p-verb
lin press_forward_with_V2 = prepV2 (advV OP_press_V OP_forward_Adv ) OP_with_Prep ; -- guess-p-verb
lin press_into_V2 = prepV2 OP_press_V OP_into_Prep ; -- guess-p-verb
lin press_on_V = advV OP_press_V OP_on_Adv ; -- guess-p-verb
lin press_upon_V2 = prepV2 OP_press_V OP_upon_Prep ; -- guess-p-verb
lin pressing_A = mkA "impérieux" | mkA "urgent" ; -- UWN
lin pressing_N = mkN "oppression" | mkN "presse" | mkN "pression" ; -- UWN
lin pressman_N = mkN "épistolier" ; -- UWN
lin pressure_N = mkN "pression" feminine ; -- tocheck
lin prestatyn_PN = mkPN "Prestatyn" ; -- status=guess src=geonames
lin prestidigitation_N = mkN "prestidigitation" feminine ; -- tocheck
lin prestidigitator_N = mkN "prestidigitateur" masculine ; -- tocheck
lin prestige_N = mkN "prestige" masculine ; -- tocheck
lin prestigious_A = mkA "prestigieux" ; -- tocheck
lin preston_PN = mkPN "Preston" ; -- status=guess src=geonames
lin prestonpans_PN = mkPN "Prestonpans" ; -- status=guess src=geonames
lin prestwich_PN = mkPN "Prestwich" ; -- status=guess src=geonames
lin prestwick_PN = mkPN "Prestwick" ; -- status=guess src=geonames
lin presumable_A = variants {} ;
lin presumably_Adv = adjAdv presumable_A ; -- -- derived
lin presume_V = variants {} ; --
lin presume_V2 = variants {} ; --
lin presume_VS = variants {} ; --
lin presumptuous_A = mkA "présomptueux" ; -- tocheck
lin presuppose_V2 = mkV2 (mkV "présupposer") ; -- tocheck
lin presupposition_N = mkN "présupposé" ; -- UWN
lin pretence_N = mkN "prétention" feminine ; -- tocheck
lin pretend_V = variants {} ; -- mkV2 (mkV I.prétendre_V2) | mkV2 (mkV I.feindre_V2) ; -- tocheck
lin pretend_V2 = mkV2 (mkV I.prétendre_V2) | mkV2 (mkV I.feindre_V2) ; -- tocheck
lin pretender_N = mkN "prétendant" masculine ; -- tocheck
lin pretension_N = mkN "prétension" ; -- tocheck
lin pretentious_A = mkA "prétentieux" ; -- tocheck
lin preterit_N = mkN "passé" | mkN "prétérit" ; -- UWN
lin preterite_N = mkN "prétérit" ; -- tocheck
lin pretext_N = mkN "prétexte" ; -- tocheck
lin pretoria_PN = mkPN "Pretoria" ; -- status=guess src=geonames
lin prettify_V2 = mkV2 (mkV "enjoliver") ; -- tocheck
lin prettily_Adv = mkAdv "coquettement" ; -- UWN
lin prettiness_N = mkN "mignon" ; -- UWN
lin pretty_A = mkA "joli" ; -- tocheck
lin pretzel_N = mkN "bretzel" masculine ; -- tocheck
lin prevail_V = variants {} ; -- mkV2 (mkV "prédominer") | mkV2 (mkV "dominer") | mkV2 (mkV "persuader") ; -- tocheck
lin prevalence_N = mkN "prédominance" feminine ; -- tocheck
lin prevalent_A = mkA "répandu" ; -- tocheck
lin prevaricate_V = mkV (mkV "prévariquer") | mkV (mkV "éluder") ; -- tocheck
lin prevarication_N = mkN "subterfuge" masculine | mkN "prévarication" feminine ; -- tocheck
lin prevent_V2 = mkV2 (mkV "empêcher") ; -- tocheck
lin preventable_A = mkA "évitable" ; -- tocheck
lin preventative_N = mkN "contraceptif" | mkN "contraception" | mkN "préventif" ; -- UWN
lin prevention_N = mkN "prévention" feminine ; -- tocheck
lin preventive_A = mkA "préventif" ; -- tocheck
lin preventive_N = mkN "contraceptif" | mkN "contraception" | mkN "préventif" ; -- UWN
lin preview_N = mkN "avant-première" feminine ; -- tocheck
lin preview_V2 = mkV2 (mkV I.prévoir_V2) | mkV2 (mkV "diffuser") ; -- tocheck
lin previous_A = mkA "préalable" ; -- tocheck
lin prevision_N = mkN "anticipation" | mkN "prédiction" | mkN "prévision" ; -- UWN
lin prey_N = mkN "proie" ; -- tocheck
lin priapism_N = mkN "priapisme" masculine ; -- tocheck
lin price_N = mkN "prix" masculine ;
lin price_V = variants {} ; --
lin price_V2 = variants {} ; --
lin price_V2V = variants {} ; --
lin priceless_A = mkA "inestimable" ; -- tocheck
lin pricey_A = mkA "cher" | mkA "chérot" | mkA "coûteuse" | mkA "coûteux" ; -- UWN
lin pricing_N = mkN "prisée" ; -- UWN
lin prick_N = mkN "bite" feminine ; -- tocheck
lin pricker_N = mkN "alène" ; -- UWN
lin prickle_N = mkN "épine" feminine ; -- tocheck
lin prickly_A = mkA "épineux" | mkA "irritable" ; -- tocheck
lin pride_N = mkN "orgueil" masculine | mkN "fierté" feminine ; -- tocheck
lin priest_N = L.priest_N ;
lin priestess_N = mkN "prêtresse" feminine ; -- tocheck
lin priesthood_N = mkN "sacerdoce" ; -- UWN
lin prig_N = mkN "bégueule" ; -- tocheck
lin priggish_A = mkA "suffisant" ; -- tocheck
lin prima_A = mkA "star" | mkA "étoile" ; -- UWN
lin prima_donna_N = mkN "diva" ; -- UWN
lin primacy_N = mkN "primauté" feminine ; -- tocheck
lin primaeval_A = mkA "aborigène" | mkA "primitif" | mkA "primordial" ; -- UWN
lin primal_A = mkA "aborigène" | mkA "primitif" | mkA "primordial" ; -- UWN
lin primary_A = mkA "prioritaire" ; -- tocheck
lin primary_N = variants {} ; --
lin primate_N = mkN "primat" masculine | mkN "primate" masculine ; -- tocheck
lin primatology_N = mkN "Primatologie_comparée" | mkN "primatologie_comparée" ; -- UWN
lin prime_A = mkA "principal" | mkA "premier" ; -- tocheck
lin prime_N = mkN "fleur" | mkN "fleurir" | mkN "floraison" | mkN "nombre_premier" | mkN "pic" | mkN "pointe" ; -- UWN
lin prime_V2 = mkV2 (mkV "apprêter") | mkV2 (mkV "amorcer") ; -- tocheck
lin primer_N = mkN "abécédaire" masculine | mkN "abc" masculine | mkN "amorce" feminine ; -- tocheck
lin primeval_A = mkA "primitif" ; -- tocheck
lin primitive_A = mkA "primitif" ; -- tocheck
lin primitive_N = mkN "primitif" ; -- tocheck
lin primitiveness_N = mkN "primitivisme" ; -- UWN
lin primitivism_N = mkN "primitivisme" masculine | mkN "primitivité" feminine ; -- tocheck
lin primogeniture_N = mkN "primogéniture" feminine ; -- tocheck
lin primordial_A = mkA "aborigène" | mkA "primitif" | mkA "primordial" ; -- UWN
lin primordium_N = mkN "primordium" ; -- UWN
lin primrose_N = mkN "primevère" feminine ; -- tocheck
lin primula_N = mkN "primevère" feminine ; -- tocheck
lin prince_N = mkN "prince" masculine ; -- tocheck
lin princedom_N = mkN "Principauté" | mkN "principauté" ; -- UWN
lin princely_A = mkA "princier" ; -- tocheck
lin princess_N = mkN "princesse" feminine ; -- tocheck
lin principal_A = mkA "principal" ; -- tocheck
lin principal_N = mkN "principal" masculine ; -- tocheck
lin principality_N = mkN "principauté" feminine ; -- tocheck
lin principle_N = mkN "principe" masculine ; -- tocheck
lin print_N = mkN "empreinte" feminine ; -- tocheck
lin print_V = mkV "carrer" | mkV "deviner" | mkV "imaginer" | mkV "imprimer" | mkV "publier" | mkV "rétorquer" | mkV "éditer" ; -- UWN
lin print_V2 = mkV2 (mkV "imprimer") ; -- tocheck
lin print_out_V2 = prepV2 OP_print_V OP_out_Prep ; -- guess-p-verb
lin printable_A = mkA "imprimable" ; -- tocheck
lin printed_A = variants {} ; --
lin printer_N = mkN "imprimante" feminine | mkN "imprimeur" masculine ; -- tocheck
lin printing_N = variants {} ; --
lin printmaking_N = mkN "gravure" ; -- UWN
lin printout_N = mkN "impression" ; -- UWN
lin prion_N = mkN "prion" masculine ; -- tocheck
lin prior_A = mkA "antérieur" | mkA "précédent" ; -- UWN
lin prior_N = mkN "prieur" masculine ; -- tocheck
lin prioress_N = mkN "prieure" feminine ; -- tocheck
lin priority_N = mkN "priorité" feminine ; -- tocheck
lin priory_N = mkN "prieuré" masculine ; -- tocheck
lin prism_N = mkN "prisme" masculine ; -- tocheck
lin prison_N = mkN "prison" feminine ; -- tocheck
lin prisoner_N = mkN "prisonnier" masculine ; -- tocheck
lin pristine_A = mkA "virginal" ; -- tocheck
lin privacy_N = mkN "intimité" feminine ; -- tocheck
lin private_A = mkA "privé" ;
lin privateer_N = mkN "corsaire" masculine ; -- tocheck
lin privation_N = mkN "privation" ; -- tocheck
lin privatisation_N = variants {} ; --
lin privatization_N = mkN "privatisation" feminine ; -- tocheck
lin privatize_V2 = mkV2 (mkV "privatiser") ; -- tocheck
lin privet_N = mkN "troène" masculine ; -- tocheck
lin privilege_N = mkN "privilège" masculine ; -- tocheck
lin privileged_A = mkA "privilégié" ; -- tocheck
lin privy_A = mkA "privé" | mkA "instruit" ; -- tocheck
lin prize_N = mkN "prix" masculine ; -- tocheck
lin prize_V2 = mkV2 (mkV "estimer") ; -- tocheck
lin prizefighter_N = mkN "belluaire" | mkN "gladiateur" ; -- UWN
lin pro_N = mkN "pro" masculine ; -- tocheck
lin pro_rata_Adv = mkAdv "proportionnellement" ; -- UWN
lin proaccelerin_N = mkN "Proaccélérine" ; -- UWN
lin proactive_A = mkA "proactif" ; -- tocheck
lin probabilistic_A = mkA "probabiliste" ; -- tocheck
lin probability_N = mkN "probabilité" ; -- tocheck
lin probable_A = mkA "probable" ; -- tocheck
lin probable_AS = L.probable_AS ;
lin probable_N = mkN "vraisemblable" ; -- UWN
lin probe_N = mkN "perche" feminine | mkN "sonde" feminine ; -- tocheck
lin probe_V = variants {} ; --
lin probe_V2 = variants {} ; --
lin probenecid_N = mkN "probénécide" ; -- UWN
lin probity_N = mkN "probité" ; -- UWN
lin problem_N = mkN "problème" masculine ;
lin problematic_A = mkA "problématique" ; -- tocheck
lin proboscidean_N = mkN "proboscidien" ; -- UWN
lin proboscis_N = mkN "trompe" feminine ; -- tocheck
lin procedural_A = mkA "procédural" ; -- UWN
lin procedure_N = mkN "fonction" feminine | mkN "procédé" masculine | mkN "procédure" feminine ; -- tocheck
lin proceed_N = variants {} ; --
lin proceed_V = variants {} ; -- mkV2 (mkV "procéder") ; -- tocheck
lin proceeding_N = mkN "procédure" ; -- UWN
lin process_N = mkN "processus" ;
lin process_V = mkV "traiter" ;
lin process_V2 = mkV2 (mkV "traiter") ; -- tocheck
lin processing_N = variants {} ; --
lin procession_N = mkN "procession" feminine ; -- tocheck
lin processor_N = mkN "processeur" masculine ; -- tocheck
lin proclaim_V2 = variants {} ; --
lin proclaim_VS = variants {} ; --
lin proclamation_N = mkN "proclamation" feminine ; -- tocheck
lin proclivity_N = mkN "propension" ; -- tocheck
lin procrastinate_V = mkV (mkV "procrastiner") ; -- tocheck
lin procrastination_N = mkN "procrastination" feminine ; -- tocheck
lin procrastinator_N = mkN "procrastinateur" ; -- UWN
lin procreate_V2 = mkV2 (mkV "procréer") ; -- tocheck
lin procreation_N = mkN "procréation" feminine ; -- tocheck
lin proctology_N = mkN "proctologie" feminine ; -- tocheck
lin proctoscope_N = mkN "rectoscope" ; -- UWN
lin procurable_A = mkA "accessible" ; -- UWN
lin procure_V2 = mkV2 (mkV I.acquérir_V2) | mkV2 (mkV "procurer") ;
lin procurement_N = mkN "achats" ; -- tocheck
lin procurer_N = mkN "barbeau" | mkN "maquereau" | mkN "proxénète" | mkN "souteneur" ; -- UWN
lin prod_N = mkN "aiguillonner" ; -- UWN
lin prod_V2V = mkV2V (mkV "encourager") | mkV2V (mkV "pousser") ; -- tocheck
lin prodigal_A = mkA "extravagant" | mkA "prodigue" ; -- UWN
lin prodigality_N = mkN "faste" | mkN "highlife" ; -- UWN
lin prodigy_N = mkN "prodige" | mkN "présage" ; -- tocheck
lin prodrome_N = mkN "phase_prodromique" | mkN "prodrome" ; -- UWN
lin produce_N = variants {} ; --
lin produce_V = mkV I.produire_V2 ;
lin produce_V2 = mkV2 (mkV I.produire_V2) ;
lin producer_N = mkN "producteur" masculine ; -- tocheck
lin product_N = mkN "produit" masculine ;
lin production_N = mkN "production" ; -- tocheck
lin productive_A = mkA "productif" ; -- tocheck
lin productivity_N = mkN "productivité" ; -- tocheck
lin profane_A = mkA "profane" | mkA "impur" | mkA "sacrilège" ; -- tocheck
lin profane_V2 = mkV2 (mkV "profaner") ; -- tocheck
lin profanity_N = mkN "insanité" feminine | mkN "impiété" feminine ; -- tocheck
lin profession_N = mkN "profession" feminine ; -- tocheck
lin professional_A = mkA "professionnel" ; -- tocheck
lin professional_N = mkN "professionnel" masculine ; -- tocheck
lin professor_N = mkN "professeur" masculine ; -- tocheck
lin professorial_A = mkA "professoral" ; -- tocheck
lin professorship_N = mkN "chaise" | mkN "fauteuil" | mkN "siège" ; -- UWN
lin proffer_N = mkN "proposition" | mkN "suggestion" ; -- UWN
lin proffer_V2 = mkV2 (mkV I.offrir_V2) | mkV2 (mkV I.entreprendre_V2) ; -- tocheck
lin proficiency_N = mkN "compétence" ; -- tocheck
lin proficient_A = mkA "compétent" ; -- tocheck
lin profile_N = mkN "profil" masculine | mkN "contour" masculine | mkN "réputation" feminine ; -- tocheck
lin profiling_N = mkN "profilage" ; -- UWN
lin profit_N = mkN "profit" masculine ; -- tocheck
lin profit_V = mkV "bénéficier" | mkV "profiter" ; -- UWN
lin profit_V2 = mkV2 (mkV "profiter") ; -- tocheck
lin profitability_N = variants {} ; --
lin profitable_A = mkA "profitable" ; -- tocheck
lin profitableness_N = mkN "profitabilité" | mkN "rentabilité" ; -- UWN
lin profiteer_N = mkN "profit" | mkN "profiteur" ; -- UWN
lin profligate_A = mkA "dissolu" | mkA "jeûner" | mkA "libertin" | mkA "rapide" ; -- UWN
lin profound_A = mkA "profond" ; -- tocheck
lin profuse_A = mkA "abondant" | mkA "ample" | mkA "copieux" | mkA "large" | mkA "luxuriant" | mkA "plantureux" | mkA "profus" ; -- UWN
lin profuseness_N = mkN "corne_d'abondance" | mkN "cornucopia" | mkN "excès" | mkN "fortune" | mkN "surabondance" ; -- UWN
lin profusion_N = mkN "corne_d'abondance" | mkN "cornucopia" | mkN "excès" | mkN "fortune" | mkN "surabondance" ; -- UWN
lin progenitor_N = mkN "auteur" masculine ; -- tocheck
lin progeria_N = mkN "progéria" ; -- UWN
lin progesterone_N = mkN "progestérone" masculine ; -- tocheck
lin progestin_N = mkN "progestagène" | mkN "progestagène_de_synthèse" ; -- UWN
lin prognathous_A = mkA "prognathe" ; -- tocheck
lin prognostic_A = mkA "pronostic" | mkA "prédictif" ; -- UWN
lin prognostic_N = mkN "augure" | mkN "pronostic" | mkN "présage" ; -- UWN
lin prognosticate_V2 = mkV2 (mkV "présager") | mkV2 (mkV "pronostiquer") ; -- tocheck
lin program_N = mkN "programme" masculine | mkN "émission" feminine ; -- tocheck
lin program_V2 = variants {} ; -- mkV2V (mkV "programmer") ; -- tocheck
lin program_V2V = mkV2V (mkV "programmer") ; -- tocheck
lin programme_N = mkN "programme" masculine ;
lin programmerFem_N = mkN "Programmeur" | mkN "codeur" | mkN "programmateur" | mkN "programmeur" | mkN "programmeuse" ; -- UWN
lin programmerMasc_N = mkN "Programmeur" | mkN "codeur" | mkN "programmateur" | mkN "programmeur" | mkN "programmeuse" ; -- UWN
lin programming_N = mkN "programmation" ; -- tocheck
lin progress_N = mkN "progrès" masculine ; -- tocheck
lin progress_V = variants {} ; -- mkV2 (mkV "progresser") ; -- tocheck
lin progress_V2 = mkV2 (mkV "progresser") ; -- tocheck
lin progression_N = mkN "progression" feminine ; -- tocheck
lin progressive_A = variants {} ; --
lin progressive_N = mkN "libéral" ; -- UWN
lin progressivism_N = mkN "progressisme" masculine ; -- tocheck
lin prohibit_V = mkV "interdire" | mkV "prohiber" ; -- UWN
lin prohibit_V2 = mkV2 (mkV I.interdire_V2) ; -- tocheck
lin prohibition_N = mkN "interdiction" feminine ; -- tocheck
lin prohibitionist_N = mkN "sec" | mkN "séchage" | mkN "sécher" ; -- UWN
lin prohibitive_A = mkA "prohibitif" ; -- UWN
lin prohibitory_A = mkA "prohibitif" ; -- UWN
lin project_N = mkN "projet" masculine ;
lin project_V = variants {} ; -- mkV2V (mkV "projeter") ; -- tocheck
lin project_V2 = variants {} ; -- mkV2V (mkV "projeter") ; -- tocheck
lin project_V2V = mkV2V (mkV "projeter") ; -- tocheck
lin project_VS = variants {} ; -- mkV2V (mkV "projeter") ; -- tocheck
lin projectile_N = mkN "projectile" masculine ; -- tocheck
lin projection_N = mkN "saillie" feminine | mkN "projection" feminine ; -- tocheck
lin projector_N = mkN "projecteur" masculine ; -- tocheck
lin prokaryote_N = mkN "procaryote" ; -- UWN
lin prolactin_N = mkN "prolactine" ; -- UWN
lin prolapse_N = mkN "prolapsus" ; -- UWN
lin prole_N = mkN "Scop" | mkN "ouvrier" | mkN "prolétaire" | mkN "travailleur" ; -- UWN
lin prolepsis_N = mkN "prolepse" feminine ; -- tocheck
lin proletarian_A = mkA "prolétaire" ; -- tocheck
lin proletarian_N = mkN "prolétaire" ; -- tocheck
lin proletariat_N = mkN "prolétariat" masculine ; -- tocheck
lin proliferation_N = mkN "prolifération" feminine ; -- tocheck
lin prolific_A = mkA "fécond" | mkA "prolifique" ; -- tocheck
lin proline_N = mkN "proline" feminine ; -- tocheck
lin prolix_A = mkA "prolixe" | mkA "pédant" ; -- tocheck
lin prologue_N = mkN "prologue" masculine ; -- tocheck
lin prolong_V2 = mkV2 (mkV "prolonger") ; -- tocheck
lin prolongation_N = mkN "prolongation" | mkN "prorogation" ; -- UWN
lin prolonged_A = variants {} ; --
lin promenade_N = mkN "promenoir" masculine ; -- tocheck
lin promethium_N = mkN "prométhium" masculine ; -- tocheck
lin prominence_N = mkN "protubérance" feminine ; -- tocheck
lin prominent_A = mkA "proéminent" | mkA "protubérant" ; -- tocheck
lin promiscuity_N = mkN "promiscuité" feminine ; -- tocheck
lin promise_N = mkN "voeu" masculine | mkN "promesse" feminine ; -- tocheck
lin promise_V = variants {} ; -- mkV2 (mkV I.promettre_V2) ; -- tocheck
lin promise_V2 = mkV2 (mkV I.promettre_V2) ; -- tocheck
lin promontory_N = mkN "promontoire" masculine ; -- tocheck
lin promote_V = variants {} ; -- mkV2 (mkV I.promouvoir_V2) ; -- tocheck
lin promote_V2 = mkV2 (mkV I.promouvoir_V2) ; -- tocheck
lin promoter_N = mkN "promoteur" ; -- tocheck
lin promotion_N = mkN "promotion" feminine ; -- tocheck
lin promotional_A = mkA "publicitaire" ; -- tocheck
lin prompt_A = variants {} ;
lin prompt_V2 = variants {} ; -- mkV2V (mkV "inciter") ; -- tocheck
lin prompt_V2V = mkV2V (mkV "inciter") ; -- tocheck
lin prompter_N = mkN "souffleur" masculine ; -- tocheck
lin promptitude_N = mkN "hâte" | mkN "promptitude" | mkN "rapidité" ; -- UWN
lin promptness_N = mkN "rapidité" ; -- tocheck
lin promulgate_V2 = mkV2 (mkV "promulguer") ; -- tocheck
lin promulgation_N = mkN "promulgation" feminine ; -- tocheck
lin pronation_N = mkN "pronation" ; -- UWN
lin prone_A = mkA "enclin" | mkA "prédisposé" ; -- tocheck
lin prong_N = mkN "dent" feminine ; -- tocheck
lin pronoun_N = mkN "pronom" masculine ; -- tocheck
lin pronounce_V = mkV "déclarer" | mkV "juger" | mkV "prononcer" | mkV "étiqueter" ; -- UWN
lin pronounce_V2 = mkV2 (mkV "déclarer") | mkV2 (mkV "déclamer") | mkV2 (mkV "prononcer") ; -- tocheck
lin pronounceable_A = mkA "prononçable" ; -- tocheck
lin pronouncement_N = mkN "déclaration" ; -- UWN
lin pronto_Adv = mkAdv "illico" ; -- tocheck
lin pronunciation_N = mkN "prononciation" feminine ; -- tocheck
lin proof_N = mkN "épreuve" feminine | mkN "preuve" feminine ; -- tocheck
lin proofread_V = mkV "éplucher" ; -- UWN
lin proofreader_N = mkN "lecteur" ; -- UWN
lin prop_N = mkN "accessoire" masculine | mkN "cale" feminine | mkN "pillier" masculine ; -- tocheck
lin prop_V2 = mkV2 (mkV "caler") ; -- tocheck
lin propaganda_N = mkN "propagande" ; -- tocheck
lin propagate_V2 = mkV2 (reflV (mkV "propager")) ; -- tocheck
lin propagation_N = mkN "génération" | mkN "multiplication" | mkN "propagation" ; -- UWN
lin propanal_N = mkN "propanal" ; -- UWN
lin propane_N = mkN "propane" masculine ; -- tocheck
lin propanol_N = mkN "propanol" ; -- UWN
lin propel_V2 = mkV2 (mkV "catapulter") ; -- tocheck
lin propellant_N = mkN "propergol" ; -- UWN
lin propellent_N = mkN "propergol" ; -- UWN
lin propeller_N = mkN "hélice" feminine ; -- tocheck
lin propenal_N = mkN "2-propène-1-one" | mkN "acquinite" | mkN "acraldéhyde" | mkN "acroléine" | mkN "acrylaldéhyde" | mkN "aldéhyde_acrylique" | mkN "aqualin" | mkN "aqualine" | mkN "biocide" | mkN "crolean" | mkN "ethylène_aldéhyde" | mkN "magnacide" | mkN "magnacide_h" | mkN "prop-2-en-1-al" | mkN "propenal" | mkN "slimicide" ; -- UWN
lin propenoate_N = mkN "acrylate" ; -- UWN
lin propenonitrile_N = mkN "acrylonitrile" ; -- UWN
lin propensity_N = mkN "propension" ; -- tocheck
lin proper_A = mkA "propre" | mkA "convenable" | mkA "approprié" ; -- tocheck
lin property_1_N = mkN "propriété" feminine ;
lin property_2_N = mkN "propriété" feminine | mkN "possession" feminine ;
lin property_N = mkN "propriété" feminine | mkN "possession" feminine ;
lin propertyless_A = mkA "prolétaire" ; -- UWN
lin prophecy_N = mkN "prophétie" ; -- UWN
lin prophet_N = mkN "prophète" masculine ; -- tocheck
lin prophetess_N = mkN "prophétesse" feminine ; -- tocheck
lin prophetic_A = mkA "prophétique" ; -- tocheck
lin prophetical_A = mkA "prophétique" ; -- UWN
lin prophylactic_A = mkA "prophylactique" ; -- tocheck
lin prophylactic_N = mkN "capote" | mkN "condom" | mkN "préservatif" ; -- UWN
lin prophylaxis_N = mkN "prophylaxie" feminine ; -- tocheck
lin propinquity_N = mkN "voisinage" ; -- UWN
lin propitiation_N = mkN "expiation" ; -- UWN
lin propitiatory_A = mkA "expiatoire" ; -- UWN
lin propitious_A = mkA "avantageux" | mkA "favorable" ; -- tocheck
lin propjet_N = mkN "turbopropulseur" ; -- UWN
lin proponent_N = mkN "partisan" masculine ; -- tocheck
lin proportion_N = mkN "proportion" feminine ; -- tocheck
lin proportional_A = mkA "proportionnel" ; -- tocheck
lin proportional_N = mkN "proportionnel" ; -- UWN
lin proportionality_N = mkN "proportion" | mkN "équilibre" ; -- UWN
lin proposal_N = mkN "proposition" ; -- tocheck
lin propose_V = variants {} ; -- mkV2 (mkV "proposer") ; -- tocheck
lin propose_V2 = mkV2 (mkV "proposer") ; -- tocheck
lin propose_VS = variants {} ; -- mkV2 (mkV "proposer") ; -- tocheck
lin propose_VV = variants {} ; -- mkV2 (mkV "proposer") ; -- tocheck
lin proposed_A = variants {} ; --
lin proposition_N = mkN "proposition" feminine ; -- tocheck
lin proprietor_N = mkN "propriétaire" | mkN "propriétaire" masculine ; -- tocheck
lin proprietorship_N = mkN "propriété" ; -- UWN
lin propriety_N = mkN "correction" feminine | mkN "décence" feminine ; -- tocheck
lin proprioceptive_A = mkA "proprioceptif" ; -- UWN
lin propulsion_N = mkN "propulsion" feminine ; -- tocheck
lin propylene_N = mkN "propylène" | mkN "propène" ; -- UWN
lin prorogue_V2 = mkV2 (mkV "proroger") | mkV2 (mkV "proroguer") ; -- tocheck
lin proscenium_N = mkN "proscenium" ; -- UWN
lin prosciutto_N = mkN "prosciutto" masculine ; -- tocheck
lin proscribe_V2 = mkV2 (mkV "bannir") | mkV2 (mkV "dénoncer") | mkV2 (mkV I.interdire_V2) ; -- tocheck
lin proscription_N = mkN "bannissement" | mkN "défense" | mkN "interdiction" ; -- UWN
lin prose_N = mkN "prose" feminine ; -- tocheck
lin prosecute_V2 = variants {} ; --
lin prosecution_N = variants {} ; --
lin prosecutorFem_N = mkN "procureur" feminine ; -- tocheck
lin prosecutorMasc_N = mkN "procureur" masculine ; -- tocheck
lin proselyte_N = mkN "prosélyte" masculine ; -- tocheck
lin proselytism_N = mkN "prosélytisme" masculine ; -- tocheck
lin proselytize_V2 = mkV2 (mkV "prosélytiser") ; -- tocheck
lin prosimian_N = mkN "Prosimien" | mkN "prosimien" | mkN "prosimiens" ; -- UWN
lin prosody_N = mkN "prosodie" feminine ; -- tocheck
lin prospect_N = mkN "perspective" feminine ; -- tocheck
lin prospect_V = mkV (mkV "prospecter") ; -- tocheck
lin prospective_A = mkA "prospectif" ; -- tocheck
lin prospector_N = mkN "prospecteur" masculine ; -- tocheck
lin prosper_V2 = mkV2 (mkV "prospérer") ; -- tocheck
lin prosperity_N = mkN "prospérité" feminine ; -- tocheck
lin prostaglandin_N = mkN "prostaglandine" | mkN "prostaglandines" ; -- UWN
lin prostate_A = mkA "prostate" ; -- UWN
lin prostate_N = mkN "prostate" feminine ; -- tocheck
lin prostatitis_N = mkN "prostatite" feminine ; -- tocheck
lin prosthesis_N = mkN "prothèse" feminine ; -- tocheck
lin prosthetic_A = mkA "prosthétique" ; -- tocheck
lin prosthodontics_N = mkN "Prothèse_dentaire" | mkN "prothèse" | mkN "prothèse_dentaire" ; -- UWN
lin prostitute_N = mkN "prostitué" masculine ; -- tocheck
lin prostitute_V2 = mkV2 (reflV (mkV "prostituer")) ; -- tocheck
lin prostitution_N = mkN "prostitution" feminine ; -- tocheck
lin prostrate_V2 = mkV2 (mkV "prosterner") ; -- tocheck
lin prosy_A = mkA "piéton" | mkA "piétonnier" ; -- UWN
lin protactinium_N = mkN "protactinium" masculine ; -- tocheck
lin protagonist_N = mkN "protagoniste" ; -- tocheck
lin protea_N = mkN "protea" ; -- UWN
lin protean_A = mkA "variable" ; -- tocheck
lin protease_N = mkN "Peptidase" | mkN "peptidase" | mkN "peptidases" | mkN "protéase" ; -- UWN
lin protect_V = variants {} ; -- mkV2 (mkV "protéger") ; -- tocheck
lin protect_V2 = mkV2 (mkV "protéger") ; -- tocheck
lin protection_N = mkN "protection" feminine ; -- tocheck
lin protectionism_N = mkN "protectionnisme" masculine ; -- tocheck
lin protectionistFem_N = variants {} ; ---- sense to be split
lin protectionistMasc_N = variants {} ; ---- sense to be split
lin protective_A = mkA "protecteur" ; -- tocheck
lin protector_N = mkN "protecteur" | mkN "protecteur" masculine ; -- tocheck
lin protectorate_N = mkN "protectorat" masculine ; -- tocheck
lin protein_N = mkN "protéine" feminine ; -- tocheck
lin proteolysis_N = mkN "protéolyse" ; -- UWN
lin proteome_N = mkN "protéome" ; -- UWN
lin proteomics_N = mkN "protéomique" feminine ; -- tocheck
lin protest_N = mkN "protestation" feminine | mkN "manifestation" feminine ; -- tocheck
lin protest_V = variants {} ; -- mkV2 (mkV "protester") ; -- tocheck
lin protest_V2 = mkV2 (mkV "protester") ; -- tocheck
lin protestant_A = mkA "protestant" ; -- UWN
lin protester_N = mkN "manifestant" masculine ; -- tocheck
lin prothorax_N = mkN "prothorax" ; -- UWN
lin prothrombin_N = mkN "prothrombine" feminine ; -- tocheck
lin protist_N = mkN "protiste" feminine ; -- tocheck
lin protoavis_N = mkN "protoavis" ; -- UWN
lin protoceratops_N = mkN "protoceratops" | mkN "protocératops" ; -- UWN
lin protocol_N = mkN "protocole" masculine ; -- tocheck
lin protohistory_N = mkN "protohistoire" ; -- UWN
lin proton_N = mkN "proton" masculine ; -- tocheck
lin protoplasm_N = mkN "protoplasme" masculine ; -- tocheck
lin prototype_N = mkN "prototype" masculine ; -- tocheck
lin protozoan_N = mkN "protozoaire" masculine ; -- tocheck
lin protozoological_A = mkA "protozoologique" ; -- tocheck
lin protozoologist_N = mkN "protozoologiste" ; -- tocheck
lin protozoology_N = mkN "protistologie" feminine | mkN "protozoologie" feminine ; -- tocheck
lin protract_V2 = mkV2 (mkV "prolonger") ; -- tocheck
lin protractile_A = mkA "protractile" ; -- UWN
lin protraction_N = mkN "prolongation" | mkN "prorogation" ; -- UWN
lin protractor_N = mkN "rapporteur" masculine ; -- tocheck
lin protrude_V2 = mkV2 (mkV "dépasser") ; -- tocheck
lin protrusile_A = mkA "protrusible" ; -- UWN
lin protrusion_N = mkN "saillie" ; -- UWN
lin protuberance_N = mkN "saillie" feminine ; -- tocheck
lin proturan_N = mkN "protoure" masculine ; -- tocheck
lin proud_A = mkA "fier" | mkA "orgueilleux" ; -- tocheck
lin provable_A = mkA "prouvable" | mkA "évident" ; -- UWN
lin prove_V = variants {} ; -- mkV2V (mkV "prouver") ; -- tocheck
lin prove_V2 = variants {} ; -- mkV2V (mkV "prouver") ; -- tocheck
lin prove_VA = mkVA (mkV "révéler") | mkVA (reflV (mkV "avérer")) ; -- UWN
lin prove_VS = variants {} ; -- mkV2V (mkV "prouver") ; -- tocheck
lin provenance_N = mkN "provenance" feminine ; -- tocheck
lin proverb_N = mkN "proverbe" masculine ; -- tocheck
lin provide_V = mkV "fournir" ; ----
lin provide_V2 = mkV2 (mkV "fournir") | mkV2 (mkV I.pourvoir_V2) ;
lin provided_Subj = variants {} ; --
lin providence_N = mkN "providence" feminine ; -- tocheck
lin providence_PN = mkPN "Providence" ; -- status=guess src=geonames
lin providential_A = mkA "providentiel" ; -- UWN
lin provider_N = mkN "fournisseur" masculine ; -- tocheck
lin providing_Subj = variants {} ; --
lin province_N = mkN "province" feminine ; -- tocheck
lin provincial_A = variants {} ; --
lin provincial_N = mkN "bucolique" | mkN "laboureur" | mkN "paysan" ; -- UWN
lin provision_N = mkN "provision" feminine ; -- tocheck
lin provisional_A = mkA "provisoire" ; -- tocheck
lin proviso_N = mkN "provision" ; -- tocheck
lin provitamin_N = mkN "provitamine" ; -- UWN
lin provocation_N = mkN "provocation" feminine ; -- tocheck
lin provocative_A = mkA "provocateur" ; -- tocheck
lin provoke_V2 = mkV2 (mkV "provoquer") ; -- tocheck
lin provost_N = mkN "principal" masculine ; -- tocheck
lin prow_N = mkN "proue" feminine ; -- tocheck
lin prowess_N = mkN "exploit" | mkN "prouesse" feminine ; -- tocheck
lin prowl_N = mkN "rôder" ; -- UWN
lin prowl_V = mkV "rôder" ; -- UWN
lin prowl_V2 = mkV2 (mkV "rôder") ; -- tocheck
lin proxemics_N = mkN "proxémie" ; -- UWN
lin proximity_N = mkN "proximité" feminine ; -- tocheck
lin proxy_N = mkN "mandat" masculine | mkN "mandataire" masculine | mkN "proxy" masculine ; -- tocheck
lin prude_N = mkN "prude" ; -- tocheck
lin prudent_A = mkA "prudent" ; -- tocheck
lin prudential_A = mkA "prudentiel" ; -- UWN
lin prudhoe_PN = mkPN "Prudhoe" ; -- status=guess src=geonames
lin prudish_A = mkA "prude" ; -- tocheck
lin prune_N = mkN "pruneau" masculine ; -- tocheck
lin prune_V2 = mkV2 (mkV "élaguer") ; -- tocheck
lin pruner_N = mkN "émondeur" masculine ; -- tocheck
lin prurience_N = mkN "lascivité" ; -- UWN
lin pruriency_N = mkN "lascivité" ; -- UWN
lin prurient_A = mkA "lubrique" ; -- tocheck
lin prurigo_N = mkN "prurigo" ; -- UWN
lin pry_V2 = mkV2 (mkV "scruter") | mkV2 (reflV (mkV "immiscer")) ; -- tocheck
lin psalm_N = mkN "psaume" ; -- UWN
lin psalmist_N = mkN "psalmiste" ; -- tocheck
lin psalter_N = mkN "psautier" masculine ; -- tocheck
lin psalterium_N = mkN "feuillet" ; -- UWN
lin psaltery_N = mkN "canon" | mkN "psaltérion" ; -- UWN
lin pseud_N = mkN "Imposteur" | mkN "imposteur" | mkN "impostrice" | mkN "tromperie" ; -- UWN
lin pseudo_N = mkN "Imposteur" | mkN "imposteur" | mkN "impostrice" | mkN "tromperie" ; -- UWN
lin pseudobulb_N = mkN "pseudobulbe" masculine ; -- tocheck
lin pseudoephedrine_N = mkN "pseudoéphédrine" ; -- tocheck
lin pseudohermaphrodite_N = mkN "pseudo-hermaphrodite" ; -- tocheck
lin pseudohermaphroditism_N = mkN "pseudo-hermaphrodisme" masculine ; -- tocheck
lin pseudonym_N = mkN "nom_de_guerre" | mkN "prête-nom" | mkN "pseudo" | mkN "pseudonyme" ; -- UWN
lin pseudopod_N = mkN "pseudopode" masculine ; -- tocheck
lin pseudoscience_N = mkN "pseudo-science" feminine ; -- tocheck
lin pseudoscientific_A = mkA "pseudo-scientifique" ; -- tocheck
lin psi_N = mkN "psi" masculine ; -- tocheck
lin psilocybin_N = mkN "psilocybine" ; -- UWN
lin psittacosaur_N = mkN "psittacosaure" | mkN "psittacosaurus" ; -- UWN
lin psoriasis_N = mkN "psoriasis" masculine ; -- tocheck
lin psyche_N = mkN "psyché" feminine ; -- tocheck
lin psychedelic_A = mkA "psychédélique" ; -- tocheck
lin psychiatric_A = mkA "psychiatrique" ; -- tocheck
lin psychiatrist_N = mkN "psychiatriste" ; -- tocheck
lin psychiatry_N = mkN "psychiatrie" feminine ; -- tocheck
lin psychic_N = mkN "médium" masculine ; -- tocheck
lin psychoactive_A = mkA "psychotrope" ; -- UWN
lin psychoanalysis_N = mkN "psychanalyse" feminine ; -- tocheck
lin psychoanalyst_N = mkN "psychanalyste" masculine ; -- tocheck
lin psychoanalytic_A = mkA "psychanalytique" ; -- UWN
lin psychoanalytical_A = mkA "psychanalytique" ; -- UWN
lin psychoanalyze_V2 = mkV2 (mkV "psychanalyser") ; -- tocheck
lin psycholinguistics_N = mkN "psycholinguistique" feminine ; -- tocheck
lin psychological_A = variants {} ; --
lin psychologist_N = mkN "psychologue" ; -- tocheck
lin psychology_N = mkN "psychologie" feminine ; -- tocheck
lin psychometry_N = mkN "psychométrie" ; -- tocheck
lin psychopath_N = mkN "psychopathe" ; -- tocheck
lin psychopathic_A = mkA "psychopathique" ; -- tocheck
lin psychophysics_N = mkN "psychophysique" feminine ; -- tocheck
lin psychopomp_N = mkN "psychopompe" ; -- UWN
lin psychosis_N = mkN "psychose" feminine ; -- tocheck
lin psychosomatic_A = mkA "psychosomatique" ; -- tocheck
lin psychosurgery_N = mkN "psychochirurgie" ; -- UWN
lin psychotherapist_N = mkN "psychothérapeute" ; -- UWN
lin psychotherapy_N = mkN "psychothérapie" feminine ; -- tocheck
lin psychotic_A = mkA "psychotique" ; -- tocheck
lin psychotic_N = mkN "psychotique" ; -- tocheck
lin ptarmigan_N = mkN "lagopède" | mkN "lagopède_alpin" | mkN "ptarmigan" ; -- UWN
lin pterodactyl_N = mkN "ptérodactyle" masculine ; -- tocheck
lin pterosaur_N = mkN "ptérosaure" masculine ; -- tocheck
lin pterygium_N = mkN "ptérygion" ; -- UWN
lin ptosis_N = mkN "ptosis" ; -- UWN
lin ptyalism_N = mkN "hypersialorrhée" | mkN "ptyalisme" ; -- UWN
lin pub_N = mkN "pub" masculine ; -- tocheck
lin pubertal_A = mkA "pubertaire" ; -- UWN
lin puberty_N = mkN "puberté" feminine ; -- tocheck
lin pubes_N = mkN "lombes" ; -- UWN
lin pubescent_A = mkA "pubère" ; -- tocheck
lin pubic_A = mkA "pubien" ; -- UWN
lin pubis_N = mkN "pubis" masculine ; -- tocheck
lin public_A = mkA "public" "publique" ;
lin public_N = mkN "public" masculine ; -- tocheck
lin publican_N = mkN "publicain" | mkN "publicains" ; -- UWN
lin publication_N = mkN "publication" feminine ; -- tocheck
lin publicist_N = mkN "publiciste" ; -- tocheck
lin publicity_N = mkN "publicité" feminine ; -- tocheck
lin publish_V = variants {} ; -- mkV2 (mkV "publier") ; -- tocheck
lin publish_V2 = mkV2 (mkV "publier") ; -- tocheck
lin publishable_A = mkA "publiable" ; -- UWN
lin publisher_N = mkN "éditeur" masculine ; -- tocheck
lin publishing_N = variants {} ; --
lin puck_N = mkN "palet" masculine ; -- tocheck
lin puckish_A = mkA "espiègle" ; -- UWN
lin pud_N = mkN "pudding" ; -- UWN
lin pudding_N = mkN "pudding" masculine | mkN "boudin" masculine ; -- tocheck
lin puddle_N = mkN "flaque" feminine ; -- tocheck
lin pudendal_A = mkA "pudendal" ; -- UWN
lin pudgy_A = mkA "dodu" | mkA "replet" | mkA "rondelet" ; -- UWN
lin pudsey_PN = mkPN "Pudsey" ; -- status=guess src=geonames
lin pueblo_N = mkN "indiens_pueblos" | mkN "pueblos" ; -- UWN
lin puerile_A = mkA "puéril" ; -- tocheck
lin puerperal_A = mkA "puerpéral" ; -- UWN
lin puff_A = mkA "bouffée" ; -- UWN
lin puff_N = mkN "bouffée" feminine ; -- tocheck
lin puffball_N = mkN "vesse-de-loup" feminine ; -- tocheck
lin puffbird_N = mkN "bucconidae" | mkN "bucconidés" ; -- UWN
lin puffin_N = mkN "macareux" masculine ; -- tocheck
lin puffiness_N = mkN "inflation" | mkN "ostentation" ; -- UWN
lin puffy_A = mkA "boursouflé" | mkA "rebondi" ; -- tocheck
lin pug_N = mkN "carlin" masculine ; -- tocheck
lin pugilism_N = mkN "boxe" ; -- UWN
lin pugilist_N = mkN "boxer" ; -- UWN
lin pugilistic_A = mkA "pugilistique" ; -- tocheck
lin pugnacious_A = mkA "pugnace" ; -- tocheck
lin pugnacity_N = mkN "agressivité" | mkN "pugnacité" ; -- UWN
lin puissance_N = mkN "force" | mkN "puissance" ; -- UWN
lin puissant_A = mkA "puissant" ; -- tocheck
lin puke_N = mkN "vomi" ; -- tocheck
lin puke_V2 = mkV2 (mkV "vomir") ; -- tocheck
lin puku_N = mkN "puku" masculine ; -- tocheck
lin pula_N = mkN "pula" ; -- UWN
lin pulchritude_N = mkN "vénusté" feminine ; -- tocheck
lin pulchritudinous_A = mkA "somptueux" ; -- tocheck
lin pull_N = mkN "influence" feminine ; -- tocheck
lin pull_V = variants {} ; -- L.pull_V2 ;
lin pull_V2 = L.pull_V2 ;
lin pull_ahead_V = advV OP_pull_V OP_ahead_Adv ; -- guess-p-verb
lin pull_apart_V2 = mkV2 (advV OP_pull_V OP_apart_Adv ) ; -- guess-p-verb
lin pull_away_V = advV OP_pull_V OP_away_Adv ; -- guess-p-verb
lin pull_back_V = advV OP_pull_V OP_back_Adv ; -- guess-p-verb
lin pull_back_V2 = mkV2 (advV OP_pull_V OP_back_Adv ) ; -- guess-p-verb
lin pull_down_V = mkV "abattre" | mkV "démolir" ; -- UWN
lin pull_down_V2 = prepV2 OP_pull_V OP_down_Prep ; -- guess-p-verb
lin pull_for_V2 = prepV2 OP_pull_V OP_for_Prep ; -- guess-p-verb
lin pull_in_V = mkV "collecter" | mkV "collectionner" | mkV "recueillir" | mkV "réunir" ; -- UWN
lin pull_in_V2 = prepV2 OP_pull_V OP_in_Prep ; -- guess-p-verb
lin pull_off_V = advV OP_pull_V OP_off_Adv ; -- guess-p-verb
lin pull_off_V2 = prepV2 OP_pull_V OP_off_Prep ; -- guess-p-verb
lin pull_on_V2 = prepV2 OP_pull_V OP_on_Prep ; -- guess-p-verb
lin pull_out_V = advV OP_pull_V OP_out_Adv ; -- guess-p-verb
lin pull_out_V2 = prepV2 OP_pull_V OP_out_Prep ; -- guess-p-verb
lin pull_over_V2 = prepV2 OP_pull_V OP_over_Prep ; -- guess-p-verb
lin pull_through_V = mkV "sauver" | mkV "économiser" | mkV "épargner" ; -- UWN
lin pull_to_V2 = prepV2 OP_pull_V OP_to_Prep ; -- guess-p-verb
lin pull_together_V = mkV "collecter" | mkV "rassembler" | mkV "recueillir" ; -- UWN
lin pull_up_N = mkN "traction" feminine ; -- tocheck
lin pull_up_V = advV OP_pull_V OP_up_Adv ; -- guess-p-verb
lin pull_up_V2 = prepV2 OP_pull_V OP_up_Prep ; -- guess-p-verb
lin pull_yourself_together_V = variants {} ; -- guess-p-verb
lin pullet_N = mkN "poulette" feminine ; -- tocheck
lin pulley_N = mkN "poulie" feminine ; -- tocheck
lin pulley_block_N = mkN "poulie" ; -- UWN
lin pullover_N = mkN "pull-over" masculine ; -- tocheck
lin pulmonary_A = mkA "pulmonaire" ; -- tocheck
lin pulp_N = mkN "pulpe" feminine ; -- tocheck
lin pulpit_N = mkN "chaire" feminine ; -- tocheck
lin pulpy_A = mkA "spongieux" ; -- UWN
lin pulque_N = mkN "pulque" ; -- UWN
lin pulsar_N = mkN "pulsar" masculine ; -- tocheck
lin pulsation_N = mkN "pouls" | mkN "pulsation" | mkN "rythme" ; -- UWN
lin pulse_N = mkN "pouls" masculine ; -- tocheck
lin puma_N = mkN "puma" feminine ; -- tocheck
lin pumice_N = mkN "ponce" ; -- tocheck
lin pump_N = mkN "pompe" feminine ; -- tocheck
lin pump_V = variants {} ; -- mkV2 (mkV "pomper") ; -- tocheck
lin pump_V2 = mkV2 (mkV "pomper") ; -- tocheck
lin pumpkin_N = mkN "citrouille" | mkN "citrouille" feminine ; -- tocheck
lin pun_N = mkN "calembour" masculine ; -- tocheck
lin punch_N = mkN "punch" | mkN "poinçon" masculine | mkN "poinçonnage" masculine | mkN "poinçonneuse" feminine ; -- tocheck
lin punch_V2 = mkV2 (mkV "poinçonner") ; -- tocheck
lin punctilio_N = mkN "pointille" feminine ; -- tocheck
lin punctilious_A = mkA "pointilleux" ; -- tocheck
lin punctiliousness_N = mkN "méticulosité" ; -- UWN
lin punctual_A = mkA "ponctuel" ; -- tocheck
lin punctuality_N = mkN "ponctualité" feminine ; -- tocheck
lin punctuation_N = mkN "ponctuation" feminine ; -- tocheck
lin puncture_N = mkN "piqûre" ; -- tocheck
lin puncture_V = mkV "piqûre" ; -- UWN
lin pundit_N = mkN "pandit" masculine | mkN "pontificateur" ; -- tocheck
lin pungency_N = mkN "mordre" | mkN "morsure" ; -- UWN
lin pungent_A = mkA "âcre" ; -- tocheck
lin punish_V2 = mkV2 (mkV "punir") ; -- tocheck
lin punishable_A = mkA "punissable" ; -- tocheck
lin punishment_N = mkN "punition" feminine ; -- tocheck
lin punitive_A = mkA "punitif" ; -- UWN
lin punk_N = mkN "vaurien" masculine | mkN "punk" masculine | mkN "morpion" masculine ; -- tocheck
lin punkah_N = mkN "panka" masculine ; -- tocheck
lin punkie_N = mkN "culicoïde" ; -- UWN
lin punnet_N = mkN "barquette" feminine ; -- tocheck
lin punter_N = mkN "meilleur" ; -- UWN
lin pup_N = mkN "chiot" ; -- UWN
lin pupa_N = mkN "chrysalide" feminine ; -- tocheck
lin pupil_N = mkN "élève" | mkN "pupille" feminine ; -- tocheck
lin pupillary_A = mkA "pupillaire" ; -- UWN
lin puppet_N = mkN "marionnette" feminine ; -- tocheck
lin puppeteer_N = mkN "marionnettiste" ; -- tocheck
lin puppy_N = mkN "chiot" masculine | mkN "raton" masculine ; -- tocheck
lin purchase_N = mkN "achat" masculine ; -- tocheck
lin purchase_V2 = mkV2 (mkV "acheter") | mkV2 (mkV I.acquérir_V2) ; -- tocheck
lin purchaser_N = mkN "acheteur" | mkN "acquéreur" | mkN "client" | mkN "possesseur" ; -- UWN
lin pure_A = mkA "pur" ; -- tocheck
lin pureness_N = mkN "honneur" | mkN "honorer" | mkN "pureté" ; -- UWN
lin purgatory_N = mkN "purgatoire" ; -- tocheck
lin purge_N = mkN "purge" feminine | mkN "épuration" feminine ; -- tocheck
lin purification_N = mkN "purification" feminine ; -- tocheck
lin purify_V2 = mkV2 (mkV "purifier") ; -- tocheck
lin purine_N = mkN "purine" feminine ; -- tocheck
lin purism_N = mkN "purisme" masculine ; -- tocheck
lin purist_N = mkN "puriste" ; -- tocheck
lin puritan_A = mkA "puritain" ; -- tocheck
lin purity_N = mkN "pureté" feminine ; -- tocheck
lin purloo_N = mkN "poilu" ; -- UWN
lin purple_A = mkA "violet" ; -- tocheck
lin purple_N = mkN "violet" ; -- tocheck
lin purplish_A = mkA "violâtre" ; -- tocheck
lin purport_V2V = mkV2V (mkV I.prétendre_V2) ; -- tocheck
lin purpose_N = mkN "intention" feminine | mkN "but" masculine | mkN "sujet" masculine ; -- tocheck
lin purposely_Adv = mkAdv "exprès" ; -- tocheck
lin purpura_N = mkN "purpura" ; -- UWN
lin purr_N = mkN "ronron" masculine ; -- tocheck
lin purr_V2 = mkV2 (mkV "ronronner") ; -- tocheck
lin purse_N = mkN "bourse" feminine ; -- tocheck
lin purslane_N = mkN "pourpier" ; -- UWN
lin pursue_V = mkV "chercher" | mkV "poursuivre" ; -- UWN
lin pursue_V2 = mkV2 (mkV I.poursuivre_V2) ; -- tocheck
lin pursuer_N = mkN "poursuivant" ; -- tocheck
lin pursuit_N = mkN "poursuite" feminine ; -- tocheck
lin purulent_A = mkA "purulent" ; -- tocheck
lin purvey_V = mkV "approvisionner" | mkV "fournir" | mkV "livrer" | mkV "procurer" ; -- UWN
lin purview_N = mkN "horizon" | mkN "perspective" ; -- UWN
lin pus_N = mkN "pus" masculine ; -- tocheck
lin push_N = mkN "pression" ; -- UWN
lin push_V = variants {} ; -- L.push_V2 ;
lin push_V2 = L.push_V2 ;
lin push_V2V = mkV2V (mkV "pousser") ; -- tocheck
lin push_VS = variants {} ; -- L.push_V2 ;
lin push_ahead_V = advV OP_push_V OP_ahead_Adv ; -- guess-p-verb
lin push_around_V = mkV "tourmenter" ; -- UWN
lin push_back_V = mkV "aller" | mkV "conduire" | mkV "repousser" ; -- UWN
lin push_in_V2 = prepV2 OP_push_V OP_in_Prep ; -- guess-p-verb
lin push_through_V = advV OP_push_V OP_through_Adv ; -- guess-p-verb
lin push_up_V2 = prepV2 OP_push_V OP_up_Prep ; -- guess-p-verb
lin pushful_A = mkA "agressif" ; -- UWN
lin pushover_N = mkN "brise" | mkN "du_gâteau" | mkN "jeu" | mkN "la_soupe_au_canard" | mkN "pique-nique" ; -- UWN
lin pushup_N = mkN "pompe" ; -- UWN
lin pusillanimous_A = mkA "pusillanime" ; -- tocheck
lin puss_N = mkN "minou" ; -- UWN
lin pussy_N = mkN "minou" masculine | mkN "poltron" masculine | mkN "minette" feminine | mkN "chatte" feminine ; -- tocheck
lin pussycat_N = mkN "minou" ; -- UWN
lin put_N = mkN "mettre" | mkN "rassembler" ; -- UWN
lin put_V2 = L.put_V2 ;
lin put_across_V = mkV "communiquer" | mkV "passer" ; -- UWN
lin put_across_V2 = prepV2 (lin V OP_put_V2) OP_across_Prep ; -- guess-p-verb
lin put_aside_V = advV (lin V OP_put_V2) OP_aside_Adv ; -- guess-p-verb
lin put_away_V = advV (lin V OP_put_V2) OP_away_Adv ; -- guess-p-verb
lin put_away_V2 = mkV2 (advV (lin V OP_put_V2) OP_away_Adv ) ; -- guess-p-verb
lin put_back_V2 = mkV2 (advV (lin V OP_put_V2) OP_back_Adv ) ; -- guess-p-verb
lin put_by_V2 = prepV2 (lin V OP_put_V2) OP_by_Prep ; -- guess-p-verb
lin put_down_V = mkV "déposer" | mkV "enregistrer" | mkV "inscrire" | mkV "mettre" ; -- UWN
lin put_down_V2 = prepV2 (lin V OP_put_V2) OP_down_Prep ; -- guess-p-verb
lin put_down_for_V3 = variants {} ; -- guess-p-verb
lin put_down_to_V3 = variants {} ; -- guess-p-verb
lin put_forth_V = advV (lin V OP_put_V2) OP_forth_Adv ; -- guess-p-verb
lin put_in_V = mkV "installer" | mkV "mettre" ; -- UWN
lin put_in_V2 = prepV2 (lin V OP_put_V2) OP_in_Prep ; -- guess-p-verb
lin put_in_for_V2 = prepV2 (advV (lin V OP_put_V2) OP_in_Adv ) OP_for_Prep ; -- guess-p-verb
lin put_off_V = advV (lin V OP_put_V2) OP_off_Adv ; -- guess-p-verb
lin put_off_V2 = prepV2 (lin V OP_put_V2) OP_off_Prep ; -- guess-p-verb
lin put_on_V = mkV "grossir" | mkV "prendre" ; -- UWN
lin put_on_V2 = prepV2 (lin V OP_put_V2) OP_on_Prep ; -- guess-p-verb
lin put_out_V = mkV "anesthésier" ; -- UWN
lin put_out_V2 = prepV2 (lin V OP_put_V2) OP_out_Prep ; -- guess-p-verb
lin put_over_V2 = prepV2 (lin V OP_put_V2) OP_over_Prep ; -- guess-p-verb
lin put_through_V2 = prepV2 (lin V OP_put_V2) OP_through_Prep ; -- guess-p-verb
lin put_together_V2 = mkV2 (advV (lin V OP_put_V2) OP_together_Adv ) ; -- guess-p-verb
lin put_towards_V2 = prepV2 (lin V OP_put_V2) OP_towards_Prep ; -- guess-p-verb
lin put_up_V = advV (lin V OP_put_V2) OP_up_Adv ; -- guess-p-verb
lin put_up_V2 = prepV2 (lin V OP_put_V2) OP_up_Prep ; -- guess-p-verb
lin put_up_V2V = variants {} ; -- guess-p-verb
lin put_up_with_V2 = prepV2 (advV (lin V OP_put_V2) OP_up_Adv ) OP_with_Prep ; -- guess-p-verb
lin put_upon_V = variants {} ; -- guess-p-verb
lin putamen_N = mkN "putamen" ; -- UWN
lin putative_A = mkA "putatif" ; -- tocheck
lin putrefaction_N = mkN "putréfaction" feminine ; -- tocheck
lin putrefy_V = mkV "pourrir" ; -- UWN
lin putrescent_A = mkA "putrescent" ; -- UWN
lin putrescine_N = mkN "putrescine" ; -- UWN
lin putrid_A = mkA "putride" ; -- tocheck
lin putsch_N = mkN "coup" | mkN "coup_d'état" | mkN "coup_d’État" | mkN "coup_d’état" | mkN "prise_de_pouvoir" | mkN "putsch" ; -- UWN
lin putt_V2 = mkV2 (mkV "poter") ; -- tocheck
lin putty_N = mkN "mastic" | mkN "mastic" masculine ; -- tocheck
lin putty_V2 = mkV2 (mkV "mastiquer") ; -- tocheck
lin puzzle_N = mkN "puzzle" masculine | mkN "mystère" masculine | mkN "devinette" feminine ; -- tocheck
lin puzzle_V2 = variants {} ; --
lin puzzlement_N = mkN "absorbement" ; -- UWN
lin pwllheli_PN = mkPN "Pwllheli" ; -- status=guess src=geonames
lin pycnosis_N = mkN "pycnose" ; -- UWN
lin pyelonephritis_N = mkN "pyélonéphrite" ; -- UWN
lin pygmy_N = mkN "pygmée" masculine ; -- tocheck
lin pyle_PN = mkPN "Pyle" ; -- status=guess src=geonames
lin pylon_N = mkN "pylône" masculine | mkN "pylône" ; -- tocheck
lin pylorus_N = mkN "pylore" ; -- UWN
lin pyongyang_PN = mkPN "Pyongyang" ; -- status=guess src=geonames
lin pyorrhea_N = mkN "pyorrhée" feminine ; -- tocheck
lin pyramid_N = mkN "pyramide" feminine ; -- tocheck
lin pyramidal_A = mkA "pyramidal" ; -- UWN
lin pyramidically_Adv = mkAdv "pyramidalement" ; -- UWN
lin pyre_N = mkN "bûcher" masculine ; -- tocheck
lin pyridine_N = mkN "pyridine" ; -- UWN
lin pyrimidine_N = mkN "pyrimidine" feminine ; -- tocheck
lin pyrite_N = mkN "pyrite" feminine ; -- tocheck
lin pyroelectricity_N = mkN "pyroélectricité" ; -- UWN
lin pyrography_N = mkN "pyrogravure" ; -- UWN
lin pyrolysis_N = mkN "pyrolyse" ; -- tocheck
lin pyromancy_N = mkN "pyromancie" ; -- UWN
lin pyromania_N = mkN "pyromanie" feminine ; -- tocheck
lin pyromaniac_N = mkN "pyromane" ; -- tocheck
lin pyrometer_N = mkN "pyromètre" ; -- UWN
lin pyromorphite_N = mkN "pyromorphite" ; -- UWN
lin pyrope_N = mkN "pyrope" ; -- UWN
lin pyrophobia_N = mkN "pyrophobie" feminine ; -- tocheck
lin pyrotechnic_A = mkA "pyrotechnique" ; -- tocheck
lin pyrotechnics_N = mkN "pyrotechnie" feminine ; -- tocheck
lin pyroxene_N = mkN "pyroxène" masculine ; -- tocheck
lin pyroxylin_N = mkN "fulmi-coton" ; -- UWN
lin pyrrhotite_N = mkN "fe&lt;sub&gt;1-x&lt;/sub&gt;s" | mkN "pyrrhotite" ; -- UWN
lin pythium_N = mkN "pythium" ; -- UWN
lin python_N = mkN "python" masculine ; -- tocheck
lin qadi_N = mkN "cadi" ; -- tocheck
lin qatar_PN = mkPN "Qatar" ; -- status=guess src=geonames
lin qi_N = mkN "ki" | mkN "qi" ; -- UWN
lin qoph_N = mkN "qof" | mkN "qoph" ; -- UWN
lin quack_N = mkN "charlatan" masculine | mkN "coin-coin" | mkN "toubib" masculine ; -- tocheck
lin quack_V = mkV (mkV "cancaner") ; -- tocheck
lin quackery_N = mkN "charlatanisme" masculine ; -- tocheck
lin quad_N = mkN "quadrangle" ; -- UWN
lin quadrangle_N = mkN "quadrangle" ; -- UWN
lin quadrangular_A = mkA "quadrangulaire" ; -- tocheck
lin quadrant_N = mkN "quadrant" masculine ; -- tocheck
lin quadratic_A = mkA "quadratique" ; -- tocheck
lin quadratic_N = mkN "quadratique" ; -- UWN
lin quadrature_N = mkN "quadrature" feminine | mkN "quadrature" ; -- tocheck
lin quadric_N = mkN "quadrique" ; -- UWN
lin quadrilateral_A = mkA "quadrilatère" ; -- UWN
lin quadrilateral_N = mkN "quadrilatère" ; -- tocheck
lin quadrille_N = mkN "quadrille" feminine ; -- tocheck
lin quadrillion_N = mkN "milliard" masculine ; -- tocheck
lin quadriplegia_N = mkN "quadriplégie" feminine ; -- tocheck
lin quadruped_N = mkN "quadrupède" masculine ; -- tocheck
lin quadrupedal_A = mkA "quadrupède" ; -- UWN
lin quadruple_N = mkN "quadruple" ; -- UWN
lin quadruplet_N = mkN "quadruplé" | mkN "quadruplet" ; -- tocheck
lin quadruplicate_A = mkA "quadruple" ; -- UWN
lin quaestor_N = mkN "questeur" masculine ; -- tocheck
lin quagmire_N = mkN "bourbier" masculine | mkN "marais" masculine ; -- tocheck
lin quail_N = mkN "caille" feminine ; -- tocheck
lin quaint_A = mkA "intelligence" | mkA "exigeant" | mkA "illogique" | mkA "remarquable" | mkA "pittoresque" ; -- tocheck
lin quake_N = mkN "séisme" | mkN "tremblement_de_terre" ; -- UWN
lin qualification_N = mkN "qualification" feminine ; -- tocheck
lin qualified_A = variants {} ; --
lin qualifier_N = mkN "modificateur" ; -- UWN
lin qualify_V = variants {} ; -- mkV2 (mkV "qualifier") | mkV2 (reflV (mkV "qualifier")) | mkV2 (mkV "caractériser") ; -- tocheck
lin qualify_V2 = mkV2 (mkV "qualifier") | mkV2 (reflV (mkV "qualifier")) | mkV2 (mkV "caractériser") ; -- tocheck
lin quality_N = mkN "qualité" feminine ;
lin qualm_N = mkN "scrupule" masculine ; -- tocheck
lin quandary_N = mkN "dilemme" | mkN "embarras" masculine ; -- tocheck
lin quantifiable_A = mkA "quantifiable" ; -- tocheck
lin quantifier_N = mkN "quantificateur" masculine ; -- tocheck
lin quantify_V2 = mkV2 (mkV "quantifier") ; -- tocheck
lin quantitative_A = variants {} ; --
lin quantity_N = mkN "quantité" feminine ; -- tocheck
lin quantization_N = mkN "quantification" feminine | mkN "quantisation" ; -- tocheck
lin quantum_N = mkN "quantum" masculine | mkN "quantité" feminine ; -- tocheck
lin quarantine_N = mkN "quarantaine" feminine ; -- tocheck
lin quark_N = mkN "quark" masculine ; -- tocheck
lin quarrel_N = mkN "querelle" feminine ; -- tocheck
lin quarrelsome_A = mkA "bagarreur" ; -- UWN
lin quarrelsomeness_N = mkN "agressivité" | mkN "pugnacité" ; -- UWN
lin quarry_N = mkN "proie" feminine | mkN "carrière" feminine ; -- tocheck
lin quart_N = mkN "pinte" feminine ; -- tocheck
lin quarter_N = mkN "quart" masculine | mkN "quartier" masculine | mkN "trimestre" masculine ; -- tocheck
lin quarter_deck_N = mkN "demi-dunette" feminine ; -- tocheck
lin quarterfinal_N = mkN "quart_de_finale" ; -- UWN
lin quarterly_A = mkA "trimestriel" ; -- tocheck
lin quarterly_Adv = mkAdv "trimestriellement" ; -- tocheck
lin quartermaster_N = mkN "quartier-maître" masculine ; -- tocheck
lin quartet_N = mkN "quatuor" masculine ; -- tocheck
lin quartile_N = mkN "quartile" masculine ; -- tocheck
lin quartz_N = mkN "quartz" masculine ; -- tocheck
lin quartzite_N = mkN "quartzite" ; -- UWN
lin quasar_N = mkN "quasar" masculine ; -- tocheck
lin quash_V2 = mkV2 (mkV "supprimer") ; -- tocheck
lin quasiparticle_N = mkN "quasi-particule" feminine ; -- tocheck
lin quatrain_N = mkN "quatrain" masculine ; -- tocheck
lin quattrocento_N = mkN "quattrocento" ; -- UWN
lin quaver_N = mkN "croche" feminine ; -- tocheck
lin quay_N = mkN "quai" masculine ; -- tocheck
lin queen_N = L.queen_N ;
lin queensbury_PN = mkPN "Queensbury" ; -- status=guess src=geonames
lin queensferry_PN = mkPN "Queensferry" ; -- status=guess src=geonames
lin queer_A = mkA "bizarre" ; -- tocheck
lin queer_N = mkN "clope" | mkN "fée" | mkN "pet" | mkN "prout" | mkN "pédale" | mkN "pédé" | mkN "tante" | mkN "tapette" ; -- UWN
lin queer_V2 = mkV2 (mkV "obstruer") ; -- tocheck
lin queerness_N = mkN "homosexualité" | mkN "homoérotisme" | mkN "vice_anglais" ; -- UWN
lin quell_V2 = mkV2 (mkV "réprimer") ; -- tocheck
lin quench_V2 = mkV2 (mkV "tremper") | mkV2 (mkV I.éteindre_V2) | mkV2 (mkV "apaiser") ; -- tocheck
lin querulous_A = mkA "bougon" ; -- UWN
lin query_N = mkN "requête" feminine | mkN "question" feminine ; -- tocheck
lin quest_N = mkN "quête" feminine ; -- tocheck
lin question_N = L.question_N ;
lin question_V2 = mkV2 (mkV "questionner") ; -- tocheck
lin questionable_A = mkA "discutable" | mkA "douteux" ; -- tocheck
lin questioning_A = mkA "spéculatif" ; -- UWN
lin questionnaire_N = mkN "questionnaire" masculine ; -- tocheck
lin quetzal_N = mkN "quetzal" ; -- tocheck
lin queue_N = mkN "file" feminine | mkN "natte" feminine | mkN "queue" feminine | mkN "file" ; -- tocheck
lin quibble_N = mkN "argutie" feminine ; -- tocheck
lin quibble_V = mkV (mkV "chicaner") ; -- tocheck
lin quibbler_N = mkN "chicaneur" | mkN "enculeur_de_mouches" ; -- UWN
lin quiche_N = mkN "quiche" feminine ; -- tocheck
lin quick_A = mkA "animé" | mkA "rapide" ; -- tocheck
lin quick_Adv = variants {} ; --
lin quick_N = mkN "rapide" ; -- UWN
lin quickening_N = mkN "accélération" ; -- UWN
lin quicker_Adv = mkAdv "rapidement" | mkAdv "vite" ; -- UWN
lin quicklime_N = mkN "chaux" | mkN "tilleul" ; -- UWN
lin quickness_N = mkN "rapidité" feminine ; -- tocheck
lin quicksand_N = mkN "sable_mouvant" ; -- UWN
lin quicksilver_N = mkN "vif-argent" masculine ; -- tocheck
lin quid_N = mkN "mâcher" ; -- UWN
lin quid_pro_quo_N = mkN "contrepartie" | mkN "donnant-donnant" | mkN "quid_pro_quo" | mkN "quiproquo" ; -- UWN
lin quiescence_N = mkN "dormance" ; -- UWN
lin quiescent_A = mkA "calme" ; -- tocheck
lin quiet_A = mkA "tranquille" | mkA "calme" | mkA "silencieux" ; -- tocheck
lin quiet_V2 = mkV2 (reflV (mkV "apaiser")) | mkV2 (mkV "apaiser") ; -- tocheck
lin quieten_V2 = mkV2 (mkV "apaiser") | mkV2 (reflV (mkV "calmer")) ; -- tocheck
lin quietly_Adv = adjAdv quiet_A ; -- -- derived
lin quietude_N = mkN "tranquillité" ; -- UWN
lin quill_N = mkN "plume" feminine ; -- tocheck
lin quillwort_N = mkN "isoète" masculine ; -- tocheck
lin quilt_N = mkN "édredon" masculine ; -- tocheck
lin quilt_V2 = mkV2 (mkV "matelasser") ; -- tocheck
lin quin_N = mkN "quintuplé" ; -- UWN
lin quince_N = mkN "coing" | mkN "cognassier" masculine ; -- tocheck
lin quinine_N = mkN "quinine" feminine ; -- tocheck
lin quinone_N = mkN "quinone" | mkN "quinones" ; -- UWN
lin quinquennium_N = mkN "quinquennat" masculine ; -- tocheck
lin quinsy_N = mkN "angine" ; -- UWN
lin quintal_N = mkN "quintal" masculine ; -- tocheck
lin quintessence_N = mkN "quintessence" ; -- UWN
lin quintessential_A = mkA "quintessentiel" ; -- tocheck
lin quintet_N = mkN "quintette" masculine ; -- tocheck
lin quintillion_N = mkN "milliard" masculine ; -- tocheck
lin quintuple_A = mkA "quintuple" ; -- UWN
lin quintuplet_N = mkN "quintuplé" ; -- tocheck
lin quip_V = mkV (mkV "plaisanter") ; -- tocheck
lin quipu_N = mkN "Quipu" | mkN "quipo" | mkN "quipou" | mkN "quipu" ; -- UWN
lin quire_N = mkN "cahier" masculine ; -- tocheck
lin quisling_N = mkN "quisling" masculine ; -- tocheck
lin quit_V = variants {} ; -- mkV2 (mkV "quitter") | mkV2 (mkV "arrêter") ; -- tocheck
lin quit_V2 = mkV2 (mkV "quitter") | mkV2 (mkV "arrêter") ; -- tocheck
lin quite_Adv = S.quite_Adv ;
lin quito_PN = mkPN "Quito" ; -- status=guess src=geonames
lin quittance_N = mkN "remboursement" | mkN "restitution" ; -- UWN
lin quiver_N = mkN "carquois" masculine | mkN "tremblement" ; -- tocheck
lin quixotic_A = mkA "quichottesque" ; -- tocheck
lin quiz_N = mkN "quiz" masculine ; -- tocheck
lin quodlibet_N = mkN "quodlibet" ; -- UWN
lin quoin_N = mkN "coin" ; -- UWN
lin quoits_N = mkN "fer_à_cheval" ; -- UWN
lin quorum_N = mkN "quorum" masculine ; -- tocheck
lin quota_N = variants {} ; --
lin quotation_N = mkN "devis" masculine | mkN "citation" feminine ; -- tocheck
lin quote_N = mkN "citation" feminine | mkN "devis" masculine ; -- tocheck
lin quote_V = variants {} ; -- mkV2 (mkV "citer") | mkV2 (mkV "coter") ; -- tocheck
lin quote_V2 = mkV2 (mkV "citer") | mkV2 (mkV "coter") ; -- tocheck
lin quotidian_A = mkA "quotidien" ; -- tocheck
lin quotient_N = mkN "quotient" masculine ; -- tocheck
lin rabbet_N = mkN "feuillure" feminine ; -- tocheck
lin rabbi_N = mkN "rabbin" masculine ; -- tocheck
lin rabbinical_A = mkA "rabbinique" ; -- tocheck
lin rabbit_N = mkN "lapin" masculine ; -- tocheck
lin rabble_N = mkN "cohue" feminine ; -- tocheck
lin rabid_A = mkA "enragé" ; -- tocheck
lin rabies_N = mkN "rage" feminine ; -- tocheck
lin raccoon_N = mkN "raton_laveur" ; -- UWN
lin race_1_N = variants {} ; --
lin race_2_N = mkN "race" ; -- UWN
lin race_N = mkN "course" feminine | mkN "race" feminine ; -- tocheck
lin race_V = variants {} ; -- mkV2V (reflV (mkV "élancer")) ; -- tocheck
lin race_V2 = variants {} ; -- mkV2V (reflV (mkV "élancer")) ; -- tocheck
lin race_V2V = mkV2V (reflV (mkV "élancer")) ; -- tocheck
lin race_off_V = advV OP_race_V OP_off_Adv ; -- guess-p-verb
lin racecourse_N = mkN "hippodrome" masculine ; -- tocheck
lin racehorse_N = mkN "cheval_de_course" ; -- UWN
lin raceme_N = mkN "racème" masculine ; -- tocheck
lin racer_N = mkN "coureur" masculine ; -- tocheck
lin rachis_N = mkN "colonne_vertébrale" | mkN "dos" | mkN "rachis" | mkN "échine" | mkN "épine_dorsale" ; -- UWN
lin rachitis_N = mkN "rachitisme" masculine ; -- tocheck
lin racial_A = mkA "racial" ; -- tocheck
lin racialism_N = mkN "racisme" masculine ; -- tocheck
lin racialist_N = mkN "raciste" ; -- tocheck
lin raciness_N = mkN "piquant" masculine ; -- tocheck
lin racing_N = mkN "course" feminine ; -- tocheck
lin racism_N = mkN "racisme" masculine ; -- tocheck
lin racistFem_N = mkN "raciste" feminine ; -- tocheck
lin racistMasc_N = mkN "raciste" masculine ; -- tocheck
lin racist_A = mkA "raciste" ; -- tocheck
lin rack_N = mkN "étagère" | mkN "carré" | mkN "chevalet" masculine ; -- tocheck
lin racket_N = mkN "raquette" feminine | mkN "escroquerie" feminine | mkN "vacarme" masculine ; -- tocheck
lin racketeering_N = mkN "affairisme" | mkN "racket" ; -- UWN
lin raconteur_N = mkN "raconteur" masculine ; -- tocheck
lin racoon_N = mkN "raton_laveur" ; -- UWN
lin racquet_N = mkN "raquette" feminine ; -- tocheck
lin rad_N = mkN "radian" ; -- UWN
lin radar_N = mkN "radar" ; -- UWN
lin radcliffe_PN = mkPN "Radcliffe" ; -- status=guess src=geonames
lin radial_A = mkA "radiale" ; -- tocheck
lin radial_N = mkN "radial" ; -- UWN
lin radian_N = mkN "radian" masculine ; -- tocheck
lin radiant_A = mkA "radieux" ; -- UWN
lin radiation_N = mkN "radiation" feminine ; -- tocheck
lin radiator_N = mkN "radiateur" masculine ; -- tocheck
lin radical_A = mkA "radical" | mkA "génial" ; -- tocheck
lin radical_N = mkN "racine" feminine | mkN "radical" masculine | mkN "clé" masculine ; -- tocheck
lin radicalism_N = mkN "radicalisme" masculine ; -- tocheck
lin radio_A = mkA "radio" ; -- UWN
lin radio_N = L.radio_N ;
lin radioactive_A = mkA "radioactif" ; -- tocheck
lin radioactivity_N = mkN "radioactivité" feminine ; -- tocheck
lin radiobiology_N = mkN "radiobiologie" ; -- UWN
lin radiochemistry_N = mkN "chimie_nucléaire" | mkN "radiochimie" ; -- UWN
lin radiogram_N = mkN "radiogramme" masculine ; -- tocheck
lin radiograph_N = mkN "radiographie" feminine ; -- tocheck
lin radiography_N = mkN "radiographie" feminine ; -- tocheck
lin radioisotope_N = mkN "radioisotope" masculine ; -- tocheck
lin radiolarian_N = mkN "radiolaire" masculine ; -- tocheck
lin radiological_A = mkA "radiologique" ; -- tocheck
lin radiologist_N = mkN "radiologiste" ; -- tocheck
lin radiology_N = mkN "radiologie" feminine ; -- tocheck
lin radiolysis_N = mkN "radiolyse" ; -- tocheck
lin radiometer_N = mkN "radiomètre" masculine ; -- tocheck
lin radiophotography_N = mkN "radiophotographie" ; -- UWN
lin radioscopy_N = mkN "radiologie" ; -- UWN
lin radiotelegraph_N = mkN "radiotélégraphie" ; -- UWN
lin radiotelephone_N = mkN "radiotéléphone" masculine ; -- tocheck
lin radiotherapist_N = mkN "radiothérapeute" ; -- tocheck
lin radiotherapy_N = mkN "irradiation" | mkN "radiation" | mkN "radiothérapie" | mkN "rayonnement" ; -- UWN
lin radish_N = mkN "radis" masculine ; -- tocheck
lin radium_N = mkN "radium" ; -- tocheck
lin radius_N = mkN "radius" masculine | mkN "rayon" masculine ; -- tocheck
lin radlett_PN = mkPN "Radlett" ; -- status=guess src=geonames
lin radome_N = mkN "radôme" ; -- UWN
lin radon_N = mkN "radon" masculine ; -- tocheck
lin radstock_PN = mkPN "Radstock" ; -- status=guess src=geonames
lin raffinose_N = mkN "raffinose" ; -- UWN
lin raffle_N = mkN "tombola" feminine ; -- tocheck
lin raft_N = mkN "radeau" | mkN "multitude" ; -- tocheck
lin rafter_N = mkN "chevron" masculine ; -- tocheck
lin rag_N = mkN "chiffon" masculine | mkN "haillon" masculine | mkN "rag" masculine | mkN "loque" feminine | mkN "torchon" masculine ; -- tocheck
lin rage_N = mkN "rage" feminine ; -- tocheck
lin rage_V = mkV (mkV "rager") ; -- tocheck
lin ragout_N = mkN "ragoût" masculine ; -- tocheck
lin ragtime_N = mkN "haillon" | mkN "ragtime" ; -- UWN
lin ragweed_N = mkN "ambroisie" ; -- UWN
lin raid_N = mkN "raid" masculine ; -- tocheck
lin rail_N = mkN "rails" masculine | mkN "rail" masculine | mkN "râle" masculine ; -- tocheck
lin railcar_N = mkN "automotrice" feminine ; -- tocheck
lin railway_N = mkN "chemin_de_fer" | mkN "rail" | mkN "train" | mkN "voie_ferrée" ; -- UWN
lin railwayman_N = mkN "cheminot" masculine ; -- tocheck
lin raiment_N = mkN "tableau" | mkN "vêtement" ; -- UWN
lin rain_N = L.rain_N ;
lin rain_V = mkV "pleuvoir" ; -- UWN
lin rain_V0 = L.rain_V0 ;
lin rain_V2 = mkV2 (mkV I.pleuvoir_V) ; -- tocheck
lin rainbow_N = mkN "arc-en-ciel" masculine ; -- tocheck
lin raincoat_N = mkN "imperméable" masculine ; -- tocheck
lin rainfall_N = mkN "précipitations" feminine ; -- tocheck
lin rainford_PN = mkPN "Rainford" ; -- status=guess src=geonames
lin rainwater_N = mkN "pleuvoir" | mkN "pluie" ; -- UWN
lin rainy_A = mkA "pluvieux" ; -- tocheck
lin raise_N = mkN "augmentation" feminine ; -- tocheck
lin raise_V2 = mkV2 (mkV "lever") ;
lin raised_A = variants {} ; --
lin raiser_N = mkN "agriculteur" | mkN "cultivateur" | mkN "maraîcher" | mkN "oléiculteur" | mkN "produce" ; -- UWN
lin raisin_N = mkN "Raisin_sec" | mkN "raisin_sec" | mkN "raisins_secs" ; -- UWN
lin rake_N = mkN "roué" masculine | mkN "râteau" masculine | mkN "rame" masculine ; -- tocheck
lin rake_V2 = mkV2 (mkV "fouiller") | mkV2 (mkV "arroser") | mkV2 (mkV "râtisser") ; -- tocheck
lin rakish_A = mkA "négligé" | mkA "débauché" ; -- tocheck
lin rally_N = mkN "rallye" masculine ; -- tocheck
lin rally_V = variants {} ; -- mkV2V (mkV "rallier") ; -- tocheck
lin rally_V2 = variants {} ; -- mkV2V (mkV "rallier") ; -- tocheck
lin rally_V2V = mkV2V (mkV "rallier") ; -- tocheck
lin rallying_N = mkN "ralliement" | mkN "rassemblement" ; -- UWN
lin ram_N = mkN "bélier" masculine ; -- tocheck
lin ram_V2 = mkV2 (mkV "éperonner") ; -- tocheck
lin ramble_V = mkV (mkV "divaguer") ; -- tocheck
lin ramble_on_V = mkV "jogger" ; -- UWN
lin rambunctious_A = mkA "turbulent" ; -- tocheck
lin rambutan_N = mkN "ramboutan" masculine ; -- tocheck
lin ramekin_N = mkN "ramequin" masculine ; -- tocheck
lin ramification_N = mkN "ramification" feminine ; -- tocheck
lin rammer_N = mkN "dame" ; -- UWN
lin ramp_N = mkN "rampe" feminine | mkN "passerelle" feminine ; -- tocheck
lin ramp_V2 = mkV2 (mkV "ramper") ; -- tocheck
lin rampage_N = mkN "déchainement" masculine ; -- tocheck
lin rampant_A = mkA "rampant" | mkA "effréné" ; -- tocheck
lin rampart_N = mkN "rempert" ; -- tocheck
lin rampion_N = mkN "raiponce" feminine ; -- tocheck
lin ramsbottom_PN = mkPN "Ramsbottom" ; -- status=guess src=geonames
lin ramsgate_PN = mkPN "Ramsgate" ; -- status=guess src=geonames
lin ramshackle_A = mkA "délabré" ; -- tocheck
lin ranch_N = mkN "ranch" masculine ; -- tocheck
lin rancid_A = mkA "rance" ; -- tocheck
lin rancorous_A = mkA "rancunier" ; -- tocheck
lin rancour_N = mkN "agacement" | mkN "amertume" | mkN "rancune" | mkN "rancœur" | mkN "ressentiment" ; -- UWN
lin randolph_PN = mkPN "Randolph" ; -- status=guess src=geonames
lin random_A = mkA "accidentel" | mkA "pseudo-aléatoire" | mkA "aléatoire" | mkA "moyen" ; -- tocheck
lin randomness_N = mkN "hasard" masculine | mkN "aléatoire" masculine ; -- tocheck
lin randy_A = mkA "excité" ; -- tocheck
lin ranee_N = mkN "rani" ; -- UWN
lin range_N = mkN "portée" ;
lin range_V = mkV "noter" ; -- UWN
lin rangefinder_N = mkN "Télémétrique" | mkN "télémétrique" ; -- UWN
lin ranger_N = mkN "commando" ; -- UWN
lin rani_N = mkN "rani" ; -- UWN
lin rank_A = mkA "absolu" | mkA "pur" ; -- UWN
lin rank_N = mkN "rangée" feminine ; -- tocheck
lin rank_V = mkV "noter" ; -- UWN
lin rank_V2 = mkV2 (mkV "coter") | mkV2 (mkV "ranger") | mkV2 (mkV "classer") ; -- tocheck
lin ranking_N = mkN "classement" masculine ; -- tocheck
lin ransack_V2 = mkV2 (mkV "fouiller") ; -- tocheck
lin ransom_N = mkN "rançon" feminine ; -- tocheck
lin ransom_V2 = mkV2 (mkV "rançonner") ; -- tocheck
lin rant_N = mkN "harangue" feminine ; -- tocheck
lin rap_N = mkN "ceinture" | mkN "coup" | mkN "frapper" ; -- UWN
lin rapacious_A = mkA "rapace" ; -- tocheck
lin rapacity_N = mkN "rapacité" feminine ; -- tocheck
lin rape_N = mkN "viol" masculine ; -- tocheck
lin rape_V2 = mkV2 (mkV "violer") ; -- tocheck
lin raper_N = mkN "violeur" ; -- UWN
lin rapeseed_N = mkN "colza" masculine ; -- tocheck
lin raphe_N = mkN "raphé" ; -- UWN
lin rapid_A = mkA "rapide" ; -- tocheck
lin rapid_N = mkN "rapide" ; -- UWN
lin rapidity_N = mkN "rapidité" feminine ; -- tocheck
lin rapier_N = mkN "rapière" feminine ; -- tocheck
lin rapine_N = mkN "rapine" feminine ; -- tocheck
lin rapist_N = mkN "violeur" masculine ; -- tocheck
lin rapporteur_N = mkN "rapporteur" ; -- UWN
lin rapprochement_N = mkN "rapprochement" masculine ; -- tocheck
lin rapture_N = mkN "ravissement" ; -- tocheck
lin rare_A = mkA "saignant" | mkA "rare" ; -- tocheck
lin raring_A = mkA "impatient" ; -- UWN
lin rarity_N = mkN "rareté" feminine ; -- tocheck
lin rascal_N = mkN "fripouille" feminine ; -- tocheck
lin rash_A = mkA "impulsif" ; -- tocheck
lin rash_N = mkN "irritation" | mkN "épidémie" feminine ; -- tocheck
lin rasp_N = mkN "râpe" feminine ; -- tocheck
lin rasp_V2 = mkV2 (mkV "grincer") ; -- tocheck
lin raspberry_N = mkN "framboisier" masculine | mkN "framboise" feminine ; -- tocheck
lin rat_N = mkN "rat" masculine ; -- tocheck
lin rat_V2 = mkV2 (mkV "moucharder") ; -- tocheck
lin ratan_N = mkN "rotin" ; -- UWN
lin ratatouille_N = mkN "ratatouille" feminine ; -- tocheck
lin rate_N = mkN "taux" | mkN "proportion" feminine ;
lin rate_V = mkV "noter" ; -- UWN
lin rate_V2 = mkV2 (mkV "coter") ; -- tocheck
lin rather_Adv = mkAdv "plutôt" ;
lin ratification_N = mkN "confirmation" | mkN "instrument_de_ratification" | mkN "sanction" ; -- UWN
lin ratify_V2 = mkV2 (mkV "ratifier") ; -- tocheck
lin rating_N = mkN "notation" feminine ; -- tocheck
lin ratio_N = mkN "rapport" | mkN "rapport" masculine ; -- tocheck
lin ratiocinative_A = mkA "ratiocinatif" ; -- tocheck
lin ration_N = mkN "ration" | mkN "rationnement" ; -- UWN
lin ration_V2 = mkV2 (mkV "rationner") ; -- tocheck
lin rational_A = mkA "rationnel" | mkA "raisonnable" ; -- tocheck
lin rationalistFem_N = variants {} ; ---- sense to be split
lin rationalistMasc_N = variants {} ; ---- sense to be split
lin rationality_N = mkN "rationalité" | mkN "rationnel" ; -- UWN
lin rationalization_N = mkN "rationalisation" feminine ; -- tocheck
lin rationalize_V2 = mkV2 (mkV "rationaliser") ; -- tocheck
lin rationing_N = mkN "Rationnement" | mkN "rationnement" ; -- UWN
lin ratite_N = mkN "ratite" | mkN "struthioniforme" ; -- UWN
lin rattan_N = mkN "rotin" masculine ; -- tocheck
lin rattle_N = mkN "hochet" ; -- tocheck
lin rattle_V2 = mkV2 (reflV (mkV "entrechoquer")) ; -- tocheck
lin rattler_N = mkN "Crotale" | mkN "crotale" | mkN "serpent_à_sonnettes" ; -- UWN
lin rattlesnake_N = mkN "crotale" masculine ; -- tocheck
lin raucous_A = mkA "chahuteur" | mkA "rauque" ; -- tocheck
lin raunchy_A = mkA "grunge" ; -- UWN
lin ravage_V2 = mkV2 (mkV "ravager") ; -- tocheck
lin ravaging_N = mkN "dévastation" ; -- UWN
lin raven_N = mkN "corbeau" masculine ; -- tocheck
lin ravening_A = mkA "rapace" | mkA "vorace" ; -- UWN
lin ravenna_PN = mkPN "Ravenne" ; -- status=guess src=geonames
lin ravenous_A = mkA "affamé" ; -- tocheck
lin ravine_N = mkN "ravin" masculine ; -- tocheck
lin ravioli_N = mkN "ravioli" ; -- UWN
lin ravish_V2 = mkV2 (mkV "ravir") ; -- tocheck
lin ravishment_N = mkN "attentat" | mkN "viol" | mkN "violation" ; -- UWN
lin raw_A = mkA "cru" | mkA "brut" ; -- tocheck
lin raw_N = mkN "cru" | mkN "habit_de_naissance" ; -- UWN
lin rawtenstall_PN = mkPN "Rawtenstall" ; -- status=guess src=geonames
lin ray_N = mkN "rayon" masculine | mkN "raie" feminine ; -- tocheck
lin raymond_PN = mkPN "Raymond" ; -- status=guess src=geonames
lin razing_N = mkN "démolissage" ; -- UWN
lin razor_N = mkN "rasoir" masculine ; -- tocheck
lin razorback_N = mkN "balaenopteridae" | mkN "rorqual" ; -- UWN
lin razorbill_N = mkN "pingouin" masculine ; -- tocheck
lin razzle_N = mkN "razzmatazz" ; -- UWN
lin re_N = mkN "ré" masculine ; -- tocheck
lin re_evaluate_V2 = mkV2 (mkV "réévaluer") ; -- tocheck
lin reach_N = mkN "étendre" ; -- UWN
lin reach_V = mkV I.atteindre_V2 ;
lin reach_V2 = I.atteindre_V2 ;
lin reach_out_V = advV OP_reach_V OP_out_Adv ; -- guess-p-verb
lin reach_out_for_V2 = prepV2 (advV OP_reach_V OP_out_Adv ) OP_for_Prep ; -- guess-p-verb
lin reach_out_to_V2 = prepV2 (advV OP_reach_V OP_out_Adv ) OP_to_Prep ; -- guess-p-verb
lin react_V = variants {} ; --
lin reactance_N = mkN "Réactance" | mkN "réactance" ; -- UWN
lin reactant_N = mkN "réactif" masculine ; -- tocheck
lin reaction_N = mkN "réaction" feminine ; -- tocheck
lin reactionary_A = mkA "réactionnaire" ; -- tocheck
lin reactionary_N = mkN "réactionnaire" ; -- tocheck
lin reactivate_V2 = mkV2 (mkV "réactiver") ; -- tocheck
lin reactivity_N = mkN "réactivité" ; -- UWN
lin reactor_N = mkN "réactif" masculine | mkN "réacteur" ; -- tocheck
lin read_N = mkN "lecture" feminine ; -- tocheck
lin read_V = mkV L.read_V2 ;
lin read_V2 = L.read_V2 ;
lin read_VS = mkVS L.read_V2 ;
lin read_off_V2 = prepV2 OP_read_V OP_off_Prep ; -- guess-p-verb
lin read_out_V2 = prepV2 OP_read_V OP_out_Prep ; -- guess-p-verb
lin read_up_on_V2 = prepV2 (advV OP_read_V OP_up_Adv ) OP_on_Prep ; -- guess-p-verb
lin readability_N = mkN "lisibilité" feminine ; -- tocheck
lin readable_A = mkA "déchiffrable" | mkA "lisible" ; -- UWN
lin reader_N = mkN "lecteur" masculine ; -- tocheck
lin readership_N = mkN "lectorat" masculine ; -- tocheck
lin reading_N = mkN "lecture" feminine ; -- tocheck
lin reading_PN = mkPN "Reading" ; -- status=guess src=geonames
lin readjust_V2 = mkV2 (mkV "rééquilibrer") ; -- tocheck
lin readjustment_N = mkN "réajustement" masculine ; -- tocheck
lin ready_A = mkA "prêt" ; -- tocheck
lin reagent_N = mkN "réactif" masculine ; -- tocheck
lin real_A = mkA "vrai" | mkA "réel" ;
lin real_N = mkN "réal" masculine ; -- tocheck
lin realgar_N = mkN "réalgar" ; -- UWN
lin realism_N = mkN "réalisme" masculine ; -- tocheck
lin realist_N = mkN "réaliste" ; -- tocheck
lin realistic_A = mkA "réaliste" ; -- tocheck
lin reality_N = mkN "réalité" ; -- tocheck
lin realizable_A = mkA "faisable" | mkA "pinocumettable" | mkA "réussissable" ; -- UWN
lin realization_N = mkN "connaissance" feminine | mkN "réalisation" ; -- tocheck
lin realize_V2 = mkV2 (mkV "réaliser") ; -- tocheck
lin realize_VS = variants {} ; -- mkV2 (mkV "réaliser") ; -- tocheck
lin reallotment_N = mkN "redistribution" | mkN "réallocation" ; -- UWN
lin realm_N = mkN "domaine" masculine | mkN "royaume" masculine ; -- tocheck
lin realpolitik_N = mkN "realpolitik" feminine ; -- tocheck
lin realty_N = mkN "immeuble" | mkN "immobilier" | mkN "propriété_immobilière" ; -- UWN
lin ream_N = mkN "rame" feminine ; -- tocheck
lin reamer_N = mkN "presse-citron" masculine | mkN "grattoir" masculine | mkN "alésoir" masculine ; -- tocheck
lin reanimate_V2 = mkV2 (mkV "réanimer") ; -- tocheck
lin reap_V2 = mkV2 (mkV "faucher") ; -- tocheck
lin reaper_N = mkN "récolteur" masculine ; -- tocheck
lin reappear_V = mkV "rentrer" | mkV "reparaître" | mkV "retourner" ; -- UWN
lin reappearance_N = mkN "réapparition" feminine ; -- tocheck
lin reappraisal_N = mkN "réévaluation" ; -- UWN
lin rear_A = variants {} ; --
lin rear_N = mkN "arrière" | mkN "arrière-garde" feminine | mkN "derrière" masculine ; -- tocheck
lin rear_V = variants {} ; -- mkV2 (mkV "élever") | mkV2 (mkV "ériger") ; -- tocheck
lin rear_V2 = mkV2 (mkV "élever") | mkV2 (mkV "ériger") ; -- tocheck
lin rearguard_N = mkN "arrière-garde" feminine ; -- tocheck
lin rearm_V2 = mkV2 (mkV "réarmer") ; -- tocheck
lin rearmament_N = mkN "réarmement" masculine ; -- tocheck
lin rearrangement_N = mkN "réarrangement" masculine ; -- tocheck
lin rearwards_Adv = mkAdv "arrière" | mkAdv "dos" | mkAdv "sens_devant_derrière" ; -- UWN
lin reason_N = L.reason_N ;
lin reasonable_A = mkA "correct" | mkA "satisfaisant" ; -- tocheck
lin reasonableness_N = mkN "modération" feminine ; -- tocheck
lin reasoning_N = mkN "raisonnement" masculine ; -- tocheck
lin reassemble_V = mkV "rejoindre" ; -- UWN
lin reassess_V2 = mkV2 (mkV "réévaluer") ; -- tocheck
lin reassessment_N = mkN "réévaluation" ; -- UWN
lin reassignment_N = mkN "réaffectation_professionnelle" ; -- UWN
lin reassure_V2 = variants {} ; -- mkV2S (mkV "tranquilliser") | mkV2S (mkV "réassurer") ; -- tocheck
lin reassure_V2S = mkV2S (mkV "tranquilliser") | mkV2S (mkV "réassurer") ; -- tocheck
lin reassuring_A = mkA "rassurant" ; -- tocheck
lin rebate_N = mkN "rabais" masculine | mkN "remise" feminine ; -- tocheck
lin rebel_N = mkN "rebelle" masculine ; -- tocheck
lin rebel_V = mkV (reflV (mkV "rebeller")) ; -- tocheck
lin rebellion_N = mkN "rébellion" feminine ; -- tocheck
lin rebellious_A = mkA "rebelle" ; -- tocheck
lin rebirth_N = mkN "renaissance" ; -- tocheck
lin rebound_N = mkN "rétablissement" masculine | mkN "rebond" masculine | mkN "guérison" feminine ; -- tocheck
lin rebound_V2V = mkV2V (mkV "rebondir") ; -- tocheck
lin rebuff_V = mkV "repousser" ; -- UWN
lin rebuild_V2 = mkV2 (mkV I.reconstruire_V2) ; -- tocheck
lin rebuke_N = mkN "reproche" masculine ; -- tocheck
lin rebuke_V2 = mkV2 (mkV "reprocher") ; -- tocheck
lin rebus_N = mkN "rébus" ; -- tocheck
lin rebuttal_N = mkN "réplique" ; -- UWN
lin rebutter_N = mkN "réplique" ; -- UWN
lin recalcitrant_A = mkA "récalcitrant" ; -- tocheck
lin recall_N = mkN "rappel" masculine ; -- tocheck
lin recall_V2 = mkV2 (mkV "rappeler") | mkV2 (reflV (mkV I.souvenir_V)) ; -- tocheck
lin recall_VS = variants {} ; -- mkV2 (mkV "rappeler") | mkV2 (reflV (mkV I.souvenir_V)) ; -- tocheck
lin recant_V2 = mkV2 (mkV "retirer") ; -- tocheck
lin recantation_N = mkN "abjuration" | mkN "abnégation" ; -- UWN
lin recap_V = mkV "résumer" ; -- UWN
lin recapitulate_V = mkV "résumer" ; -- UWN
lin recapitulate_V2 = mkV2 (mkV "récapituler") ; -- tocheck
lin recapitulation_N = mkN "récapitulation" feminine ; -- tocheck
lin recce_N = mkN "recco" ; -- UWN
lin receding_N = mkN "récession" ; -- UWN
lin receipt_N = mkN "recette" feminine | mkN "réception" feminine ; -- tocheck
lin receive_V = mkV I.recevoir_V2 ;
lin receive_V2 = mkV2 (mkV I.recevoir_V2) ;
lin receiver_N = mkN "récepteur" masculine | mkN "receleur" masculine | mkN "écouteur" masculine ; -- tocheck
lin receivership_N = mkN "administration-séquestre" feminine ; -- tocheck
lin recent_A = mkA "récent" ; -- tocheck
lin receptacle_N = mkN "réceptacle" | mkN "récipient" ; -- UWN
lin reception_N = mkN "réception" feminine | mkN "accueil" masculine ; -- tocheck
lin receptionist_N = mkN "secrétaire" | mkN "réceptionniste" ; -- tocheck
lin receptive_A = mkA "réceptif" ; -- tocheck
lin receptiveness_N = mkN "réceptivité" feminine ; -- tocheck
lin receptivity_N = mkN "réceptivité" feminine ; -- tocheck
lin receptor_N = variants {} ; --
lin recess_N = mkN "récréation" feminine | mkN "vacances" ; -- tocheck
lin recession_N = mkN "récession" feminine ; -- tocheck
lin recessionary_A = mkA "récessif" ; -- UWN
lin recessive_A = mkA "récessif" ; -- tocheck
lin recidivism_N = mkN "récidive" feminine ; -- tocheck
lin recidivist_N = mkN "récidiviste" ; -- tocheck
lin recife_PN = mkPN "Recife" ; -- status=guess src=geonames
lin recipe_N = mkN "recette" feminine ; -- tocheck
lin recipient_N = mkN "receveur" masculine ; -- tocheck
lin reciprocal_A = mkA "réciproque" ; -- tocheck
lin reciprocal_N = mkN "inverse" feminine ; -- tocheck
lin reciprocality_N = mkN "réciprocité" ; -- UWN
lin reciprocation_N = mkN "échangeur" ; -- UWN
lin reciprocity_N = mkN "réciprocité" feminine ; -- tocheck
lin recitation_N = mkN "récitation" feminine ; -- tocheck
lin recitative_N = mkN "recitativo" | mkN "récitatif" ; -- UWN
lin reckless_A = mkA "irresponsable" | mkA "téméraire" ; -- tocheck
lin recklinghausen_PN = mkPN "Recklinghausen" ; -- status=guess src=geonames
lin reckon_VS = variants {} ; -- mkV2 (mkV "estimer") ; -- tocheck
lin reckoning_N = mkN "Compte" | mkN "calculer" | mkN "compte" | mkN "compte_somme" | mkN "compter" | mkN "comte" | mkN "érythrocyte" ; -- UWN
lin reclassification_N = mkN "reclassement" ; -- UWN
lin recluse_N = mkN "reclus" masculine ; -- tocheck
lin reclusiveness_N = mkN "isolation" | mkN "isolement" ; -- UWN
lin recognition_N = mkN "reconnaissance" feminine ; -- tocheck
lin recognizable_A = mkA "reconnaissable" ; -- tocheck
lin recognize_1_V2 = variants {} ; --
lin recognize_4_V2 = variants {} ; --
lin recognize_VS = mkvVS "connaître" | mkvVS "croire" | mkvVS "homologuer" | mkvVS "reconnaître" | mkvVS "savoir" ; -- UWN
lin recoil_N = mkN "recul" masculine ; -- tocheck
lin recoil_V = mkV (mkV "reculer") ; -- tocheck
lin recollect_V2 = mkV2 (reflV (mkV I.souvenir_V)) ; -- tocheck
lin recollection_N = mkN "mémoire" ; -- tocheck
lin recommend_V2 = variants {} ; -- mkV2V (mkV "adviser") | mkV2V (mkV "recommander") ; -- tocheck
lin recommend_V2V = mkV2V (mkV "adviser") | mkV2V (mkV "recommander") ; -- tocheck
lin recommendation_N = mkN "recommandation" feminine ; -- tocheck
lin recompense_N = mkN "récompense" feminine ; -- tocheck
lin recompense_V2 = mkV2 (mkV "récompenser") ; -- tocheck
lin reconcilable_A = mkA "conciliable" ; -- UWN
lin reconcile_V2 = mkV2 (mkV "réconcilier") ; -- tocheck
lin reconciliation_N = mkN "réconciliation" feminine ; -- tocheck
lin reconditeness_N = mkN "obscurité" ; -- UWN
lin reconnaissance_N = mkN "reconnaissance" feminine ; -- tocheck
lin reconnoitre_V = mkV "reconnaître" ; -- UWN
lin reconnoitre_V2 = mkV2 (mkV I.reconnaître_V2) ; -- tocheck
lin reconsider_V2 = mkV2 (mkV "reconsidérer") ; -- tocheck
lin reconsider_VS = mkvVS "reconsidérer" ; -- UWN
lin reconstruction_N = mkN "reconstitution" feminine ; -- tocheck
lin record_1_N = mkN "enregistrement" masculine ;
lin record_2_N = mkN "disque" masculine ;
lin record_3_N = mkN "record" masculine ;
lin record_N = mkN "enregistrement" masculine | mkN "record" masculine | mkN "disque" masculine ; -- tocheck
lin record_V2 = mkV2 (mkV "enregistrer") ; -- tocheck
lin recorder_N = mkN "enregistreur" masculine ; -- tocheck
lin recording_N = mkN "enregistrement" masculine ; -- tocheck
lin re_count_V2 = mkV2 (mkV "recompter") | mkV2 (mkV "raconter") ; -- tocheck
lin recourse_N = mkN "aide" | mkN "recours" | mkN "refuge" | mkN "ressource" ; -- UWN
lin recover_V = variants {} ; -- mkV2V (mkV "récupérer") | mkV2V (mkV "recouvrer") ; -- tocheck
lin recoverable_A = mkA "recouvrable" ; -- UWN
lin recovery_N = mkN "récupération" feminine | mkN "guérison" feminine ; -- tocheck
lin recreant_N = mkN "apostat" | mkN "déserteur" | mkN "girouette" | mkN "renégat" | mkN "traitre" | mkN "traître" ; -- UWN
lin recreate_V2 = mkV2 (mkV "recréer") ; -- tocheck
lin recreation_N = mkN "récréation" feminine ; -- tocheck
lin recreational_A = mkA "récréationnel" ; -- tocheck
lin recrimination_N = mkN "récrimination" ; -- UWN
lin recrudescence_N = mkN "recrudescence" feminine ; -- tocheck
lin recruit_N = mkN "recrue" feminine ; -- tocheck
lin recruit_V = variants {} ; -- mkV2 (mkV "recruter") ; -- tocheck
lin recruit_V2 = mkV2 (mkV "recruter") ; -- tocheck
lin recruiter_N = mkN "recruteur" masculine ; -- tocheck
lin recruitment_N = mkN "recrutement" ; -- tocheck
lin rectal_A = mkA "rectal" ; -- tocheck
lin rectangle_N = mkN "rectangle" masculine ; -- tocheck
lin rectangular_A = mkA "rectangulaire" ; -- tocheck
lin rectify_V2 = mkV2 (mkV "rectifier") ; -- tocheck
lin rectitude_N = mkN "rectitude" ; -- tocheck
lin recto_N = mkN "recto" masculine ; -- tocheck
lin rector_N = mkN "recteur" masculine ; -- tocheck
lin rectory_N = mkN "presbytère" masculine ; -- tocheck
lin rectum_N = mkN "rectum" masculine ; -- tocheck
lin recur_V = mkV (mkV I.revenir_V) ; -- tocheck
lin recurrence_N = mkN "récurrence" feminine ; -- tocheck
lin recurrent_A = mkA "périodique" ; -- tocheck
lin recursion_N = mkN "recursion" feminine ; -- tocheck
lin recursive_A = mkA "récursif" ; -- tocheck
lin recycle_V2 = mkV2 (mkV "recycler") ; -- tocheck
lin recycling_N = mkN "recyclage" masculine ; -- tocheck
lin red_A = L.red_A ;
lin red_N = mkN "rouge" masculine ; -- tocheck
lin redact_V2 = mkV2 (mkV "caviarder") ; -- tocheck
lin redden_V = mkV "rougir" ; -- UWN
lin redden_V2 = mkV2 (mkV "rougir") ; -- tocheck
lin reddish_A = mkA "rougeâtre" ; -- tocheck
lin redditch_PN = mkPN "Redditch" ; -- status=guess src=geonames
lin redeem_V2 = mkV2 (mkV "racheter") ; -- tocheck
lin redeemable_A = mkA "remboursable" | mkA "corrigible" ; -- tocheck
lin redeemer_N = mkN "rédempteur" masculine ; -- tocheck
lin redefine_V2 = mkV2 (mkV "redéfinir") ; -- tocheck
lin redefinition_N = mkN "redéfinition" feminine ; -- tocheck
lin redemption_N = mkN "rédemption" feminine ; -- tocheck
lin redeployment_N = mkN "redéploiement" ; -- UWN
lin redhead_N = mkN "roux" masculine ; -- tocheck
lin redisposition_N = mkN "redéploiement" ; -- UWN
lin redistribution_N = mkN "redistribution" feminine ; -- tocheck
lin redneck_N = mkN "beauf" masculine ; -- tocheck
lin redo_V2 = mkV2 (mkV I.refaire_V2) ; -- tocheck
lin redolence_N = mkN "bouquet" | mkN "douceur" | mkN "fragrance" ; -- UWN
lin redoubtable_A = mkA "redoutable" | mkA "énervant" ; -- UWN
lin redress_N = mkN "remède" | mkN "remédiation" ; -- UWN
lin redruth_PN = mkPN "Redruth" ; -- status=guess src=geonames
lin redshank_N = mkN "gambette" masculine ; -- tocheck
lin redskin_N = mkN "Peau-Rouge" ; -- tocheck
lin reduce_V = mkV "diminuer" | mkV I.réduire_V2 ;
lin reduce_V2 = I.réduire_V2 ;
lin reduced_A = variants {} ; --
lin reductase_N = mkN "réductase" feminine ; -- tocheck
lin reductio_ad_absurdum_N = mkN "apagogie" | mkN "raisonnement_par_l'absurde" ; -- UWN
lin reduction_N = mkN "réduction" feminine ; -- tocheck
lin reductionism_N = mkN "réductionnisme" masculine ; -- tocheck
lin reductionist_A = mkA "réductionniste" ; -- UWN
lin redundance_N = mkN "licenciement" | mkN "redondance" ; -- UWN
lin redundancy_N = mkN "redondance" feminine | mkN "redondance" ; -- tocheck
lin redundant_A = mkA "redondant" ; -- tocheck
lin reduplication_N = mkN "redoublement" masculine ; -- tocheck
lin redwood_N = mkN "séquoia" masculine ; -- tocheck
lin reed_N = mkN "roseau" masculine | mkN "anche" feminine | mkN "roseau" | mkN "peigne" masculine ; -- tocheck
lin reef_N = mkN "filon" masculine | mkN "écueil" masculine ; -- tocheck
lin reefer_N = mkN "herbe" | mkN "joint" | mkN "splif" ; -- UWN
lin reek_N = mkN "puanteur" feminine ; -- tocheck
lin reek_V = mkV (mkV "puer") | mkV (mkV "empester") ; -- tocheck
lin reel_N = mkN "reel" masculine | mkN "enrouleur" masculine | mkN "bobine" feminine ; -- tocheck
lin reel_V = mkV "tituber" ; -- UWN
lin reel_V2 = mkV2 (mkV "tituber") | mkV2 (mkV "embobiner") ; -- tocheck
lin reelection_N = mkN "réélection" feminine ; -- tocheck
lin reevaluation_N = mkN "réévaluation" ; -- UWN
lin reexamine_V = mkV "revoir" | mkV "rédiger" | mkV "réexaminer" | mkV "réviser" | mkV "réévaluer" | mkV "vérifier" ; -- UWN
lin ref_N = mkN "arbitre" ; -- UWN
lin refection_N = mkN "réfection" ; -- tocheck
lin refectory_N = mkN "réfectoire" masculine ; -- tocheck
lin refer_V = variants {} ; -- mkV2 (mkV "référer") ; -- tocheck
lin refer_V2 = mkV2 (mkV "référer") ; -- tocheck
lin referee_N = mkN "arbitre" masculine ; -- tocheck
lin referee_V = mkV "arbitre" ; -- UWN
lin referee_V2 = mkV2 (mkV "arbitre") ; -- tocheck
lin reference_N = mkN "référence" feminine | mkN "recommandation" feminine ; -- tocheck
lin referendum_N = mkN "référendum" masculine ; -- tocheck
lin referral_N = variants {} ; --
lin refilling_N = mkN "remplaçant" | mkN "renouveau" | mkN "renouvellement" | mkN "rénovation" | mkN "substitution" ; -- UWN
lin refine_V = mkV "compliquer" ; -- UWN
lin refine_V2 = mkV2 (mkV "raffiner") ; -- tocheck
lin refinement_N = mkN "raffinement" ; -- tocheck
lin refiner_N = mkN "raffineur" ; -- UWN
lin refinery_N = mkN "raffinerie" feminine ; -- tocheck
lin refinisher_N = mkN "restaurateur" ; -- UWN
lin reflect_V = mkV "méditer" | mkV "réfléchir" ; -- UWN
lin reflect_V2 = mkV2 (mkV "réfléchir") ; -- tocheck
lin reflection_N = mkN "réflexion" feminine | mkN "reflet" masculine ; -- tocheck
lin reflector_N = mkN "phare" feminine ; -- tocheck
lin reflex_A = mkA "automatique" | mkA "réflexe" ; -- UWN
lin reflex_N = mkN "réflexe" ; -- tocheck
lin reflexive_A = mkA "réfléchi" ; -- tocheck
lin reflexive_N = mkN "pronom_réfléchi" ; -- UWN
lin reflux_N = mkN "reflux" masculine ; -- tocheck
lin refocusing_N = mkN "recadrage" ; -- UWN
lin reforest_V2 = mkV2 (mkV "reboiser") ; -- tocheck
lin reforestation_N = mkN "reboisement" masculine ; -- tocheck
lin reform_N = mkN "réforme" feminine ; -- tocheck
lin re_form_V = variants {} ; --
lin re_form_V2 = variants {} ; --
lin reformer_N = mkN "réformateur" ; -- UWN
lin reformism_N = mkN "réformisme" ; -- UWN
lin reformulate_V2 = mkV2 (mkV "reformuler") ; -- tocheck
lin refract_V2 = mkV2 (mkV "réfracter") ; -- tocheck
lin refraction_N = mkN "réfraction" feminine ; -- tocheck
lin refractometer_N = mkN "réfractomètre" masculine ; -- tocheck
lin refractory_A = mkA "réfractaire" ; -- tocheck
lin refrain_N = mkN "refrain" ; -- tocheck
lin refrain_V = mkV (reflV (mkV "réfréner")) ; -- tocheck
lin refresh_V2 = mkV2 (mkV "rafraîchir") ; -- tocheck
lin refreshing_A = mkA "frais" ; -- UWN
lin refreshment_N = mkN "rafraîchissement" masculine ; -- tocheck
lin refrigerate_V2 = mkV2 (mkV "réfrigérer") ; -- tocheck
lin refrigeration_N = mkN "réfrigération" feminine ; -- tocheck
lin refrigerator_N = mkN "réfrigérateur" masculine ; -- tocheck
lin refuge_N = mkN "refuge" masculine ; -- tocheck
lin refugee_N = mkN "réfugié" masculine ; -- tocheck
lin refulgent_A = mkA "radieux" ; -- UWN
lin refund_N = mkN "remboursement" masculine ; -- tocheck
lin refund_V2 = mkV2 (mkV "rembourser") ; -- tocheck
lin refurbish_V2 = mkV2 (mkV "renouveler") ; -- tocheck
lin refusal_N = mkN "refus" masculine ; -- tocheck
lin refuse_N = mkN "ordures" ; -- tocheck
lin refuse_V = variants {} ; -- mkV2 (mkV "refuser") ; -- tocheck
lin refuse_V2 = mkV2 (mkV "refuser") ; -- tocheck
lin refuse_VV = variants {} ; -- mkV2 (mkV "refuser") ; -- tocheck
lin refutable_A = mkA "réfutable" ; -- UWN
lin refutation_N = mkN "falsification" | mkN "frelatage" | mkN "réfutation" ; -- UWN
lin refute_V2 = mkV2 (mkV "réfuter") | mkV2 (mkV "rejeter") ; -- tocheck
lin regain_V2 = mkV2 (mkV I.reconquérir_V2) ; -- tocheck
lin regal_A = mkA "pourpre" | mkA "royal" | mkA "violet" ; -- UWN
lin regale_V2 = mkV2 (mkV "régaler") ; -- tocheck
lin regalia_N = mkN "tableau" | mkN "vêtement" ; -- UWN
lin regard_N = mkN "regard" ;
lin regard_V = mkV "regarder" ;
lin regard_V2 = mkV2 "regarder" ;
lin regarding_Prep = mkPrep "à propos" ;
lin regardless_Adv = variants {} ; --
lin regatta_N = mkN "régate" feminine ; -- tocheck
lin regency_N = mkN "régence" feminine ; -- tocheck
lin regenerate_A = mkA "régénérer" ; -- UWN
lin regenerate_V = mkV "régénérer" ; -- UWN
lin regenerate_V2 = mkV2 (mkV "régénérer") ; -- tocheck
lin regensburg_PN = mkPN "Ratisbonne" ; -- status=guess src=geonames
lin regent_A = mkA "régent" ; -- UWN
lin reggae_N = mkN "reggae" ; -- UWN
lin regicide_N = mkN "régicide" ; -- tocheck
lin regime_1_N = variants {} ; --
lin regime_2_N = variants {} ; --
lin regime_N = variants {} ; --
lin regimen_N = mkN "régime" ; -- UWN
lin regiment_N = mkN "régiment" masculine ; -- tocheck
lin regina_PN = mkPN "Régina" ; -- status=guess src=geonames
lin region_N = mkN "région" feminine ; -- tocheck
lin regional_A = mkA "régional" ; -- tocheck
lin regionalism_N = mkN "régionalisme" ; -- tocheck
lin register_N = mkN "inscription" masculine | mkN "registre" masculine ; -- tocheck
lin register_V = variants {} ; -- mkV2 (mkV "recaler") | mkV2 (mkV I.inscrire_V2) | mkV2 (mkV "enregistrer") | mkV2 (mkV "imprimer") ; -- tocheck
lin register_V2 = mkV2 (mkV "recaler") | mkV2 (mkV I.inscrire_V2) | mkV2 (mkV "enregistrer") | mkV2 (mkV "imprimer") ; -- tocheck
lin registrar_N = mkN "registraire" ; -- tocheck
lin registration_N = mkN "enregistrement" masculine ; -- tocheck
lin registry_N = mkN "registre" masculine | mkN "enregistrement" masculine ; -- tocheck
lin regress_N = mkN "rétrogression" ; -- UWN
lin regression_N = mkN "rétrogression" ; -- UWN
lin regret_N = mkN "regret" masculine ; -- tocheck
lin regret_V2 = mkV2 (mkV "regretter") ; -- tocheck
lin regretful_A = mkA "mal" | mkA "mauvais" ; -- UWN
lin regrettable_A = mkA "regrettable" ; -- tocheck
lin regroup_V = mkV "regrouper" ; -- UWN
lin regular_A = mkA "régulier" ; -- tocheck
lin regular_N = mkN "habitué" masculine ; -- tocheck
lin regularization_N = mkN "disposition" | mkN "règle" | mkN "règlement" | mkN "réglementation" | mkN "régulation" | mkN "statut" ; -- UWN
lin regulate_V2 = mkV2 (mkV "régler") ; -- tocheck
lin regulation_N = mkN "règlement" masculine ; -- tocheck
lin regulative_A = mkA "régulateur" ; -- UWN
lin regulator_N = mkN "gouverneur" ; -- UWN
lin regulatory_A = variants {} ; --
lin regurgitate_V2 = mkV2 (mkV "régurgiter") ; -- tocheck
lin regurgitation_N = mkN "emesis" | mkN "rendre_gorge" | mkN "vomir" | mkN "vomissement" ; -- UWN
lin rehabilitate_V2 = mkV2 (mkV "réhabiliter") ; -- tocheck
lin rehabilitation_N = mkN "réhabilitation" feminine ; -- tocheck
lin rehear_V2 = mkV2 (mkV I.réentendre_V2) ; -- tocheck
lin rehearsal_N = mkN "répétition" feminine ; -- tocheck
lin rehearse_V2 = mkV2 (mkV "répéter") | mkV2 (mkV "rabâcher") ; -- tocheck
lin reigate_PN = mkPN "Reigate" ; -- status=guess src=geonames
lin reign_N = mkN "règne" masculine ; -- tocheck
lin reign_V = mkV (mkV "régner") ; -- tocheck
lin reimburse_V2 = mkV2 (mkV "rembourser") ; -- tocheck
lin reimbursement_N = mkN "remboursement" feminine ; -- tocheck
lin rein_N = mkN "rêne" feminine ; -- tocheck
lin reincarnation_N = mkN "réincarnation" feminine ; -- tocheck
lin reindeer_N = mkN "renne" masculine ; -- tocheck
lin reinforce_V2 = mkV2 (mkV "renforcer") ; -- tocheck
lin reinforcement_N = mkN "renfort" ; -- tocheck
lin reinsurance_N = mkN "réassurance" ; -- UWN
lin reintroduction_N = mkN "réintroduction" ; -- UWN
lin reinvigorate_V2 = mkV2 (mkV "revigorer") ; -- tocheck
lin reissue_N = mkN "réimpression" ; -- UWN
lin reiterate_V2 = mkV2 (mkV "réitérer") ; -- tocheck
lin reiterate_VS = mkvVS "redire" | mkvVS "reformuler" | mkvVS "réiterer" | mkvVS "réitérer" | mkvVS "répéter" ; -- UWN
lin reiteration_N = mkN "réduplication" | mkN "réitération" ; -- UWN
lin reject_V2 = mkV2 (mkV "rejeter") ; -- tocheck
lin rejection_N = mkN "refus" ; -- tocheck
lin rejoice_V2 = mkV2 (reflV (mkV "réjouir")) | mkV2 (mkV "réjouir") ; -- tocheck
lin rejoicing_N = mkN "exultation" ; -- UWN
lin rejoinder_N = mkN "répliquer" ; -- tocheck
lin rejuvenate_V2 = mkV2 (mkV "rajeunir") ; -- tocheck
lin rejuvenation_N = mkN "rajeunissement" masculine ; -- tocheck
lin rekindle_V = mkV "activer" ; -- UWN
lin rekindle_V2 = mkV2 (mkV "raviver") ; -- tocheck
lin relapse_N = mkN "rechute" ; -- tocheck
lin relate_N = variants {} ; --
lin relate_V = mkV "apporter" | mkV "correspondre" | mkV "lier" | mkV "être" ; -- UWN
lin relate_V2 = mkV2 (mkV "concerner") ; -- tocheck
lin related_A = variants {} ; --
lin relation_N = mkN "relation" feminine ;
lin relational_A = mkA "relationnel" ; -- tocheck
lin relationship_N = mkN "relation" feminine | mkN "rapport" masculine ;
lin relative_A = mkA "relatif" ; -- tocheck
lin relative_N = mkN "parent" masculine ; -- tocheck
lin relativism_N = mkN "relativisme" masculine ; -- tocheck
lin relativity_N = mkN "relativité" feminine ; -- tocheck
lin relax_V = variants {} ; -- mkV2 (reflV (mkV I.détendre_V2)) | mkV2 (mkV "relâcher") ; -- tocheck
lin relax_V2 = mkV2 (reflV (mkV I.détendre_V2)) | mkV2 (mkV "relâcher") ; -- tocheck
lin relaxation_N = mkN "relaxation" | mkN "relaxation" feminine ; -- tocheck
lin relaxin_N = mkN "relaxine" ; -- UWN
lin relay_N = mkN "relais" masculine ; -- tocheck
lin relay_V2 = mkV2 (mkV I.transmettre_V2) | mkV2 (mkV "relayer") ; -- tocheck
lin release_N = mkN "version" feminine ; -- tocheck
lin release_V2 = mkV2 (mkV "lâcher") | mkV2 (mkV I.sortir_V) ; -- tocheck
lin relegate_V2 = mkV2 (mkV "reléguer") ; -- tocheck
lin relegation_N = mkN "relégation" feminine ; -- tocheck
lin relent_V = mkV "donner" ; -- UWN
lin relentless_A = mkA "implacable" ; -- tocheck
lin relentlessness_N = mkN "acharnement" masculine ; -- tocheck
lin relevance_N = mkN "pertinence" feminine ; -- tocheck
lin relevancy_N = mkN "pertinence" feminine ; -- tocheck
lin relevant_A = mkA "pertinent" ; -- tocheck
lin reliability_N = mkN "fiabilité" feminine ; -- tocheck
lin reliable_A = mkA "fiable" ; -- tocheck
lin reliance_N = variants {} ; --
lin relic_N = mkN "relique" ; -- tocheck
lin relief_N = mkN "relief" masculine | mkN "soulagement" masculine | mkN "relève" feminine ; -- tocheck
lin relieve_V2 = mkV2 (mkV "soulager") ; -- tocheck
lin reliever_N = mkN "lanceur_de_relève" | mkN "pompier" ; -- UWN
lin religion_N = L.religion_N ;
lin religionism_N = mkN "piété" | mkN "religiosité" ; -- UWN
lin religiosity_N = mkN "piété" | mkN "religiosité" ; -- UWN
lin religious_A = mkA "religieux" ; -- tocheck
lin religious_N = mkN "religieux" ; -- UWN
lin religiousness_N = mkN "piété" ; -- UWN
lin relinquish_V2 = mkV2 (mkV "(re)lâcher") | mkV2 (mkV "abandonner") ; -- tocheck
lin reliquary_N = mkN "reliquaire" masculine ; -- tocheck
lin relish_N = mkN "relish" feminine ; -- tocheck
lin relish_V2 = mkV2 (mkV "parfumer") | mkV2 (mkV "savourer") ; -- tocheck
lin relocation_N = mkN "déménagement" ; -- tocheck
lin reluctance_N = mkN "réticence" feminine ; -- tocheck
lin reluctant_A = mkA "réservé" ; -- tocheck
lin rely_V = variants {} ; --
lin rely_V2 = variants {} ; --
lin rely_on_V = advV OP_rely_V OP_on_Adv ; -- guess-p-verb
lin rely_on_V2V = variants {} ; -- guess-p-verb
lin remain_N = variants {} ; --
lin remain_V = mkV "demeurer" | mkV "rester" ;
lin remain_V2 = mkV2 (mkV "rester") ;
lin remain_VA = mkVA (mkV "rester") ;
lin remain_VV = deVV (mkV "rester") ;
lin remainder_N = mkN "restant" masculine ; -- tocheck
lin remaining_A = variants {} ; --
lin remains_N = mkN "reste" masculine | mkN "ruines" | mkN "dépouille" feminine ; -- tocheck
lin remake_N = mkN "remake" masculine | mkN "copie" feminine ; -- tocheck
lin remake_V2 = mkV2 (mkV I.refaire_V2) ; -- tocheck
lin remand_N = mkN "maintien" ; -- tocheck
lin remark_N = mkN "remarque" feminine ; -- tocheck
lin remark_V = variants {} ; --
lin remark_VS = variants {} ; --
lin remarkable_A = variants {} ; --
lin remedy_N = mkN "recours" masculine | mkN "remède" masculine ; -- tocheck
lin remember_V = mkVS (reflV (mkV "rappeler")) | mkVS (reflV I.souvenir_V) ;
lin remember_V2 = mkV2 (reflV I.souvenir_V) P.genitive ;
lin remember_VS = mkVS (reflV (mkV "rappeler")) | mkVS (reflV I.souvenir_V) ;
lin remembrance_N = mkN "anamnèse" | mkN "mémoire" | mkN "souvenir" ; -- UWN
lin remilitarization_N = mkN "remilitarisation" ; -- UWN
lin remind_V2 = variants {} ; --
lin reminder_N = mkN "rappel" masculine ; -- tocheck
lin reminiscence_N = mkN "réminiscence" masculine ; -- tocheck
lin reminiscent_A = mkA "évocateur" ; -- UWN
lin remiss_A = mkA "délinquant" | mkA "négligent" ; -- UWN
lin remission_N = mkN "acquittement" | mkN "rémission" ; -- UWN
lin remissness_N = mkN "négligence" ; -- UWN
lin remit_N = mkN "ressort" | mkN "rémission" ; -- UWN
lin remittance_N = mkN "virement" masculine ; -- tocheck
lin remnant_N = mkN "reste" masculine ; -- tocheck
lin remonstrance_N = mkN "objection" | mkN "opposition" | mkN "remontrance" ; -- UWN
lin remora_N = mkN "Rémora" | mkN "echeneidae" | mkN "rémora" ; -- UWN
lin remorse_N = mkN "remords" ; -- tocheck
lin remorseless_A = mkA "impitoyable" ; -- UWN
lin remote_A = mkA "éloigné" | mkA "distant" ; -- tocheck
lin removable_A = mkA "amovible" ; -- tocheck
lin removal_N = mkN "enlèvement" masculine | mkN "déménagement" masculine ; -- tocheck
lin remove_N = mkN "suppression" | mkN "élimination" ; -- UWN
lin remove_V = variants {} ; -- mkV2 (mkV "enlever") ; -- tocheck
lin remove_V2 = mkV2 (mkV "enlever") ; -- tocheck
lin remscheid_PN = mkPN "Remscheid" ; -- status=guess src=geonames
lin remuneration_N = mkN "salaire" masculine | mkN "rémunération" feminine ; -- tocheck
lin renaissance_N = variants {} ; --
lin renal_A = mkA "rénal" ; -- tocheck
lin rename_V3 = mkV3 (mkV "renommer") ; -- tocheck
lin renascence_N = mkN "réincarnation" ; -- UWN
lin render_V2 = mkV2 (mkV I.rendre_V2) | mkV2 (mkV "interpréter") ; -- tocheck
lin rendezvous_N = mkN "rendez-vous" masculine ; -- tocheck
lin renegadeFem_N = mkN "renégate" feminine ; -- tocheck
lin renegadeMasc_N = mkN "renégat" masculine ; -- tocheck
lin renew_V2 = mkV2 (mkV "renouveler") ; -- tocheck
lin renewable_A = mkA "renouvelable" ; -- tocheck
lin renewal_N = mkN "renouvellement" masculine ; -- tocheck
lin renewed_A = variants {} ; --
lin renfrew_PN = mkPN "Renfrew" ; -- status=guess src=geonames
lin reniform_A = mkA "réniforme" ; -- UWN
lin renin_N = mkN "rénine" ; -- UWN
lin rennes_PN = mkPN "Rennes" ; -- status=guess src=geonames
lin renovate_V2 = mkV2 (mkV "rénover") ; -- tocheck
lin renovation_N = mkN "rénovation" feminine ; -- tocheck
lin renovator_N = mkN "restaurateur" ; -- UWN
lin renown_N = mkN "renom" masculine ; -- tocheck
lin renowned_A = mkA "reconnu" ; -- tocheck
lin rent_N = mkN "loyer" masculine ; -- tocheck
lin rent_V = mkV "louer" | mkV "prendre" ; -- UWN
lin rent_V2 = mkV2 (mkV "louer") ; -- tocheck
lin renter_N = mkN "locataire" ; -- UWN
lin rentier_N = mkN "rentier" masculine ; -- tocheck
lin reopen_V = mkV "rouvrir" | mkV "réouvrir" ; -- UWN
lin reopen_V2 = mkV2 (reflV (mkV I.rouvrir_V2)) | mkV2 (mkV I.rouvrir_V2) ; -- tocheck
lin reorganize_V = mkV "assainir" | mkV "relever" | mkV "réorganiser" ; -- UWN
lin reorganize_V2 = mkV2 (mkV "réorganiser") ; -- tocheck
lin rep_N = mkN "reps" masculine ; -- tocheck
lin repaint_V2 = mkV2 (mkV I.repeindre_V2) ; -- tocheck
lin repair_N = mkN "réparation" feminine ; -- tocheck
lin repair_V = variants {} ; -- mkV2 (mkV "réparer") ; -- tocheck
lin repair_V2 = mkV2 (mkV "réparer") ; -- tocheck
lin repairer_N = mkN "réparateur" masculine ; -- tocheck
lin repairman_N = mkN "réparateur" ; -- UWN
lin reparable_A = mkA "rectifiable" ; -- UWN
lin reparation_N = mkN "réparation" feminine ; -- tocheck
lin repartee_N = mkN "repartie" ; -- tocheck
lin repast_N = mkN "repas" ; -- UWN
lin repatriation_N = mkN "rapatriement" masculine ; -- tocheck
lin repay_V = mkV "reprendre" | mkV "récompenser" | mkV "salarier" ; -- UWN
lin repay_V2 = mkV2 (mkV "repayer") ; -- tocheck
lin repayment_N = mkN "remboursement" | mkN "restitution" ; -- UWN
lin repeal_N = mkN "abolition" | mkN "abrogation" | mkN "annulation" ; -- UWN
lin repeat_N = mkN "dire" | mkN "répéter" | mkN "répétition" ; -- UWN
lin repeat_V = variants {} ; -- mkV2 (mkV "répéter") ; -- tocheck
lin repeat_V2 = mkV2 (mkV "répéter") ; -- tocheck
lin repeat_VS = variants {} ; -- mkV2 (mkV "répéter") ; -- tocheck
lin repeated_A = variants {} ; --
lin repeater_N = mkN "répétiteur" masculine ; -- tocheck
lin repechage_N = mkN "repêchage" masculine ; -- tocheck
lin repel_V2 = mkV2 (mkV "rebuter") | mkV2 (mkV "repousser") ; -- tocheck
lin repellent_A = mkA "répulsif" ; -- tocheck
lin repellent_N = mkN "répulsif" ; -- tocheck
lin repent_V2 = mkV2 (reflV (mkV I.repentir_V)) | mkV2 (mkV I.repentir_V) ; -- tocheck
lin repentance_N = mkN "repentance" feminine ; -- tocheck
lin repentant_A = mkA "pénitent" ; -- UWN
lin repercussion_N = mkN "conséquence" ; -- tocheck
lin repertoire_N = mkN "répertoire" ; -- tocheck
lin repetition_N = mkN "répétition" feminine ; -- tocheck
lin repetitive_A = mkA "répétitif" ; -- tocheck
lin repetitiveness_N = mkN "répétitivité" ; -- UWN
lin replace_V2 = mkV2 (mkV "remplacer") | mkV2 "remettre" ; ---- split
lin replaceability_N = mkN "substitutiabilité" ; -- UWN
lin replaceable_A = mkA "remplaçable" ; -- tocheck
lin replacement_N = mkN "remplaçant" masculine ; -- tocheck
lin replenish_V2 = mkV2 (mkV "réapprovisionner") ; -- tocheck
lin replenishment_N = mkN "remplaçant" | mkN "renouveau" | mkN "renouvellement" | mkN "rénovation" | mkN "substitution" ; -- UWN
lin replica_N = mkN "réplique" feminine ; -- tocheck
lin replication_N = mkN "réponse" feminine | mkN "duplicata" masculine | mkN "réplication" feminine ; -- tocheck
lin reply_N = mkN "réponse" feminine ; -- tocheck
lin reply_V = variants {} ; -- mkV2 (mkV I.répondre_V2) ; -- tocheck
lin report_N = mkN "rapport" masculine ;
lin report_V = mkV "rapporter" ;
lin report_V2 = mkV2 (mkV "rapporter") ;
lin report_VS = mkVS (mkV "rapporter") ;
lin report_in_V = advV OP_report_V OP_in_Adv ; -- guess-p-verb
lin reportage_N = mkN "déclaration_des_ordres" | mkN "mercatique_après-vente" | mkN "rapportage" | mkN "reddition_de_comptes" | mkN "reportage" ; -- UWN
lin reportedly_Adv = mkAdv "supposément" ; -- tocheck
lin reporterFem_N = mkN "reporter" feminine ; -- tocheck
lin reporterMasc_N = mkN "reporter" masculine ;
lin repose_N = mkN "repos" | mkN "trêve" ; -- UWN
lin reposeful_A = mkA "calme" | mkA "paisible" | mkA "tranquille" ; -- UWN
lin repositing_N = mkN "entreposage" | mkN "stockage" ; -- UWN
lin repository_N = mkN "tombeau" masculine | mkN "chambre-forte" feminine | mkN "dépôt" ; -- tocheck
lin reprehensible_A = mkA "blâmable" | mkA "répréhensible" ; -- tocheck
lin represent_V = variants {} ; -- mkV2 (mkV "représenter") | mkV2 (mkV "jouer") ; -- tocheck
lin represent_V2 = mkV2 (mkV "représenter") | mkV2 (mkV "jouer") ; -- tocheck
lin representation_N = mkN "représentation" ; -- tocheck
lin representativeFem_N = variants {} ; ---- sense to be split
lin representativeMasc_N = mkN "représentatif" ;
lin representative_A = variants {} ; --
lin repress_V2 = mkV2 (mkV "réprimer") | mkV2 (mkV I.retenir_V2) ; -- tocheck
lin repression_N = mkN "répression" feminine ; -- tocheck
lin repressive_A = mkA "répressif" ; -- tocheck
lin repressor_N = mkN "répresseur" ; -- UWN
lin reprimand_N = mkN "réprimande" ; -- tocheck
lin reprimand_V2 = mkV2 (mkV "réprimander") ; -- tocheck
lin reprint_N = mkN "séparer" ; -- UWN
lin reprisal_N = mkN "représaille" ; -- UWN
lin reproach_N = mkN "remords" ; -- UWN
lin reproach_V2 = mkV2 (mkV "reprocher") ; -- tocheck
lin reprobate_N = mkN "mécréant" | mkN "mécréante" ; -- UWN
lin reproduce_V = mkV "procréer" ; -- UWN
lin reproduce_V2 = mkV2 (mkV I.reproduire_V2) ; -- tocheck
lin reproducible_A = mkA "reproductible" ; -- tocheck
lin reproduction_N = mkN "reproduction" feminine ; -- tocheck
lin reproductive_A = mkA "reproductif" ; -- tocheck
lin reptile_N = mkN "reptile" masculine ; -- tocheck
lin reptilian_N = mkN "reptile" ; -- UWN
lin republic_N = mkN "république" feminine ; -- tocheck
lin republican_N = variants {} ; --
lin repudiate_V2 = mkV2 (mkV "nier") | mkV2 (mkV "répudier") ; -- tocheck
lin repudiation_N = mkN "répudiation" ; -- tocheck
lin repugnant_A = mkA "abject" | mkA "abominable" | mkA "antipathique" | mkA "détestable" | mkA "hideux" | mkA "odieux" | mkA "repoussant" | mkA "répugnant" ; -- UWN
lin reputable_A = mkA "respectable" ; -- tocheck
lin reputation_N = mkN "réputation" feminine ; -- tocheck
lin repute_N = mkN "réputation" feminine ; -- tocheck
lin reputed_A = variants {} ;
lin request_N = mkN "requête" feminine | mkN "demande" feminine ; -- tocheck
lin request_V2 = mkV2 (mkV "demander") ; -- tocheck
lin require_V = mkV "demander" ;
lin require_V2 = mkV2 "demander" ;
lin require_V2V = mkV2V (mkV "exiger") | mkV2V (mkV "demander") ;
lin require_VS = subjVS (mkV "demander") ;
lin required_A = variants {} ; --
lin requirement_N = mkN "exigence" feminine | mkN "demande" ; -- tocheck
lin requisite_A = mkA "nécessaire" | mkA "requis" ; -- UWN
lin requisite_N = mkN "besoin" | mkN "condition" | mkN "demande" | mkN "exigence" | mkN "nécessaire" | mkN "nécessité" | mkN "prescription" ; -- UWN
lin reread_V2 = mkV2 (mkV I.relire_V2) ; -- tocheck
lin reredos_N = mkN "retable" ; -- UWN
lin reroute_V2 = mkV2 (mkV "recircuiter") ; -- tocheck
lin rerun_N = mkN "rediffusion" feminine ; -- tocheck
lin rerun_V2 = mkV2 (mkV "rediffuser") ; -- tocheck
lin resale_N = mkN "revente" feminine ; -- tocheck
lin reschedule_V2 = mkV2 (mkV "reprogrammer") ; -- tocheck
lin rescind_V2 = mkV2 (mkV "abroger") ; -- tocheck
lin rescript_N = mkN "réécrire" | mkN "réécriture" ; -- UWN
lin rescue_N = mkN "sauvetage" masculine ; -- tocheck
lin rescue_V2 = mkV2 (mkV "délivrer") ; -- tocheck
lin rescuerFem_N = mkN "sauveuse" feminine ; -- tocheck
lin rescuerMasc_N = mkN "sauveur" masculine ; -- tocheck
lin research_N = mkN "recherche" feminine ;
lin research_V = variants {} ; -- mkV2 (mkV "examiner") ; -- tocheck
lin research_V2 = mkV2 (mkV "examiner") ; -- tocheck
lin researcherFem_N = variants {} ; ---- sense to be split
lin researcherMasc_N = mkN "chercheur" ;
lin reseda_N = mkN "réséda" ; -- UWN
lin resell_V2 = mkV2 (mkV I.revendre_V2) ; -- tocheck
lin resemblance_N = mkN "comparaison" | mkN "ressemblance" feminine | mkN "probabilité" | mkN "ressemblance" ; -- tocheck
lin resemble_V2 = mkV2 (mkV "ressembler") P.dative ;
lin resent_V2 = variants {} ; --
lin resent_VS = variants {} ; --
lin resentful_A = mkA "indigné" | mkA "rancunier" ; -- tocheck
lin resentment_N = mkN "ressentiment" masculine ; -- tocheck
lin reserpine_N = mkN "réserpine" feminine ; -- tocheck
lin reservation_N = mkN "réservation" feminine | mkN "réserve" feminine ; -- tocheck
lin reserve_N = mkN "réserve" feminine | mkN "réservation" feminine | mkN "réserves" | mkN "réservation" ; -- tocheck
lin reserve_V = variants {} ; -- mkV2 (mkV "réserver") ; -- tocheck
lin reserve_V2 = mkV2 (mkV "réserver") ; -- tocheck
lin reservoir_N = mkN "réservoir" masculine ; -- tocheck
lin resettlement_N = mkN "délocalisation" | mkN "réinstallation" | mkN "transplantation" ; -- UWN
lin resh_N = mkN "resh" ; -- UWN
lin reside_V = mkV (mkV "habiter") | mkV (mkV "résider") ; -- tocheck
lin residence_N = mkN "résidence" feminine ; -- tocheck
lin resident_A = mkA "habitant" ; -- UWN
lin resident_N = mkN "résident" masculine ; -- tocheck
lin residential_A = mkA "résidentiel" ; -- tocheck
lin residual_A = mkA "résiduaire" ; -- tocheck
lin residual_N = mkN "restant" masculine ; -- tocheck
lin residue_N = variants {} ; --
lin resign_V = mkV "abandonner" | mkV "renoncer" ; -- UWN
lin resign_V2 = variants {} ; -- mkV2V (mkV "résigner") | mkV2V (mkV "démissionner") ; -- tocheck
lin resignation_N = mkN "démission" feminine | mkN "résignation" feminine ; -- tocheck
lin resilience_N = mkN "résilience" feminine ; -- tocheck
lin resiliency_N = mkN "résilience" | mkN "résistance" ; -- UWN
lin resilient_A = mkA "flexible" ; -- tocheck
lin resin_N = mkN "aufef" feminine | mkN "résine" feminine ; -- tocheck
lin resinous_A = mkA "résineux" ; -- UWN
lin resist_V = variants {} ; -- mkV2 (mkV "résister") ; -- tocheck
lin resist_V2 = mkV2 (mkV "résister") ; -- tocheck
lin resist_VV = variants {} ; -- mkV2 (mkV "résister") ; -- tocheck
lin resistance_N = mkN "résistance" | mkN "résistance" feminine ; -- tocheck
lin resistant_A = mkA "résistant" ; -- tocheck
lin resistible_A = mkA "résistible" ; -- tocheck
lin resistivity_N = mkN "résistivité" feminine ; -- tocheck
lin resistless_A = mkA "irrésistible" ; -- UWN
lin resistor_N = mkN "résistance" feminine | mkN "résistant" masculine ; -- tocheck
lin resolute_A = mkA "résolu" ; -- tocheck
lin resoluteness_N = mkN "fermeté" ; -- UWN
lin resolution_N = mkN "résolution" feminine ; -- tocheck
lin resolvable_A = mkA "résoluble" ; -- tocheck
lin resolve_N = mkN "fermeté" ; -- UWN
lin resolve_V = variants {} ; -- mkV2 (mkV I.résoudre_V2) | mkV2 (reflV (mkV I.résoudre_V2)) ; -- tocheck
lin resolve_V2 = mkV2 (mkV I.résoudre_V2) | mkV2 (reflV (mkV I.résoudre_V2)) ; -- tocheck
lin resonance_N = mkN "résonance" ; -- tocheck
lin resonant_A = mkA "évocateur" ; -- UWN
lin resonate_V2 = mkV2 (mkV "résonner") ; -- tocheck
lin resorcinol_N = mkN "résorcine" ; -- UWN
lin resort_N = mkN "sortie" ; -- tocheck
lin resort_V = mkV (mkV "retrier") ; -- tocheck
lin resound_V2 = mkV2 (mkV "résonner") ; -- tocheck
lin resource_N = mkN "ressource" feminine ; -- tocheck
lin resourceful_A = mkA "débrouillard" ; -- tocheck
lin resourcefulness_N = mkN "débrouillardise" feminine ; -- tocheck
lin respect_N = mkN "respect" masculine | mkN "tolérance" feminine ; -- tocheck
lin respect_V2 = mkV2 (mkV "respecter") ; -- tocheck
lin respectability_N = mkN "respectabilité" feminine ; -- tocheck
lin respectable_A = mkA "respectable" ; -- tocheck
lin respectful_A = mkA "respectueux" ; -- tocheck
lin respective_A = mkA "respectif" ; -- tocheck
lin respiration_N = mkN "respiration" feminine ; -- tocheck
lin respirator_N = mkN "respirateur" masculine ; -- tocheck
lin respiratory_A = mkA "respiratoire" ; -- tocheck
lin respire_V = mkV "inspirer" | mkV "respirer" ; -- UWN
lin respite_N = mkN "répit" masculine ; -- tocheck
lin resplendent_A = mkA "fameux" | mkA "magnifique" | mkA "splendide" ; -- UWN
lin respond_V = variants {} ; -- mkV2 (mkV I.répondre_V2) ; -- tocheck
lin respond_VS = variants {} ; -- mkV2 (mkV I.répondre_V2) ; -- tocheck
lin respondent_N = variants {} ; --
lin response_N = mkN "réponse" feminine ; -- tocheck
lin responsibility_N = mkN "responsabilité" feminine ; -- tocheck
lin responsible_A = mkA "responsable" ; -- tocheck
lin responsiveness_N = mkN "réactivité" ; -- UWN
lin rest_N = mkN "repos" masculine | mkN "reste" masculine | mkN "paix" feminine ; -- tocheck
lin rest_V2 = mkV2 (reflV (mkV "reposer")) | mkV2 (mkV "rester") | mkV2 (mkV "reposer") ; -- tocheck
lin restart_V2 = mkV2 (mkV "redémarrer") | mkV2 (mkV "recommencer") ; -- tocheck
lin restate_V2V = mkV2V (mkV "redéclarer") ; -- tocheck
lin restaurant_N = L.restaurant_N ;
lin restaurateur_N = mkN "restaurateur" masculine ; -- tocheck
lin restful_A = mkA "calme" | mkA "paisible" | mkA "tranquille" ; -- UWN
lin restitution_N = mkN "restitution" feminine ; -- tocheck
lin restive_A = mkA "rétif" ; -- tocheck
lin restless_A = mkA "agité" ; -- tocheck
lin restlessness_N = mkN "agitation" ; -- tocheck
lin restoration_N = mkN "restauration" feminine ; -- tocheck
lin restorative_N = mkN "correcteur" | mkN "correction" ; -- UWN
lin restore_V2 = mkV2 (mkV "restaurer") ; -- tocheck
lin restorer_N = mkN "restaurateur" ; -- UWN
lin restrain_V2 = mkV2 (mkV I.retenir_V2) | mkV2 (mkV "réprimer") | mkV2 (mkV I.restreindre_V2) ; -- tocheck
lin restraint_N = mkN "frein" masculine ; -- tocheck
lin restrict_V = mkV "caractériser" | mkV "demeurer" | mkV "distinguer" | mkV "définir" | mkV "limiter" | mkV "mentionner" | mkV "paraître" | mkV "privilégier" | mkV "qualifier" | mkV "reposer" | mkV "ressembler" | mkV "restreindre" | mkV "réduire" ; -- UWN
lin restrict_V2 = mkV2 (mkV I.restreindre_V2) ; -- tocheck
lin restricted_A = variants {} ; --
lin restriction_N = variants {} ; --
lin restrictive_A = mkA "restrictif" ; -- tocheck
lin result_N = mkN "résultat" masculine ;
lin result_V = mkV (mkV "résulter") ; -- tocheck
lin resulting_A = variants {} ; --
lin resume_V = variants {} ; -- mkV2 (mkV "recommencer") ; -- tocheck
lin resume_V2 = mkV2 (mkV "recommencer") ; -- tocheck
lin resurrect_V2 = mkV2 (mkV "ressusciter") ; -- tocheck
lin resurrection_N = mkN "résurrection" ; -- tocheck
lin retail_A = variants {} ; --
lin retail_N = mkN "détail" | mkN "détaillant" | mkN "vente" ; -- UWN
lin retailer_N = mkN "revendeur" masculine ; -- tocheck
lin retailing_N = mkN "commerce_de_détail" ; -- UWN
lin retain_V2 = variants {} ; -- mkV2V (mkV I.retenir_V2) ; -- tocheck
lin retainer_N = mkN "faux-palais" masculine | mkN "avance" feminine ; -- tocheck
lin retaliate_V = mkV (mkV "riposter") ; -- tocheck
lin retaliation_N = mkN "représailles" ; -- tocheck
lin retardant_N = mkN "brome" | mkN "retardateur" ; -- UWN
lin retention_N = mkN "rétention" ; -- tocheck
lin retentive_A = mkA "long" ; -- UWN
lin retentiveness_N = mkN "conservation" | mkN "maintien" | mkN "rétention" ; -- UWN
lin retford_PN = mkPN "Retford" ; -- status=guess src=geonames
lin rethink_V = mkV "repenser" | mkV "revoir" | mkV "réfléchir" ; -- UWN
lin rethink_V2 = mkV2 (mkV "repenser") ; -- tocheck
lin reticence_N = mkN "réserve" ; -- UWN
lin reticent_A = mkA "réticent" ; -- tocheck
lin reticle_N = mkN "réticule" masculine ; -- tocheck
lin reticulocyte_N = mkN "réticulocyte" ; -- UWN
lin retina_N = mkN "rétine" feminine ; -- tocheck
lin retinoblastoma_N = mkN "rétinoblastome" ; -- UWN
lin retinue_N = mkN "clique" | mkN "cortège" | mkN "entourage" | mkN "escorte" | mkN "suite" ; -- UWN
lin retire_V = variants {} ; -- mkV2 (reflV (mkV "retirer")) ; -- tocheck
lin retire_V2 = mkV2 (reflV (mkV "retirer")) ; -- tocheck
lin retired_A = variants {} ; --
lin retiree_N = mkN "retraité" masculine ; -- tocheck
lin retirement_N = mkN "retraite" feminine ; -- tocheck
lin retort_N = mkN "réplique" feminine ; -- tocheck
lin retractable_A = mkA "rétractable" ; -- tocheck
lin retractile_A = mkA "rétractable" ; -- tocheck
lin retransmit_V2 = mkV2 (mkV I.retransmettre_V2) ; -- tocheck
lin retreat_N = mkN "retraite" feminine ; -- tocheck
lin retreat_V = variants {} ; --
lin retrenchment_N = mkN "abaissement" | mkN "restructuration" | mkN "réduction" ; -- UWN
lin retribution_N = mkN "vendetta" ; -- tocheck
lin retrieval_N = mkN "récupération" ; -- tocheck
lin retrieve_V = variants {} ; --
lin retrieve_V2 = variants {} ; --
lin retriever_N = mkN "retriever" ; -- UWN
lin retroflex_A = mkA "rétroflexe" ; -- tocheck
lin retrograde_A = mkA "rétrograde" ; -- tocheck
lin retrogression_N = mkN "rétrogression" feminine ; -- tocheck
lin retronym_N = mkN "rétronyme" masculine ; -- tocheck
lin retrorocket_N = mkN "Rétrofusée" | mkN "rétrofusée" ; -- UWN
lin retrospect_N = mkN "rétrospection" feminine ; -- tocheck
lin retrospective_A = mkA "rétrospectif" ; -- tocheck
lin retrospective_N = mkN "rétrospectif" ; -- UWN
lin retroversion_N = mkN "rétrogression" ; -- UWN
lin retrovirus_N = mkN "rétrovirus" ; -- tocheck
lin retsina_N = mkN "retsina" | mkN "vin_résiné" ; -- UWN
lin return_N = mkN "retour" masculine ; -- tocheck
lin return_V = mkV I.revenir_V | mkV "retourner" | mkV "rentrer" ;
lin return_V2 = mkV2 "retourner" | I.rendre_V2 ;
lin reunification_N = mkN "réunification" ; -- tocheck
lin reunion_N = mkN "réunion" feminine ; -- tocheck
lin reunite_V = mkV "désoler" | mkV "réunifier" | mkV "réunir" ; -- UWN
lin revaluation_N = mkN "réévaluation" ; -- UWN
lin revamp_V2 = mkV2 (mkV "reviser") ; -- tocheck
lin reveal_V2 = mkV2 (mkV "révéler") ; -- tocheck
lin reveal_VS = variants {} ; -- mkV2 (mkV "révéler") ; -- tocheck
lin reveille_N = mkN "diane" feminine ; -- tocheck
lin revelation_N = mkN "révélation" feminine ; -- tocheck
lin revenant_N = mkN "revenant" ; -- tocheck
lin revenge_N = mkN "vengeance" feminine ; -- tocheck
lin revenge_V2 = mkV2 (mkV "venger") ; -- tocheck
lin revengeful_A = mkA "vengeur" | mkA "vindicatif" ; -- UWN
lin revenue_N = mkN "revenu" masculine ; -- tocheck
lin reverberate_V = mkV "réverbérer" ; -- UWN
lin reverberation_N = mkN "echo" masculine | mkN "répercussion" feminine | mkN "contrecoup" masculine | mkN "réflexion" feminine ; -- tocheck
lin reverence_N = mkN "révérence" ; -- tocheck
lin reverend_N = mkN "révérend" masculine ; -- tocheck
lin reverential_A = mkA "respectueux" ; -- UWN
lin reverie_N = mkN "rêverie" feminine ; -- tocheck
lin revers_N = mkN "révérer" ; -- UWN
lin reverse_A = mkA "inverse" ; -- tocheck
lin reverse_N = mkN "contraire" ; -- tocheck
lin reverse_V = variants {} ; -- mkV2 (mkV "retourner") ; -- tocheck
lin reverse_V2 = mkV2 (mkV "retourner") ; -- tocheck
lin reversibility_N = mkN "réversibilité" ; -- UWN
lin reversible_A = mkA "réversible" ; -- UWN
lin reversible_N = mkN "réversible" ; -- UWN
lin reversion_N = mkN "retour" ; -- tocheck
lin revert_V = mkV (mkV "retourner") ; -- tocheck
lin review_N = mkN "critique" feminine ; -- tocheck
lin review_V = mkV "revoir" | mkV "rédiger" | mkV "réexaminer" | mkV "réviser" | mkV "réévaluer" | mkV "vérifier" ; -- UWN
lin review_V2 = variants {} ; --
lin reviewer_N = mkN "relecteur" masculine ; -- tocheck
lin revise_N = mkN "revoir" | mkN "révision" ; -- UWN
lin revise_V = variants {} ; -- mkV2 (mkV I.revoir_V2) ; -- tocheck
lin revise_V2 = mkV2 (mkV I.revoir_V2) ; -- tocheck
lin revised_A = variants {} ; --
lin revision_N = mkN "révision" feminine | mkN "modification" ; -- tocheck
lin revisionistFem_N = mkN "révisionniste" feminine ; -- tocheck
lin revisionistMasc_N = mkN "révisionniste" masculine ; -- tocheck
lin revival_N = variants {} ; --
lin revivalism_N = mkN "revivalisme" ; -- UWN
lin revivalist_N = mkN "revivaliste" ; -- tocheck
lin revive_V = mkV "ressusciter" ; -- UWN
lin revive_V2 = variants {} ; --
lin revocation_N = mkN "révocation" ; -- tocheck
lin revoke_V = mkV "abolir" | mkV "abroger" | mkV "annuler" | mkV "enfreindre" | mkV "retourner" | mkV "supprimer" ; -- UWN
lin revolt_N = mkN "insurrection" | mkN "rébellion" | mkN "révolte" ; -- UWN
lin revolt_V = mkV "écœurer" ; -- UWN
lin revolt_V2 = mkV2 (mkV "révolter") | mkV2 (reflV (mkV "révolter")) ; -- tocheck
lin revolution_N = mkN "révolution" feminine | mkN "tour" masculine ; -- tocheck
lin revolutionary_A = mkA "révolutionnaire" ; -- tocheck
lin revolutionary_N = mkN "révolutionnaire" ; -- tocheck
lin revolutionist_N = mkN "révolutionnaire" | mkN "subversif" ; -- UWN
lin revolve_V2 = mkV2 (mkV "retourner") ; -- tocheck
lin revolver_N = mkN "revolver" masculine ; -- tocheck
lin revue_N = mkN "cabaret" | mkN "revue" ; -- UWN
lin reward_N = mkN "récompense" feminine ; -- tocheck
lin reward_V2 = mkV2 (mkV "récompenser") ; -- tocheck
lin rewarding_A = mkA "gratifiant" ; -- tocheck
lin rewrite_N = mkN "réécrire" | mkN "réécriture" ; -- UWN
lin rewrite_V2 = mkV2 (mkV I.réécrire_V2) ; -- tocheck
lin rewriting_N = mkN "réécriture" feminine ; -- tocheck
lin rhapsody_N = mkN "rhapsody" ; -- UWN
lin rhenium_N = mkN "rhénium" masculine ; -- tocheck
lin rheologic_A = mkA "rhéologique" ; -- UWN
lin rheology_N = mkN "rhéologie" feminine ; -- tocheck
lin rheometer_N = mkN "rhéomètre" masculine ; -- tocheck
lin rhetoric_N = mkN "rhétorique" feminine ; -- tocheck
lin rhetorical_A = mkA "rhétorique" ; -- tocheck
lin rhetorician_N = mkN "orateur" | mkN "orateurs_attiques" | mkN "rhétoricien" ; -- UWN
lin rheumatic_A = mkA "rhumatismal" ; -- tocheck
lin rheumatism_N = mkN "rhumatisme" masculine ; -- tocheck
lin rheumatoid_A = mkA "arthritique" ; -- UWN
lin rheumatologist_N = mkN "rhumatologiste" | mkN "rhumatologue" ; -- UWN
lin rheumatology_N = mkN "rhumatologie" feminine ; -- tocheck
lin rheumy_A = mkA "arthritique" ; -- UWN
lin rhinal_A = mkA "nasal" ; -- UWN
lin rhinitis_N = mkN "rhinite" feminine ; -- tocheck
lin rhino_N = mkN "rhino" masculine ; -- tocheck
lin rhinoceros_N = mkN "rhinocéros" masculine ; -- tocheck
lin rhinorrhea_N = mkN "rhinorrhée" feminine ; -- tocheck
lin rhinovirus_N = mkN "rhinovirus" ; -- UWN
lin rhizome_N = mkN "rhizome" masculine ; -- tocheck
lin rhizopus_N = mkN "rhizopus" ; -- UWN
lin rho_N = mkN "rhô" masculine ; -- tocheck
lin rhodium_N = mkN "rhodium" masculine ; -- tocheck
lin rhodochrosite_N = mkN "rhodochrosite" ; -- UWN
lin rhododendron_N = mkN "rhododendron" masculine ; -- tocheck
lin rhodonite_N = mkN "rhodonite" ; -- UWN
lin rhomb_N = mkN "losange" | mkN "rhombe" | mkN "rhombus" ; -- UWN
lin rhombohedral_A = mkA "rhomboédrique" ; -- tocheck
lin rhombohedron_N = mkN "rhomboèdre" masculine ; -- tocheck
lin rhombus_N = mkN "losange" masculine ; -- tocheck
lin rhondda_PN = mkPN "Rhondda" ; -- status=guess src=geonames
lin rhosllanerchrugog_PN = mkPN "Rhosllanerchrugog" ; -- status=guess src=geonames
lin rhubarb_N = mkN "rhubarbe" feminine ; -- tocheck
lin rhyl_PN = mkPN "Rhyl" ; -- status=guess src=geonames
lin rhyme_N = mkN "rime" feminine ; -- tocheck
lin rhymester_N = mkN "rimeur" masculine ; -- tocheck
lin rhymney_PN = mkPN "Rhymney" ; -- status=guess src=geonames
lin rhyolite_N = mkN "rhyolite" ; -- UWN
lin rhythm_N = mkN "rythme" masculine ; -- tocheck
lin rhythmic_A = mkA "rythmique" | mkA "rythmé" ; -- UWN
lin rhythmical_A = mkA "rythmique" | mkA "rythmé" ; -- UWN
lin rib_N = mkN "côte" feminine | mkN "côtelette" feminine ; -- tocheck
lin ribald_A = mkA "grossier" ; -- tocheck
lin ribald_N = mkN "balourd" ; -- tocheck
lin ribaldry_N = mkN "piquant" ; -- UWN
lin ribbon_N = mkN "ruban" masculine ; -- tocheck
lin riboflavin_N = mkN "vitamine_b&lt;sub&gt;2&lt;/sub&gt;" | mkN "vitamine_b2" ; -- UWN
lin ribose_N = mkN "ribose" ; -- UWN
lin ribosome_N = mkN "ribosome" masculine ; -- tocheck
lin rice_N = mkN "riz" masculine ; -- tocheck
lin rich_A = mkA "riche" ; -- tocheck
lin richmond_PN = mkPN "Richmond" ; -- status=guess src=geonames
lin richness_N = mkN "richesse" feminine ; -- tocheck
lin ricin_N = mkN "ricine" feminine ; -- tocheck
lin rick_N = mkN "meule" feminine ; -- tocheck
lin rickets_N = mkN "rachitisme" masculine ; -- tocheck
lin rickettsia_N = mkN "Rickettsia" | mkN "rickettsia" ; -- UWN
lin rickety_A = mkA "délabré" | mkA "chambranlant" ; -- tocheck
lin rickmansworth_PN = mkPN "Rickmansworth" ; -- status=guess src=geonames
lin rickshaw_N = mkN "rickshaw" masculine ; -- tocheck
lin ricochet_N = mkN "ricochet" ; -- tocheck
lin ricochet_V2 = mkV2 (mkV "ricocher") ; -- tocheck
lin rictus_N = mkN "rictus" ; -- UWN
lin rid_V2 = variants {} ; --
lin riddance_N = mkN "exclusion" | mkN "éjection" ; -- UWN
lin riddle_N = mkN "énigme" feminine ; -- tocheck
lin riddle_V2 = mkV2 (mkV "cribler") ; -- tocheck
lin ride_N = mkN "bagnole" feminine ; -- tocheck
lin ride_V = variants {} ; -- mkV2 (mkV "rouler") ; -- tocheck
lin ride_V2 = mkV2 (mkV "rouler") ; -- tocheck
lin ride_off_V = advV OP_ride_V OP_off_Adv ; -- guess-p-verb
lin ride_on_V2 = prepV2 OP_ride_V OP_on_Prep ; -- guess-p-verb
lin ride_out_V2 = prepV2 OP_ride_V OP_out_Prep ; -- guess-p-verb
lin ride_up_V = advV OP_ride_V OP_up_Adv ; -- guess-p-verb
lin riderFem_N = mkN "cavalière" feminine ; -- tocheck
lin riderMasc_N = mkN "cavalier" masculine ;
lin ridge_N = mkN "crête" feminine | mkN "dorsale" feminine | mkN "faîte" masculine ; -- tocheck
lin ridiculous_A = mkA "ridicule" ; -- tocheck
lin ridley_N = mkN "ridley" ; -- UWN
lin riel_N = mkN "riel" ; -- UWN
lin rifle_N = mkN "fusil" masculine ; -- tocheck
lin rifleman_N = mkN "fusilier" ; -- UWN
lin rift_N = mkN "briser" | mkN "chute" | mkN "rift" | mkN "rompre" ; -- UWN
lin rig_N = mkN "costume" masculine | mkN "grééments" | mkN "foreuse" feminine ; -- tocheck
lin rig_V2 = mkV2 (reflV (mkV "cuirasser")) | mkV2 (mkV "bâcler") | mkV2 (mkV "truquer") ; -- tocheck
lin riga_PN = mkPN "Rīga" ; -- status=guess src=geonames
lin rigging_N = mkN "gréement" masculine ; -- tocheck
lin right_1_A = mkA "correct" ;
lin right_1_Adv = mkAdv "correctement" ;
lin right_2_A = mkA "droit" ;
lin right_2_Adv = mkAdv "à droite" ;
lin right_A = mkA "droit" | mkA "correct" ;
lin right_Adv = mkAdv "correctement" ;
lin right_Interj = variants {} ; --
lin right_N = mkN "droit" masculine | mkN "droite" feminine ;
lin right_Ord = L.right_Ord ;
lin right_V2 = mkV2 (reflV (mkV "redresser")) | mkV2 (mkV "corriger") | mkV2 (mkV "redresser") ; -- tocheck
lin right_handed_A = mkA "droitier" ; -- tocheck
lin right_hander_N = mkN "droitier" masculine ; -- tocheck
lin rightful_A = mkA "légitime" ; -- tocheck
lin rightfulness_N = mkN "droit" ; -- UWN
lin rightist_A = mkA "droit" | mkA "droitier" ; -- UWN
lin rightist_N = mkN "droitier" ; -- UWN
lin rigid_A = mkA "rigide" ; -- tocheck
lin rigidity_N = mkN "rigidité" feminine ; -- tocheck
lin rigorous_A = mkA "rigoureux" ; -- tocheck
lin rigour_N = mkN "rigueur" feminine ; -- tocheck
lin rijeka_PN = mkPN "Rijeka" ; -- status=guess src=geonames
lin rill_N = mkN "ruisselet" masculine ; -- tocheck
lin rim_N = mkN "jante" feminine ; -- tocheck
lin rime_N = mkN "givre" feminine ; -- tocheck
lin rimini_PN = mkPN "Rimini" ; -- status=guess src=geonames
lin rind_N = mkN "pelure" ; -- tocheck
lin rinderpest_N = mkN "peste_bovine" ; -- UWN
lin ring_4_V2 = mkV2 (mkV "sonner") ; -- tocheck
lin ring_6_V2 = variants {} ; --
lin ring_N = mkN "anneau" masculine | mkN "piste" feminine | mkN "cercle" masculine | mkN "ring" masculine ; -- tocheck
lin ring_V = mkV "résonner" ; -- UWN
lin ring_back_V2 = mkV2 (advV OP_ring_V OP_back_Adv ) ; -- guess-p-verb
lin ring_in_V = advV OP_ring_V OP_in_Adv ; -- guess-p-verb
lin ring_off_V = advV OP_ring_V OP_off_Adv ; -- guess-p-verb
lin ring_out_V = advV OP_ring_V OP_out_Adv ; -- guess-p-verb
lin ring_round_V = advV OP_ring_V OP_round_Adv ; -- guess-p-verb
lin ring_up_V = advV OP_ring_V OP_up_Adv ; -- guess-p-verb
lin ring_up_V2 = prepV2 OP_ring_V OP_up_Prep ; -- guess-p-verb
lin ring_with_V2 = prepV2 OP_ring_V OP_with_Prep ; -- guess-p-verb
lin ringgit_N = mkN "ringgit" masculine ; -- tocheck
lin ringing_N = mkN "résonance" | mkN "écho" ; -- UWN
lin ringwood_PN = mkPN "Ringwood" ; -- status=guess src=geonames
lin ringworm_N = mkN "teigne" feminine ; -- tocheck
lin rinse_N = mkN "rinçage" masculine ; -- tocheck
lin rinse_V2 = mkV2 (mkV "rincer") ; -- tocheck
lin riot_N = mkN "émeute" feminine ; -- tocheck
lin rioter_N = mkN "émeutier" masculine ; -- tocheck
lin rioting_N = mkN "émeute" ; -- UWN
lin riotous_A = mkA "abondant" | mkA "ample" | mkA "copieux" | mkA "large" | mkA "luxuriant" | mkA "plantureux" | mkA "profus" ; -- UWN
lin rip_N = mkN "louer" | mkN "loyer" ; -- UWN
lin rip_V = variants {} ; -- mkV2 (mkV "ripper") ; -- tocheck
lin rip_V2 = mkV2 (mkV "ripper") ; -- tocheck
lin rip_off_N = mkN "arnaque" feminine ; -- tocheck
lin ripe_A = mkA "mûr" | mkA "accompli" ; -- tocheck
lin ripen_V2 = mkV2 (mkV "mûrir") ; -- tocheck
lin ripeness_N = mkN "maturité" ; -- UWN
lin ripley_PN = mkPN "Ripley" ; -- status=guess src=geonames
lin ripon_PN = mkPN "Ripon" ; -- status=guess src=geonames
lin riposte_N = mkN "riposte" ; -- tocheck
lin ripper_N = mkN "éventreur" masculine ; -- tocheck
lin ripple_N = mkN "ondulation" feminine ; -- tocheck
lin ripple_V = mkV "onduler" ; -- UWN
lin ripple_V2 = mkV2 (mkV "onduler") ; -- tocheck
lin risca_PN = mkPN "Risca" ; -- status=guess src=geonames
lin rise_N = mkN "montée" ; -- tocheck
lin rise_V = variants {} ; -- mkV2 (reflV (mkV "lever")) | mkV2 (mkV "monter") ; -- tocheck
lin rise_V2 = mkV2 (reflV (mkV "lever")) | mkV2 (mkV "monter") ; -- tocheck
lin riser_N = mkN "élévateur" masculine | mkN "gaine" feminine | mkN "contremarche" feminine ; -- tocheck
lin rishton_PN = mkPN "Rishton" ; -- status=guess src=geonames
lin rising_A = variants {} ; --
lin rising_N = mkN "insurrection" | mkN "rébellion" | mkN "révolte" ; -- UWN
lin risk_N = mkN "risque" masculine ; -- tocheck
lin risk_V2 = variants {} ; --
lin risk_VV = variants {} ; --
lin riskiness_N = mkN "danger" | mkN "péril" | mkN "risque" ; -- UWN
lin risky_A = mkA "risqué" ; -- tocheck
lin risotto_N = mkN "risotto" masculine ; -- tocheck
lin rite_N = mkN "rit" ; -- tocheck
lin ritual_A = mkA "rituel" ; -- UWN
lin ritual_N = mkN "rituel" masculine ; -- tocheck
lin rival_A = variants {} ; --
lin rival_N = mkN "rival" masculine ; -- tocheck
lin rival_V2 = mkV2 (mkV "rivaliser") ; -- tocheck
lin rivalry_N = mkN "rivalité" feminine ; -- tocheck
lin river_N = L.river_N ;
lin riverbank_N = mkN "rive" feminine ; -- tocheck
lin riverside_N = mkN "berge" feminine ; -- tocheck
lin rivet_N = mkN "rivet" masculine ; -- tocheck
lin rivet_V2 = mkV2 (mkV "riveter") ; -- tocheck
lin rivulet_N = mkN "ruisselet" masculine ; -- tocheck
lin rivulus_N = mkN "rivulus" ; -- UWN
lin roach_N = mkN "gardon" masculine | mkN "cul" masculine ; -- tocheck
lin road_N = L.road_N ;
lin roadblock_N = mkN "barrage" | mkN "barricade" | mkN "barricader" ; -- UWN
lin roadrunner_N = mkN "géocoucou" masculine ; -- tocheck
lin roads_N = mkN "rade" ; -- UWN
lin roadstead_N = mkN "rade" ; -- tocheck
lin roadway_N = mkN "chaussée" feminine ; -- tocheck
lin roam_V2 = mkV2 (mkV "errer") ; -- tocheck
lin roar_N = mkN "rugissement" masculine ; -- tocheck
lin roar_V = variants {} ; -- mkV2 (mkV "rugir") ; -- tocheck
lin roar_V2 = mkV2 (mkV "rugir") ; -- tocheck
lin roast_A = mkA "rôti" ; -- tocheck
lin roast_N = mkN "bien-cuit" masculine | mkN "rôti" masculine ; -- tocheck
lin roast_V2 = mkV2 (mkV "rôtir") ; -- tocheck
lin rob_V2 = mkV2 (mkV "voler") | mkV2 (mkV "cambrioler") ; -- tocheck
lin robber_N = mkN "brigand" masculine ; -- tocheck
lin robbery_N = mkN "banditisme" masculine | mkN "brigandage" masculine ; -- tocheck
lin robe_N = mkN "robe" feminine ; -- tocheck
lin robin_N = mkN "merle" masculine | mkN "rouge-gorge" masculine ; -- tocheck
lin robot_N = mkN "robot" masculine ; -- tocheck
lin robotics_N = mkN "robotique" ; -- UWN
lin robustness_N = mkN "robustesse" feminine ; -- tocheck
lin rochdale_PN = mkPN "Rochdale" ; -- status=guess src=geonames
lin rochester_PN = mkPN "Rochester" ; -- status=guess src=geonames
lin rock_N = L.rock_N ;
lin rock_V = variants {} ; -- mkV2 (mkV "secouer") | mkV2 (mkV "remuer") | mkV2 (mkV "gérer") ; -- tocheck
lin rock_V2 = mkV2 (mkV "secouer") | mkV2 (mkV "remuer") | mkV2 (mkV "gérer") ; -- tocheck
lin rockabilly_N = mkN "Rockabilly" | mkN "hillbilly_rock" | mkN "rockabilly" ; -- UWN
lin rockery_N = mkN "rocaille" ; -- UWN
lin rocket_N = mkN "roquette" feminine | mkN "fusée" feminine ; -- tocheck
lin rocky_A = mkA "accidenté" ; -- UWN
lin rococo_A = mkA "rococo" ; -- UWN
lin rococo_N = mkN "rococo" ; -- UWN
lin rod_N = mkN "verge" | mkN "tige" feminine | mkN "bite" ; -- tocheck
lin rodent_N = mkN "rongeur" masculine ; -- tocheck
lin rodeo_N = mkN "rodéo" masculine ; -- tocheck
lin rodomontade_N = mkN "rodomontade" feminine ; -- tocheck
lin roebuck_N = mkN "cerf" ; -- tocheck
lin roentgenium_N = mkN "roentgenium" masculine ; -- tocheck
lin rogue_N = mkN "garnement" masculine | mkN "vagabond" masculine | mkN "canaille" feminine ; -- tocheck
lin roil_V2 = mkV2 (mkV "troubler") | mkV2 (mkV "énerver") ; -- tocheck
lin role_N = mkN "rôle" masculine ;
lin roleplaying_N = mkN "jeu_de_rôle" ; -- UWN
lin roll_N = mkN "rouleau" masculine | mkN "roulis" masculine | mkN "roue" feminine | mkN "roulement" masculine ; -- tocheck
lin roll_V = variants {} ; -- mkV2 (mkV "rouler") ; -- tocheck
lin roll_V2 = mkV2 (mkV "rouler") ; -- tocheck
lin roll_back_V = advV OP_roll_V OP_back_Adv ; -- guess-p-verb
lin roll_back_V2 = mkV2 (advV OP_roll_V OP_back_Adv ) ; -- guess-p-verb
lin roll_by_V = advV OP_roll_V OP_by_Adv ; -- guess-p-verb
lin roll_down_V = advV OP_roll_V OP_down_Adv ; -- guess-p-verb
lin roll_in_V = advV OP_roll_V OP_in_Adv ; -- guess-p-verb
lin roll_on_V = advV OP_roll_V OP_on_Adv ; -- guess-p-verb
lin roll_on_V2 = prepV2 OP_roll_V OP_on_Prep ; -- guess-p-verb
lin roll_out_V2 = prepV2 OP_roll_V OP_out_Prep ; -- guess-p-verb
lin roll_over_V = advV OP_roll_V OP_over_Adv ; -- guess-p-verb
lin roll_up_V = advV OP_roll_V OP_up_Adv ; -- guess-p-verb
lin rollback_N = mkN "retrait" masculine | mkN "rollback" masculine ; -- tocheck
lin roller_N = mkN "rollier" | mkN "rouleau" masculine ; -- tocheck
lin rolling_N = mkN "rayonnage" | mkN "wheeling" ; -- UWN
lin rollmops_N = mkN "rollmops" ; -- UWN
lin rollover_N = mkN "rollover" | mkN "tonneau" ; -- UWN
lin romaic_A = mkA "romaïque" ; -- UWN
lin roman_N = mkN "police_romaine" | mkN "romain" | mkN "romaine" ; -- UWN
lin romance_N = mkN "romance" feminine ; -- tocheck
lin romania_PN = mkPN "Roumanie" ; -- status=guess src=geonames
lin romanianFem_N = variants {} ; ---- sense to be split
lin romanianMasc_N = variants {} ; ---- sense to be split
lin romantic_A = mkA "romantique" ; -- tocheck
lin romanticism_N = mkN "romantisme" masculine ; -- tocheck
lin rome_PN = mkPN "Rome" ; -- status=guess src=geonames
lin romp_N = mkN "jeu" ; -- UWN
lin romp_V = mkV (reflV (mkV I.ébattre_V)) ; -- tocheck
lin romper_N = mkN "barboteuse" | mkN "grenouillère" ; -- UWN
lin romsey_PN = mkPN "Romsey" ; -- status=guess src=geonames
lin ron_PN = mkPN "Ron" ; -- status=guess src=geonames
lin rood_N = mkN "vergée" feminine ; -- tocheck
lin roof_N = L.roof_N ;
lin roofer_N = mkN "couvreur" masculine ; -- tocheck
lin rook_N = mkN "tour" feminine ; -- tocheck
lin rook_V2 = mkV2 (mkV "rouler") ; -- tocheck
lin rookery_N = mkN "rookerie" ; -- UWN
lin rookie_N = mkN "bleu" masculine ; -- tocheck
lin room_1_N = mkN "chambre" | mkN "pièce" ;
lin room_2_N = mkN "place" | mkN "espace" ;
lin room_N = mkN "pièce" feminine | mkN "espace" feminine ;
lin roomer_N = mkN "cou" ; -- UWN
lin room_mate_N = mkN "camarade" | mkN "colocataire" ; -- tocheck
lin roomy_A = mkA "spacieux" ; -- tocheck
lin rooster_N = mkN "coq" masculine ; -- tocheck
lin root_N = L.root_N ;
lin root_V = variants {} ; -- mkV2 (mkV "fourrer") ; -- tocheck
lin root_V2 = mkV2 (mkV "fourrer") ; -- tocheck
lin rooting_N = mkN "enracinement" ; -- UWN
lin rootless_A = mkA "vagabond" ; -- UWN
lin rope_N = L.rope_N ;
lin ropeway_N = mkN "tram" | mkN "tramway" | mkN "téléphérique" ; -- UWN
lin roridula_N = mkN "roridulaceae" ; -- UWN
lin rorqual_N = mkN "rorqual" masculine ; -- tocheck
lin rosalie_PN = mkPN "Rosalie" ; -- status=guess src=geonames
lin rosario_PN = mkPN "Rosario" ; -- status=guess src=geonames
lin rosary_N = mkN "rosaire" ; -- tocheck
lin roscommon_PN = mkPN "Roscommon" ; -- status=guess src=geonames
lin rose_A = mkA "rose" ; -- tocheck
lin rose_N = mkN "rosacée" feminine | mkN "rose" feminine | mkN "pomme" ; -- tocheck
lin rose_PN = mkPN "Rose" ; -- status=guess src=geonames
lin roseate_A = mkA "rosâtre" ; -- tocheck
lin rosemary_N = mkN "romarin" masculine ; -- tocheck
lin rosette_N = mkN "rosette" ; -- UWN
lin rosin_N = mkN "colophane" feminine ; -- tocheck
lin roslyn_PN = mkPN "Roslyn" ; -- status=guess src=geonames
lin rossington_PN = mkPN "Rossington" ; -- status=guess src=geonames
lin rosslare_PN = mkPN "Rosslare" ; -- status=guess src=geonames
lin roster_N = mkN "liste" feminine ; -- tocheck
lin rostock_PN = mkPN "Rostock" ; -- status=guess src=geonames
lin rostrum_N = mkN "museau" | mkN "pif" ; -- UWN
lin rosy_A = mkA "rosé" ; -- tocheck
lin rot_V = mkV "pourrir" ; -- UWN
lin rot_V2 = mkV2 (mkV "pourrir") ; -- tocheck
lin rotate_V2 = mkV2 (mkV "tourner") | mkV2 (mkV "intervertir") ; -- tocheck
lin rotation_N = mkN "tour" masculine | mkN "rotation" feminine ; -- tocheck
lin rotatory_A = mkA "révolutionnaire" ; -- UWN
lin rotavirus_N = mkN "Rotavirus" | mkN "rotavirus" ; -- UWN
lin rote_N = mkN "apprentissage_par_cœur" ; -- UWN
lin rotenone_N = mkN "roténone" ; -- UWN
lin rotgut_N = mkN "tord-boyaux" ; -- tocheck
lin rotherham_PN = mkPN "Rotherham" ; -- status=guess src=geonames
lin rothesay_PN = mkPN "Rothesay" ; -- status=guess src=geonames
lin rothwell_PN = mkPN "Rothwell" ; -- status=guess src=geonames
lin rotifer_N = mkN "Rotifera" | mkN "Rotifères" | mkN "rotifera" | mkN "rotifères" ; -- UWN
lin rotor_N = mkN "rotor" masculine ; -- tocheck
lin rotten_A = L.rotten_A ;
lin rottenstone_N = mkN "tripoli" ; -- UWN
lin rotter_N = mkN "miette" | mkN "mouffette" | mkN "rat" ; -- UWN
lin rotterdam_PN = mkPN "Rotterdam" ; -- status=guess src=geonames
lin rotund_A = mkA "rond" ; -- tocheck
lin roubaix_PN = mkPN "Roubaix" ; -- status=guess src=geonames
lin rouble_N = mkN "rouble" ; -- UWN
lin rouen_PN = mkPN "Rouen" ; -- status=guess src=geonames
lin rouge_N = mkN "peindre" ; -- UWN
lin rough_A = mkA "approximatif" | mkA "brut" | mkA "difficile" | mkA "rude" | mkA "rugueux" | mkA "brutal" ; -- tocheck
lin rough_V2 = mkV2 (mkV "ébaucher") | mkV2 (mkV "malmener") ; -- tocheck
lin roughage_N = mkN "fibre" ; -- UWN
lin roulette_N = mkN "roulette" feminine ; -- tocheck
lin round_A = L.round_A ;
lin round_Adv = mkAdv "rond" ; -- UWN
lin round_N = mkN "rond" masculine | mkN "ronde" feminine | mkN "tour" masculine | mkN "coup" masculine | mkN "éclat" masculine | mkN "round" masculine | mkN "tournée" feminine | mkN "canon" masculine | mkN "épreuve" feminine ; -- tocheck
lin round_Prep = variants {} ; --
lin round_V = variants {} ; --
lin round_V2 = variants {} ; --
lin roundabout_N = mkN "tourniquet" masculine | mkN "manège" masculine | mkN "rond-point" masculine ; -- tocheck
lin roundedness_N = mkN "arrondissement" ; -- UWN
lin roundel_N = mkN "cocarde" ; -- tocheck
lin rounders_N = mkN "Rounders" | mkN "rounders" ; -- UWN
lin rounding_N = mkN "arrondi" ; -- UWN
lin rouse_V2 = mkV2 (mkV "éveiller") ; -- tocheck
lin rout_N = mkN "raout" masculine ; -- tocheck
lin route_N = mkN "route" feminine ; -- tocheck
lin router_N = mkN "routeur" | mkN "défonçeuse" ; -- tocheck
lin routine_A = mkA "banal" | mkA "journalier" | mkA "quotidien" | mkA "quotidienne" | mkA "routine" ; -- UWN
lin routine_N = mkN "routine" feminine ; -- tocheck
lin roux_N = mkN "roux" ; -- UWN
lin row_N = mkN "ligne" feminine ; -- tocheck
lin row_V = mkV "ramer" ; -- UWN
lin row_V2 = mkV2 (mkV "ramer") ; -- tocheck
lin rowan_N = mkN "sorbier" feminine ; -- tocheck
lin rowboat_N = mkN "bateau_à_rames" | mkN "canot" | mkN "dinghy" | mkN "dériveur" | mkN "petit_canoe" | mkN "youyou" ; -- UWN
lin rowdy_A = mkA "chahuteur" ; -- tocheck
lin rower_N = mkN "avironneur" | mkN "rameur" ; -- UWN
lin rowing_N = mkN "aviron" masculine ; -- tocheck
lin rowlock_N = mkN "Dame_de_nage" | mkN "dame" | mkN "dame_de_nage" | mkN "tolet" | mkN "épingle" ; -- UWN
lin roy_PN = mkPN "Roy" ; -- status=guess src=geonames
lin royal_A = mkA "royal" ; -- tocheck
lin royal_N = mkN "cacatois" ; -- tocheck
lin royalty_N = mkN "royalty" feminine | mkN "règne" masculine ; -- tocheck
lin royston_PN = mkPN "Royston" ; -- status=guess src=geonames
lin rub_N = mkN "frotter" ; -- UWN
lin rub_V = variants {} ; -- L.rub_V2 ;
lin rub_V2 = L.rub_V2 ;
lin rubber_A = mkA "caoutchouc" | mkA "gomme" ; -- UWN
lin rubber_N = L.rubber_N ;
lin rubbery_A = mkA "caoutchouteux" ; -- tocheck
lin rubbing_N = mkN "friction" | mkN "frottement" ; -- UWN
lin rubbish_N = mkN "ordures" | mkN "absurdité" feminine ; -- tocheck
lin rubbishy_A = mkA "méprisable" ; -- UWN
lin rubble_N = mkN "décombres" ; -- tocheck
lin rubicund_A = mkA "sanguine" ; -- UWN
lin rubidium_N = mkN "rubidium" masculine ; -- tocheck
lin ruble_N = mkN "rouble" masculine ; -- tocheck
lin rubric_N = mkN "rubrique" ; -- UWN
lin ruby_N = mkN "rubis" masculine ; -- tocheck
lin ruck_N = mkN "foule" | mkN "troupeau" ; -- UWN
lin rucksack_N = mkN "havresac" | mkN "sac_à_dos" ; -- UWN
lin ruckus_N = mkN "chahut" masculine | mkN "grabuge" masculine ; -- tocheck
lin rudd_N = mkN "rotengle" masculine ; -- tocheck
lin rudder_N = mkN "gouvernail" masculine ; -- tocheck
lin ruddington_PN = mkPN "Ruddington" ; -- status=guess src=geonames
lin ruddy_A = mkA "sanguine" ; -- UWN
lin rude_A = mkA "impoli" ; -- tocheck
lin rudeness_N = mkN "impolitesse" feminine ; -- tocheck
lin rudiment_N = mkN "rudiment" masculine ; -- tocheck
lin rudimentary_A = mkA "rudimentaire" ; -- tocheck
lin rudy_PN = mkPN "Rudy" ; -- status=guess src=geonames
lin ruff_N = mkN "fraise" ; -- tocheck
lin ruffian_N = mkN "rufian" ; -- tocheck
lin ruffle_N = mkN "falbala" masculine ; -- tocheck
lin ruffle_V2 = mkV2 (mkV "ébouriffer") ; -- tocheck
lin rug_N = mkN "tapis" ; -- tocheck
lin ruga_N = mkN "ruga" | mkN "rugas" ; -- UWN
lin rugby_N = mkN "rugby" masculine ; -- tocheck
lin rugby_PN = mkPN "Rugby" ; -- status=guess src=geonames
lin rugeley_PN = mkPN "Rugeley" ; -- status=guess src=geonames
lin rugged_A = mkA "turbulent" | mkA "robuste" ; -- tocheck
lin ruggedness_N = mkN "dureté" ; -- UWN
lin rugger_N = mkN "rugby" ; -- UWN
lin ruin_N = mkN "ruine" feminine ; -- tocheck
lin ruin_V2 = mkV2 (mkV "ruiner") | mkV2 (mkV "abîmer") | mkV2 (mkV "gâcher") ; -- tocheck
lin ruination_N = mkN "ruine" ; -- UWN
lin rule_N = L.rule_N ;
lin rule_V = variants {} ; -- mkV2 (mkV "gouverner") ; -- tocheck
lin rule_V2 = mkV2 (mkV "gouverner") ; -- tocheck
lin rule_VS = variants {} ; -- mkV2 (mkV "gouverner") ; -- tocheck
lin rule_out_V2 = prepV2 OP_rule_V OP_out_Prep ; -- guess-p-verb
lin ruler_N = mkN "dirigeant" feminine | mkN "règle" feminine ; -- tocheck
lin rulership_N = mkN "pouvoir" ; -- tocheck
lin ruling_A = variants {} ; --
lin ruling_N = mkN "décision" ; -- tocheck
lin rum_N = mkN "rhum" masculine ; -- tocheck
lin rumba_N = mkN "rumba" feminine ; -- tocheck
lin rumble_N = mkN "borborygme" ; -- tocheck
lin rumble_V2 = mkV2 (mkV "gronder") ; -- tocheck
lin rumen_N = mkN "panse" feminine ; -- tocheck
lin ruminant_N = mkN "ruminant" masculine ; -- tocheck
lin ruminate_V = mkV (mkV "ruminer") ; -- tocheck
lin rumination_N = mkN "rumination" feminine ; -- tocheck
lin ruminative_A = mkA "pensif" | mkA "recueilli" ; -- UWN
lin rummage_V2 = mkV2 (mkV "fouiller") ; -- tocheck
lin rummy_N = mkN "rami" masculine ; -- tocheck
lin rumour_N = variants {} ; --
lin rump_N = mkN "croupe" feminine ; -- tocheck
lin rumple_V2 = mkV2 (mkV "froisser") ; -- tocheck
lin rumpus_N = mkN "conflit" masculine ; -- tocheck
lin run_N = mkN "galoper" | mkN "courir" ; -- tocheck
lin run_V = L.run_V ;
lin run_V2 = mkV2 (mkV "opérer") ; ---- run a program
lin run_across_V2 = prepV2 OP_run_V OP_across_Prep ; -- guess-p-verb
lin run_after_V2 = prepV2 OP_run_V OP_after_Prep ; -- guess-p-verb
lin run_against_V2 = prepV2 OP_run_V OP_against_Prep ; -- guess-p-verb
lin run_along_V = advV OP_run_V OP_along_Adv ; -- guess-p-verb
lin run_around_V = advV OP_run_V OP_around_Adv ; -- guess-p-verb
lin run_away_V = advV OP_run_V OP_away_Adv ; -- guess-p-verb
lin run_away_from_V2 = prepV2 (advV OP_run_V OP_away_Adv ) OP_from_Prep ; -- guess-p-verb
lin run_down_V = advV OP_run_V OP_down_Adv ; -- guess-p-verb
lin run_down_V2 = prepV2 OP_run_V OP_down_Prep ; -- guess-p-verb
lin run_for_V2 = prepV2 OP_run_V OP_for_Prep ; -- guess-p-verb
lin run_in_V = advV OP_run_V OP_in_Adv ; -- guess-p-verb
lin run_in_V2 = prepV2 OP_run_V OP_in_Prep ; -- guess-p-verb
lin run_into_V2 = prepV2 OP_run_V OP_into_Prep ; -- guess-p-verb
lin run_of_the_mill_A = mkA "ordinaire" ; -- tocheck
lin run_off_V = advV OP_run_V OP_off_Adv ; -- guess-p-verb
lin run_off_V2 = prepV2 OP_run_V OP_off_Prep ; -- guess-p-verb
lin run_on_V2 = prepV2 OP_run_V OP_on_Prep ; -- guess-p-verb
lin run_out_V = advV OP_run_V OP_out_Adv ; -- guess-p-verb
lin run_out_of_V2 = prepV2 (advV OP_run_V OP_out_Adv ) OP_of_Prep ; -- guess-p-verb
lin run_over_V = advV OP_run_V OP_over_Adv ; -- guess-p-verb
lin run_over_V2 = prepV2 OP_run_V OP_over_Prep ; -- guess-p-verb
lin run_through_V2 = prepV2 OP_run_V OP_through_Prep ; -- guess-p-verb
lin run_to_V2 = prepV2 OP_run_V OP_to_Prep ; -- guess-p-verb
lin run_up_V = advV OP_run_V OP_up_Adv ; -- guess-p-verb
lin run_up_V2 = prepV2 OP_run_V OP_up_Prep ; -- guess-p-verb
lin run_up_against_V2 = prepV2 (advV OP_run_V OP_up_Adv ) OP_against_Prep ; -- guess-p-verb
lin run_up_on_V2 = prepV2 (advV OP_run_V OP_up_Adv ) OP_on_Prep ; -- guess-p-verb
lin run_with_V2 = prepV2 OP_run_V OP_with_Prep ; -- guess-p-verb
lin runaway_A = mkA "fuyard" ; -- UWN
lin runaway_N = mkN "fuyard" ; -- UWN
lin runcorn_PN = mkPN "Runcorn" ; -- status=guess src=geonames
lin rundle_N = mkN "rayon" ; -- UWN
lin rune_N = mkN "rune" feminine ; -- tocheck
lin runic_A = mkA "runique" ; -- tocheck
lin runnel_N = mkN "courir" ; -- UWN
lin runner_N = mkN "coureur" ; -- tocheck
lin runner_up_N = mkN "vice-champion" masculine ; -- tocheck
lin running_A = variants {} ; --
lin running_N = mkN "course" ; -- UWN
lin runny_A = mkA "fluide" ; -- UWN
lin runt_N = mkN "avorton" masculine ; -- tocheck
lin runway_N = mkN "piste" feminine | mkN "podium" masculine | mkN "piste" ; -- tocheck
lin rupee_N = mkN "roupie" feminine ; -- tocheck
lin rupert_PN = mkPN "Rupert" ; -- status=guess src=geonames
lin rupture_N = mkN "rupture" feminine ; -- tocheck
lin rupture_V = mkV "déchirer" ; -- UWN
lin rural_A = mkA "rural" ; -- tocheck
lin ruralist_N = mkN "compatriote" | mkN "laboureur" ; -- UWN
lin ruse_N = mkN "ruse" feminine ; -- tocheck
lin rush_N = mkN "hâte" feminine | mkN "jonc" masculine ; -- tocheck
lin rush_V = variants {} ; -- mkV2V (reflV (mkV "dépêcher")) ; -- tocheck
lin rush_V2 = variants {} ; -- mkV2V (reflV (mkV "dépêcher")) ; -- tocheck
lin rush_VV = variants {} ; -- mkV2V (reflV (mkV "dépêcher")) ; -- tocheck
lin rush_away_V = advV OP_rush_V OP_away_Adv ; -- guess-p-verb
lin rush_into_V2 = prepV2 OP_rush_V OP_into_Prep ; -- guess-p-verb
lin rush_off_V = advV OP_rush_V OP_off_Adv ; -- guess-p-verb
lin rush_out_V2 = prepV2 OP_rush_V OP_out_Prep ; -- guess-p-verb
lin rusk_N = mkN "biscotte" ; -- tocheck
lin russet_A = mkA "roux" ; -- UWN
lin russia_PN = mkPN "Russie" ; -- status=guess src=geonames
lin russianFem_N = variants {} ; ---- sense to be split
lin russianMasc_N = variants {} ; ---- sense to be split
lin rust_A = mkA "rouille" | mkA "rouillé" ; -- UWN
lin rust_N = mkN "rouille" feminine ; -- tocheck
lin rust_V2 = mkV2 (mkV "rouiller") ; -- tocheck
lin rustic_A = mkA "plouc" ; -- UWN
lin rustle_N = mkN "bruissement" masculine ; -- tocheck
lin rustler_N = mkN "voleur" ; -- UWN
lin rusty_A = mkA "rouillé" ; -- tocheck
lin rut_N = mkN "ornière" feminine | mkN "rut" masculine ; -- tocheck
lin rut_V2 = mkV2 (mkV "sillonner") ; -- tocheck
lin rutabaga_N = mkN "rutabaga" masculine ; -- tocheck
lin ruthenium_N = mkN "ruthénium" masculine ; -- tocheck
lin rutherfordium_N = mkN "rutherfordium" masculine ; -- tocheck
lin rutherglen_PN = mkPN "Rutherglen" ; -- status=guess src=geonames
lin ruthless_A = mkA "impitoyable" ; -- tocheck
lin rutile_N = mkN "rutile" ; -- tocheck
lin rutland_PN = mkPN "Rutland" ; -- status=guess src=geonames
lin rwanda_PN = mkPN "Rwanda" ; -- status=guess src=geonames
lin rydberg_N = mkN "constante_de_rydberg" ; -- UWN
lin ryde_PN = mkPN "Ryde" ; -- status=guess src=geonames
lin rye_N = mkN "seigle" masculine ; -- tocheck
lin sabbatical_A = mkA "sabbatique" ; -- tocheck
lin sable_A = mkA "sable" ; -- tocheck
lin sable_N = mkN "sable" | mkN "zibeline" feminine ; -- tocheck
lin sabot_N = mkN "geta" ; -- UWN
lin sabotage_N = mkN "sabotage" masculine ; -- tocheck
lin sabotage_V2 = mkV2 (mkV "saboter") ; -- tocheck
lin saboteurFem_N = mkN "saboteuse" feminine ; -- tocheck
lin saboteurMasc_N = mkN "saboteur" masculine ; -- tocheck
lin sabra_N = mkN "sabra" ; -- UWN
lin sabre_N = mkN "sabre" masculine ; -- tocheck
lin saccade_N = mkN "saccade" feminine ; -- tocheck
lin saccharin_N = mkN "saccharine" feminine ; -- tocheck
lin sachet_N = mkN "sachet" masculine ; -- tocheck
lin sack_N = mkN "butin" masculine | mkN "paquet" masculine | mkN "sac" masculine ; -- tocheck
lin sack_V2 = mkV2 (mkV "coucher") | mkV2 (mkV "virer") | mkV2 (mkV "saccager") ; -- tocheck
lin sackbut_N = mkN "sacqueboute" feminine ; -- tocheck
lin sacking_N = mkN "congé" | mkN "licenciement" | mkN "limogeage" | mkN "renvoi" ; -- UWN
lin sacral_A = mkA "sacral" ; -- tocheck
lin sacrament_N = mkN "sacrement" masculine ; -- tocheck
lin sacramento_PN = mkPN "Sacramento" ; -- status=guess src=geonames
lin sacred_A = mkA "sacré" ; -- tocheck
lin sacrifice_N = mkN "sacrifice" masculine ; -- tocheck
lin sacrifice_V = variants {} ; -- mkV2 (mkV "sacrifier") ; -- tocheck
lin sacrifice_V2 = mkV2 (mkV "sacrifier") ; -- tocheck
lin sacrificial_A = mkA "sacrificiel" ; -- tocheck
lin sacrilege_N = mkN "sacrilège" masculine ; -- tocheck
lin sacrilegious_A = mkA "sacrilège" ; -- tocheck
lin sacristan_N = mkN "sacristain" masculine ; -- tocheck
lin sacristy_N = mkN "sacristie" ; -- tocheck
lin sacrosanct_A = mkA "sacro-saint" | mkA "sacrosaint" ; -- tocheck
lin sacrum_N = mkN "sacrum" masculine ; -- tocheck
lin sad_A = mkA "triste" ; -- tocheck
lin sadden_V = mkV "attrister" ; -- UWN
lin sadden_V2 = mkV2 (mkV "attrister") ; -- tocheck
lin saddle_N = mkN "sellette" feminine | mkN "selle" feminine ; -- tocheck
lin saddle_V2 = mkV2 (mkV "seller") ; -- tocheck
lin saddler_N = mkN "sellier" masculine ; -- tocheck
lin sadhu_N = mkN "Sâdhu" | mkN "sâdhu" ; -- UWN
lin sadism_N = mkN "sadisme" masculine ; -- tocheck
lin sadist_N = mkN "sadique" ; -- tocheck
lin sadistic_A = mkA "sadique" ; -- tocheck
lin sadness_N = mkN "tristesse" feminine ; -- tocheck
lin sadomasochism_N = mkN "sadomasochisme" masculine ; -- tocheck
lin sadomasochistFem_N = mkN "sadomasochiste" ; -- UWN
lin sadomasochistMasc_N = mkN "sadomasochiste" ; -- UWN
lin sadomasochistic_A = mkA "sadomasochiste" ; -- UWN
lin safari_N = mkN "safari" masculine ; -- tocheck
lin safe_A = mkA "sauf" | mkA "sûr" ; -- tocheck
lin safe_N = mkN "coffre-fort" masculine ; -- tocheck
lin safe_conduct_N = mkN "sauf-conduit" masculine ; -- tocheck
lin safekeeping_N = mkN "garde" ; -- UWN
lin safety_N = mkN "sécurité" feminine | mkN "sûreté" feminine ; -- tocheck
lin saffron_N = mkN "safran" ; -- tocheck
lin safranine_N = mkN "safranine" ; -- UWN
lin saga_N = mkN "saga" | mkN "épopée" ; -- UWN
lin sage_A = mkA "raisonnable" ; -- tocheck
lin sage_N = mkN "sauge" feminine | mkN "sage" masculine ; -- tocheck
lin sagitta_N = mkN "flèche" | mkN "sagitta" ; -- UWN
lin sagittal_A = mkA "sagittal" ; -- UWN
lin sahib_N = mkN "sahib" ; -- UWN
lin saiga_N = mkN "saïga" masculine ; -- tocheck
lin sail_N = mkN "massif" masculine | mkN "voile" feminine | mkN "aile" feminine ; -- tocheck
lin sail_V = variants {} ; -- mkV2 (mkV "voler") ; -- tocheck
lin sail_into_V2 = prepV2 OP_sail_V OP_into_Prep ; -- guess-p-verb
lin sail_through_V2 = prepV2 OP_sail_V OP_through_Prep ; -- guess-p-verb
lin sailboat_N = mkN "cotre" masculine ; -- tocheck
lin sailfish_N = mkN "voilier" masculine ; -- tocheck
lin sailing_N = mkN "départ" ; -- UWN
lin sailor_N = mkN "matelot" masculine ; -- tocheck
lin sainfoin_N = mkN "sainfoin" masculine ; -- tocheck
lin saint_N = mkN "saint" masculine ; -- tocheck
lin sainted_A = mkA "angélique" | mkA "sacré" | mkA "saint" ; -- UWN
lin saintlike_A = mkA "angélique" | mkA "sacré" | mkA "saint" ; -- UWN
lin saintly_A = mkA "angélique" | mkA "sacré" | mkA "saint" ; -- UWN
lin sake_1_N = variants {} ; --
lin sake_2_N = variants {} ; --
lin sake_N = mkN "saké" masculine ; -- tocheck
lin salacious_A = mkA "salace" ; -- tocheck
lin salaciousness_N = mkN "obscénité" | mkN "salacité" | mkN "stupre" ; -- UWN
lin salacity_N = mkN "salacité" feminine ; -- tocheck
lin salad_N = mkN "salade" feminine ; -- tocheck
lin salamanca_PN = mkPN "Salamanque" ; -- status=guess src=geonames
lin salamander_N = mkN "salamandre" feminine ; -- tocheck
lin salami_N = mkN "salami" masculine ; -- tocheck
lin salary_N = mkN "salaire" masculine ; -- tocheck
lin sale_N = mkN "vente" feminine ;
lin sale_PN = mkPN ("Salé" | "Sale") ;
lin saleable_A = mkA "vendable" ; -- tocheck
lin salerno_PN = mkPN "Salerne" ; -- status=guess src=geonames
lin saleroom_N = mkN "showroom" ; -- UWN
lin salesgirl_N = mkN "vendeuse" ; -- UWN
lin salesman_N = mkN "vendeur" masculine ; -- tocheck
lin salesperson_N = mkN "vendeur" masculine ; -- tocheck
lin saleswoman_N = mkN "vendeuse" feminine ; -- tocheck
lin salford_PN = mkPN "Salford" ; -- status=guess src=geonames
lin salience_N = mkN "saillance" feminine ; -- tocheck
lin salient_A = mkA "saillant" | mkA "pertinent" ; -- tocheck
lin salient_N = mkN "saillant" ; -- tocheck
lin saliferous_A = mkA "salifère" ; -- UWN
lin saline_A = mkA "salé" ; -- UWN
lin saline_N = mkN "saline" feminine ; -- tocheck
lin salisbury_PN = mkPN "Salisbury" ; -- status=guess src=geonames
lin saliva_N = mkN "salive" ; -- tocheck
lin salivary_A = mkA "salivaire" ; -- tocheck
lin salivate_V = mkV (mkV "saliver") ; -- tocheck
lin salivation_N = mkN "salivation" ; -- tocheck
lin sallet_N = mkN "salade" feminine ; -- tocheck
lin sallow_A = mkA "cireux" ; -- tocheck
lin salmon_N = mkN "saumon" | mkN "saumon" masculine ; -- tocheck
lin salmonella_N = mkN "salmonelle" feminine ; -- tocheck
lin salmonellosis_N = mkN "salmonellose" feminine ; -- tocheck
lin salon_N = mkN "salon" masculine ; -- tocheck
lin saloon_N = mkN "saloon" ; -- tocheck
lin salp_N = mkN "Salpe" | mkN "salpe" ; -- UWN
lin salpingectomy_N = mkN "salpingectomie" | mkN "salpingotomie" ; -- UWN
lin salsa_N = mkN "salsa" ; -- UWN
lin salt_A = mkA "salin" | mkA "salé" ; -- tocheck
lin salt_N = L.salt_N ;
lin salt_PN = mkPN "Salt" ; -- status=guess src=geonames
lin salt_V2 = mkV2 (mkV "saler") ; -- tocheck
lin saltash_PN = mkPN "Saltash" ; -- status=guess src=geonames
lin saltcoats_PN = mkPN "Saltcoats" ; -- status=guess src=geonames
lin saltpetre_N = mkN "salpêtre" masculine ; -- tocheck
lin saltshaker_N = mkN "salière" | mkN "saupoudreuse" ; -- UWN
lin saltwater_N = mkN "eau_de_mer" | mkN "eau_salée" | mkN "saumure" ; -- UWN
lin salty_A = mkA "salé" ; -- tocheck
lin salubrious_A = mkA "salubre" ; -- tocheck
lin salubrity_N = mkN "salubrité" feminine ; -- tocheck
lin salutary_A = mkA "bienfaisant" ; -- tocheck
lin salute_V2 = mkV2 (mkV "saluer") ; -- tocheck
lin salvador_PN = mkPN "Salvador" ; -- status=guess src=geonames
lin salvage_N = mkN "épave" feminine | mkN "sauvetage" masculine | mkN "récompense" feminine | mkN "rescapé" masculine ; -- tocheck
lin salvage_V2 = mkV2 (mkV "recycler") | mkV2 (mkV "sauver") ; -- tocheck
lin salvation_N = mkN "salut" masculine ; -- tocheck
lin salve_N = mkN "onguent" masculine ; -- tocheck
lin salvia_N = mkN "sage" | mkN "salvia" | mkN "sauge" | mkN "sauges" ; -- UWN
lin salvo_N = mkN "salve" masculine ; -- tocheck
lin salzburg_PN = mkPN "Salzbourg" ; -- status=guess src=geonames
lin samara_N = mkN "samare" feminine ; -- tocheck
lin samarium_N = mkN "samarium" masculine ; -- tocheck
lin samba_N = mkN "samba" feminine ; -- tocheck
lin sambuca_N = mkN "sambuca" ; -- UWN
lin same_A = mkA "même" ; -- tocheck
lin samizdat_N = mkN "samizdat" | mkN "samizdat" masculine ; -- tocheck
lin samoa_PN = mkPN "Samoa" ; -- status=guess src=geonames
lin samosa_N = mkN "sambossa" | mkN "samoussa" | mkN "samsa" ; -- UWN
lin samovar_N = mkN "samovar" masculine ; -- tocheck
lin sampan_N = mkN "sampan" masculine ; -- tocheck
lin sample_N = mkN "échantillon" masculine ; -- tocheck
lin sample_V2 = mkV2 (mkV "échantillonner") ; -- tocheck
lin sampler_N = mkN "sampler" | mkN "échantillonneur" ; -- UWN
lin sampling_N = mkN "échantillonnage" masculine | mkN "échantillon" masculine ; -- tocheck
lin samsara_N = mkN "saṃsāra" ; -- UWN
lin samurai_N = mkN "samouraï" masculine ; -- tocheck
lin san_antonio_PN = mkPN "San Antonio" ; -- status=guess src=geonames
lin san_bernardino_PN = mkPN "San Bernardino" ; -- status=guess src=geonames
lin san_diego_PN = mkPN "San Diego" ; -- status=guess src=geonames
lin san_francisco_PN = mkPN "San Francisco" ; -- status=guess src=geonames
lin san_jose_PN = mkPN "San José" ; -- status=guess src=geonames
lin san_juan_PN = mkPN "San Juan" ; -- status=guess src=geonames
lin san_marino_PN = mkPN ("Ville de Saint-Marin" | "Saint-Marin") ;
lin san_sebastian_PN = mkPN "San Sebastian" ; -- status=guess src=geonames
lin sanatorium_N = mkN "sanatorium" masculine ; -- tocheck
lin sanctify_V2 = mkV2 (mkV "consacrer") ; -- tocheck
lin sanctimonious_A = mkA "hypocrite" ; -- tocheck
lin sanction_N = mkN "sanction" ; -- tocheck
lin sanctity_N = mkN "sainteté" ; -- UWN
lin sanctuary_N = mkN "réserve" feminine | mkN "sanctuaire" masculine | mkN "refuge" masculine | mkN "asile" masculine ; -- tocheck
lin sanctum_N = mkN "sacré" | mkN "saint" ; -- UWN
lin sand_N = L.sand_N ;
lin sand_V2 = mkV2 (mkV "sabler") ; -- tocheck
lin sandal_N = mkN "sandale" feminine ; -- tocheck
lin sandalwood_N = mkN "santal" masculine ; -- tocheck
lin sandbach_PN = mkPN "Sandbach" ; -- status=guess src=geonames
lin sand_bar_N = mkN "plature" ; -- UWN
lin sandblast_N = mkN "sabler" ; -- UWN
lin sandblast_V2 = mkV2 (mkV "sabler") ; -- tocheck
lin sandbox_N = mkN "bac_à_sable" ; -- UWN
lin sandgrouse_N = mkN "ganga" masculine ; -- tocheck
lin sandhi_N = mkN "sandhi" masculine ; -- tocheck
lin sandman_N = mkN "marchand_de_sable" ; -- UWN
lin sandown_PN = mkPN "Sandown" ; -- status=guess src=geonames
lin sandpaper_N = mkN "papier_de_verre" ; -- UWN
lin sandpaper_V2 = mkV2 (mkV "poncer") ; -- tocheck
lin sandpiper_N = mkN "chevalier" masculine ; -- tocheck
lin sandstone_N = mkN "grès" masculine ; -- tocheck
lin sandstorm_N = mkN "sirocco" | mkN "tempête_de_sable" ; -- UWN
lin sandwich_N = mkN "sandwich" masculine ; -- tocheck
lin sandy_A = mkA "sableux" ; -- UWN
lin sandy_PN = mkPN "Sandy" ; -- status=guess src=geonames
lin sane_A = mkA "sain" ; -- tocheck
lin sang_froid_N = mkN "sang-froid" masculine ; -- tocheck
lin sanguinary_A = mkA "sanguin" ; -- tocheck
lin sanguine_A = mkA "sanguine" ; -- UWN
lin sanguine_N = mkN "sanguine" feminine ; -- tocheck
lin sanicle_N = mkN "sanicle" masculine ; -- tocheck
lin sanitation_N = mkN "assainissement" masculine ; -- tocheck
lin sansevieria_N = mkN "sansevieria" | mkN "sansevierias" ; -- UWN
lin santander_PN = mkPN "Santander" ; -- status=guess src=geonames
lin santiago_PN = mkPN "Santiago du Chili" ; -- status=guess src=geonames
lin santos_PN = mkPN "Santos" ; -- status=guess src=geonames
lin sap_N = mkN "sève" feminine | mkN "naïf" ; -- tocheck
lin sap_V2 = mkV2 (mkV "saper") ; -- tocheck
lin saphead_N = mkN "idiot" masculine ; -- tocheck
lin sapience_N = mkN "sagesse" ; -- UWN
lin sapient_A = mkA "perspicace" ; -- UWN
lin sapling_N = mkN "arbuste" masculine ; -- tocheck
lin saponin_N = mkN "saponine" feminine ; -- tocheck
lin sapper_N = mkN "sapeur" masculine ; -- tocheck
lin sapphic_A = mkA "lesbien" ; -- tocheck
lin sapphire_A = mkA "saphir" ; -- tocheck
lin sapphire_N = mkN "saphir" masculine ; -- tocheck
lin sapphirine_N = mkN "saphirine" feminine ; -- tocheck
lin sapporo_PN = mkPN "Sapporo" ; -- status=guess src=geonames
lin saprophagous_A = mkA "saprophage" ; -- UWN
lin sapsucker_N = mkN "sphyrapicus" ; -- UWN
lin sapwood_N = mkN "aubier" | mkN "aubour" ; -- UWN
lin sara_PN = mkPN "Sara" ; -- status=guess src=geonames
lin sarajevo_PN = mkPN "Sarajevo" ; -- status=guess src=geonames
lin saratov_PN = mkPN "Saratov" ; -- status=guess src=geonames
lin sarcasm_N = mkN "sarcasme" ; -- tocheck
lin sarcastic_A = mkA "sarcastique" ; -- UWN
lin sarcoidosis_N = mkN "lymphogranulomatose_bénigne" | mkN "maladie_de_besnier-boeck-schaumann" | mkN "sarcoïdose" ; -- UWN
lin sarcolemma_N = mkN "sarcolemme" ; -- UWN
lin sarcoma_N = mkN "sarcome" masculine ; -- tocheck
lin sarcomere_N = mkN "sarcomère" masculine ; -- tocheck
lin sarcophagus_N = mkN "sarcophage" ; -- tocheck
lin sarcoplasm_N = mkN "sarcoplasme" ; -- UWN
lin sarcosine_N = mkN "sarcosine" ; -- UWN
lin sardine_N = mkN "sardine" feminine ; -- tocheck
lin sardonic_A = mkA "sardonique" ; -- tocheck
lin sari_N = mkN "sari" masculine ; -- tocheck
lin sarin_N = mkN "sarin" masculine ; -- tocheck
lin sarong_N = mkN "sarong" masculine ; -- tocheck
lin sartorial_A = mkA "vestimentaire" ; -- tocheck
lin sartorius_N = mkN "sartorius" ; -- UWN
lin sash_N = mkN "ventail" masculine ; -- tocheck
lin sashay_N = mkN "excursion" | mkN "expédition" ; -- UWN
lin sashimi_N = mkN "sashimi" masculine ; -- tocheck
lin saskatoon_N = mkN "amélanche" | mkN "amélanchier" | mkN "saskatoon" ; -- UWN
lin sass_N = mkN "bouche" | mkN "embouchure" | mkN "lèvre" ; -- UWN
lin sassari_PN = mkPN "Sassari" ; -- status=guess src=geonames
lin satanic_A = mkA "satanique" ; -- tocheck
lin satchel_N = mkN "cartable" ; -- UWN
lin sateen_N = mkN "satin" ; -- UWN
lin satellite_A = mkA "lune" | mkA "satellite" ; -- UWN
lin satellite_N = mkN "satellite" masculine ; -- tocheck
lin satiate_V2 = mkV2 (mkV "rassasier") ; -- tocheck
lin satin_A = mkA "satiné" ; -- tocheck
lin satin_N = mkN "satin" masculine ; -- tocheck
lin satiny_A = mkA "glissant" | mkA "soyeux" ; -- UWN
lin satire_N = mkN "satire" feminine ; -- tocheck
lin satirical_A = mkA "satirique" ; -- tocheck
lin satisfaction_N = mkN "satisfaction" feminine ; -- tocheck
lin satisfactory_A = mkA "satisfaisant" ; -- tocheck
lin satisfied_A = variants {} ; --
lin satisfy_V2 = mkV2 (mkV I.satisfaire_V2) ; -- tocheck
lin satrap_N = mkN "satrape" masculine ; -- tocheck
lin saturation_N = mkN "saturation" feminine ; -- tocheck
lin saturniid_N = mkN "saturniidae" ; -- UWN
lin satyr_N = mkN "satyre" masculine ; -- tocheck
lin satyriasis_N = mkN "satyriasis" ; -- tocheck
lin sauce_N = mkN "sauce" feminine ; -- tocheck
lin saucepan_N = mkN "casserole" feminine ; -- tocheck
lin saucer_N = mkN "soucoupe" feminine ; -- tocheck
lin saucy_A = mkA "frais" | mkA "impertinent" | mkA "impudent" | mkA "insolent" ; -- UWN
lin sauerkraut_N = mkN "choucroute" feminine ; -- tocheck
lin sauna_N = mkN "sauna" feminine ; -- tocheck
lin saunter_N = mkN "flâner" ; -- tocheck
lin saunter_V = mkV (mkV "flâner") ; -- tocheck
lin saunterer_N = mkN "ambler" | mkN "poussette" ; -- UWN
lin sauropod_N = mkN "sauropoda" ; -- UWN
lin sausage_N = mkN "saucisson" masculine | mkN "saucisse" feminine ; -- tocheck
lin savage_A = mkA "barbare" | mkA "incivilisé" | mkA "sauvage" ; -- UWN
lin savagery_N = mkN "sauvagerie" feminine ; -- tocheck
lin savanna_N = mkN "savane" feminine ; -- tocheck
lin savannah_N = mkN "Savane" | mkN "Savanes" | mkN "savane" | mkN "savanes" ; -- UWN
lin save_N = mkN "sauver" | mkN "économiser" | mkN "épargner" ; -- UWN
lin save_V = variants {} ; -- mkV2 (mkV "épargner") | mkV2 (mkV "économiser") | mkV2 (mkV "sauver") | mkV2 (mkV "sauvegarder") ; -- tocheck
lin save_V2 = mkV2 (mkV "épargner") | mkV2 (mkV "économiser") | mkV2 (mkV "sauver") | mkV2 (mkV "sauvegarder") ; -- tocheck
lin save_on_V2 = prepV2 OP_save_V OP_on_Prep ; -- guess-p-verb
lin save_up_V2 = prepV2 OP_save_V OP_up_Prep ; -- guess-p-verb
lin saver_N = mkN "récupérateur" ; -- UWN
lin saving_N = mkN "économie" | mkN "épargne" ; -- UWN
lin savings_N = mkN "économies" ; -- tocheck
lin savior_N = mkN "sauveur" masculine ; -- tocheck
lin saviour_N = mkN "sauveur" ; -- UWN
lin savour_N = mkN "aromatiser" | mkN "goût" | mkN "relish" | mkN "saveur" | mkN "savourer" ; -- UWN
lin savoury_A = mkA "salé" | mkA "savoureux" | {-UWN-} mkA "sarriette" ; -- UWN -- tocheck
lin savoury_N = mkN "sarriette" feminine | {-UWN-} mkN "sarriette" ; -- UWN -- tocheck
lin savoy_N = mkN "chou_de_savoie" | mkN "savoie" ; -- UWN
lin savvy_V = mkV "appréhender" | mkV "comprendre" | mkV "saisir" ; -- UWN
lin saw_N = mkN "proverbe" masculine | mkN "scie" feminine ; -- tocheck
lin saw_V = mkV "scier" ; -- UWN
lin saw_V2 = mkV2 (mkV "scier") ; -- tocheck
lin sawbridgeworth_PN = mkPN "Sawbridgeworth" ; -- status=guess src=geonames
lin sawdust_N = mkN "sciure" ; -- UWN
lin sawfish_N = mkN "poisson-scie" masculine ; -- tocheck
lin sawfly_N = mkN "mouches_à_scie" | mkN "symphyta" | mkN "symphytes" ; -- UWN
lin sawhorse_N = mkN "tréteau" masculine ; -- tocheck
lin sawm_N = mkN "saoum" masculine ; -- tocheck
lin sawtooth_N = mkN "dent" ; -- UWN
lin sax_N = mkN "saxo" | mkN "saxophone" ; -- UWN
lin saxhorn_N = mkN "saxhorn" ; -- UWN
lin saxicolous_A = mkA "saxicole" ; -- UWN
lin saxifrage_N = mkN "saxifrage" feminine ; -- tocheck
lin saxophone_N = mkN "saxophone" masculine ; -- tocheck
lin saxophonist_N = mkN "saxophoniste" ; -- tocheck
lin say_N = mkN "bouche" | mkN "dire" | mkN "muet" ; -- UWN
lin say_V = lin V I.dire_V2 ;
lin say_V2 = I.dire_V2 ;
lin say_VS = mkVS (mkV I.dire_V2) ;
lin saying_N = mkN "dicton" masculine ; -- tocheck
lin scab_N = mkN "croûte" ; -- tocheck
lin scabbard_N = mkN "fourreau" masculine ; -- tocheck
lin scabies_N = mkN "gale" feminine ; -- tocheck
lin scabious_N = mkN "scabieuse" | mkN "scabieuses" ; -- UWN
lin scaffold_N = mkN "échafaud" masculine ; -- tocheck
lin scaffolding_N = mkN "échafaudage" masculine ; -- tocheck
lin scalability_N = mkN "extensibilité" feminine ; -- tocheck
lin scalable_A = mkA "extensible" ; -- tocheck
lin scalar_A = mkA "scalaire" ; -- tocheck
lin scalar_N = mkN "scalaire" masculine ; -- tocheck
lin scald_N = mkN "ébouillanter" ; -- UWN
lin scald_V2 = mkV2 (mkV "ébouillanter") ; -- tocheck
lin scale_N = mkN "échelle" feminine | mkN "écaille" feminine | mkN "balance" feminine | mkN "squame" feminine | mkN "barbure" feminine | mkN "échelle" ; -- tocheck
lin scale_V2 = mkV2 (mkV "écailler") | mkV2 (mkV "escalader") ; -- tocheck
lin scalene_A = mkA "scalène" ; -- tocheck
lin scallop_N = mkN "escalope" ; -- tocheck
lin scalp_N = mkN "cuir_chevelu" ; -- UWN
lin scalp_V2 = mkV2 (mkV "scalper") ; -- tocheck
lin scalpel_N = mkN "scalpel" masculine ; -- tocheck
lin scam_N = mkN "entourloupe" feminine ; -- tocheck
lin scam_V2 = mkV2 (mkV "entourlouper") ; -- tocheck
lin scamper_V = mkV (mkV "gambader") ; -- tocheck
lin scampi_N = mkN "scampi" ; -- UWN
lin scan_V = variants {} ; -- mkV2 (mkV "scanner") | mkV2 (mkV "scander") ; -- tocheck
lin scan_V2 = mkV2 (mkV "scanner") | mkV2 (mkV "scander") ; -- tocheck
lin scandal_N = mkN "scandale" masculine ; -- tocheck
lin scandalization_N = mkN "outrage" | mkN "scandale" ; -- UWN
lin scandalmonger_N = mkN "commère" ; -- UWN
lin scandalmongering_A = mkA "jaune" ; -- UWN
lin scandalous_A = mkA "scandaleux" ; -- tocheck
lin scandium_N = mkN "scandium" masculine ; -- tocheck
lin scanner_N = mkN "scanner" masculine ; -- tocheck
lin scansion_N = mkN "scansion" feminine ; -- tocheck
lin scant_A = mkA "insuffisant" ; -- tocheck
lin scantiness_N = mkN "maigreur" ; -- UWN
lin scanty_A = mkA "insuffisant" | mkA "maigre" ; -- tocheck
lin scape_N = mkN "pédoncule" ; -- UWN
lin scapegoat_N = mkN "bouc_émissaire" ; -- UWN
lin scapegrace_N = mkN "brebis_galeuse" | mkN "mouton_noir" ; -- UWN
lin scapula_N = mkN "omoplate" | mkN "scapula" ; -- UWN
lin scapular_A = mkA "scapulaire" ; -- UWN
lin scapular_N = mkN "scapulaire" ; -- UWN
lin scar_N = mkN "cicatrice" feminine ; -- tocheck
lin scar_V = variants {} ; -- mkV2 (mkV "cicatriser") ; -- tocheck
lin scar_V2 = mkV2 (mkV "cicatriser") ; -- tocheck
lin scarborough_PN = mkPN "Scarborough" ; -- status=guess src=geonames
lin scarce_A = mkA "rare" ; -- tocheck
lin scare_N = mkN "effrayer" ; -- tocheck
lin scare_V2 = mkV2 (mkV "effrayer") ; -- tocheck
lin scarecrow_N = mkN "épouvantail" masculine ; -- tocheck
lin scared_A = variants {} ; --
lin scarf_N = mkN "écharpe" feminine ; -- tocheck
lin scarlet_A = mkA "écarlate" ; -- tocheck
lin scarlet_N = mkN "écarlate" ; -- tocheck
lin scary_A = mkA "sinistre" ; -- tocheck
lin scathing_A = mkA "acerbe" | mkA "cinglant" ; -- tocheck
lin scatological_A = mkA "scatologique" ; -- tocheck
lin scatter_N = mkN "diffusion" ; -- UWN
lin scatter_V = variants {} ; -- mkV2 (mkV "disperser") | mkV2 (reflV (mkV "disperser")) | mkV2 (mkV "éparpiller") ; -- tocheck
lin scatter_V2 = mkV2 (mkV "disperser") | mkV2 (reflV (mkV "disperser")) | mkV2 (mkV "éparpiller") ; -- tocheck
lin scatterbrained_A = mkA "écervelé" ; -- tocheck
lin scattering_N = mkN "diffusion" feminine ; -- tocheck
lin scatty_A = mkA "absent" | mkA "absenter" ; -- UWN
lin scavenge_V = mkV (mkV "nettoyer") ; -- tocheck
lin scavenger_N = mkN "nécrophage" ; -- UWN
lin scenario_N = mkN "scénario" masculine ; -- tocheck
lin scenarist_N = mkN "scénariste" ; -- UWN
lin scene_N = mkN "scène" feminine ; -- tocheck
lin scenery_N = mkN "décor" masculine ; -- tocheck
lin scent_N = mkN "odeur" masculine ; -- tocheck
lin scent_V2 = mkV2 (mkV I.sentir_V2) ; -- tocheck
lin scepter_N = mkN "baguette" | mkN "sceptre" ; -- UWN
lin sceptic_N = mkN "sceptique" | mkN "zététique" ; -- UWN
lin sceptical_A = mkA "dubitatif" | mkA "sceptique" ; -- tocheck
lin scepticism_N = mkN "agnosticisme" | mkN "scepticisme" ; -- UWN
lin sceptre_N = mkN "sceptre" masculine ; -- tocheck
lin schedule_N = mkN "planning" masculine ; -- tocheck
lin schedule_V = variants {} ; -- mkV2V (mkV "planifier") | mkV2V (mkV I.prévoir_V2) ; -- tocheck
lin schedule_V2 = variants {} ; -- mkV2V (mkV "planifier") | mkV2V (mkV I.prévoir_V2) ; -- tocheck
lin schedule_V2V = mkV2V (mkV "planifier") | mkV2V (mkV I.prévoir_V2) ; -- tocheck
lin scheduling_N = mkN "planification" feminine ; -- tocheck
lin scheelite_N = mkN "scheelite" feminine ; -- tocheck
lin schema_N = mkN "esquisse" | mkN "plan" | mkN "projet" | mkN "schéma" | mkN "ébauche" ; -- UWN
lin schematic_A = mkA "schématique" ; -- tocheck
lin schematic_N = mkN "schéma" masculine ; -- tocheck
lin scheme_N = mkN "schéma" masculine ;
lin schemer_N = mkN "machinateur" masculine ; -- tocheck
lin scherzo_N = mkN "scherzo" ; -- UWN
lin schilling_N = mkN "schilling" masculine ; -- tocheck
lin schipperke_N = mkN "schipperke" ; -- UWN
lin schism_N = mkN "schisme" | mkN "scission" ; -- UWN
lin schist_N = mkN "schiste" masculine ; -- tocheck
lin schistosome_N = mkN "bilharzie" ; -- UWN
lin schistosomiasis_N = mkN "schistosomiase" ; -- tocheck
lin schizogony_N = mkN "schizogonie" ; -- UWN
lin schizoid_A = mkA "schizophrène" ; -- UWN
lin schizophrenia_N = mkN "schizophrénie" feminine ; -- tocheck
lin schizophrenic_N = mkN "schizophrène" ; -- UWN
lin schmaltzy_A = mkA "affecté" | mkA "démonstratif" | mkA "histrionique" | mkA "hystérique" | mkA "larmoyant" | mkA "maniéré" | mkA "mièvre" | mkA "pleurnicheur" | mkA "sentimental" ; -- UWN
lin schmalzy_A = mkA "affecté" | mkA "démonstratif" | mkA "histrionique" | mkA "hystérique" | mkA "larmoyant" | mkA "maniéré" | mkA "mièvre" | mkA "pleurnicheur" | mkA "sentimental" ; -- UWN
lin schnapps_N = mkN "schnaps" masculine ; -- tocheck
lin schnauzer_N = mkN "schnauzer" ; -- UWN
lin schnitzel_N = mkN "schnitzel" masculine ; -- tocheck
lin schnook_N = mkN "chnoque" | mkN "schnock" | mkN "schnoque" ; -- UWN
lin schnorkel_N = mkN "schnorchel" ; -- UWN
lin scholar_N = mkN "savant" masculine ; -- tocheck
lin scholarly_A = mkA "érudit" ; -- tocheck
lin scholarship_N = mkN "érudition" feminine | mkN "bourse" feminine ; -- tocheck
lin scholastic_A = mkA "scolaire" ; -- UWN
lin scholasticism_N = mkN "scolastique" ; -- tocheck
lin school_N = L.school_N ;
lin schoolbag_N = mkN "cartable" ; -- tocheck
lin schoolbook_N = mkN "livre_de_classe" | mkN "manuel" | mkN "texte" ; -- UWN
lin schoolboy_N = mkN "élève" masculine ; -- tocheck
lin schoolchild_N = mkN "élève" ; -- tocheck
lin schoolgirl_N = mkN "élève" feminine ; -- tocheck
lin schoolhouse_N = mkN "école" ; -- UWN
lin schooling_N = mkN "scolarité" feminine ; -- tocheck
lin schoolman_N = mkN "académicien" ; -- UWN
lin schoolmarm_N = mkN "maîtresse" ; -- UWN
lin schoolmate_N = mkN "camarade" ; -- tocheck
lin schoolmistress_N = mkN "maîtresse" ; -- UWN
lin schooner_N = mkN "goélette" feminine ; -- tocheck
lin schottische_N = mkN "scottish" feminine ; -- tocheck
lin schwa_N = mkN "e_muet" | mkN "schwa" ; -- UWN
lin schwerin_PN = mkPN "Schwerin" ; -- status=guess src=geonames
lin sci_fi_N = mkN "S-F" feminine ; -- tocheck
lin sciatica_N = mkN "sciatique" masculine ; -- tocheck
lin science_N = L.science_N ;
lin scientific_A = mkA "scientifique" ; -- tocheck
lin scientist_N = mkN "scientifique" ; -- tocheck
lin scilla_N = mkN "scilla" | mkN "scille" | mkN "scilles" ; -- UWN
lin scimitar_N = mkN "cimeterre" masculine ; -- tocheck
lin scion_N = mkN "scion" | mkN "descendant" masculine ; -- tocheck
lin scission_N = mkN "scission" ; -- UWN
lin scissors_N = mkN "ciseaux" ; -- tocheck
lin sclera_N = mkN "Sclère" | mkN "sclère" ; -- UWN
lin scleroprotein_N = mkN "scléroprotéine" ; -- UWN
lin sclerosis_N = mkN "sclérose" feminine ; -- tocheck
lin sclerotium_N = mkN "sclérote" ; -- UWN
lin scoff_V2 = mkV2 (mkV "engloutir") ; -- tocheck
lin scold_N = mkN "mégère" feminine ; -- tocheck
lin scold_V2 = mkV2 (mkV "tancer") ; -- tocheck
lin scoliosis_N = mkN "scoliose" feminine ; -- tocheck
lin scoop_N = mkN "pelle" feminine ; -- tocheck
lin scoop_V2 = mkV2 (mkV "écoper") ; -- tocheck
lin scooter_N = mkN "trottinette" feminine | mkN "scooter" masculine ; -- tocheck
lin scope_N = mkN "portée" | mkN "portée" feminine ; -- tocheck
lin scopolamine_N = mkN "hyoscine" | mkN "scopolamine" | mkN "tropate_de_scopine" ; -- UWN
lin score_N = mkN "partition" feminine | mkN "vingtaine" feminine ; -- tocheck
lin score_V = variants {} ; -- mkV2 (mkV "gagner") ; -- tocheck
lin score_V2 = mkV2 (mkV "gagner") ; -- tocheck
lin scoreboard_N = mkN "panel" | mkN "tableau" ; -- UWN
lin scorekeeper_N = mkN "buteur" ; -- UWN
lin scorer_N = mkN "buteur" masculine ; -- tocheck
lin scorn_N = mkN "mépris" masculine ; -- tocheck
lin scorn_V2 = mkV2 (mkV "mépriser") ; -- tocheck
lin scornful_A = mkA "dédaigneux" | mkA "méprisant" ; -- UWN
lin scorpion_N = mkN "scorpion" masculine ; -- tocheck
lin scorpionfish_N = mkN "rascasse" feminine ; -- tocheck
lin scorpionweed_N = mkN "phacelia" | mkN "phacélie_à_feuilles_de_tanaisie" ; -- UWN
lin scorzonera_N = mkN "salsifis_noir" | mkN "scorsonère" ; -- UWN
lin scot_free_Adv = mkAdv "dégrevé" ; -- tocheck
lin scoter_N = mkN "macreuse" feminine ; -- tocheck
lin scotland_PN = mkPN "Scotland" ; -- status=guess src=geonames
lin scotoma_N = mkN "scotome" ; -- UWN
lin scoundrel_N = mkN "scélérat" masculine ; -- tocheck
lin scour_V2 = mkV2 (mkV "récurer") | mkV2 (mkV "écumer") ; -- tocheck
lin scourge_N = mkN "fléau" masculine | mkN "discipline" feminine ; -- tocheck
lin scout_N = mkN "reconnaissance" feminine | mkN "éclaireur" masculine ; -- tocheck
lin scout_V = mkV "reconnaître" ; -- UWN
lin scouting_N = mkN "scoutisme" masculine ; -- tocheck
lin scowl_N = mkN "froncement" masculine ; -- tocheck
lin scowl_V = mkV (mkV "froncer") ; -- tocheck
lin scram_V = mkV (mkV "dégager") ; -- tocheck
lin scramble_N = mkN "motocross" masculine | mkN "interception" feminine | mkN "bousculade" feminine ; -- tocheck
lin scramble_V = variants {} ; -- mkV2V (reflV (mkV "ruer")) | mkV2V (mkV "brouiller") ; -- tocheck
lin scramble_V2 = variants {} ; -- mkV2V (reflV (mkV "ruer")) | mkV2V (mkV "brouiller") ; -- tocheck
lin scrap_N = mkN "ferraille" feminine | mkN "restes" | mkN "bribe" feminine ; -- tocheck
lin scrape_N = mkN "balafre" | mkN "cicatrice" | mkN "gratter" ; -- UWN
lin scrape_V = mkV "râper" ; -- UWN
lin scrape_V2 = mkV2 (mkV "gratter") ; -- tocheck
lin scraper_N = mkN "grattoir" masculine ; -- tocheck
lin scrapie_N = mkN "gratte" | mkN "scrapie" | mkN "tremblante_du_mouton" ; -- UWN
lin scratch_N = mkN "égratignure" feminine | mkN "pognon" masculine ; -- tocheck
lin scratch_V = variants {} ; -- L.scratch_V2 ;
lin scratch_V2 = L.scratch_V2 ;
lin scratchy_A = mkA "gravier" ; -- UWN
lin scrawl_N = mkN "griffonnage" masculine ; -- tocheck
lin scrawl_V2 = mkV2 (mkV "griffonner") ; -- tocheck
lin scrawny_A = mkA "maigrichon(ne)" ; -- tocheck
lin screaky_A = mkA "glapissant" ; -- UWN
lin scream_N = mkN "cri" masculine ; -- tocheck
lin scream_V = variants {} ; -- mkV2 (mkV "crier") ; -- tocheck
lin scream_V2 = mkV2 (mkV "crier") ; -- tocheck
lin scream_VS = variants {} ; -- mkV2 (mkV "crier") ; -- tocheck
lin screamingly_Adv = mkAdv "fort" | mkAdv "haut" | mkAdv "particulièrement" ; -- UWN
lin scree_N = mkN "talus" | mkN "éboulis" ; -- UWN
lin screech_N = mkN "crissement" ; -- tocheck
lin screed_N = mkN "chape" feminine ; -- tocheck
lin screen_N = mkN "paravent" masculine | mkN "écran" masculine ; -- tocheck
lin screen_V = variants {} ; --
lin screen_V2 = variants {} ; --
lin screener_N = mkN "screener" ; -- UWN
lin screening_N = mkN "protection" feminine | mkN "projection" feminine ; -- tocheck
lin screenplay_N = mkN "scénario" ; -- UWN
lin screenwriter_N = mkN "scénariste" ; -- tocheck
lin screw_N = mkN "visser" | mkN "vis" feminine | mkN "hélice" ; -- tocheck
lin screw_V = variants {} ; -- mkV2 (mkV "tricher") | mkV2 (mkV "visser") ; -- tocheck
lin screw_V2 = mkV2 (mkV "tricher") | mkV2 (mkV "visser") ; -- tocheck
lin screwdriver_N = mkN "tournevis" masculine ; -- tocheck
lin scribble_V2 = mkV2 (mkV "griffonner") ; -- tocheck
lin scribbler_N = mkN "gribouilleur" masculine ; -- tocheck
lin scribe_N = mkN "scribe" masculine ; -- tocheck
lin scriber_N = mkN "scribe" ; -- UWN
lin scrimmage_N = mkN "mêlée" ; -- UWN
lin scrimy_A = mkA "mesquinement" ; -- UWN
lin script_N = mkN "écriture" feminine | mkN "écrit" masculine | mkN "script" masculine ; -- tocheck
lin scripted_A = mkA "graphique" | mkA "écrit" ; -- UWN
lin scriptorium_N = mkN "scriptorium" ; -- tocheck
lin scriptural_A = mkA "biblique" ; -- UWN
lin scrivener_N = mkN "scribe" ; -- UWN
lin scrofula_N = mkN "écrouelles" ; -- UWN
lin scroll_N = mkN "volute" feminine | mkN "rôle" masculine ; -- tocheck
lin scrooge_N = mkN "avare" ; -- tocheck
lin scrotal_A = mkA "scrotal" ; -- tocheck
lin scrotum_N = mkN "scrotum" masculine ; -- tocheck
lin scrub_V2 = mkV2 (mkV "crosser") | mkV2 (mkV "annuler") ; -- tocheck
lin scrubbird_N = mkN "atrichorne" | mkN "atrichornithidae" | mkN "atrichornithidés" ; -- UWN
lin scruff_N = mkN "cou" | mkN "nuque" ; -- UWN
lin scruffy_A = mkA "débraillé" ; -- tocheck
lin scrum_N = mkN "mêlée" feminine ; -- tocheck
lin scrummage_N = mkN "moulin" | mkN "mêlée" | mkN "mêlée_ordonnée" ; -- UWN
lin scrumptious_A = mkA "succulent" ; -- tocheck
lin scruple_N = mkN "scrupule" masculine ; -- tocheck
lin scrupulous_A = mkA "scrupuleux" ; -- UWN
lin scrupulousness_N = mkN "méticulosité" ; -- UWN
lin scrutinize_V2 = mkV2 (mkV "scruter") ; -- tocheck
lin scrutiny_N = mkN "contrôle" | mkN "regard" | mkN "surveillance" ; -- UWN
lin scuffle_N = mkN "binette" feminine | mkN "rixe" feminine ; -- tocheck
lin scull_N = mkN "skiff" masculine ; -- tocheck
lin sculpin_N = mkN "chabot" | mkN "cottus" ; -- UWN
lin sculptor_N = mkN "sculpteur" masculine ; -- tocheck
lin sculpture_N = mkN "sculpture" feminine ; -- tocheck
lin scum_N = mkN "ordure" | mkN "écume" feminine ; -- tocheck
lin scunthorpe_PN = mkPN "Scunthorpe" ; -- status=guess src=geonames
lin scupper_N = mkN "dalot" masculine ; -- tocheck
lin scurry_V = mkV (mkV "détaler") ; -- tocheck
lin scurvy_A = mkA "abject" | mkA "lâche" | mkA "misérable" ; -- UWN
lin scurvy_N = mkN "scorbut" masculine ; -- tocheck
lin scutcheon_N = mkN "écusson" ; -- UWN
lin scuttle_N = mkN "écoutille" feminine ; -- tocheck
lin scuttle_V2 = mkV2 (mkV "saborder") ; -- tocheck
lin scythe_N = mkN "faux" ; -- tocheck
lin scythe_V2 = mkV2 (mkV "faucher") ; -- tocheck
lin sea_N = L.sea_N ;
lin seabird_N = mkN "oiseau_de_mer" | mkN "oiseau_marin" | mkN "oiseau_maritime" ; -- UWN
lin seaboard_N = mkN "côte" | mkN "seaside" ; -- UWN
lin seaborgium_N = mkN "seaborgium" masculine ; -- tocheck
lin seafarer_N = mkN "marin" masculine ; -- tocheck
lin seafood_N = mkN "Fruit_de_mer" | mkN "fruit_de_mer" | mkN "fruits_de_mer" ; -- UWN
lin seaford_PN = mkPN "Seaford" ; -- status=guess src=geonames
lin seagull_N = mkN "mouette" feminine ; -- tocheck
lin seaham_PN = mkPN "Seaham" ; -- status=guess src=geonames
lin sea_horse_N = mkN "hippocampe" ; -- UWN
lin seal_N = mkN "sceau" masculine | mkN "joint" | mkN "phoque" masculine ; -- tocheck
lin seal_V = variants {} ; -- mkV2A (mkV "sceller") ; -- tocheck
lin seal_V2 = variants {} ; -- mkV2A (mkV "sceller") ; -- tocheck
lin sealskin_N = mkN "phoque" masculine ; -- tocheck
lin seam_N = mkN "cicatrice" feminine | mkN "couture" | mkN "suture" feminine | mkN "veine" feminine ; -- tocheck
lin seaman_N = mkN "marin" masculine | mkN "matelot" masculine ; -- tocheck
lin seamount_N = mkN "mont_sous-marin" ; -- UWN
lin seamstress_N = mkN "couturière" feminine ; -- tocheck
lin seamy_A = mkA "louche" ; -- UWN
lin seaplane_N = mkN "hydravion" masculine ; -- tocheck
lin seaport_N = mkN "abriter" | mkN "havre" | mkN "port" | mkN "refuge" | mkN "sphère" ; -- UWN
lin search_N = mkN "recherche" feminine ; -- tocheck
lin search_V = mkV "chercher" ; -- tocheck
lin search_V2 = mkV2 (mkV "chercher") ; -- tocheck
lin searcher_N = mkN "chercheur" masculine ; -- tocheck
lin searchlight_N = mkN "projecteur" ; -- UWN
lin seashell_N = mkN "coquille" feminine ; -- tocheck
lin seashore_N = mkN "côte" ; -- UWN
lin seasickness_N = mkN "mal_de_mer" ; -- UWN
lin seaside_N = mkN "côte" | mkN "seaside" ; -- UWN
lin season_N = mkN "saison" | mkN "saison" feminine ; -- tocheck
lin season_V2 = mkV2 (mkV "épicer") ; -- tocheck
lin seasonal_A = mkA "saisonnier" ; -- tocheck
lin seasoner_N = mkN "aromate" | mkN "aromatisant" | mkN "assaisonnement" | mkN "parfum" | mkN "épice" ; -- UWN
lin seasoning_N = mkN "assaisonnement" masculine ; -- tocheck
lin seat_N = mkN "assise" feminine | mkN "siège" masculine | mkN "séant" masculine | mkN "siège" ; -- tocheck
lin seattle_PN = mkPN "Seattle" ; -- status=guess src=geonames
lin sea_water_N = mkN "eau_de_mer" | mkN "eau_salée" | mkN "saumure" ; -- UWN
lin seaweed_N = mkN "algues" ; -- tocheck
lin sebum_N = mkN "sébum" masculine ; -- tocheck
lin secession_N = mkN "sécession" feminine ; -- tocheck
lin secessionist_N = mkN "sécessionniste" ; -- tocheck
lin seclusion_N = mkN "isolement" masculine ; -- tocheck
lin second_N = mkN "seconde" feminine ; -- tocheck
lin secondary_A = mkA "secondaire" ; -- tocheck
lin secondary_N = mkN "accessoire" ; -- UWN
lin second_hand_A = mkA "occasion" ; -- UWN
lin secondly_Adv = variants {} ; --
lin secrecy_N = mkN "secret" masculine ; -- tocheck
lin secret_A = mkA "secret" ; -- tocheck
lin secret_N = mkN "secret" masculine ; -- tocheck
lin secretariat_N = mkN "secrétariat" masculine ; -- tocheck
lin secretary_N = mkN "secrétaire" ; -- tocheck
lin secrete_V2 = mkV2 (mkV "sécrèter") | mkV2 (mkV "celer") | mkV2 (mkV "dérober") ; -- tocheck
lin secretin_N = mkN "sécrétine" ; -- UWN
lin secretion_N = mkN "sécrétion" feminine ; -- tocheck
lin secretive_A = mkA "fermer" | mkA "taciturne" ; -- UWN
lin sect_N = mkN "secte" feminine ; -- tocheck
lin sectarianism_N = mkN "sectarisme" masculine ; -- tocheck
lin section_N = mkN "section" ;
lin sector_N = mkN "secteur" ; -- tocheck
lin secular_A = mkA "séculaire" | mkA "profane" | mkA "séculier" ; -- tocheck
lin secularism_N = mkN "sécularisme" masculine ; -- tocheck
lin secure_A = mkA "sûr" ; -- tocheck
lin secure_V2 = variants {} ; --
lin security_N = mkN "titre" masculine | mkN "sécurité" feminine ; -- tocheck
lin sedan_N = mkN "berline" feminine | mkN "palanquin" masculine ; -- tocheck
lin sedate_A = mkA "sérieux" | mkA "terne" ; -- UWN
lin sedative_A = mkA "sédatif" ; -- tocheck
lin sedative_N = mkN "sédatif" masculine ; -- tocheck
lin sedentary_A = mkA "sédentaire" ; -- tocheck
lin sedge_N = mkN "laîche" feminine ; -- tocheck
lin sediment_N = mkN "sédiment" masculine ; -- tocheck
lin sedition_N = mkN "sédition" feminine ; -- tocheck
lin seditious_A = mkA "séditieux" ; -- tocheck
lin seduce_V2 = mkV2 (mkV I.séduire_V2) ; -- tocheck
lin seducer_N = mkN "séducteur" masculine ; -- tocheck
lin seduction_N = mkN "séduction" feminine ; -- tocheck
lin seductive_A = mkA "séducteur" | mkA "séduisant" ; -- UWN
lin seductress_N = mkN "séductrice" feminine ; -- tocheck
lin sedulous_A = mkA "pointilleux" ; -- tocheck
lin sedum_N = mkN "orpin" | mkN "sedum" ; -- UWN
lin see_N = mkN "siège" feminine ; -- tocheck
lin see_V = mkV I.voir_V2 ;
lin see_V2 = L.see_V2 ;
lin see_V2V = mkV2V (mkV I.voir_V2) ;
lin see_VQ = mkVQ (mkV I.voir_V2) ;
lin see_VS = mkVS (mkV I.voir_V2) ;
lin see_about_V2 = prepV2 OP_see_V OP_about_Prep ; -- guess-p-verb
lin see_into_V3 = variants {} ; -- guess-p-verb
lin see_off_V2 = prepV2 OP_see_V OP_off_Prep ; -- guess-p-verb
lin see_out_V2 = prepV2 OP_see_V OP_out_Prep ; -- guess-p-verb
lin see_through_V2 = prepV2 OP_see_V OP_through_Prep ; -- guess-p-verb
lin see_to_V2 = prepV2 OP_see_V OP_to_Prep ; -- guess-p-verb
lin seed_N = L.seed_N ;
lin seed_V2 = mkV2 (mkV "apparier") | mkV2 (mkV "semer") ; -- tocheck
lin seediness_N = mkN "ringardise" ; -- UWN
lin seedling_N = mkN "semis" ; -- tocheck
lin seedy_A = mkA "louche" ; -- tocheck
lin seek_N = mkN "chercher" ; -- UWN
lin seek_V2 = L.seek_V2 ;
lin seek_VV = mkvVV "chercher" ; -- UWN
lin seek_out_V2 = prepV2 (lin V OP_seek_V2) OP_out_Prep ; -- guess-p-verb
lin seeker_N = mkN "demandeur" ; -- tocheck
lin seeking_N = mkN "recherche" ; -- UWN
lin seem_VA = mkVA (mkV "sembler") ;
lin seem_VS = mkVS (mkV "sembler") ;
lin seem_VV = deVV (mkV "sembler") ;
lin seeming_A = mkA "apparent" ; -- UWN
lin seemly_A = mkA "convenable" | mkA "décent" | mkA "raisonnable" ; -- UWN
lin seep_V = mkV "suinter" ; -- UWN
lin seer_N = mkN "voyant" ; -- tocheck
lin seersucker_N = mkN "crépon" masculine ; -- tocheck
lin seesaw_N = mkN "balançoire" feminine ; -- tocheck
lin seethe_V2 = mkV2 (mkV "bouillonner") ; -- tocheck
lin segment_N = mkN "segment" masculine ; -- tocheck
lin segment_V2 = mkV2 (mkV "segmenter") ; -- tocheck
lin segmentation_N = mkN "segmentation" feminine ; -- tocheck
lin segregation_N = mkN "ségrégation" feminine ; -- tocheck
lin segue_N = mkN "transition" feminine ; -- tocheck
lin seiche_N = mkN "seiche" ; -- UWN
lin seignior_N = mkN "châtelain" ; -- UWN
lin seigniorage_N = mkN "Seigneuriage" | mkN "seigneuriage" ; -- UWN
lin seine_N = mkN "seine" feminine ; -- tocheck
lin seine_V2 = mkV2 (mkV "seiner") ; -- tocheck
lin seismic_A = mkA "sismique" ; -- tocheck
lin seismogram_N = mkN "sismogramme" masculine ; -- tocheck
lin seismograph_N = mkN "seismographe" ; -- tocheck
lin seismologist_N = mkN "seismologiste" ; -- tocheck
lin seismology_N = mkN "sismologie" feminine ; -- tocheck
lin seize_V = variants {} ; -- mkV2 (mkV "saisir") ; -- tocheck
lin seize_V2 = mkV2 (mkV "saisir") ; -- tocheck
lin seize_up_V = advV OP_seize_V OP_up_Adv ; -- guess-p-verb
lin seizure_N = mkN "saisie" feminine | mkN "attaque" feminine ; -- tocheck
lin selby_PN = mkPN "Selby" ; -- status=guess src=geonames
lin seldom_Adv = mkAdv "rarement" ; -- tocheck
lin select_A = mkA "choisir" | mkA "sélectionner" ; -- UWN
lin select_V = variants {} ; -- mkV2V (mkV "choisir") ; -- tocheck
lin select_V2 = variants {} ; -- mkV2V (mkV "choisir") ; -- tocheck
lin select_V2V = mkV2V (mkV "choisir") ; -- tocheck
lin select_VV = mkvVV "choisir" | mkvVV "opter" | mkvVV "prendre" | mkvVV "sélectionner" | mkvVV "élire" ; -- UWN
lin selected_A = variants {} ; --
lin selection_N = mkN "sélection" | mkN "sélection" feminine ; -- tocheck
lin selective_A = mkA "sélectif" ; -- tocheck
lin selector_N = mkN "sélecteur" ; -- UWN
lin selenium_N = mkN "sélénium" masculine ; -- tocheck
lin selenology_N = mkN "sélénologie" ; -- tocheck
lin self_A = mkA "même" ; -- UWN
lin self_N = mkN "soi-même" masculine ; -- tocheck
lin self_assurance_N = mkN "aplomb" masculine ; -- tocheck
lin self_conscious_A = mkA "introspectif" ; -- tocheck
lin self_contained_A = mkA "autonome" ; -- tocheck
lin self_destruct_V = mkV (mkV "auto-détruire") ; -- tocheck
lin self_educated_A = mkA "autodidacte" ; -- tocheck
lin self_esteem_N = mkN "amour-propre" ; -- tocheck
lin self_explanatory_A = mkA "auto-explicatif" ; -- tocheck
lin self_important_A = mkA "arrogant" | mkA "arrogante" | mkA "important" | mkA "orgueilleuse" | mkA "orgueilleux" ; -- UWN
lin self_indulgence_N = mkN "dissolution" feminine ; -- tocheck
lin self_indulgent_A = mkA "dissolu" ; -- tocheck
lin self_preservation_N = mkN "autoconservation" feminine ; -- tocheck
lin self_reliance_N = mkN "autonomie" feminine ; -- tocheck
lin self_righteous_A = mkA "bien-pensant" ; -- tocheck
lin self_sacrifice_N = mkN "auto-sacrifice" masculine ; -- tocheck
lin self_service_N = mkN "self-service" masculine ; -- tocheck
lin self_sufficiency_N = mkN "autosuffisance" feminine ; -- tocheck
lin self_sufficient_A = mkA "autosuffisant" ; -- tocheck
lin selfish_A = mkA "égoïste" ; -- tocheck
lin selfishness_N = mkN "égoïsme" feminine ; -- tocheck
lin selkirk_PN = mkPN "Selkirk" ; -- status=guess src=geonames
lin sell_N = mkN "vendre" | mkN "vente" ; -- UWN
lin sell_V = mkV I.vendre_V2 ;
lin sell_V2 = mkV2 (mkV I.vendre_V2) ;
lin sell_V3 = L.sell_V3 ;
lin sell_back_V = advV OP_sell_V OP_back_Adv ; -- guess-p-verb
lin sell_off_V2 = prepV2 OP_sell_V OP_off_Prep ; -- guess-p-verb
lin sell_on_V2 = prepV2 OP_sell_V OP_on_Prep ; -- guess-p-verb
lin sell_out_V = advV OP_sell_V OP_out_Adv ; -- guess-p-verb
lin sell_out_V2 = prepV2 OP_sell_V OP_out_Prep ; -- guess-p-verb
lin sell_up_V2 = prepV2 OP_sell_V OP_up_Prep ; -- guess-p-verb
lin sellerFem_N = mkN "vendeuse" feminine ; -- tocheck
lin sellerMasc_N = mkN "vendeur" masculine ;
lin selling_N = mkN "marchandisage" | mkN "merchandising" | mkN "vente" ; -- UWN
lin selsey_PN = mkPN "Selsey" ; -- status=guess src=geonames
lin seltzer_N = mkN "eau_gazeuse" ; -- UWN
lin semantic_A = mkA "sémantique" ; -- tocheck
lin semanticist_N = mkN "sémanticien" | mkN "sémioticien" ; -- UWN
lin semantics_N = mkN "sémantique" feminine ; -- tocheck
lin semaphore_N = mkN "sémaphore" masculine ; -- tocheck
lin semarang_PN = mkPN "Semarang" ; -- status=guess src=geonames
lin semen_N = mkN "semence" feminine ; -- tocheck
lin semester_N = mkN "semestre" ; -- tocheck
lin semi_final_N = mkN "demi-finale" masculine ; -- tocheck
lin semiannual_A = mkA "semi-annuel" ; -- tocheck
lin semibreve_N = mkN "ronde" feminine ; -- tocheck
lin semicircle_N = mkN "demi-cercle" masculine ; -- tocheck
lin semicolon_N = mkN "point-virgule" masculine ; -- tocheck
lin semiconductor_N = mkN "semiconducteur" masculine ; -- tocheck
lin semifinalist_N = mkN "demi-finaliste" ; -- UWN
lin semimonthly_A = mkA "bimensuel" | mkA "bimestriel" ; -- UWN
lin semimonthly_Adv = mkAdv "bimensuel" | mkAdv "bimestriel" ; -- UWN
lin seminal_A = mkA "influent" ; -- tocheck
lin seminar_N = mkN "séminaire" masculine ; -- tocheck
lin seminarian_N = mkN "séminariste" ; -- UWN
lin seminarist_N = mkN "séminariste" masculine ; -- tocheck
lin seminary_N = mkN "séminaire" masculine ; -- tocheck
lin seminiferous_A = mkA "séminifère" ; -- tocheck
lin seminoma_N = mkN "cancer_du_testicule" ; -- UWN
lin semiotic_A = mkA "sémiotique" ; -- tocheck
lin semiotics_N = mkN "sémiotique" feminine ; -- tocheck
lin semipermeable_A = mkA "semiperméable" ; -- UWN
lin semipublic_A = mkA "semipublic" ; -- UWN
lin semiquaver_N = mkN "double_croche" ; -- UWN
lin semitone_N = mkN "demi-ton" | mkN "demi-ton_;_seconde" ; -- UWN
lin semitropical_A = mkA "subtropical" ; -- UWN
lin semivowel_N = mkN "semi-voyelle" feminine ; -- tocheck
lin semolina_N = mkN "semoule" feminine ; -- tocheck
lin sempstress_N = mkN "couturier" | mkN "couturière" ; -- UWN
lin sen_N = mkN "sen" ; -- UWN
lin senate_N = mkN "sénat" masculine ; -- tocheck
lin senator_N = mkN "sénateur" masculine ; -- tocheck
lin senatorial_A = mkA "sénatorien" ; -- UWN
lin send_V = I.envoyer_V2 ;
lin send_V2 = I.envoyer_V2 ;
lin send_V2V = mkV2V (mkV I.envoyer_V2) P.accusative P.dative ;
lin send_V3 = L.send_V3 ;
lin send_back_V2 = mkV2 (advV OP_send_V OP_back_Adv ) ; -- guess-p-verb
lin send_for_V2 = prepV2 OP_send_V OP_for_Prep ; -- guess-p-verb
lin send_in_V = advV OP_send_V OP_in_Adv ; -- guess-p-verb
lin send_in_V2 = prepV2 OP_send_V OP_in_Prep ; -- guess-p-verb
lin send_off_V2 = prepV2 OP_send_V OP_off_Prep ; -- guess-p-verb
lin send_off_for_V2 = prepV2 (advV OP_send_V OP_off_Adv ) OP_for_Prep ; -- guess-p-verb
lin send_out_V2 = prepV2 OP_send_V OP_out_Prep ; -- guess-p-verb
lin send_out_for_V2 = prepV2 (advV OP_send_V OP_out_Adv ) OP_for_Prep ; -- guess-p-verb
lin send_up_N = mkN "parodie" feminine ; -- tocheck
lin send_up_V2 = prepV2 OP_send_V OP_up_Prep ; -- guess-p-verb
lin sender_N = mkN "expéditeur" masculine ; -- tocheck
lin senegal_PN = mkPN "Sénégal" ; -- status=guess src=geonames
lin senescence_N = mkN "sénescence" ; -- UWN
lin senescent_A = mkA "sénescent" ; -- tocheck
lin seneschal_N = mkN "sénéchal" ; -- tocheck
lin senile_A = mkA "sénile" ; -- tocheck
lin senility_N = mkN "sénilité" ; -- tocheck
lin senior_A = mkA "aîné" ; -- tocheck
lin senior_N = mkN "supérieur" masculine ; -- tocheck
lin seniority_N = mkN "ancienneté" ; -- tocheck
lin senna_N = mkN "senna" ; -- UWN
lin sensation_N = mkN "sensation" feminine ; -- tocheck
lin sensational_A = mkA "sensationnel" ; -- tocheck
lin sensationalism_N = mkN "sensationnalisme" masculine ; -- tocheck
lin sense_N = mkN "sens" masculine ;
lin sense_V2 = mkV2 (mkV I.sentir_V2) ; -- tocheck
lin senselessness_N = mkN "imprudence" | mkN "inanité" ; -- UWN
lin sensibility_N = mkN "sensibilité" ; -- UWN
lin sensible_A = mkA "sensé" | mkA "sensible" ; -- tocheck
lin sensitive_A = mkA "sensible" ; -- tocheck
lin sensitivity_N = mkN "sensibilité" ; -- tocheck
lin sensorimotor_A = mkA "sensorimoteur" ; -- tocheck
lin sensual_A = mkA "sensuel" ; -- tocheck
lin sensuality_N = mkN "sensualisme" ; -- UWN
lin sente_N = mkN "sente" ; -- UWN
lin sentence_N = mkN "phrase" feminine | mkN "peine" feminine | mkN "jugement" masculine ; -- tocheck
lin sentence_V = variants {} ; -- mkV2 (mkV "punir") ; -- tocheck
lin sentence_V2 = mkV2 (mkV "punir") ; -- tocheck
lin sententious_A = mkA "concis" | mkA "sentencieux" ; -- tocheck
lin sentient_A = mkA "animer" ; -- UWN
lin sentiment_N = mkN "sentiment" masculine ; -- tocheck
lin sentimental_A = mkA "sentimental" ; -- tocheck
lin sentimentality_N = mkN "sentimentalité" feminine ; -- tocheck
lin sentinel_N = mkN "factionnaire" masculine ; -- tocheck
lin sentry_N = mkN "sentinelle" feminine ; -- tocheck
lin sentry_box_N = mkN "guérite" feminine ; -- tocheck
lin seoul_PN = mkPN "Séoul" ; -- status=guess src=geonames
lin sepal_N = mkN "sépale" masculine ; -- tocheck
lin separable_A = mkA "séparable" ; -- UWN
lin separate_A = mkA "séparé" ; -- tocheck
lin separate_N = mkN "séparer" ; -- UWN
lin separate_V = variants {} ; -- mkV2 (mkV "séparer") | mkV2 (reflV (mkV "séparer")) ; -- tocheck
lin separate_V2 = mkV2 (mkV "séparer") | mkV2 (reflV (mkV "séparer")) ; -- tocheck
lin separation_N = mkN "séparation" feminine ; -- tocheck
lin separatism_N = mkN "séparatisme" masculine ; -- tocheck
lin separatist_N = mkN "séparatiste" masculine ; -- tocheck
lin sepia_N = mkN "sépia" masculine | mkN "seiche" feminine ; -- tocheck
lin sepsis_N = mkN "sepsis" masculine ; -- tocheck
lin septic_A = mkA "septique" ; -- tocheck
lin septicaemia_N = mkN "septicémie" ; -- UWN
lin septicemia_N = mkN "septicémie" feminine ; -- tocheck
lin septuagenarian_N = mkN "septuagénaire" ; -- tocheck
lin septuple_A = mkA "septuple" ; -- UWN
lin sepulchral_A = mkA "sépulcral" ; -- tocheck
lin sepulchre_N = mkN "sépulcre" masculine ; -- tocheck
lin sepulture_N = mkN "sépulcre" | mkN "tombe" ; -- UWN
lin sequel_N = mkN "suite" feminine ; -- tocheck
lin sequence_N = mkN "suite" feminine | mkN "séquence" feminine ; -- tocheck
lin sequencer_N = mkN "séquenceur" masculine ; -- tocheck
lin sequential_A = mkA "consécutif" | mkA "successif" | mkA "séquentiel" ; -- UWN
lin sequester_V2 = mkV2 (mkV "séquestrer") ; -- tocheck
lin sequin_N = mkN "paillettes" ; -- tocheck
lin sequoia_N = mkN "séquoia" masculine ; -- tocheck
lin seraglio_N = mkN "harem" | mkN "sérail" ; -- UWN
lin seraph_N = mkN "séraphin" masculine ; -- tocheck
lin serenade_N = mkN "sérénade" feminine ; -- tocheck
lin serenade_V2 = mkV2 (mkV "sérénader") ; -- tocheck
lin serendipity_N = mkN "sérendipité" feminine ; -- tocheck
lin serene_A = mkA "serein" ; -- tocheck
lin serenity_N = mkN "sérénité" feminine | mkN "sérénité" ; -- tocheck
lin serf_N = mkN "serf" masculine ; -- tocheck
lin serfdom_N = mkN "servage" masculine ; -- tocheck
lin serge_N = mkN "serge" ; -- UWN
lin sergeant_N = mkN "sergent" ; -- tocheck
lin sergeant_major_N = mkN "sergent-major" masculine ; -- tocheck
lin serial_N = mkN "feuilleton" masculine ; -- tocheck
lin serialism_N = mkN "sérialisme" masculine ; -- tocheck
lin serialization_N = mkN "sérialisation" ; -- UWN
lin series_N = mkN "série" feminine | mkN "suite" feminine ; -- tocheck
lin serif_N = mkN "empattement" masculine ; -- tocheck
lin serine_N = mkN "sérine" feminine ; -- tocheck
lin seriocomedy_N = mkN "tragicomédie" ; -- UWN
lin serious_A = mkA "sérieux" ; -- tocheck
lin serjeant_N = mkN "sergent" ; -- UWN
lin sermon_N = mkN "sermon" masculine ; -- tocheck
lin sermonize_V = mkV "sermonner" ; -- UWN
lin serology_N = mkN "sérologie" ; -- UWN
lin serotonin_N = mkN "sérotonine" feminine ; -- tocheck
lin serous_A = mkA "séreux" ; -- tocheck
lin serow_N = mkN "capricornis" ; -- UWN
lin serpent_N = mkN "serpent" masculine ; -- tocheck
lin serrate_A = mkA "denté" ; -- tocheck
lin serrated_A = mkA "denté" ; -- tocheck
lin serum_N = mkN "sérum" masculine ; -- tocheck
lin servantFem_N = mkN "domestique" | mkN "serviteur" feminine ; -- tocheck
lin servantMasc_N = mkN "domestique" | mkN "serviteur" masculine ;
lin serve_N = mkN "service" ; -- UWN
lin serve_V = variants {} ; -- mkV2 (mkV "signifier") | mkV2 (mkV I.servir_V2) ; -- tocheck
lin serve_V2 = mkV2 (mkV "signifier") | mkV2 (mkV I.servir_V2) ; -- tocheck
lin server_N = mkN "serveur" masculine | mkN "serviteur" masculine | mkN "serveur" ; -- tocheck
lin service_N = mkN "service" masculine ;
lin service_V2 = mkV2 (mkV I.maintenir_V2) | mkV2 (mkV I.servir_V2) ; -- tocheck
lin serviceman_N = mkN "homme" ; -- UWN
lin servicing_N = mkN "poste" | mkN "public" | mkN "voyageur" ; -- UWN
lin serviette_N = mkN "serviette" | mkN "serviette_de_table" ; -- UWN
lin servile_A = mkA "servile" ; -- UWN
lin serving_N = mkN "portion" ; -- tocheck
lin servitude_N = mkN "servage" masculine ; -- tocheck
lin servo_N = mkN "servocommande" | mkN "servomécanisme" ; -- UWN
lin sesame_N = mkN "sésame" masculine ; -- tocheck
lin sesbania_N = mkN "sesbania" ; -- UWN
lin sesquicentennial_N = mkN "sesquicentenaire" masculine ; -- tocheck
lin sesquipedalian_A = mkA "polysyllabique" ; -- UWN
lin sessile_A = mkA "sessile" ; -- UWN
lin session_N = mkN "séance" feminine ; -- tocheck
lin set_1_N = mkN "ensemble" masculine | {-UWN-} mkN "ensemble" | mkN "série" ; -- UWN
lin set_2_N = mkN "jeu" masculine ;
lin set_N = mkN "jeu" masculine | mkN "poste" masculine | mkN "set" masculine | mkN "ensemble" masculine | mkN "série" feminine ; -- tocheck
lin set_V2 = mkV2 (mkV I.mettre_V2) ;
lin set_about_V2 = prepV2 (lin V OP_set_V2) OP_about_Prep ; -- guess-p-verb
lin set_apart_V2 = mkV2 (advV (lin V OP_set_V2) OP_apart_Adv ) ; -- guess-p-verb
lin set_aside_V2 = mkV2 (advV (lin V OP_set_V2) OP_aside_Adv ) ; -- guess-p-verb
lin set_back_V = mkV "aboutir" | mkV "échouer" ; -- UWN
lin set_back_V2 = mkV2 (advV (lin V OP_set_V2) OP_back_Adv ) ; -- guess-p-verb
lin set_forth_V = advV (lin V OP_set_V2) OP_forth_Adv ; -- guess-p-verb
lin set_forth_V2 = mkV2 (advV (lin V OP_set_V2) OP_forth_Adv ) ; -- guess-p-verb
lin set_in_V = advV (lin V OP_set_V2) OP_in_Adv ; -- guess-p-verb
lin set_off_V = advV (lin V OP_set_V2) OP_off_Adv ; -- guess-p-verb
lin set_off_V2 = prepV2 (lin V OP_set_V2) OP_off_Prep ; -- guess-p-verb
lin set_on_V2 = prepV2 (lin V OP_set_V2) OP_on_Prep ; -- guess-p-verb
lin set_out_V = advV (lin V OP_set_V2) OP_out_Adv ; -- guess-p-verb
lin set_out_V2 = prepV2 (lin V OP_set_V2) OP_out_Prep ; -- guess-p-verb
lin set_to_V = advV (lin V OP_set_V2) OP_to_Adv ; -- guess-p-verb
lin set_up_V = mkV "installer" | mkV "mettre" ; -- UWN
lin set_up_V2 = prepV2 (lin V OP_set_V2) OP_up_Prep ; -- guess-p-verb
lin set_upon_V2 = prepV2 (lin V OP_set_V2) OP_upon_Prep ; -- guess-p-verb
lin setback_N = mkN "contretemps" | mkN "coup_du_sort" | mkN "revers" ; -- UWN
lin sett_N = mkN "pavé" masculine | mkN "plaid" masculine ; -- tocheck
lin setting_N = mkN "réglage" masculine ; -- tocheck
lin settle_V = variants {} ; -- mkV2 (reflV (mkV "installer")) ; -- tocheck
lin settle_V2 = mkV2 (reflV (mkV "installer")) ; -- tocheck
lin settle_back_V = advV OP_settle_V OP_back_Adv ; -- guess-p-verb
lin settle_down_V = advV OP_settle_V OP_down_Adv ; -- guess-p-verb
lin settle_for_V2 = prepV2 OP_settle_V OP_for_Prep ; -- guess-p-verb
lin settle_in_V = advV OP_settle_V OP_in_Adv ; -- guess-p-verb
lin settle_on_V2 = prepV2 OP_settle_V OP_on_Prep ; -- guess-p-verb
lin settle_up_V = advV OP_settle_V OP_up_Adv ; -- guess-p-verb
lin settlement_N = mkN "colonie" feminine | mkN "agglomération" feminine | mkN "arrangement" masculine | mkN "règlement" masculine ; -- tocheck
lin settler_N = mkN "colon" masculine ; -- tocheck
lin settling_N = mkN "sédimentation" feminine ; -- tocheck
lin sevenfold_A = mkA "septuple" ; -- UWN
lin sevenoaks_PN = mkPN "Sevenoaks" ; -- status=guess src=geonames
lin sever_V2 = mkV2 (mkV I.rompre_V2) ; -- tocheck
lin several_Det = mkDet "plusieurs" "plusieurs" plural ;
lin severally_Adv = mkAdv "respectivement" ; -- UWN
lin severance_N = mkN "briser" | mkN "chute" | mkN "rift" | mkN "rompre" ; -- UWN
lin severe_A = mkA "sévère" ; -- tocheck
lin severity_N = mkN "sévérité" feminine ; -- tocheck
lin sevilla_PN = mkPN "Séville" ; -- status=guess src=geonames
lin seville_PN = mkPN "Seville" ; -- status=guess src=geonames
lin sew_V = L.sew_V ;
lin sew_V2 = mkV2 (mkV I.coudre_V2) ; -- tocheck
lin sewage_N = mkN "eaux_usées" ; -- UWN
lin sewer_N = mkN "couturier" masculine | mkN "égout" masculine ; -- tocheck
lin sewerage_N = mkN "assainissement" masculine ; -- tocheck
lin sewing_N = mkN "couture" feminine | mkN "couture" ; -- tocheck
lin sex_N = mkN "sexe" masculine ; -- tocheck
lin sex_V2 = mkV2 (mkV "sexer") ; -- tocheck
lin sexism_N = mkN "sexisme" masculine ; -- tocheck
lin sexist_A = mkA "sexiste" ; -- tocheck
lin sexist_N = mkN "sexiste" ; -- tocheck
lin sext_N = mkN "sexte" ; -- UWN
lin sextant_N = mkN "sextant" masculine ; -- tocheck
lin sextet_N = mkN "sextuor" masculine ; -- tocheck
lin sextette_N = mkN "sextuor" ; -- UWN
lin sexton_N = mkN "sacristain" masculine ; -- tocheck
lin sextuple_A = mkA "sextuple" ; -- UWN
lin sexual_A = mkA "sexuel" ; -- tocheck
lin sexuality_N = mkN "sexualité" feminine | mkN "sexe" masculine ; -- tocheck
lin sexy_A = mkA "sexy" ; -- tocheck
lin seychelles_PN = mkPN "Seychelles" ; -- status=guess src=geonames
lin sgraffito_N = mkN "la_sgraffite" | mkN "sgraffite" ; -- UWN
lin shabbiness_N = mkN "injustice" ; -- UWN
lin shabby_A = mkA "râpé" | mkA "minable" ; -- tocheck
lin shack_N = mkN "cabanon" masculine ; -- tocheck
lin shack_V = mkV "suivre" ; -- UWN
lin shackle_N = mkN "menottes" | mkN "manille" feminine ; -- tocheck
lin shackle_V2 = mkV2 (mkV "enchainer") ; -- tocheck
lin shad_N = mkN "alose" ; -- tocheck
lin shaddock_N = mkN "citrus_maxima" | mkN "pamplemousse" ; -- UWN
lin shade_N = mkN "esprit" masculine | mkN "ombre" feminine | mkN "store" masculine | mkN "nuance" feminine ; -- tocheck
lin shade_V2 = mkV2 (mkV "ombrager") ; -- tocheck
lin shadow_N = mkN "ombre" feminine ; -- tocheck
lin shadowy_A = mkA "sombre" ; -- tocheck
lin shady_A = mkA "louche" ; -- tocheck
lin shaft_N = mkN "hampe" feminine ; -- tocheck
lin shag_N = mkN "baise" feminine ; -- tocheck
lin shag_V2 = mkV2 (mkV "sauter") ; -- tocheck
lin shaggy_A = mkA "hirsute" ; -- tocheck
lin shah_N = mkN "shah" masculine ; -- tocheck
lin shahadah_N = mkN "chahada" | mkN "shahada" | mkN "shâhada" ; -- UWN
lin shaitan_N = mkN "diable" ; -- UWN
lin shake_N = mkN "secousse" ; -- tocheck
lin shake_V = variants {} ; -- mkV2 (mkV "secouer") | mkV2 (reflV (mkV "secouer")) ; -- tocheck
lin shake_V2 = mkV2 (mkV "secouer") | mkV2 (reflV (mkV "secouer")) ; -- tocheck
lin shake_down_V2 = prepV2 OP_shake_V OP_down_Prep ; -- guess-p-verb
lin shake_off_V2 = prepV2 OP_shake_V OP_off_Prep ; -- guess-p-verb
lin shake_out_V2 = prepV2 OP_shake_V OP_out_Prep ; -- guess-p-verb
lin shake_up_V2 = prepV2 OP_shake_V OP_up_Prep ; -- guess-p-verb
lin shaky_A = mkA "aléatoire" | mkA "précaire" ; -- UWN
lin shale_N = mkN "schiste" masculine ; -- tocheck
lin shall_VV = S.must_VV ;
lin shallot_N = mkN "échalote" feminine ; -- tocheck
lin shallow_A = mkA "superficiel" ; -- tocheck
lin shallow_N = mkN "haut-fond" masculine ; -- tocheck
lin sham_A = mkA "fictif" ; -- UWN
lin sham_N = mkN "faux-semblant" masculine | mkN "feinte" feminine ; -- tocheck
lin sham_V2 = mkV2 (mkV "tromper") ; -- tocheck
lin shaman_N = mkN "chaman" masculine ; -- tocheck
lin shambles_N = mkN "capharnaüm" masculine | mkN "fouillis" masculine ; -- tocheck
lin shame_N = mkN "honte" feminine ; -- tocheck
lin shamefaced_A = mkA "coupable" ; -- UWN
lin shameful_A = mkA "honteux" ; -- tocheck
lin shameless_A = mkA "effronté" | mkA "impudique" | mkA "éhonté" ; -- UWN
lin shamelessness_N = mkN "dévergondage" feminine ; -- tocheck
lin shammy_N = mkN "chamois" | mkN "isard" | mkN "peau_de_chamois" ; -- UWN
lin shampoo_N = mkN "shampoing" masculine ; -- tocheck
lin shampoo_V2 = mkV2 (mkV "shampouiner") ; -- tocheck
lin shamrock_N = mkN "trèfle" masculine ; -- tocheck
lin shandy_N = mkN "panaché" masculine ; -- tocheck
lin shandygaff_N = mkN "bière_panachée" ; -- UWN
lin shanghai_PN = mkPN "Shanghai" ; -- status=guess src=geonames
lin shanklin_PN = mkPN "Shanklin" ; -- status=guess src=geonames
lin shantung_N = mkN "chantoung" ; -- UWN
lin shantytown_N = mkN "bidonville" feminine ; -- tocheck
lin shape_N = mkN "forme" feminine ; -- tocheck
lin shape_V = variants {} ; --
lin shape_V2 = variants {} ; --
lin shape_VV = variants {} ; --
lin shape_up_V = advV OP_shape_V OP_up_Adv ; -- guess-p-verb
lin shard_N = mkN "éclat" masculine ; -- tocheck
lin share_N = mkN "part" feminine | mkN "action" feminine ; -- tocheck
lin share_V = variants {} ; -- mkV2 (mkV "partager") ; -- tocheck
lin share_V2 = mkV2 (mkV "partager") ; -- tocheck
lin share_out_V = advV OP_share_V OP_out_Adv ; -- guess-p-verb
lin sharecropper_N = mkN "métayer" masculine ; -- tocheck
lin shared_A = variants {} ; --
lin shareholder_N = mkN "actionnaire" ; -- tocheck
lin shareholding_N = mkN "participation" ; -- UWN
lin shareware_N = mkN "shareware" masculine ; -- tocheck
lin shark_N = mkN "requin" masculine ; -- tocheck
lin sharon_PN = mkPN "Sharon" ; -- status=guess src=geonames
lin sharp_A = L.sharp_A ;
lin sharp_Adv = mkAdv "coupant" ; -- UWN
lin sharp_N = mkN "coupant" ; -- UWN
lin sharpen_V2 = mkV2 (mkV "affiler") ; -- tocheck
lin sharpener_N = mkN "affûteuse" feminine ; -- tocheck
lin sharpness_N = mkN "tranchant" masculine | mkN "finesse" feminine | mkN "netteté" feminine | mkN "acuité" feminine | mkN "acidité" feminine ; -- tocheck
lin shatter_V = variants {} ; -- mkV2 (mkV "fracasser") | mkV2 (mkV "éclater") ; -- tocheck
lin shatter_V2 = mkV2 (mkV "fracasser") | mkV2 (mkV "éclater") ; -- tocheck
lin shave_N = mkN "raser" ; -- UWN
lin shave_V2 = mkV2 (mkV "raser") | mkV2 (reflV (mkV "raser")) ; -- tocheck
lin shaven_A = mkA "rasé" ; -- tocheck
lin shawl_N = mkN "châle" masculine ; -- tocheck
lin she_Pron = S.she_Pron ;
lin sheaf_N = mkN "faisceau" masculine ; -- tocheck
lin shear_N = mkN "cisailles" | mkN "tonte" feminine ; -- tocheck
lin shear_V2 = mkV2 (mkV "couper") | mkV2 (mkV "cisailler") | mkV2 (mkV I.tondre_V2) ; -- tocheck
lin shearing_N = mkN "rasage" ; -- UWN
lin shears_N = mkN "cisailles" ; -- tocheck
lin shearwater_N = mkN "puffin" masculine ; -- tocheck
lin sheath_N = mkN "fourreau" masculine | mkN "gaine" ; -- tocheck
lin sheathe_V2 = mkV2 (mkV "engainer") | mkV2 (mkV "rengainer") ; -- tocheck
lin shed_N = mkN "hangar" masculine ; -- tocheck
lin shed_V2 = mkV2 (mkV "séparer") | mkV2 (mkV "verser") ; -- tocheck
lin shedding_N = mkN "desquamation" ; -- UWN
lin sheen_N = mkN "brillance" ; -- tocheck
lin sheep_N = L.sheep_N ;
lin sheepdog_N = mkN "berger" | mkN "chien_de_berger" ; -- UWN
lin sheepfold_N = mkN "bergerie" feminine ; -- tocheck
lin sheepherder_N = mkN "berger" | mkN "pâtre" ; -- UWN
lin sheepish_A = mkA "penaud" ; -- tocheck
lin sheepman_N = mkN "berger" | mkN "pâtre" ; -- UWN
lin sheepshank_N = mkN "nœud_de_jambe_de_chien" ; -- UWN
lin sheepskin_N = mkN "brevet" | mkN "diplome" | mkN "diplôme" ; -- UWN
lin sheer_A = mkA "pur" | mkA "vertical" | mkA "transparent" ; -- tocheck
lin sheerness_PN = mkPN "Sheerness" ; -- status=guess src=geonames
lin sheet_N = mkN "écoute" feminine | mkN "plaque" feminine | mkN "feuille" feminine ; -- tocheck
lin sheeting_N = mkN "toile" ; -- UWN
lin sheffield_PN = mkPN "Sheffield" ; -- status=guess src=geonames
lin sheik_N = mkN "bellâtre" | mkN "dandy" | mkN "gars" | mkN "mec" | mkN "mon_pote" | mkN "muguet" | mkN "pinpin" | mkN "pote" | mkN "sigisbée" | mkN "type" | mkN "étendoir" ; -- UWN
lin shekel_N = mkN "shekel" | mkN "shekel_'hadash" ; -- UWN
lin shelduck_N = mkN "tadorne" ; -- tocheck
lin shelf_N = mkN "étagère" feminine | mkN "rayon" masculine ; -- tocheck
lin shell_N = mkN "coquillage" | mkN "douille" feminine | mkN "coquille" feminine | mkN "squelette" masculine | mkN "carapace" feminine | mkN "obus" masculine | mkN "cosse" feminine | mkN "coquille" ; -- tocheck
lin shell_V2 = mkV2 (mkV "décortiquer") ; -- tocheck
lin shellfish_N = mkN "coquillage" masculine ; -- tocheck
lin shelter_N = mkN "abri" ; -- tocheck
lin shelter_V2 = mkV2 (mkV "abriter") ; -- tocheck
lin shelve_V2 = mkV2 (mkV I.suspendre_V2) ; -- tocheck
lin shepherd_N = mkN "berger" masculine ; -- tocheck
lin shepherdess_N = mkN "bergère" feminine ; -- tocheck
lin shepshed_PN = mkPN "Shepshed" ; -- status=guess src=geonames
lin sherbert_N = mkN "sorbet" ; -- UWN
lin sherbet_N = mkN "sorbet" ; -- tocheck
lin sheriff_N = mkN "shérif" masculine ; -- tocheck
lin sheringham_PN = mkPN "Sheringham" ; -- status=guess src=geonames
lin sherry_N = mkN "xérès" masculine ; -- tocheck
lin shetland_PN = mkPN "Shetland" ; -- status=guess src=geonames
lin shevington_PN = mkPN "Shevington" ; -- status=guess src=geonames
lin shibboleth_N = mkN "shibboleth" ; -- tocheck
lin shield_N = mkN "bouclier" masculine | mkN "écu" masculine ; -- tocheck
lin shield_V2 = mkV2 (mkV "protéger") ; -- tocheck
lin shift_N = mkN "décalage" | mkN "roulement" masculine ; -- tocheck
lin shift_V = variants {} ; --
lin shift_V2 = variants {} ; --
lin shifty_A = mkA "louche" ; -- tocheck
lin shigella_N = mkN "shigella" | mkN "shigelle" | mkN "shigelles" ; -- UWN
lin shiitake_N = mkN "shiitaké" masculine ; -- tocheck
lin shiksa_N = mkN "shiksa" feminine ; -- tocheck
lin shildon_PN = mkPN "Shildon" ; -- status=guess src=geonames
lin shill_N = mkN "compère" masculine ; -- tocheck
lin shilling_N = mkN "shilling" masculine ; -- tocheck
lin shimmer_N = mkN "jeu" | mkN "jouer" ; -- UWN
lin shimmer_V = mkV (mkV "chatoyer") ; -- tocheck
lin shimmy_N = mkN "shimmy" masculine ; -- tocheck
lin shin_N = mkN "tibia" masculine ; -- tocheck
lin shinbone_N = mkN "tibia" ; -- UWN
lin shine_N = mkN "éclat" masculine ; -- tocheck
lin shine_V = variants {} ; -- mkV2 (mkV "briller") ; -- tocheck
lin shine_V2 = mkV2 (mkV "briller") ; -- tocheck
lin shingle_N = mkN "galet" | mkN "bardeau" masculine | mkN "galet" masculine ; -- tocheck
lin shingles_N = mkN "zona" masculine ; -- tocheck
lin shininess_N = mkN "brillance" feminine ; -- tocheck
lin shining_N = mkN "cirage" | mkN "lissage" ; -- UWN
lin shiny_A = mkA "brillant" ; -- tocheck
lin ship_N = L.ship_N ;
lin ship_V = variants {} ; -- mkV2 (mkV "poster") ; -- tocheck
lin ship_V2 = mkV2 (mkV "poster") ; -- tocheck
lin shipbuilding_N = mkN "construction_navale" ; -- UWN
lin shipload_N = mkN "wagonnée" ; -- UWN
lin shipment_N = mkN "expédition" ; -- UWN
lin shipowner_N = mkN "Compagnie_maritime" ; -- UWN
lin shipping_N = mkN "transport" ; -- UWN
lin shipway_N = mkN "canal_maritime" ; -- UWN
lin shipworm_N = mkN "Taret" | mkN "taret" ; -- UWN
lin shipwreck_N = mkN "naufrage" masculine | mkN "épave" feminine ; -- tocheck
lin shipwreck_V = mkV (mkV "naufrager") ; -- tocheck
lin shipyard_N = mkN "chantier_naval" ; -- UWN
lin shire_N = mkN "comté" masculine ; -- tocheck
lin shirebrook_PN = mkPN "Shirebrook" ; -- status=guess src=geonames
lin shiremoor_PN = mkPN "Shiremoor" ; -- status=guess src=geonames
lin shirk_V2 = mkV2 (mkV "esquirer") ; -- tocheck
lin shirker_N = mkN "glandeur" ; -- UWN
lin shirley_PN = mkPN "Shirley" ; -- status=guess src=geonames
lin shirt_N = L.shirt_N ;
lin shirting_N = mkN "shirting" ; -- UWN
lin shish_kebab_N = mkN "Kebab" | mkN "kebab" | mkN "kebap" | mkN "kébab" ; -- UWN
lin shit_N = mkN "merde" feminine ; -- tocheck
lin shit_V = mkV (mkV "chier") ; -- tocheck
lin shivaree_N = mkN "charivari" ; -- UWN
lin shiver_N = mkN "frisson" masculine ; -- tocheck
lin shiver_V = variants {} ; -- mkV2 (mkV "trembler") ; -- tocheck
lin shivery_A = mkA "effrayant" | mkA "sinistre" ; -- UWN
lin shoal_N = mkN "enseignement" | mkN "scolarité" | mkN "école" | mkN "élève" ; -- UWN
lin shock_N = mkN "choc" masculine ; -- tocheck
lin shock_V2 = mkV2 (mkV "choquer") ; -- tocheck
lin shocked_A = variants {} ; --
lin shocking_A = mkA "honteux" | mkA "scandaleux" ; -- UWN
lin shod_A = mkA "chaussé" ; -- tocheck
lin shoddy_A = mkA "effiloché" ; -- tocheck
lin shoe_N = L.shoe_N ;
lin shoe_V2 = mkV2 (mkV "ferrer") | mkV2 (mkV "chausser") ; -- tocheck
lin shoehorn_N = mkN "chausse-pied" masculine ; -- tocheck
lin shoelace_N = mkN "lacet_de_soulier" ; -- UWN
lin shoemaker_N = mkN "cordonnier" ; -- tocheck
lin shoemaking_N = mkN "cordonnier" ; -- UWN
lin shoestring_N = mkN "lacet_de_soulier" ; -- UWN
lin shogi_N = mkN "shogi" masculine ; -- tocheck
lin shogun_N = mkN "shogun" masculine ; -- tocheck
lin shoot_N = mkN "pousse" feminine ; -- tocheck
lin shoot_V = variants {} ; -- mkV2 (mkV "tirer") ; -- tocheck
lin shoot_V2 = mkV2 (mkV "tirer") ; -- tocheck
lin shoot_away_V = advV OP_shoot_V OP_away_Adv ; -- guess-p-verb
lin shoot_back_V = advV OP_shoot_V OP_back_Adv ; -- guess-p-verb
lin shoot_for_V2 = prepV2 OP_shoot_V OP_for_Prep ; -- guess-p-verb
lin shoot_off_V = advV OP_shoot_V OP_off_Adv ; -- guess-p-verb
lin shoot_out_V = advV OP_shoot_V OP_out_Adv ; -- guess-p-verb
lin shoot_up_V = mkV "shooter" ; -- UWN
lin shoot_up_V2 = prepV2 OP_shoot_V OP_up_Prep ; -- guess-p-verb
lin shooter_N = mkN "flingue" masculine | mkN "jeu" | mkN "tireur" masculine ; -- tocheck
lin shooting_N = mkN "tir" masculine ; -- tocheck
lin shop_N = L.shop_N ;
lin shop_V = variants {} ; --
lin shopkeeper_N = mkN "détaillant" masculine ; -- tocheck
lin shoplifter_N = mkN "voleur" ; -- UWN
lin shopperFem_N = mkN "acheteuse" feminine ; -- tocheck
lin shopperMasc_N = mkN "acheteur" masculine ; -- tocheck
lin shopping_N = mkN "shopping" masculine ; -- tocheck
lin shopwindow_N = mkN "vitrine" ; -- UWN
lin shopworn_A = mkA "banal" | mkA "fatigué" | mkA "mineur" | mkA "trivial" ; -- UWN
lin shore_N = mkN "bord" masculine ; -- tocheck
lin shoreline_N = mkN "rivage" masculine ; -- tocheck
lin shoring_N = mkN "étançonnement" masculine ; -- tocheck
lin short_A = L.short_A ;
lin short_Adv = variants {} ; --
lin short_N = variants {} ; --
lin short_V2 = mkV2 (mkV "court-circuiter") ; -- tocheck
lin short_term_A = variants {} ; --
lin shortage_N = mkN "défaut" masculine ; -- tocheck
lin shortcoming_N = mkN "défaut" ; -- tocheck
lin shortcut_N = mkN "raccourci" | mkN "raccourci" masculine ; -- tocheck
lin shorten_V2 = mkV2 (mkV "raccourcir") ; -- tocheck
lin shortfall_N = mkN "insuffisance" ; -- tocheck
lin shorthand_A = mkA "sténographie" ; -- UWN
lin shorthand_N = mkN "sténographie" feminine ; -- tocheck
lin shortia_N = mkN "shortia" ; -- UWN
lin shortlist_N = mkN "liste_restreinte" ; -- UWN
lin shot_N = mkN "poids" masculine | mkN "tir" masculine | mkN "dose" feminine | mkN "coup" masculine | mkN "plomb" masculine | mkN "piqure" feminine ; -- tocheck
lin shotgun_N = mkN "fusil" masculine ; -- tocheck
lin shotton_PN = mkPN "Shotton" ; -- status=guess src=geonames
lin shotts_PN = mkPN "Shotts" ; -- status=guess src=geonames
lin should_VV = S.must_VV ; ----
lin shoulder_N = mkN "épaule" feminine ; -- tocheck
lin shout_N = mkN "cri" masculine ; -- tocheck
lin shout_V = variants {} ; -- mkV2 (mkV "crier") ; -- tocheck
lin shout_V2 = mkV2 (mkV "crier") ; -- tocheck
lin shout_down_V2 = prepV2 OP_shout_V OP_down_Prep ; -- guess-p-verb
lin shout_out_V2 = prepV2 OP_shout_V OP_out_Prep ; -- guess-p-verb
lin shove_V2 = mkV2 (mkV "fourrer") ; -- tocheck
lin shovel_N = mkN "pelle" feminine ; -- tocheck
lin shovel_V2 = mkV2 (mkV "peller") ; -- tocheck
lin shovelful_N = mkN "bêche" | mkN "pelle" ; -- UWN
lin show_N = mkN "émission" feminine | mkN "démonstration" feminine | mkN "spectacle" masculine | mkN "exposition" feminine ; -- tocheck
lin show_V = reflV (mkV "montrer") ;
lin show_V2 = mkV2 "montrer" ;
lin show_VQ = mkVQ (mkV "montrer") ;
lin show_VS = mkVS (mkV "montrer") | mkVS (mkV "démontrer") ;
lin show_around_V2 = prepV2 OP_show_V OP_around_Prep ; -- guess-p-verb
lin show_in_V2 = prepV2 OP_show_V OP_in_Prep ; -- guess-p-verb
lin show_off_V = advV OP_show_V OP_off_Adv ; -- guess-p-verb
lin show_off_V2 = prepV2 OP_show_V OP_off_Prep ; -- guess-p-verb
lin show_out_V2 = prepV2 OP_show_V OP_out_Prep ; -- guess-p-verb
lin show_over_V3 = variants {} ; -- guess-p-verb
lin show_round_V2 = prepV2 OP_show_V OP_round_Prep ; -- guess-p-verb
lin show_through_V = advV OP_show_V OP_through_Adv ; -- guess-p-verb
lin show_up_V = advV OP_show_V OP_up_Adv ; -- guess-p-verb
lin show_up_V2 = prepV2 OP_show_V OP_up_Prep ; -- guess-p-verb
lin showdown_N = mkN "conflit" | mkN "confrontation" ; -- UWN
lin shower_N = mkN "averse" feminine | mkN "douche" feminine ; -- tocheck
lin shower_V2 = mkV2 (mkV "doucher") ; -- tocheck
lin showery_A = mkA "mouillé" | mkA "pluvieux" ; -- UWN
lin showman_N = mkN "showman" masculine ; -- tocheck
lin showroom_N = mkN "showroom" masculine ; -- tocheck
lin showy_A = mkA "tape-à-l'oeil" ; -- tocheck
lin shrapnel_N = mkN "shrapnel" masculine ; -- tocheck
lin shred_N = mkN "lambeau" masculine ; -- tocheck
lin shred_V2 = mkV2 (mkV "déchiqueter") | mkV2 (mkV I.fondre_V2) ; -- tocheck
lin shredder_N = mkN "broyeur" masculine ; -- tocheck
lin shrew_N = mkN "musaraigne" feminine | mkN "furie" feminine ; -- tocheck
lin shrewd_A = mkA "habile" | mkA "malin" | mkA "perspicace" ; -- tocheck
lin shrewdness_N = mkN "astuce" | mkN "perspicacité" ; -- UWN
lin shrewsbury_PN = mkPN "Shrewsbury" ; -- status=guess src=geonames
lin shriek_N = mkN "hurlement" ; -- tocheck
lin shriek_V2 = mkV2 (mkV "crier") ; -- tocheck
lin shrike_N = mkN "pie-grièche" feminine ; -- tocheck
lin shrill_A = mkA "strident" ; -- tocheck
lin shrillness_N = mkN "stridence" ; -- UWN
lin shrimp_N = mkN "crevette" feminine ; -- tocheck
lin shrine_N = mkN "sanctuaire" masculine ; -- tocheck
lin shrink_N = mkN "psy" masculine ; -- tocheck
lin shrink_V = variants {} ; -- mkV2 (mkV "diminuer") | mkV2 (reflV (mkV I.réduire_V2)) | mkV2 (mkV "rétrécir") ; -- tocheck
lin shrink_V2 = mkV2 (mkV "diminuer") | mkV2 (reflV (mkV I.réduire_V2)) | mkV2 (mkV "rétrécir") ; -- tocheck
lin shrivel_V2 = mkV2 (reflV (mkV "rider")) | mkV2 (reflV (mkV "flétrir")) ; -- tocheck
lin shroud_N = mkN "linceul" masculine | mkN "hauban" masculine ; -- tocheck
lin shrub_N = mkN "arbrisseau" masculine ; -- tocheck
lin shrubbery_N = mkN "fruticée" feminine ; -- tocheck
lin shrubby_A = mkA "fruticuleux" ; -- UWN
lin shrug_N = mkN "hausser_les_épaules" ; -- UWN
lin shrug_V2 = variants {} ; --
lin shrug_off_V2 = prepV2 (lin V OP_shrug_V2) OP_off_Prep ; -- guess-p-verb
lin shuck_N = mkN "barbe_de_trois_jours" | mkN "chaume" | mkN "paille" ; -- UWN
lin shudder_N = mkN "frisson" masculine | mkN "tremblement" masculine ; -- tocheck
lin shudder_V = mkV (mkV "frissonner") ; -- tocheck
lin shuffle_N = mkN "battage" masculine ; -- tocheck
lin shuffle_V = mkV "mélanger" | mkV "retourner" ; -- UWN
lin shuffle_V2 = mkV2 (mkV I.battre_V2) ; -- tocheck
lin shun_V2 = mkV2 (mkV "éviter") | mkV2 (mkV I.fuir_V2) ; -- tocheck
lin shut_V2 = mkV2 (mkV "fermer") ; -- tocheck
lin shut_away_V2 = mkV2 (advV (lin V OP_shut_V2) OP_away_Adv ) ; -- guess-p-verb
lin shut_down_V2 = prepV2 (lin V OP_shut_V2) OP_down_Prep ; -- guess-p-verb
lin shut_in_V2 = prepV2 (lin V OP_shut_V2) OP_in_Prep ; -- guess-p-verb
lin shut_off_V = advV (lin V OP_shut_V2) OP_off_Adv ; -- guess-p-verb
lin shut_off_V2 = prepV2 (lin V OP_shut_V2) OP_off_Prep ; -- guess-p-verb
lin shut_out_V2 = prepV2 (lin V OP_shut_V2) OP_out_Prep ; -- guess-p-verb
lin shut_out_of_V2 = prepV2 (advV (lin V OP_shut_V2) OP_out_Adv ) OP_of_Prep ; -- guess-p-verb
lin shut_up_V2 = prepV2 (lin V OP_shut_V2) OP_up_Prep ; -- guess-p-verb
lin shut_yourself_away_V = variants {} ; -- guess-p-verb
lin shutdown_N = mkN "arrêt" ; -- tocheck
lin shutout_N = mkN "blanchissage" | mkN "mouffette" ; -- UWN
lin shutter_N = mkN "obturateur" masculine | mkN "volet" masculine ; -- tocheck
lin shuttle_N = mkN "navette" feminine ; -- tocheck
lin shuttlecock_N = mkN "volant" masculine ; -- tocheck
lin shy_A = mkA "apeuré" | mkA "prudent" | mkA "embarrassé" | mkA "timide" ; -- tocheck
lin shyness_N = mkN "timidité" ; -- tocheck
lin shyster_N = mkN "chicaneur" | mkN "enculeur_de_mouches" ; -- UWN
lin sial_N = mkN "sial" ; -- UWN
lin sibilant_A = mkA "sifflant" ; -- tocheck
lin sibilant_N = mkN "sifflant" masculine ; -- tocheck
lin sibling_N = mkN "fratrie" | mkN "frère" | mkN "germain" | mkN "sœur" | mkN "sœur_fratrie" ; -- UWN
lin sibyl_N = mkN "sibylle" feminine ; -- tocheck
lin sibylline_A = mkA "sibyllin" ; -- tocheck
lin sic_Adv = mkAdv "sic" ; -- tocheck
lin sick_A = mkA "malade" ; -- tocheck
lin sick_N = variants {} ; --
lin sickbay_N = mkN "infirmerie" feminine ; -- tocheck
lin sickish_A = mkA "malade" | mkA "malsain" | mkA "écœurant" ; -- UWN
lin sickle_N = mkN "faucille" feminine ; -- tocheck
lin sickly_A = mkA "maladif" ; -- tocheck
lin sickness_N = mkN "maladie" feminine ; -- tocheck
lin side_N = mkN "côté" masculine | mkN "face" feminine ;
lin sideboard_N = mkN "bar" | mkN "comptoire" ; -- UWN
lin sideburn_N = mkN "burnside" | mkN "côtelette" ; -- UWN
lin sidecar_N = mkN "side-car" ; -- UWN
lin sidereal_A = mkA "sidéral" ; -- tocheck
lin sideropenia_N = mkN "hyposidérémie" ; -- UWN
lin siderosis_N = mkN "sidérose" ; -- UWN
lin side_stroke_N = mkN "nage_indienne" ; -- UWN
lin sidetrack_N = mkN "bardage" ; -- UWN
lin sidewalk_N = mkN "trottoir" masculine ; -- tocheck
lin sideways_Adv = variants {} ; --
lin siding_N = mkN "bardage" ; -- UWN
lin sidle_V = mkV (reflV (mkV "faufiler")) ; -- tocheck
lin sidmouth_PN = mkPN "Sidmouth" ; -- status=guess src=geonames
lin sidney_PN = mkPN "Sidney" ; -- status=guess src=geonames
lin siege_N = mkN "siège" ; -- tocheck
lin siesta_N = mkN "sieste" feminine ; -- tocheck
lin sieve_N = mkN "crible" masculine | mkN "tamis" masculine ; -- tocheck
lin sieve_V2 = mkV2 (mkV "tamiser") ; -- tocheck
lin sift_V2 = mkV2 (mkV "éparpiller") | mkV2 (mkV "passer") ; -- tocheck
lin sigh_N = mkN "soupir" masculine ; -- tocheck
lin sigh_V = variants {} ; -- mkV2 (mkV "soupirer") ; -- tocheck
lin sigh_V2 = mkV2 (mkV "soupirer") ; -- tocheck
lin sigh_VS = variants {} ; -- mkV2 (mkV "soupirer") ; -- tocheck
lin sight_N = mkN "mire" feminine | mkN "vue" feminine ; -- tocheck
lin sight_V2 = mkV2 (mkV I.apercevoir_V2) | mkV2 (mkV "viser") | mkV2 (mkV I.voir_V2) ; -- tocheck
lin sightseeing_N = mkN "tourisme" masculine ; -- tocheck
lin sigma_N = mkN "sigma" masculine ; -- tocheck
lin sigmoid_A = mkA "sigmoïde" ; -- tocheck
lin sign_N = mkN "symbole" masculine | mkN "signe" masculine ; -- tocheck
lin sign_V = mkV "abonner" | mkV "signer" | mkV "souscrire" ; -- UWN
lin sign_V2 = variants {} ; -- mkV2V (mkV "signer") ; -- tocheck
lin sign_away_V2 = mkV2 (advV OP_sign_V OP_away_Adv ) ; -- guess-p-verb
lin sign_for_V3 = variants {} ; -- guess-p-verb
lin sign_in_V = advV OP_sign_V OP_in_Adv ; -- guess-p-verb
lin sign_in_V2 = prepV2 OP_sign_V OP_in_Prep ; -- guess-p-verb
lin sign_into_V2 = prepV2 OP_sign_V OP_into_Prep ; -- guess-p-verb
lin sign_off_V = advV OP_sign_V OP_off_Adv ; -- guess-p-verb
lin sign_off_V2 = prepV2 OP_sign_V OP_off_Prep ; -- guess-p-verb
lin sign_off_on_V2 = prepV2 (advV OP_sign_V OP_off_Adv ) OP_on_Prep ; -- guess-p-verb
lin sign_on_V = advV OP_sign_V OP_on_Adv ; -- guess-p-verb
lin sign_on_V2 = prepV2 OP_sign_V OP_on_Prep ; -- guess-p-verb
lin sign_on_with_V2 = prepV2 (advV OP_sign_V OP_on_Adv ) OP_with_Prep ; -- guess-p-verb
lin sign_out_V = advV OP_sign_V OP_out_Adv ; -- guess-p-verb
lin sign_out_V2 = prepV2 OP_sign_V OP_out_Prep ; -- guess-p-verb
lin sign_out_of_V2 = prepV2 (advV OP_sign_V OP_out_Adv ) OP_of_Prep ; -- guess-p-verb
lin sign_up_V = advV OP_sign_V OP_up_Adv ; -- guess-p-verb
lin sign_with_V2 = prepV2 OP_sign_V OP_with_Prep ; -- guess-p-verb
lin signage_N = mkN "signalisation" ; -- tocheck
lin signal_A = mkA "signal" ; -- UWN
lin signal_N = mkN "signal" masculine ; -- tocheck
lin signal_V2 = mkV2 (mkV "signaler") ; -- tocheck
lin signal_VS = variants {} ; -- mkV2 (mkV "signaler") ; -- tocheck
lin signalman_N = mkN "aiguilleur" ; -- UWN
lin signatory_N = mkN "signataire" ; -- tocheck
lin signature_N = mkN "signature" feminine ; -- tocheck
lin signboard_N = mkN "enseigne" feminine ; -- tocheck
lin signer_N = mkN "signataire" ; -- UWN
lin significance_N = mkN "signification" feminine ; -- tocheck
lin significant_A = mkA "significatif" ; -- tocheck
lin signification_N = mkN "importance" | mkN "importation" | mkN "importer" | mkN "intérêt" | mkN "sens" | mkN "sen|sens" | mkN "signifiance" | mkN "signification" ; -- UWN
lin significative_A = mkA "indicatif" | mkA "suggestif" ; -- UWN
lin signify_V2 = mkV2 (mkV "signifier") ; -- tocheck
lin signpost_N = mkN "pointeur" ; -- UWN
lin silage_N = mkN "silage" masculine ; -- tocheck
lin sileby_PN = mkPN "Sileby" ; -- status=guess src=geonames
lin silence_N = mkN "silence" masculine ; -- tocheck
lin silencer_N = mkN "silencieux" masculine ; -- tocheck
lin silene_N = mkN "silene" | mkN "silène" ; -- UWN
lin silent_A = mkA "silencieux" ; -- tocheck
lin silesia_N = mkN "silésie" ; -- UWN
lin silhouette_N = mkN "silhouette" feminine ; -- tocheck
lin silica_N = mkN "silice" feminine ; -- tocheck
lin silicate_N = mkN "silicate" masculine ; -- tocheck
lin silicon_N = mkN "silicium" masculine ; -- tocheck
lin silicone_N = mkN "silicone" masculine ; -- tocheck
lin silique_N = mkN "silique" ; -- UWN
lin silk_N = mkN "soie" feminine ; -- tocheck
lin silken_A = mkA "glissant" | mkA "soyeux" ; -- UWN
lin silks_N = mkN "tissu" ; -- UWN
lin silky_A = mkA "soyeux" ; -- tocheck
lin sill_N = mkN "linteau" masculine | mkN "rebord" masculine ; -- tocheck
lin silly_A = mkA "idiot" | mkA "bébête" | mkA "abruti" ; -- tocheck
lin silly_N = mkN "ridicule" ; -- UWN
lin silo_N = mkN "silo" masculine | mkN "silo" ; -- tocheck
lin silsden_PN = mkPN "Silsden" ; -- status=guess src=geonames
lin silt_N = mkN "vase" ; -- tocheck
lin silurid_N = mkN "siluridé" masculine ; -- tocheck
lin silva_N = mkN "sylva" ; -- UWN
lin silvan_A = mkA "sylvestre" ; -- UWN
lin silver_A = mkA "argenté" ; -- tocheck
lin silver_N = L.silver_N ;
lin silver_fish_N = mkN "poisson_d'argent" ; -- UWN
lin silversmith_N = mkN "chaudronnier_d'argent" ; -- UWN
lin silverware_N = mkN "argenterie" feminine ; -- tocheck
lin silvery_A = mkA "argenté" ; -- tocheck
lin silvia_PN = mkPN "Silvia" ; -- status=guess src=geonames
lin silviculture_N = mkN "sylviculture" feminine ; -- tocheck
lin simian_A = mkA "simien" ; -- tocheck
lin simian_N = mkN "simien" ; -- UWN
lin similar_A = mkA "pareil" | mkA "similaire" ;
lin similarity_N = mkN "similarité" feminine ; -- tocheck
lin simile_N = mkN "comparaison" feminine ; -- tocheck
lin similitude_N = mkN "similitude" feminine ; -- tocheck
lin simmer_N = mkN "mijoter" | mkN "ébullition" ; -- UWN
lin simmer_V2 = mkV2 (mkV "mijoter") ; -- tocheck
lin simony_N = mkN "simonie" feminine ; -- tocheck
lin simoom_N = mkN "simoun" masculine ; -- tocheck
lin simoon_N = mkN "simoun" ; -- UWN
lin simper_N = mkN "minauderie" feminine ; -- tocheck
lin simper_V = mkV (mkV "minauder") ; -- tocheck
lin simperingly_Adv = mkAdv "pusillanimement" | mkAdv "timidement" ; -- UWN
lin simple_A = mkA "simple" ; -- tocheck
lin simple_N = mkN "simple" masculine ; -- tocheck
lin simpleton_N = mkN "nigaud" masculine ; -- tocheck
lin simplicity_N = mkN "simplicité" ; -- tocheck
lin simplification_N = mkN "simplification" feminine ; -- tocheck
lin simplify_V = mkV "réduire" | mkV "simplifier" ; -- UWN
lin simplify_V2 = mkV2 (mkV "simplifier") ; -- tocheck
lin simplistic_A = mkA "simpliste" ; -- tocheck
lin simulacrum_N = mkN "simulacre" masculine ; -- tocheck
lin simulation_N = mkN "simulation" feminine ; -- tocheck
lin simulcast_N = mkN "Simulcast" | mkN "Simulticast" | mkN "simulcast" | mkN "simulticast" ; -- UWN
lin simultaneity_N = mkN "simultanéité" feminine ; -- tocheck
lin simultaneous_A = mkA "simultané" ; -- tocheck
lin simultaneousness_N = mkN "simultanéité" ; -- tocheck
lin sin_N = mkN "péché" masculine ; -- tocheck
lin sin_V = mkV (mkV "pécher") ; -- tocheck
lin since_Adv = mkAdv "depuis" ;
lin since_Prep = mkPrep "depuis" | mkPrep "dès" ;
lin since_Subj = M.mkSubj ("depuis" ++ Ph.elisQue) ;
lin sincere_A = mkA "sincère" ;
lin sincerity_N = mkN "sincérité" ;
lin sine_N = mkN "sinus" masculine ; -- tocheck
lin sine_qua_non_N = mkN "conditio_sine_qua_non" | mkN "condition_sine_qua_non" | mkN "sine_qua_non" ; -- UWN
lin sinecure_N = mkN "sinécure" ; -- tocheck
lin sinful_A = mkA "coupable" ; -- tocheck
lin sinfulness_N = mkN "pécher" | mkN "péché" ; -- UWN
lin sing_V = L.sing_V ;
lin sing_V2 = mkV2 (mkV "chanter") ; -- tocheck
lin sing_along_V = advV OP_sing_V OP_along_Adv ; -- guess-p-verb
lin sing_out_V = advV OP_sing_V OP_out_Adv ; -- guess-p-verb
lin sing_up_V = advV OP_sing_V OP_up_Adv ; -- guess-p-verb
lin singapore_PN = mkPN "Singapour" ; -- status=guess src=geonames
lin singaporeanFem_N = variants {} ; ---- sense to be split
lin singaporeanMasc_N = variants {} ; ---- sense to be split
lin singe_N = mkN "roussir" ; -- UWN
lin singe_V = mkV "roussir" ; -- UWN
lin singe_V2 = mkV2 (mkV "roussir") ; -- tocheck
lin singer_N = mkN "chanteur" masculine ; -- tocheck
lin singing_N = mkN "chant" masculine ; -- tocheck
lin single_1_A = mkA "singulier" ;
lin single_2_A = mkA "célibataire" ;
lin single_A = mkA "célibataire" ; -- tocheck
lin single_N = mkN "simple" masculine | mkN "célibataire" ; -- tocheck
lin single_minded_A = mkA "déterminé" ; -- tocheck
lin singlet_N = mkN "gilet" | mkN "maillot_de_corps" | mkN "singulet" ; -- UWN
lin singleton_N = mkN "singleton" masculine ; -- tocheck
lin singular_A = mkA "singulier" ; -- tocheck
lin singular_N = mkN "singulier" masculine ; -- tocheck
lin singularity_N = mkN "singularité" feminine | mkN "point" ; -- tocheck
lin sinister_A = mkA "sinistre" | mkA "sénestre" ; -- tocheck
lin sink_N = mkN "évier" masculine ; -- tocheck
lin sink_V = variants {} ; -- mkV2 (mkV "couler") | mkV2 (reflV (mkV "enfoncer")) ; -- tocheck
lin sink_V2 = mkV2 (mkV "couler") | mkV2 (reflV (mkV "enfoncer")) ; -- tocheck
lin sink_in_V = advV OP_sink_V OP_in_Adv ; -- guess-p-verb
lin sinkable_A = mkA "submersible" ; -- tocheck
lin sinker_N = mkN "plomb" masculine ; -- tocheck
lin sinkhole_N = mkN "doline" feminine ; -- tocheck
lin sinless_A = mkA "innocent" ; -- UWN
lin sinlessness_N = mkN "pureté" ; -- UWN
lin sinner_N = mkN "pécheur" masculine ; -- tocheck
lin sinologist_N = mkN "sinologue" ; -- tocheck
lin sinology_N = mkN "sinologie" feminine ; -- tocheck
lin sinuosity_N = mkN "sinuosité" ; -- tocheck
lin sinuous_A = mkA "sinueux" ; -- tocheck
lin sinus_N = mkN "sinus" masculine ; -- tocheck
lin sinusitis_N = mkN "sinusite" masculine ; -- tocheck
lin sip_N = mkN "gorgée" feminine ; -- tocheck
lin sip_V = variants {} ; -- mkV2 (mkV "siroter") ; -- tocheck
lin sip_V2 = mkV2 (mkV "siroter") ; -- tocheck
lin sir_N = mkN "monsieur" masculine | mkN "seigneur" masculine ; -- tocheck
lin siracusa_PN = mkPN "Syracuse" ; -- status=guess src=geonames
lin sirdar_N = mkN "sirdar" ; -- UWN
lin sire_V2 = mkV2 (mkV I.saillir_V2) ; -- tocheck
lin siren_N = mkN "sirène" feminine ; -- tocheck
lin sirloin_N = mkN "aloyau" ; -- tocheck
lin sirocco_N = mkN "sirocco" | mkN "tempête_de_sable" ; -- UWN
lin sirup_N = mkN "sirop" ; -- UWN
lin siskin_N = mkN "tarin" masculine ; -- tocheck
lin sissy_N = mkN "efféminé" masculine ; -- tocheck
lin sister_N = L.sister_N ;
lin sister_in_law_N = mkN "belle-soeur" feminine ; -- tocheck
lin sisterhood_N = mkN "sororité" ; -- tocheck
lin sisterly_A = mkA "sororal" | mkA "sororel" ; -- UWN
lin sit_V = L.sit_V ;
lin sit_V2 = I.asseoir_V2 ;
lin sit_about_V = advV OP_sit_V OP_about_Adv ; -- guess-p-verb
lin sit_around_V = mkV "asseoir" ; -- UWN
lin sit_back_V = advV OP_sit_V OP_back_Adv ; -- guess-p-verb
lin sit_by_V = advV OP_sit_V OP_by_Adv ; -- guess-p-verb
lin sit_down_V2 = prepV2 OP_sit_V OP_down_Prep ; -- guess-p-verb
lin sit_for_V2 = prepV2 OP_sit_V OP_for_Prep ; -- guess-p-verb
lin sit_in_N = mkN "sit-in" masculine ; -- tocheck
lin sit_in_V2 = prepV2 OP_sit_V OP_in_Prep ; -- guess-p-verb
lin sit_in_for_V2 = prepV2 (advV OP_sit_V OP_in_Adv ) OP_for_Prep ; -- guess-p-verb
lin sit_in_on_V2 = prepV2 (advV OP_sit_V OP_in_Adv ) OP_on_Prep ; -- guess-p-verb
lin sit_on_V2 = prepV2 OP_sit_V OP_on_Prep ; -- guess-p-verb
lin sit_out_V2 = prepV2 OP_sit_V OP_out_Prep ; -- guess-p-verb
lin sit_over_V2 = prepV2 OP_sit_V OP_over_Prep ; -- guess-p-verb
lin sit_through_V2 = prepV2 OP_sit_V OP_through_Prep ; -- guess-p-verb
lin sit_up_V = mkV "veiller" ; -- UWN
lin sit_with_V2 = prepV2 OP_sit_V OP_with_Prep ; -- guess-p-verb
lin sitar_N = mkN "sitar" masculine ; -- tocheck
lin site_N = mkN "site" masculine ; -- tocheck
lin sittingbourne_PN = mkPN "Sittingbourne" ; -- status=guess src=geonames
lin situate_V2 = variants {} ; --
lin situation_N = mkN "situation" feminine ;
lin sixfold_A = mkA "sextuple" ; -- UWN
lin sixpence_N = mkN "tanneur" ; -- UWN
lin size_N = mkN "taille" feminine ; -- tocheck
lin sizzle_N = mkN "grésillement" masculine ; -- tocheck
lin sizzle_V = mkV (mkV "grésiller") ; -- tocheck
lin skate_N = mkN "patinage" masculine | mkN "patin" masculine | mkN "patin" ; -- tocheck
lin skate_V = mkV (mkV "glisser") ; -- tocheck
lin skater_N = mkN "patineur" masculine ; -- tocheck
lin skating_N = mkN "glisse" feminine ; -- tocheck
lin skedaddle_V = mkV (mkV "déguerpir") ; -- tocheck
lin skegness_PN = mkPN "Skegness" ; -- status=guess src=geonames
lin skein_N = mkN "écheveau" masculine ; -- tocheck
lin skeletal_A = mkA "squelettique" ; -- tocheck
lin skeleton_N = mkN "squelette" masculine ; -- tocheck
lin skelmersdale_PN = mkPN "Skelmersdale" ; -- status=guess src=geonames
lin skeptic_N = mkN "sceptique" ; -- tocheck
lin skeptical_A = mkA "dubitatif" | mkA "sceptique" ; -- tocheck
lin skepticism_N = mkN "scepticisme" masculine ; -- tocheck
lin sketch_N = mkN "esquisse" feminine | mkN "ébauche" feminine | mkN "sketch" masculine ; -- tocheck
lin sketch_V2 = mkV2 (mkV "esquisser") ; -- tocheck
lin sketchy_A = mkA "louche" | mkA "sommaire" ; -- tocheck
lin skew_A = mkA "gauche" ; -- tocheck
lin skew_V2 = mkV2 (mkV "fausser") | mkV2 (mkV "biaiser") ; -- tocheck
lin skewer_N = mkN "enfilade" feminine | mkN "brochette" feminine ; -- tocheck
lin skewer_V2 = mkV2 (mkV "embrocher") ; -- tocheck
lin ski_N = mkN "ski" masculine ; -- tocheck
lin ski_V = mkV (mkV "skier") ; -- tocheck
lin skid_N = mkN "dérapage" masculine ; -- tocheck
lin skid_V2 = mkV2 (mkV "déraper") ; -- tocheck
lin skidder_N = mkN "débusqueur" masculine ; -- tocheck
lin skier_N = mkN "skieur" masculine ; -- tocheck
lin skiff_N = mkN "esquif" masculine ; -- tocheck
lin skiffle_N = mkN "skiffle" ; -- UWN
lin skiing_N = mkN "ski" ; -- tocheck
lin skilful_A = mkA "adroit" ; -- tocheck
lin skill_N = mkN "habileté" feminine ; -- tocheck
lin skill_V = variants {} ; --
lin skilled_A = mkA "adroit" | mkA "compétent" | mkA "habile" | mkA "savant" ; -- UWN
lin skillet_N = mkN "poêle" | mkN "poêle_à_frire" ; -- UWN
lin skillful_A = variants {} ;
lin skillfulness_N = mkN "adresse" | mkN "habileté" ; -- UWN
lin skim_V2 = mkV2 (mkV "feuilleter") | mkV2 (mkV "écrémer") | mkV2 (mkV "ricocher") ; -- tocheck
lin skimmer_N = mkN "bec-en-ciseaux" ; -- UWN
lin skimpy_A = mkA "maigre" ; -- UWN
lin skin_N = L.skin_N ;
lin skin_V2 = mkV2 (mkV "écorcher") ; -- tocheck
lin skinflint_N = mkN "radin" ; -- tocheck
lin skinhead_N = mkN "skinhead" masculine ; -- tocheck
lin skink_N = mkN "scinque" masculine ; -- tocheck
lin skinny_A = mkA "maigre" ; -- tocheck
lin skip_N = mkN "benne" feminine ; -- tocheck
lin skip_V2 = mkV2 (mkV "sautiller") ; -- tocheck
lin skipjack_N = mkN "elateridae" | mkN "taupin" ; -- UWN
lin skipper_N = mkN "capitaine" | mkN "capitaine_de_vaisseau" ; -- UWN
lin skipton_PN = mkPN "Skipton" ; -- status=guess src=geonames
lin skirmish_N = mkN "escarmouche" feminine ; -- tocheck
lin skirmish_V = mkV (mkV "escarmoucher") ; -- tocheck
lin skirmisher_N = mkN "escarmoucheur" ; -- tocheck
lin skirt_N = mkN "jupe" feminine ; -- tocheck
lin skit_N = mkN "sketch" masculine ; -- tocheck
lin skittish_A = mkA "nerveux" ; -- UWN
lin skittishness_N = mkN "timidité" ; -- UWN
lin skittle_N = mkN "quille" ; -- UWN
lin skittles_N = mkN "quille" ; -- UWN
lin skivvy_N = mkN "esclaves" | mkN "slavey" ; -- UWN
lin skopje_PN = mkPN "Skopje" ; -- status=guess src=geonames
lin skua_N = mkN "labbe" feminine ; -- tocheck
lin skulk_V = mkV (reflV (mkV "cacher")) ; -- tocheck
lin skulker_N = mkN "lurker" | mkN "voyeur" ; -- UWN
lin skull_N = mkN "crâne" masculine ; -- tocheck
lin skullcap_N = mkN "scutellaire" feminine | mkN "kippa" feminine ; -- tocheck
lin skunk_N = mkN "moufette" feminine ; -- tocheck
lin sky_N = L.sky_N ;
lin skydiving_N = mkN "parachutisme" masculine ; -- tocheck
lin skylight_N = mkN "claires-voies" | mkN "fenêtre_de_toit" | mkN "lucarne" | mkN "éclairage" ; -- UWN
lin skyline_N = mkN "horizon" masculine ; -- tocheck
lin skyscraper_N = mkN "gratte-ciel" masculine ; -- tocheck
lin skywriting_N = mkN "écriture_de_ciel" ; -- UWN
lin slab_N = mkN "dalle" feminine | mkN "chape" feminine ; -- tocheck
lin slack_A = mkA "négligent" ; -- UWN
lin slack_N = mkN "gravier" masculine ; -- tocheck
lin slacker_N = mkN "paresseux" masculine ; -- tocheck
lin slackness_N = mkN "négligence" ; -- UWN
lin slacks_N = mkN "jeans" ; -- tocheck
lin slag_N = mkN "pute" feminine | mkN "scorie" feminine ; -- tocheck
lin slalom_N = mkN "slalom" masculine ; -- tocheck
lin slam_V = variants {} ; -- mkV2 (mkV "claquer") ; -- tocheck
lin slam_V2 = mkV2 (mkV "claquer") ; -- tocheck
lin slander_N = mkN "calomnie" feminine ; -- tocheck
lin slander_V2 = mkV2 (mkV "calomnier") ; -- tocheck
lin slanderer_N = mkN "calomniateur" masculine ; -- tocheck
lin slanderous_A = mkA "diffamatoire" ; -- tocheck
lin slang_N = mkN "argot" masculine ; -- tocheck
lin slant_N = mkN "connotation" feminine | mkN "biais" feminine ; -- tocheck
lin slant_V2 = mkV2 (mkV "biaiser") | mkV2 (mkV "incliner") ; -- tocheck
lin slantwise_Adv = mkAdv "obliquement" ; -- UWN
lin slap_Adv = mkAdv "gifle" ; -- UWN
lin slap_N = mkN "claque" feminine ; -- tocheck
lin slap_V2 = variants {} ; --
lin slapdash_A = mkA "bâclé" ; -- tocheck
lin slapdash_Adv = mkAdv "gifle" ; -- UWN
lin slapper_N = mkN "putain" feminine ; -- tocheck
lin slapshot_N = mkN "Le_tir_frappé" | mkN "Tir_frappé" | mkN "le_tir_frappé" | mkN "tir_frappé" ; -- UWN
lin slash_N = mkN "entaille" feminine ; -- tocheck
lin slash_V2 = mkV2 (mkV "entailler") ; -- tocheck
lin slasher_N = mkN "slasher" masculine ; -- tocheck
lin slat_N = mkN "pale" | mkN "palette" feminine ; -- tocheck
lin slate_N = mkN "ardoise" feminine ; -- tocheck
lin slaughter_N = mkN "abattage" masculine | mkN "carnage" masculine ; -- tocheck
lin slaughterer_N = mkN "boucher" ; -- UWN
lin slaughterhouse_N = mkN "abattoir" ; -- tocheck
lin slave_N = mkN "esclave" feminine | mkN "esclave" masculine ; -- tocheck
lin slaveholder_N = mkN "maître" ; -- UWN
lin slaver_N = mkN "maître" ; -- UWN
lin slaver_V = mkV (mkV "baver") ; -- tocheck
lin slavery_N = mkN "esclavage" masculine ; -- tocheck
lin slavey_N = mkN "esclaves" | mkN "slavey" ; -- UWN
lin slaw_N = mkN "coleslaw" ; -- UWN
lin slay_V2 = mkV2 (mkV "tuer") ; -- tocheck
lin slayer_N = mkN "meurtrier" | mkN "slayer" ; -- UWN
lin sleaford_PN = mkPN "Sleaford" ; -- status=guess src=geonames
lin sleazy_A = mkA "louche" ; -- UWN
lin sled_N = mkN "luge" feminine | mkN "traîneau" masculine ; -- tocheck
lin sledge_N = mkN "masse" feminine | mkN "traîneau" masculine ; -- tocheck
lin sledgehammer_N = mkN "masse" ; -- UWN
lin sleek_A = mkA "brillant" ; -- tocheck
lin sleep_N = mkN "sommeil" masculine | mkN "chassie" feminine ; -- tocheck
lin sleep_V = L.sleep_V ;
lin sleep_in_V = advV OP_sleep_V OP_in_Adv ; -- guess-p-verb
lin sleep_off_V2 = prepV2 OP_sleep_V OP_off_Prep ; -- guess-p-verb
lin sleep_on_V2 = prepV2 OP_sleep_V OP_on_Prep ; -- guess-p-verb
lin sleep_over_V = mkV "rester" ; -- UWN
lin sleep_through_V2 = prepV2 OP_sleep_V OP_through_Prep ; -- guess-p-verb
lin sleeper_N = mkN "traverse" feminine | mkN "dormeur" masculine ; -- tocheck
lin sleepiness_N = mkN "somnolence" feminine ; -- tocheck
lin sleeping_A = variants {} ; --
lin sleeping_N = mkN "sommeil" masculine ; -- tocheck
lin sleepover_N = mkN "soirée_pyjama" ; -- UWN
lin sleepwalker_N = mkN "somnambule" ; -- UWN
lin sleepwalking_N = mkN "somnambulisme" masculine ; -- tocheck
lin sleepy_A = mkA "somnolent" ; -- tocheck
lin sleepy_head_N = mkN "endormi" masculine ; -- tocheck
lin sleet_N = mkN "grésil" masculine ; -- tocheck
lin sleet_V = mkV (mkV "grésiller") ; -- tocheck
lin sleeve_N = mkN "chemise" | mkN "pochette" | mkN "manche" feminine ; -- tocheck
lin sleigh_N = mkN "traîneau" masculine ; -- tocheck
lin sleight_N = mkN "dextérité" ; -- UWN
lin slender_A = mkA "svelte" ; -- tocheck
lin slice_N = mkN "tranche" feminine ; -- tocheck
lin slice_V2 = mkV2 (mkV "trancher") ; -- tocheck
lin slick_A = mkA "glissant" ; -- tocheck
lin slick_N = mkN "glissant" ; -- UWN
lin slicker_N = mkN "ciré" | mkN "toile_huilée" ; -- UWN
lin slickness_N = mkN "glissant" ; -- UWN
lin slide_N = mkN "toboggan" masculine | mkN "glissement" | mkN "diapo" ; -- tocheck
lin slide_V = mkV "déraper" | mkV "glisser" ; -- UWN
lin slide_V2 = mkV2 (mkV "glisser") ; -- tocheck
lin slight_A = mkA "insignifiant" ; -- tocheck
lin sligo_PN = mkPN "Sligo" ; -- status=guess src=geonames
lin slim_A = mkA "mince" ; -- tocheck
lin slim_V2 = mkV2 (mkV "maigrir") ; -- tocheck
lin slime_N = mkN "boue" | mkN "lie" ; -- UWN
lin slimed_A = mkA "muqueux" ; -- UWN
lin slimy_A = mkA "visqueux" ; -- tocheck
lin sling_N = mkN "écharpe" feminine | mkN "fronde" feminine | mkN "hauban" | mkN "jet" masculine ; -- tocheck
lin sling_V2 = mkV2 (mkV "lancer") ; -- tocheck
lin slinger_N = mkN "frondeur" masculine ; -- tocheck
lin slingshot_N = mkN "fronde" feminine ; -- tocheck
lin slip_N = mkN "glissade" feminine | mkN "fiche" feminine ; -- tocheck
lin slip_V = mkV "déraper" | mkV "glisser" ; -- UWN
lin slip_V2 = mkV2 (mkV "glisser") ; -- tocheck
lin slip_away_V = advV OP_slip_V OP_away_Adv ; -- guess-p-verb
lin slip_by_V = advV OP_slip_V OP_by_Adv ; -- guess-p-verb
lin slip_down_V = advV OP_slip_V OP_down_Adv ; -- guess-p-verb
lin slip_in_V2 = prepV2 OP_slip_V OP_in_Prep ; -- guess-p-verb
lin slip_into_V2 = prepV2 OP_slip_V OP_into_Prep ; -- guess-p-verb
lin slip_off_V = advV OP_slip_V OP_off_Adv ; -- guess-p-verb
lin slip_off_V2 = prepV2 OP_slip_V OP_off_Prep ; -- guess-p-verb
lin slip_off_to_V2 = prepV2 (advV OP_slip_V OP_off_Adv ) OP_to_Prep ; -- guess-p-verb
lin slip_on_V2 = prepV2 OP_slip_V OP_on_Prep ; -- guess-p-verb
lin slip_out_V = advV OP_slip_V OP_out_Adv ; -- guess-p-verb
lin slip_up_V = advV OP_slip_V OP_up_Adv ; -- guess-p-verb
lin slipknot_N = mkN "slipknot" ; -- UWN
lin slipper_N = mkN "chausson" masculine ; -- tocheck
lin slippery_A = mkA "glissant" ; -- tocheck
lin slippy_A = mkA "glissant" ; -- UWN
lin slipshod_A = mkA "bâclé" ; -- tocheck
lin slipway_N = mkN "Slipway" | mkN "slip" | mkN "slipway" ; -- UWN
lin slit_N = mkN "fente" feminine ; -- tocheck
lin slither_V = mkV (mkV "glisser") ; -- tocheck
lin sliver_N = mkN "languette" | mkN "tour" | mkN "écharde" ; -- tocheck
lin slob_N = mkN "lambin" masculine | mkN "souillon" ; -- tocheck
lin slobber_V2 = mkV2 (mkV "baver") ; -- tocheck
lin sloe_N = mkN "prunelle" feminine ; -- tocheck
lin slogan_N = mkN "slogan" masculine ; -- tocheck
lin sloop_N = mkN "sloop" masculine ; -- tocheck
lin slop_N = mkN "mélasse" ; -- UWN
lin slope_N = mkN "pente" feminine ; -- tocheck
lin slope_V = mkV "pencher" ; -- UWN
lin sloppy_A = mkA "bâclé" ; -- UWN
lin slosh_V2 = mkV2 (mkV "éclabousser") ; -- tocheck
lin slot_N = mkN "emplacement" masculine | mkN "barre" feminine ; -- tocheck
lin sloth_N = mkN "paresseux" masculine | mkN "paresse" feminine ; -- tocheck
lin slough_N = mkN "escarre" feminine ; -- tocheck
lin slough_PN = mkPN "Slough" ; -- status=guess src=geonames
lin slough_V = mkV "muer" ; -- UWN
lin slow_A = mkA "lent" ; -- tocheck
lin slow_Adv = mkAdv "aisément" | mkAdv "doucement" | mkAdv "facile" | mkAdv "facilement" | mkAdv "lent" | mkAdv "lentement" | mkAdv "progressivement" ; -- UWN
lin slow_V = variants {} ; -- mkV2 (mkV "ralentir") ; -- tocheck
lin slow_V2 = mkV2 (mkV "ralentir") ; -- tocheck
lin slowdown_N = mkN "ralentissement" | mkN "récession" ; -- UWN
lin slowness_N = mkN "lenteur" feminine ; -- tocheck
lin slub_N = mkN "nœud" ; -- UWN
lin sludge_N = mkN "lie" feminine ; -- tocheck
lin slug_N = mkN "pruneau" masculine | mkN "limace" feminine ; -- tocheck
lin sluggard_N = mkN "fainéant" masculine ; -- tocheck
lin sluggish_A = mkA "rétamé" | mkA "poussif" ; -- tocheck
lin sluggishness_N = mkN "langueur" | mkN "lenteur" | mkN "léthargie" ; -- UWN
lin sluice_N = mkN "écluse" feminine ; -- tocheck
lin sluicegate_N = mkN "vanne" ; -- UWN
lin slum_N = mkN "bidonville" masculine ; -- tocheck
lin slumber_N = mkN "somnolence" feminine ; -- tocheck
lin slumber_V2 = mkV2 (mkV "somnoler") ; -- tocheck
lin slumberer_N = mkN "traverse" ; -- UWN
lin slump_V = mkV "évier" ; -- UWN
lin slump_V2 = mkV2 (reflV (mkV "affaler")) ; -- tocheck
lin slurry_N = mkN "lisier" ; -- UWN
lin slush_N = mkN "barbotine" feminine | mkN "gadoue" feminine ; -- tocheck
lin slushy_A = mkA "affecté" | mkA "démonstratif" | mkA "histrionique" | mkA "hystérique" | mkA "larmoyant" | mkA "maniéré" | mkA "mièvre" | mkA "pleurnicheur" | mkA "sentimental" ; -- UWN
lin slut_N = mkN "pute" feminine | mkN "salope" feminine | mkN "truie" feminine ; -- tocheck
lin sly_A = mkA "espiègle" | mkA "sournois" ; -- tocheck
lin slyness_N = mkN "fourberie" | mkN "ruse" ; -- UWN
lin smack_Adv = mkAdv "gifle" ; -- UWN
lin small_A = L.small_A ;
lin small_Adv = mkAdv "jeune" | mkAdv "petit" ; -- UWN
lin small_N = mkN "jeune" | mkN "petit" ; -- UWN
lin small_minded_A = mkA "mesquin" ; -- tocheck
lin smallholding_N = mkN "petite_exploitation" ; -- UWN
lin smallness_N = mkN "petitesse" feminine ; -- tocheck
lin smallpox_N = mkN "variole" feminine ; -- tocheck
lin smarmy_A = mkA "obséquieux" ; -- tocheck
lin smart_A = mkA "habile" ; -- tocheck
lin smart_V = mkV (mkV "piquer") ; -- tocheck
lin smash_N = mkN "smash" masculine ; -- tocheck
lin smash_V = mkV "abaisser" | mkV "briser" | mkV "fracasser" | mkV "écraser" ; -- UWN
lin smash_V2 = mkV2 (mkV "écraser") | mkV2 (mkV "percuter") | mkV2 (mkV "fracasser") ; -- tocheck
lin smattering_N = mkN "poignée" ; -- UWN
lin smear_N = mkN "trace" ; -- tocheck
lin smear_V = mkV "lubrifier" ; -- UWN
lin smear_V2 = mkV2 (mkV "badigeonner") | mkV2 (mkV "diffamer") ; -- tocheck
lin smegma_N = mkN "Smegma" | mkN "smegma" ; -- UWN
lin smell_N = mkN "odorat" masculine | mkN "odeur" feminine ; -- tocheck
lin smell_V = L.smell_V ;
lin smell_V2 = I.sentir_V2 ;
lin smell_VA = mkVA (mkV I.sentir_V2) ; -- UWN
lin smelly_A = mkA "puant" ; -- tocheck
lin smelt_N = mkN "éperlan" masculine ; -- tocheck
lin smile_N = mkN "sourire" masculine ; -- tocheck
lin smile_V = variants {} ; -- mkV2 (mkV I.sourire_V2) ; -- tocheck
lin smiler_N = mkN "Physiognomonie" | mkN "physiognomonie" | mkN "physionomie" | mkN "visage" ; -- UWN
lin smirch_V2 = mkV2 (mkV "salir") ; -- tocheck
lin smirk_V = mkV (mkV "ricaner") ; -- tocheck
lin smithereens_N = mkN "smithereens" ; -- tocheck
lin smock_N = mkN "blouse" feminine ; -- tocheck
lin smocking_N = mkN "smocks" ; -- UWN
lin smog_N = mkN "smog" masculine ; -- tocheck
lin smoke_N = L.smoke_N ;
lin smoke_V = mkV "fumer" ; -- UWN
lin smoke_V2 = mkV2 (mkV I.descendre_V2) | mkV2 (mkV "fumer") ; -- tocheck
lin smoke_out_V2 = prepV2 OP_smoke_V OP_out_Prep ; -- guess-p-verb
lin smoker_N = mkN "fumeur" masculine ; -- tocheck
lin smokestack_N = mkN "cheminée" feminine ; -- tocheck
lin smoking_N = mkN "cigarette" | mkN "fumer" | mkN "fumée" | mkN "tabac" ; -- UWN
lin smooth_A = L.smooth_A ;
lin smooth_N = mkN "lisse" ; -- UWN
lin smooth_V = mkV "lustrer" ; -- UWN
lin smooth_V2 = mkV2 (mkV "lisser") ; -- tocheck
lin smoothie_N = mkN "smoothie" masculine ; -- tocheck
lin smoothness_N = mkN "lisseur" ; -- UWN
lin smother_V2 = mkV2 (mkV "étouffer") ; -- tocheck
lin smudge_V2 = mkV2 (mkV "maculer") ; -- tocheck
lin smug_A = mkA "suffisant" ; -- tocheck
lin smuggler_N = mkN "contrebandier" masculine ; -- tocheck
lin smuggling_N = mkN "trafique" masculine ; -- tocheck
lin smugness_N = mkN "indulgence" feminine ; -- tocheck
lin smut_N = mkN "cul" | mkN "porno" | mkN "pornographie" | mkN "érotisme" ; -- UWN
lin smutty_A = mkA "noir" ; -- UWN
lin snack_N = mkN "casse-croûte" ; -- tocheck
lin snag_N = mkN "pépin" masculine ; -- tocheck
lin snail_N = mkN "escargot" masculine ; -- tocheck
lin snake_N = L.snake_N ;
lin snake_V = mkV (mkV "serpenter") ; -- tocheck
lin snakebird_N = mkN "anhinga" ; -- UWN
lin snakefly_N = mkN "raphidioptera" | mkN "raphidioptères" ; -- UWN
lin snap_N = mkN "claquer" masculine ; -- tocheck
lin snap_V = mkV "claquer" ; -- UWN
lin snap_V2 = mkV2 (mkV I.rompre_V2) ; -- tocheck
lin snap_back_V = advV OP_snap_V OP_back_Adv ; -- guess-p-verb
lin snap_off_V2 = prepV2 OP_snap_V OP_off_Prep ; -- guess-p-verb
lin snap_out_of_V2 = prepV2 (advV OP_snap_V OP_out_Adv ) OP_of_Prep ; -- guess-p-verb
lin snap_to_it_V2 = variants {} ; -- guess-p-verb
lin snap_up_V2 = prepV2 OP_snap_V OP_up_Prep ; -- guess-p-verb
lin snapdragon_N = mkN "gueule-de-loup" feminine ; -- tocheck
lin snappish_A = mkA "hargneux" ; -- tocheck
lin snappy_A = mkA "fissa" ; -- tocheck
lin snapshot_N = mkN "instantané" masculine ; -- tocheck
lin snare_N = mkN "collet" masculine ; -- tocheck
lin snarl_N = mkN "embrouille" feminine ; -- tocheck
lin snatch_N = mkN "arraché" masculine | mkN "bribe" feminine ; -- tocheck
lin snatch_V = variants {} ; --
lin snatch_V2 = variants {} ; --
lin sneak_N = mkN "canari" | mkN "fink" ; -- UWN
lin sneak_V2 = mkV2 (mkV "faucher") | mkV2 (mkV "cacher") ; -- tocheck
lin sneaky_A = mkA "insaisissable" | mkA "sournois" ; -- tocheck
lin sneer_V = mkV (mkV "ricaner") ; -- tocheck
lin sneeze_N = mkN "éternuement" masculine ; -- tocheck
lin sneeze_V = mkV (mkV "éternuer") ; -- tocheck
lin snicker_N = mkN "ricanement" masculine ; -- tocheck
lin snicker_V = mkV (mkV "ricaner") ; -- tocheck
lin snide_A = mkA "hautain" ; -- UWN
lin sniff_N = mkN "renifler" ; -- UWN
lin sniff_V = mkV "renifler" ; -- UWN
lin sniff_V2 = mkV2 (mkV "renifler") ; -- tocheck
lin sniffy_A = mkA "altier" | mkA "dédaigneux" | mkA "hautain" | mkA "orgueilleux" ; -- UWN
lin snigger_N = mkN "ricanement" masculine ; -- tocheck
lin snigger_V = mkV (mkV "ricaner") ; -- tocheck
lin snip_N = mkN "Transform" ; -- UWN
lin snipe_N = mkN "bécasse" ; -- tocheck
lin snipe_V = mkV "attaquer" ; -- UWN
lin sniper_N = mkN "sniper" | mkN "tireur_d'élite" | mkN "tireur_isolé" ; -- UWN
lin snivel_N = mkN "rhinorrhée" feminine ; -- tocheck
lin snivel_V = mkV (mkV "pleurnicher") ; -- tocheck
lin sniveller_N = mkN "pleureur" | mkN "quérulent" ; -- UWN
lin snob_N = mkN "snob" ; -- tocheck
lin snog_V = mkV (mkV "peloter") ; -- tocheck
lin snook_N = mkN "centropomidae" ; -- UWN
lin snooker_N = mkN "billard" masculine ; -- tocheck
lin snoop_V = mkV (mkV "espionner") ; -- tocheck
lin snooze_N = mkN "roupillon" masculine ; -- tocheck
lin snore_N = mkN "ronflement" masculine ; -- tocheck
lin snore_V = mkV (mkV "ronfler") ; -- tocheck
lin snorkel_N = mkN "tuba" masculine ; -- tocheck
lin snort_N = mkN "reniflement" masculine ; -- tocheck
lin snort_V2 = mkV2 (mkV "renifler") ; -- tocheck
lin snot_N = mkN "morve" feminine ; -- tocheck
lin snotty_A = mkA "morveux" ; -- tocheck
lin snout_N = mkN "museau" masculine ; -- tocheck
lin snow_N = L.snow_N ;
lin snow_V2 = mkV2 (mkV "neiger") ; -- tocheck
lin snowball_N = mkN "boule_de_neige" ; -- UWN
lin snowboard_N = mkN "snowboard" masculine ; -- tocheck
lin snowboarder_N = mkN "snowboardeur" masculine ; -- tocheck
lin snowdrift_N = mkN "congère" feminine ; -- tocheck
lin snowdrop_N = mkN "perce-neige" masculine ; -- tocheck
lin snowfall_N = mkN "neige" ; -- UWN
lin snowman_N = mkN "bonhomme_de_neige" ; -- UWN
lin snowmobile_N = mkN "motoneige" ; -- tocheck
lin snowshoe_N = mkN "raquette_à_neige" ; -- UWN
lin snowsuit_N = mkN "esquimau" ; -- UWN
lin snowy_A = mkA "neigeux" ; -- tocheck
lin snub_N = mkN "camouflet" masculine ; -- tocheck
lin snub_V2 = mkV2 (mkV "snober") ; -- tocheck
lin snuff_N = mkN "renifler" ; -- UWN
lin snuffbox_N = mkN "tabatière" feminine ; -- tocheck
lin snuffer_N = mkN "éteignoir" ; -- UWN
lin so_AdA = S.so_AdA | lin AdA (ss "tant") ;
lin so_Adv = mkAdv "ainsi" | mkAdv "tellement" | mkAdv "aussi" ;
lin so_N = mkN "sol" ; -- UWN
lin so_Subj = M.mkSubjSubj "de façon que" ;
lin so_and_so_N = mkN "Untel" ; -- tocheck
lin so_called_A = mkA "soi-disant" ; -- tocheck
lin so_so_Adv = mkAdv "couci-couça" ; -- tocheck
lin soak_V = mkV "immerger" | mkV "tremper" ; -- UWN
lin soak_V2 = mkV2 (mkV "tremper") | mkV2 (mkV "éponger") ; -- tocheck
lin soak_up_V = mkV "captiver" | mkV "obnubiler" ; -- UWN
lin soap_N = mkN "savon" masculine ; -- tocheck
lin soap_V2 = mkV2 (mkV "savonner") ; -- tocheck
lin soapberry_N = mkN "savonnier" masculine ; -- tocheck
lin soapbox_N = mkN "tribune" ; -- tocheck
lin soapstone_N = mkN "craie_de_briançon" | mkN "pierre_ollaire" | mkN "pierre_à_savon" | mkN "stéatite" ; -- UWN
lin soapsuds_N = mkN "mousse" ; -- UWN
lin soar_V = variants {} ; -- mkV2 (mkV "planer") | mkV2 (mkV "monter") ; -- tocheck
lin soar_V2 = mkV2 (mkV "planer") | mkV2 (mkV "monter") ; -- tocheck
lin sob_N = mkN "sanglot" masculine ; -- tocheck
lin sob_V = mkV "sangloter" ; -- UWN
lin sob_V2 = mkV2 (mkV "sangloter") ; -- tocheck
lin sober_A = mkA "sobre" ; -- tocheck
lin sober_V2 = mkV2 (mkV "cuver") ; -- tocheck
lin soberness_N = mkN "gravité" ; -- UWN
lin sobriety_N = mkN "sobriété" feminine ; -- tocheck
lin sobriquet_N = mkN "sobriquet" masculine ; -- tocheck
lin socalled_A = variants {} ; --
lin soccer_N = mkN "football" ; -- tocheck
lin sociability_N = mkN "sociabilité" feminine ; -- tocheck
lin sociable_A = mkA "sociable" ; -- tocheck
lin sociable_N = mkN "sociable" | mkN "social" ; -- UWN
lin social_A = mkA "social" ;
lin social_N = mkN "sociable" | mkN "social" ; -- UWN
lin socialism_N = mkN "socialisme" masculine ; -- tocheck
lin socialist_A = mkA "socialiste" ; -- tocheck
lin socialist_N = mkN "socialiste" ; -- tocheck
lin socialistic_A = mkA "socialiste" ; -- UWN
lin sociality_N = mkN "socialité" ; -- UWN
lin socialization_N = mkN "socialisation" feminine ; -- tocheck
lin society_N = mkN "société" feminine ;
lin sociobiology_N = mkN "sociobiologie" ; -- UWN
lin sociolinguistics_N = mkN "sociolinguistique" feminine ; -- tocheck
lin sociological_A = mkA "sociologique" ; -- tocheck
lin sociologist_N = mkN "sociologue" ; -- tocheck
lin sociology_N = mkN "sociologie" feminine ; -- tocheck
lin sociometry_N = mkN "sociométrie" feminine ; -- tocheck
lin sociopath_N = mkN "sociopathe" ; -- tocheck
lin sock_N = L.sock_N ;
lin socket_N = mkN "socket" feminine | mkN "orbite" | mkN "prise" ; -- tocheck
lin sockeye_N = mkN "saumon_rouge" ; -- UWN
lin socle_N = mkN "socle" masculine ; -- tocheck
lin sod_N = mkN "gazon" masculine ; -- tocheck
lin sod_V = mkV (mkV "gazonner") ; -- tocheck
lin sodden_A = mkA "trempé" ; -- tocheck
lin sodium_N = mkN "sodium" masculine ; -- tocheck
lin sodoku_N = mkN "sodoku" ; -- UWN
lin sodom_N = mkN "sodome" ; -- UWN
lin sodomite_N = mkN "sodomite" masculine ; -- tocheck
lin sodomy_N = mkN "sodomie" feminine ; -- tocheck
lin sofa_N = mkN "canapé" masculine ; -- tocheck
lin soffit_N = mkN "soffite" masculine ; -- tocheck
lin sofia_PN = mkPN "Sofia" ; -- status=guess src=geonames
lin soft_A = mkA "doux" | mkA "mou" ; -- tocheck
lin soft_boiled_A = mkA "sentimental" ; -- tocheck
lin softball_N = mkN "softball" masculine | mkN "balle-molle" feminine ; -- tocheck
lin soften_V = variants {} ; --
lin soften_V2 = variants {} ; --
lin softener_N = mkN "plastifiant" ; -- UWN
lin softheartedness_N = mkN "tendresse" ; -- UWN
lin softness_N = mkN "douceur" feminine ;
lin software_N = mkN "logiciel" masculine ;
lin softwood_N = mkN "conifère" masculine ; -- tocheck
lin soggy_A = mkA "trempé" ; -- tocheck
lin soh_N = mkN "sol" ; -- UWN
lin soho_PN = mkPN "Soho" ; -- status=guess src=geonames
lin soil_N = mkN "terre" feminine | mkN "souillure" masculine | mkN "sol" masculine ; -- tocheck
lin soil_V2 = mkV2 (mkV "salir") ; -- tocheck
lin sojourn_N = mkN "séjour" masculine ; -- tocheck
lin sojourn_V = mkV (mkV "séjourner") ; -- tocheck
lin sojourner_N = mkN "hôte" ; -- UWN
lin sol_N = mkN "sol" masculine ; -- tocheck
lin solace_N = mkN "consolation" ; -- tocheck
lin solace_V2 = mkV2 (mkV "soulager") ; -- tocheck
lin solar_A = mkA "solaire" ; -- tocheck
lin solarium_N = mkN "solarium" masculine ; -- tocheck
lin solarization_N = mkN "solarisation" ; -- UWN
lin solder_N = mkN "soudure" ; -- tocheck
lin solder_V2 = mkV2 (mkV "souder") ; -- tocheck
lin soldier_N = mkN "soldat" masculine | mkN "mouillette" feminine ; -- tocheck
lin sole_A = mkA "unique" | mkA "célibataire" ; -- tocheck
lin sole_N = mkN "semelle" feminine | mkN "plante" feminine | mkN "sole" feminine ; -- tocheck
lin sole_V2 = mkV2 (mkV "ressemeler") ; -- tocheck
lin solecism_N = mkN "solécisme" masculine ; -- tocheck
lin solemn_A = mkA "solennel" ; -- tocheck
lin solemnization_N = mkN "célébration" | mkN "solennisation" ; -- UWN
lin solenoid_N = mkN "solénoïde" masculine ; -- tocheck
lin soleus_N = mkN "muscle_soléaire" ; -- UWN
lin solicitation_N = mkN "sollicitation" feminine ; -- tocheck
lin solicitorFem_N = variants {} ; ---- sense to be split
lin solicitorMasc_N = mkN "soliciteur" ; ----
lin solicitude_N = mkN "sollicitude" ; -- UWN
lin solid_A = mkA "plein" | mkA "solide" | mkA "massif" ; -- tocheck
lin solid_N = mkN "solide" masculine ; -- tocheck
lin solidarity_N = mkN "solidarité" | mkN "solidarité" feminine ; -- tocheck
lin solidification_N = mkN "ensemble" | mkN "solidification" ; -- UWN
lin solidify_V = mkV "solidifier" ; -- UWN
lin solidity_N = mkN "solidité" feminine ; -- tocheck
lin solidus_N = mkN "soldius" masculine ; -- tocheck
lin solihull_PN = mkPN "Solihull" ; -- status=guess src=geonames
lin soliloquize_V = mkV "soliloquer" ; -- UWN
lin soliloquy_N = mkN "soliloque" masculine ; -- tocheck
lin solingen_PN = mkPN "Solingen" ; -- status=guess src=geonames
lin solipsism_N = mkN "vanité" feminine | mkN "solipsisme" masculine ; -- tocheck
lin solitaire_N = mkN "solitaire" masculine | mkN "patience" ; -- tocheck
lin solitary_A = mkA "solitaire" ; -- tocheck
lin soliton_N = mkN "soliton" masculine ; -- tocheck
lin solitude_N = mkN "solitude" feminine ; -- tocheck
lin solo_A = mkA "solo" ; -- tocheck
lin solo_N = mkN "solo" masculine ; -- tocheck
lin soloist_N = mkN "soliste" ; -- tocheck
lin solon_PN = mkPN "Solon" ; -- status=guess src=geonames
lin solstice_N = mkN "solstice" masculine ; -- tocheck
lin solubility_N = mkN "solubilité" feminine ; -- tocheck
lin soluble_A = mkA "soluble" ; -- tocheck
lin solute_N = mkN "soluté" masculine ; -- tocheck
lin solution_N = mkN "solution" feminine ; -- tocheck
lin solvability_N = mkN "solubilité" ; -- UWN
lin solvable_A = mkA "soluble" | mkA "résoluble" ; -- tocheck
lin solvation_N = mkN "solvatation" ; -- UWN
lin solve_V2 = mkV2 (mkV I.résoudre_V2) ; -- tocheck
lin solvency_N = mkN "solvabilité" feminine ; -- tocheck
lin solvent_A = mkA "solvable" ; -- tocheck
lin solvent_N = mkN "solvant" masculine ; -- tocheck
lin somaliFem_N = variants {} ; ---- sense to be split
lin somaliMasc_N = variants {} ; ---- sense to be split
lin somalia_PN = mkPN "Somalie" ; -- status=guess src=geonames
lin somalianFem_N = variants {} ; ---- sense to be split
lin somalianMasc_N = variants {} ; ---- sense to be split
lin somatic_A = mkA "corporal" | mkA "corporel" ; -- UWN
lin somber_A = mkA "sombre" ; -- tocheck
lin sombrero_N = mkN "sombréro" masculine ; -- tocheck
lin some_Det = {s,sp = \\g,c => R.prepCase c ++ "un peu" ++ Ph.elisDe ; n = plural ; s2 = [] ; isNeg = False} ;
lin some_Quant = M.mkQuant "quelque" "quelque" "quelques" "quelques" ;
lin somebody_NP = S.somebody_NP ;
lin somehow_Adv = variants {} ; --
lin someone_NP = S.somebody_NP ;
lin somersault_N = mkN "galipette" feminine ; -- tocheck
lin somerset_PN = mkPN "Somerset" ; -- status=guess src=geonames
lin somesthesia_N = mkN "somesthésie" ; -- UWN
lin something_NP = S.something_NP ;
lin sometimes_Adv = mkAdv "parfois" ;
lin somewhat_Adv = mkAdv "assez" ; -- tocheck
lin somewhere_Adv = S.somewhere_Adv ;
lin sommelier_N = mkN "sommelier" ; -- UWN
lin somnambulism_N = mkN "somnambulisme" masculine ; -- tocheck
lin somnambulist_N = mkN "somnambule" masculine ; -- tocheck
lin somnolence_N = mkN "somnolence" ; -- UWN
lin son_N = mkN "fils" masculine ; -- tocheck
lin son_in_law_N = mkN "beau-fils" masculine ; -- tocheck
lin sonar_N = mkN "sonar" masculine ; -- tocheck
lin sonata_N = mkN "sonate" feminine ; -- tocheck
lin sonatina_N = mkN "sonatine" feminine ; -- tocheck
lin song_N = L.song_N ;
lin songbird_N = mkN "Passeri" | mkN "chanteur" | mkN "passeri" ; -- UWN
lin songbook_N = mkN "chansonnier" masculine ; -- tocheck
lin songster_N = mkN "chanteur" ; -- tocheck
lin songstress_N = mkN "chanteuse" feminine ; -- tocheck
lin songwriter_N = mkN "auteur-compositeur" masculine ; -- tocheck
lin sonnet_N = mkN "sonnet" masculine ; -- tocheck
lin sonny_N = mkN "fiston" masculine ; -- tocheck
lin sonogram_N = mkN "échographie" feminine ; -- tocheck
lin sonography_N = mkN "ultrason" | mkN "échographie" ; -- UWN
lin sonority_N = mkN "résonance" | mkN "écho" ; -- UWN
lin sonorous_A = mkA "lourd" | mkA "sonore" ; -- UWN
lin soon_AdV = mkAdV "bientôt" | mkAdV "incessamment" | mkAdV "prochainement" ; -- UWN
lin soon_Adv = mkAdv "bientôt" ;
lin soot_N = mkN "suie" ; -- tocheck
lin soothe_V2 = mkV2 (mkV "calmer") | mkV2 (mkV "apaiser") ; -- tocheck
lin soothsayer_N = mkN "prophète" masculine ; -- tocheck
lin sophia_PN = mkPN "Sophia" ; -- status=guess src=geonames
lin sophism_N = mkN "sophiste" | mkN "sophistication" | mkN "sophistique" ; -- UWN
lin sophistFem_N = variants {} ; ---- sense to be split
lin sophistMasc_N = variants {} ; ---- sense to be split
lin sophisticate_N = mkN "homme_du_monde" ; -- UWN
lin sophisticated_A = mkA "chic" ; -- tocheck
lin sophistication_N = mkN "sophistication" feminine ; -- tocheck
lin sophistry_N = mkN "sophiste" | mkN "sophistication" | mkN "sophistique" ; -- UWN
lin soporific_A = mkA "soporifique" ; -- tocheck
lin soporific_N = mkN "somnifère" ; -- tocheck
lin soppy_A = mkA "affecté" | mkA "démonstratif" | mkA "histrionique" | mkA "hystérique" | mkA "larmoyant" | mkA "maniéré" | mkA "mièvre" | mkA "pleurnicheur" | mkA "sentimental" ; -- UWN
lin soprano_A = mkA "soprano" ; -- UWN
lin soprano_N = mkN "soprano" masculine | mkN "soprano" ; -- tocheck
lin sorbet_N = mkN "sorbet" feminine ; -- tocheck
lin sorcerer_N = mkN "sorcier" masculine ; -- tocheck
lin sorceress_N = mkN "sorcière" feminine ; -- tocheck
lin sorcery_N = mkN "charme" | mkN "enchantement" | mkN "magie_noire" | mkN "nécromancie" | mkN "sortilège" ; -- UWN
lin sordid_A = mkA "crapuleux" | mkA "avide" | mkA "sordide" | mkA "saleté" ; -- tocheck
lin sore_A = mkA "pénible" | mkA "douloureux" ; -- tocheck
lin sore_N = mkN "plaie" ; -- tocheck
lin soreness_N = mkN "douleur" | mkN "inconfort" ; -- UWN
lin sorghum_N = mkN "sorgho" masculine ; -- tocheck
lin sorority_N = mkN "sororité" ; -- tocheck
lin sorption_N = mkN "sorption" ; -- tocheck
lin sorrel_A = mkA "oseille" ; -- UWN
lin sorrel_N = mkN "oseille" feminine ; -- tocheck
lin sorrow_N = mkN "peine" feminine ; -- tocheck
lin sorrowful_A = mkA "triste" ; -- tocheck
lin sorry_A = mkA "désolé" ; -- tocheck
lin sorry_Interj = mkInterj "désolé" ; -- tocheck
lin sort_N = mkN "sorte" | mkN "type" masculine | mkN "triage" masculine | mkN "tri" masculine ;
lin sort_V = variants {} ; -- mkV2 (mkV "trier") ; -- tocheck
lin sort_V2 = mkV2 (mkV "trier") ; -- tocheck
lin sort_out_V2 = prepV2 OP_sort_V OP_out_Prep ; -- guess-p-verb
lin sorting_N = mkN "classement" ; -- tocheck
lin sot_N = mkN "sot" masculine ; -- tocheck
lin soteriology_N = mkN "sotériologie" | mkN "théologie_du_Salut" | mkN "théologie_du_salut" ; -- UWN
lin soubriquet_N = mkN "sobriquet" | mkN "surnom" ; -- UWN
lin soul_N = mkN "âme" feminine | mkN "soul" feminine ; -- tocheck
lin sound_A = mkA "complet" | mkA "sain" ; -- tocheck
lin sound_N = mkN "sonde" feminine | mkN "son" masculine ; -- tocheck
lin sound_V = variants {} ; -- mkV2 (mkV "exprimer") | mkV2 (mkV "sonder") | mkV2 (mkV "sonner") | mkV2 (mkV "prononcer") | mkV2 (mkV "tester") ; -- tocheck
lin sound_V2 = mkV2 (mkV "exprimer") | mkV2 (mkV "sonder") | mkV2 (mkV "sonner") | mkV2 (mkV "prononcer") | mkV2 (mkV "tester") ; -- tocheck
lin sound_VA = variants {} ; -- mkV2 (mkV "exprimer") | mkV2 (mkV "sonder") | mkV2 (mkV "sonner") | mkV2 (mkV "prononcer") | mkV2 (mkV "tester") ; -- tocheck
lin sound_VS = variants {} ; -- mkV2 (mkV "exprimer") | mkV2 (mkV "sonder") | mkV2 (mkV "sonner") | mkV2 (mkV "prononcer") | mkV2 (mkV "tester") ; -- tocheck
lin sound_off_V = advV OP_sound_V OP_off_Adv ; -- guess-p-verb
lin sound_out_V2 = prepV2 OP_sound_V OP_out_Prep ; -- guess-p-verb
lin soundless_A = mkA "calme" | mkA "encore" ; -- UWN
lin soundness_N = mkN "solidité" ; -- UWN
lin soundproof_A = mkA "insonorisé" ; -- tocheck
lin soundtrack_N = mkN "bande_son" | mkN "bruitage" ; -- UWN
lin soup_N = mkN "potage" masculine | mkN "pétrin" masculine ; -- tocheck
lin soupspoon_N = mkN "cuiller_à_soupe" | mkN "cuillère_à_soupe" ; -- UWN
lin soupy_A = mkA "affecté" | mkA "démonstratif" | mkA "histrionique" | mkA "hystérique" | mkA "larmoyant" | mkA "maniéré" | mkA "mièvre" | mkA "pleurnicheur" | mkA "sentimental" ; -- UWN
lin sour_A = mkA "aigre" ; -- tocheck
lin source_N = mkN "source" feminine | mkN "source" ; -- tocheck
lin sourdough_N = mkN "levain" masculine ; -- tocheck
lin soursop_N = mkN "corossol" masculine | mkN "corossolier" masculine ; -- tocheck
lin soutane_N = mkN "soutane" feminine ; -- tocheck
lin south_A = mkA "sud" ; -- tocheck
lin south_N = mkN "sud" masculine ; -- tocheck
lin south_ockendon_PN = mkPN "South Ockendon" ; -- status=guess src=geonames
lin south_shields_PN = mkPN "South Shields" ; -- status=guess src=geonames
lin south_southeast_N = mkN "sud-sud-est" masculine ; -- tocheck
lin south_southwest_N = mkN "sud-sud-ouest" ; -- tocheck
lin southampton_PN = mkPN "Southampton" ; -- status=guess src=geonames
lin southeast_A = mkA "sud-est" ; -- tocheck
lin southeast_N = mkN "sud-est" masculine ; -- tocheck
lin southerly_A = variants {} ;
lin southerly_Adv = adjAdv southerly_A ; -- derived -- derived
lin southern_A = mkA "sudiste" | mkA "méridional" ; -- tocheck
lin southerner_N = mkN "sudiste" ; -- tocheck
lin southland_N = mkN "Sud" | mkN "sud" | mkN "sud-est" ; -- UWN
lin southpaw_N = mkN "gaucher" masculine ; -- tocheck
lin southport_PN = mkPN "Southport" ; -- status=guess src=geonames
lin southwest_A = mkA "sud-ouest" ; -- tocheck
lin southwest_N = mkN "sud-ouest" masculine ; -- tocheck
lin souvenir_N = mkN "souvenir" masculine ; -- tocheck
lin souvlaki_N = mkN "souvláki" ; -- UWN
lin sovereign_A = mkA "souverain" ; -- tocheck
lin sovereign_N = mkN "souverain" masculine ; -- tocheck
lin sovereignty_N = mkN "souveraineté" feminine ; -- tocheck
lin soviet_A = mkA "soviétique" ; -- tocheck
lin soviet_N = mkN "soviet" masculine ; -- tocheck
lin sow_N = mkN "truie" feminine ; -- tocheck
lin sow_V2 = mkV2 (mkV "semer") ; -- tocheck
lin soy_N = mkN "soja" feminine ; -- tocheck
lin sozzled_A = mkA "bourré" | mkA "empégué" | mkA "gris" | mkA "grise" | mkA "mouillé" | mkA "pompette" | mkA "rigide" | mkA "schlass" | mkA "trempé" | mkA "émeché" | mkA "éméché" | mkA "éméchée" ; -- UWN
lin space_N = mkN "espace" masculine | mkN "espace" feminine ; -- tocheck
lin spacecraft_N = mkN "Véhicule_spatial" | mkN "astronef" | mkN "spationef" | mkN "vaisseau_spatial" | mkN "véhicule_spatial" ; -- UWN
lin spaceflight_N = mkN "vol_spatial" | mkN "voyage_d'espace" ; -- UWN
lin spaceship_N = mkN "astronef" | mkN "navire" | mkN "vaisseau_spatial" ; -- UWN
lin spacious_A = mkA "spacieux" ; -- tocheck
lin spade_N = mkN "bêche" feminine | mkN "pique" feminine ; -- tocheck
lin spadeful_N = mkN "bêche" | mkN "pelle" ; -- UWN
lin spadix_N = mkN "spadice" ; -- UWN
lin spaghetti_N = mkN "spaghettis" | mkN "gaine" feminine | mkN "spaghetti" masculine ; -- tocheck
lin spain_PN = mkPN "Espagne" ; -- status=guess src=geonames
lin spalding_PN = mkPN "Spalding" ; -- status=guess src=geonames
lin spallation_N = mkN "éclatement" | mkN "spallation" ; -- tocheck
lin spam_N = mkN "spam" masculine ; -- tocheck
lin spammer_N = mkN "spammer" masculine ; -- tocheck
lin span_N = mkN "empan" masculine ; -- tocheck
lin span_V2 = mkV2 (mkV I.couvrir_V2) ; -- tocheck
lin spandex_N = mkN "élasthanne" ; -- UWN
lin spangle_N = mkN "diamante" | mkN "pailettes" | mkN "sequin" ; -- UWN
lin spaniel_N = mkN "épagneul" masculine ; -- tocheck
lin spanishFem_N = mkN "espagnole" ;
lin spanishMasc_N = mkN "espagnol" ;
lin spanish_A = mkA "espagnol" ;
lin spank_V2 = mkV2 (mkV "fesser") ; -- tocheck
lin spanker_N = mkN "fesseur" masculine ; -- tocheck
lin spanking_N = mkN "fessée" feminine ; -- tocheck
lin spare_A = mkA "rechange" ; -- tocheck
lin spare_V = variants {} ; --
lin spare_V2 = variants {} ; --
lin spark_N = mkN "étincelle" feminine ; -- tocheck
lin sparrow_N = mkN "bruant" masculine | mkN "moineau" | mkN "moineau" masculine ; -- tocheck
lin sparse_A = mkA "clairsemé" | mkA "insuffisant" | mkA "maigre" | mkA "mince" | mkA "rare" ; -- UWN
lin sparseness_N = mkN "pénurie" ; -- UWN
lin sparsity_N = mkN "pénurie" ; -- UWN
lin spartanFem_N = variants {} ; ---- sense to be split
lin spartanMasc_N = variants {} ; ---- sense to be split
lin spasm_N = mkN "spasme" masculine ; -- tocheck
lin spasmodic_A = mkA "spasmodique" ; -- tocheck
lin spasticity_N = mkN "spasticité" ; -- UWN
lin spat_N = mkN "guêtre" feminine | mkN "naissain" masculine ; -- tocheck
lin spate_N = mkN "crue" feminine | mkN "recrudescence" feminine ; -- tocheck
lin spathe_N = mkN "spathe" ; -- UWN
lin spathiphyllum_N = mkN "spathiphyllum" ; -- UWN
lin spatial_A = mkA "spatial" ; -- tocheck
lin spatter_V2 = mkV2 (mkV "asperger") ; -- tocheck
lin spatula_N = mkN "spatule" feminine ; -- tocheck
lin spavined_A = mkA "boiteux" ; -- UWN
lin spawn_N = mkN "frai" ; -- UWN
lin speak_V = mkV L.speak_V2 ;
lin speak_V2 = L.speak_V2 ;
lin speak_out_V = advV OP_speak_V OP_out_Adv ; -- guess-p-verb
lin speak_up_V = advV OP_speak_V OP_up_Adv ; -- guess-p-verb
lin speakeasy_N = mkN "speakeasy" ; -- UWN
lin speaker_N = mkN "baffle" | mkN "orateur" masculine | mkN "président" masculine | mkN "parleur" masculine ; -- tocheck
lin speaking_N = mkN "parler" | mkN "parole" ; -- UWN
lin spear_N = mkN "harpon" masculine | mkN "lance" ; -- tocheck
lin spec_N = mkN "spécification" ; -- UWN
lin special_A = mkA "spécial" ;
lin special_N = mkN "extraordinaire" | mkN "particulier" | mkN "spécial" ; -- UWN
lin specialism_N = mkN "spécialisation" | mkN "spécialité" ; -- UWN
lin specialist_A = variants {} ; --
lin specialist_N = mkN "spécialiste" ; -- tocheck
lin specialization_N = mkN "spécialisation" | mkN "spécialité" ; -- UWN
lin specialize_V = variants {} ; --
lin specialize_V2 = variants {} ; --
lin specialty_N = mkN "spécialité" feminine ; -- tocheck
lin speciation_N = mkN "spéciation" ; -- UWN
lin specie_N = mkN "monnaie" ; -- UWN
lin species_N = mkN "espèce" feminine ; -- tocheck
lin specific_A = mkA "spécifique" ; -- tocheck
lin specific_N = mkN "précision" | mkN "spécifique" ; -- UWN
lin specification_N = mkN "spécification" feminine ; -- tocheck
lin specificity_N = mkN "spécificité" feminine ; -- tocheck
lin specified_A = variants {} ; --
lin specify_V = mkV "appliquer" | mkV "attribuer" | mkV "préciser" | mkV "spécifier" ; -- UWN
lin specify_V2 = mkV2 (mkV "spécifier") ; -- tocheck
lin specify_VS = variants {} ; -- mkV2 (mkV "spécifier") ; -- tocheck
lin specimen_N = mkN "exemple" masculine | mkN "spécimen" masculine ; -- tocheck
lin specious_A = mkA "spécieux" ; -- tocheck
lin speciousness_N = mkN "spéciosité" feminine ; -- tocheck
lin speck_N = mkN "point" masculine ; -- tocheck
lin specked_A = mkA "pointillé" ; -- UWN
lin speckle_N = mkN "point" | mkN "tache" ; -- UWN
lin speckled_A = mkA "pointillé" ; -- UWN
lin spectacle_N = mkN "spectacle" masculine ; -- tocheck
lin spectacles_N = mkN "lunettes" ; -- tocheck
lin spectacular_A = mkA "spectaculaire" ; -- tocheck
lin spectacular_N = mkN "spectaculaire" ; -- UWN
lin spectatorFem_N = mkN "spectatrice" feminine ; -- tocheck
lin spectatorMasc_N = mkN "spectateur" masculine ;
lin spectral_A = mkA "spectral" ; -- tocheck
lin spectrogram_N = mkN "spectrogramme" ; -- UWN
lin spectroscopic_A = mkA "spectroscopique" ; -- UWN
lin spectroscopy_N = mkN "spectroscopie" feminine ; -- tocheck
lin spectrum_N = mkN "spectre" masculine ; -- tocheck
lin speculate_V = mkV (mkV "spéculer") ; -- tocheck
lin speculation_N = mkN "spéculation" feminine ; -- tocheck
lin speculative_A = mkA "spéculatif" ; -- tocheck
lin speculatorFem_N = mkN "spéculatrice" feminine ; -- tocheck
lin speculatorMasc_N = mkN "spéculateur" masculine ; -- tocheck
lin speech_N = mkN "discours" masculine | mkN "parole" feminine ; -- tocheck
lin speechless_A = mkA "muet" ; -- UWN
lin speechlessness_N = mkN "anaudie" ; -- UWN
lin speed_N = mkN "vitesse" feminine | mkN "speed" masculine ; -- tocheck
lin speed_V = variants {} ; -- mkV2 (mkV "foncer") ; -- tocheck
lin speed_V2 = mkV2 (mkV "foncer") ; -- tocheck
lin speedboat_N = mkN "vedette" feminine ; -- tocheck
lin speeding_N = mkN "rapidité" | mkN "vitesse" ; -- UWN
lin speedometer_N = mkN "Indicateur_de_vitesse" | mkN "compteur_de_vitesse" | mkN "indicateur" | mkN "indicateur_de_vitesse" ; -- UWN
lin speedwell_N = mkN "véronique" feminine ; -- tocheck
lin speedy_A = mkA "prompt" ; -- tocheck
lin spelaeologist_N = mkN "spéléologue" ; -- UWN
lin speleologist_N = mkN "spéléologue" ; -- tocheck
lin speleology_N = mkN "spéléologie" feminine ; -- tocheck
lin spell_N = mkN "charme" masculine ; -- tocheck
lin spell_V = variants {} ; -- mkV2 (mkV "épeler") ; -- tocheck
lin spell_V2 = mkV2 (mkV "épeler") ; -- tocheck
lin spelling_N = mkN "orthographe" feminine ; -- tocheck
lin spelt_N = mkN "épeautre" masculine ; -- tocheck
lin spend_V = mkV "dépenser" ;
lin spend_V2 = mkV2 (mkV "dépenser") | mkV2 (mkV "passer") ; --- split -- | spend money -- | spend time
lin spending_N = mkN "déboursement" | mkN "dépense" | mkN "paiement" ; -- UWN
lin spendthrift_N = mkN "dépensier" ; -- tocheck
lin spennymoor_PN = mkPN "Spennymoor" ; -- status=guess src=geonames
lin sperm_N = mkN "sperme" masculine | mkN "spermatozoïde" masculine ; -- tocheck
lin spermaceti_N = mkN "spermaceti" ; -- UWN
lin spermatid_N = mkN "spermatide" ; -- UWN
lin spermatocyte_N = mkN "spermatocyte" ; -- UWN
lin spermatogenesis_N = mkN "spermatogenèse" ; -- UWN
lin spermatophyte_N = mkN "spermaphyte" | mkN "spermatophyta" | mkN "spermatophyte" ; -- UWN
lin spermatozoon_N = mkN "spermatozoïde" masculine ; -- tocheck
lin spermicidal_A = mkA "spermicide" ; -- UWN
lin spermicide_N = mkN "Spermicide" | mkN "spermicide" | mkN "spermicides" ; -- UWN
lin spermous_A = mkA "spermatique" ; -- UWN
lin spew_V2 = mkV2 (mkV "vomir") ; -- tocheck
lin sphagnum_N = mkN "sphaigne" feminine ; -- tocheck
lin sphere_N = mkN "sphère" feminine ; -- tocheck
lin spherical_A = mkA "sphérique" ; -- tocheck
lin spheroid_N = mkN "ellipsoïde_de_rotation" | mkN "sphéroïde" ; -- UWN
lin sphincter_N = mkN "sphincter" masculine ; -- tocheck
lin sphinx_N = mkN "sphinx" masculine ; -- tocheck
lin sphygmomanometer_N = mkN "sphygmomanomètre" masculine ; -- tocheck
lin spice_N = mkN "épice" feminine | mkN "épices" ; -- tocheck
lin spice_V2 = mkV2 (mkV "épicer") ; -- tocheck
lin spiciness_N = mkN "piquant" ; -- UWN
lin spicule_N = mkN "spicule" masculine ; -- tocheck
lin spicy_A = mkA "épicé" ; -- tocheck
lin spider_N = mkN "araignée" feminine ; -- tocheck
lin spiderflower_N = mkN "cleome" ; -- UWN
lin spiel_N = mkN "boniment" masculine ; -- tocheck
lin spigot_N = mkN "robinet" ; -- UWN
lin spike_N = mkN "crampons" | mkN "épi" masculine ; -- tocheck
lin spikemoss_N = mkN "selaginella" | mkN "sélaginelle" | mkN "sélaginelles" ; -- UWN
lin spikenard_N = mkN "nard" masculine | mkN "nard" ; -- tocheck
lin spill_N = mkN "déversement" ; -- tocheck
lin spill_V = variants {} ; -- mkV2 (mkV "déverser") ; -- tocheck
lin spill_V2 = mkV2 (mkV "déverser") ; -- tocheck
lin spillover_N = mkN "retombée" | mkN "transfert_sectoriel" ; -- UWN
lin spillway_N = mkN "déversoir" ; -- UWN
lin spin_N = mkN "vrille" feminine | mkN "spin" masculine | mkN "effet" masculine ; -- tocheck
lin spin_V = variants {} ; -- mkV2 (mkV "filer") | mkV2 (mkV "tournoyer") ; -- tocheck
lin spin_V2 = mkV2 (mkV "filer") | mkV2 (mkV "tournoyer") ; -- tocheck
lin spinach_N = mkN "épinards" ; -- tocheck
lin spindle_N = mkN "essieu" masculine | mkN "fuseau" ; -- tocheck
lin spindly_A = mkA "grêle" ; -- tocheck
lin spindrift_N = mkN "embrun" masculine ; -- tocheck
lin spine_N = mkN "dos" masculine | mkN "épine" feminine ; -- tocheck
lin spinel_N = mkN "spinelle" masculine ; -- tocheck
lin spinet_N = mkN "épinette" feminine ; -- tocheck
lin spinnaker_N = mkN "spinnaker" ; -- UWN
lin spinster_N = mkN "vieille_fille" ; -- UWN
lin spiracle_N = mkN "Stigmate_des_arthropodes" | mkN "spiracle" | mkN "stigmate_des_arthropodes" ; -- UWN
lin spiral_N = mkN "spirale" feminine ; -- tocheck
lin spire_N = mkN "flèche" feminine ; -- tocheck
lin spirit_N = mkN "spiritueux" | mkN "esprit" masculine | mkN "élan" masculine ; -- tocheck
lin spiritual_A = mkA "spirituel" ; -- tocheck
lin spiritualism_N = mkN "spiritualisme" masculine ; -- tocheck
lin spiritualistFem_N = mkN "spiritualiste" feminine ; -- tocheck
lin spiritualistMasc_N = mkN "spiritualiste" masculine ; -- tocheck
lin spirituality_N = mkN "spiritualité" feminine ; -- tocheck
lin spirochete_N = mkN "Spirochaetes" | mkN "spirochaetes" | mkN "spirochète" | mkN "spirochètes" ; -- UWN
lin spirograph_N = mkN "spirographe" ; -- UWN
lin spirogyra_N = mkN "spirogyre" ; -- UWN
lin spirometer_N = mkN "spiromètre" ; -- UWN
lin spit_N = mkN "crachement" masculine | mkN "crachat" masculine | mkN "broche" feminine ; -- tocheck
lin spit_V = L.spit_V ;
lin spit_V2 = mkV2 (mkV "cracher") ; -- tocheck
lin spite_N = mkN "dépit" masculine | mkN "dépit" ; -- tocheck
lin spiteful_A = mkA "rancunier" ; -- tocheck
lin spitfire_N = mkN "dragon" | mkN "spitfire" ; -- UWN
lin spitting_N = mkN "cracher" | mkN "expectoration" ; -- UWN
lin spittle_N = mkN "crachat" masculine ; -- tocheck
lin spittoon_N = mkN "crachoir" masculine ; -- tocheck
lin splash_N = mkN "bruit" masculine | mkN "plouf" masculine ; -- tocheck
lin splash_V2 = mkV2 (mkV "éclabousser") ; -- tocheck
lin splasher_N = mkN "tableau_de_bord" ; -- UWN
lin splay_V = mkV "disloquer" | mkV "démettre" | mkV "luxer" ; -- UWN
lin spleen_N = mkN "spleen" masculine | mkN "rate" feminine ; -- tocheck
lin splendid_A = mkA "fameux" | mkA "splendide" ; -- tocheck
lin splendiferous_A = mkA "fameux" | mkA "magnifique" | mkA "splendide" ; -- UWN
lin splendour_N = mkN "pompe" | mkN "splendeur" ; -- UWN
lin splenectomy_N = mkN "splénectomie" feminine ; -- tocheck
lin splenetic_A = mkA "splénique" | mkA "splénétique" ; -- tocheck
lin splenic_A = mkA "splénique" ; -- UWN
lin splenomegaly_N = mkN "splénomégalie" ; -- UWN
lin splice_N = mkN "épissure" feminine ; -- tocheck
lin splinter_N = mkN "faction" feminine | mkN "éclat" masculine ; -- tocheck
lin split_N = mkN "schisme" | mkN "scission" ; -- UWN
lin split_PN = mkPN "Split" ; -- status=guess src=geonames
lin split_V = mkV "exploser" ; -- UWN
lin split_V2 = L.split_V2 ;
lin split_up_V = mkV "casser" | mkV "diviser" | mkV "séparer" ; -- UWN
lin split_up_V2 = prepV2 OP_split_V OP_up_Prep ; -- guess-p-verb
lin splodge_N = mkN "tache" ; -- UWN
lin splotch_N = mkN "tache" ; -- UWN
lin splurge_N = mkN "orgie" ; -- UWN
lin splurge_V = mkV (reflV (mkV "ruer")) ; -- tocheck
lin splutter_N = mkN "postillonner" ; -- UWN
lin splutter_V2 = mkV2 (mkV "postillonner") ; -- tocheck
lin spoil_N = mkN "butin" ; -- tocheck
lin spoil_V = variants {} ; -- mkV2 (mkV "gâter") ; -- tocheck
lin spoil_V2 = mkV2 (mkV "gâter") ; -- tocheck
lin spoilage_N = mkN "butin" ; -- UWN
lin spoiler_N = mkN "aileron" masculine | mkN "spoiler" masculine ; -- tocheck
lin spoilsport_N = mkN "rabat-joie" masculine ; -- tocheck
lin spoke_N = mkN "rayon" masculine ; -- tocheck
lin spoken_A = variants {} ; --
lin spokesman_N = mkN "porte-parole" ; -- tocheck
lin spokesperson_N = mkN "porte-parole" ; -- tocheck
lin spondee_N = mkN "spondée" masculine ; -- tocheck
lin spondylarthritis_N = mkN "spondylarthrite" ; -- UWN
lin spondylolisthesis_N = mkN "spondylolisthésis" ; -- UWN
lin sponge_N = mkN "ivrogne" | mkN "éponge" feminine ; -- tocheck
lin sponge_V2 = mkV2 (mkV "éponger") ; -- tocheck
lin sponger_N = mkN "parasite" | mkN "sangsue" | mkN "éponge" ; -- UWN
lin sponginess_N = mkN "compressibilité" | mkN "ressort" ; -- UWN
lin spongy_A = mkA "spongieux" ; -- tocheck
lin sponsor_N = variants {} ; --
lin sponsor_V2 = variants {} ; --
lin sponsorship_N = mkN "parrainage" | mkN "patronage" ; -- UWN
lin spontaneity_N = mkN "spontanéité" feminine ; -- tocheck
lin spontaneous_A = mkA "impulsif" | mkA "réflexe" | mkA "spontané" | mkA "naturel" | mkA "indigène" | mkA "imprévisible" | mkA "soudain" ; -- tocheck
lin spontaneousness_N = mkN "spontanéité" ; -- UWN
lin spoof_N = mkN "parodie" feminine ; -- tocheck
lin spoof_V2 = mkV2 (mkV "spoofer") | mkV2 (mkV "parodier") ; -- tocheck
lin spook_N = mkN "bamboula" masculine ; -- tocheck
lin spooky_A = mkA "nerveux" ; -- UWN
lin spool_N = mkN "bobine" feminine ; -- tocheck
lin spoon_N = mkN "cuiller" feminine ; -- tocheck
lin spoonbill_N = mkN "spatule" ; -- tocheck
lin spoonerism_N = mkN "contrepèterie" feminine ; -- tocheck
lin spoonful_N = mkN "cuillerée" feminine ; -- tocheck
lin spoor_N = mkN "empreinte" | mkN "impression" | mkN "trace" ; -- UWN
lin sporadic_A = mkA "sporadique" ; -- tocheck
lin sporangium_N = mkN "sporange" ; -- UWN
lin spore_N = mkN "spore" feminine ; -- tocheck
lin sporophyte_N = mkN "sporophyte" ; -- UWN
lin sporotrichosis_N = mkN "sporotrichose" ; -- UWN
lin sporozoite_N = mkN "sporozoïte" | mkN "sporozoïtes" ; -- UWN
lin sport_N = mkN "flirt" | mkN "sport" masculine ; -- tocheck
lin sport_V2 = mkV2 (mkV "jouer") | mkV2 (mkV "taquiner") ; -- tocheck
lin sportive_A = mkA "sportif" ; -- UWN
lin sportiveness_N = mkN "sportivité" ; -- UWN
lin sportsman_N = mkN "sportif" masculine ; -- tocheck
lin sportsmanship_N = mkN "sportivité" feminine ; -- tocheck
lin sporty_A = mkA "sportif" ; -- tocheck
lin spot_N = mkN "tache" feminine | mkN "endroit" masculine | mkN "peu" masculine | mkN "bouton" masculine ; -- tocheck
lin spot_V = variants {} ; -- mkV2 (mkV "détacher") | mkV2 (mkV "détecter") | mkV2 (mkV "tacher") ; -- tocheck
lin spot_V2 = mkV2 (mkV "détacher") | mkV2 (mkV "détecter") | mkV2 (mkV "tacher") ; -- tocheck
lin spot_VS = variants {} ; -- mkV2 (mkV "détacher") | mkV2 (mkV "détecter") | mkV2 (mkV "tacher") ; -- tocheck
lin spotlessness_N = mkN "blancheur" ; -- UWN
lin spotlight_N = mkN "projecteur" masculine ; -- tocheck
lin spouseFem_N = mkN "épouse" feminine ; -- tocheck
lin spouseMasc_N = mkN "époux" masculine ;
lin spout_N = mkN "siphon" masculine ; -- tocheck
lin sprain_N = mkN "entorse" feminine ; -- tocheck
lin sprain_V2 = mkV2 (reflV (mkV "fouler")) ; -- tocheck
lin sprat_N = mkN "sprat" masculine ; -- tocheck
lin sprawl_N = mkN "étalement" ; -- tocheck
lin sprawl_V2 = mkV2 (reflV (mkV "affaler")) | mkV2 (reflV (mkV "étaler")) ; -- tocheck
lin spray_N = mkN "embrun" masculine | mkN "rameau" masculine ; -- tocheck
lin spray_V2 = mkV2 (mkV "pulvériser") ; -- tocheck
lin spread_N = variants {} ; --
lin spread_V = variants {} ; -- mkV2V (mkV I.étendre_V2) | mkV2V (mkV "écarter") | mkV2V (mkV "disperser") | mkV2V (mkV "étaler") | mkV2V (mkV I.répandre_V2) ; -- tocheck
lin spread_V2 = variants {} ; -- mkV2V (mkV I.étendre_V2) | mkV2V (mkV "écarter") | mkV2V (mkV "disperser") | mkV2V (mkV "étaler") | mkV2V (mkV I.répandre_V2) ; -- tocheck
lin spread_out_V2 = prepV2 OP_spread_V OP_out_Prep ; -- guess-p-verb
lin spreader_N = mkN "épandeur" masculine | mkN "séparateur" masculine ; -- tocheck
lin spreadsheet_N = mkN "tableur" | mkN "tableur" masculine ; -- tocheck
lin sprechgesang_N = mkN "sprechgesang" ; -- UWN
lin spree_N = mkN "frénésie" feminine ; -- tocheck
lin sprig_N = mkN "brin" ; -- tocheck
lin sprightliness_N = mkN "esprit" | mkN "spiritueux" | mkN "vie" | mkN "vigueur" ; -- UWN
lin sprightly_A = mkA "animé" | mkA "vif" ; -- tocheck
lin spring_1_N = mkN "printemps" masculine ;
lin spring_2_N = mkN "ressort" masculine ;
lin spring_3_N = mkN "source" feminine ;
lin spring_4_N = mkN "saut" masculine ;
lin spring_V = variants {} ; -- mkV2 (mkV "sauter") ; -- tocheck
lin spring_V2 = mkV2 (mkV "sauter") ; -- tocheck
lin springboard_N = mkN "tremplin" masculine ; -- tocheck
lin springfield_PN = mkPN "Springfield" ; -- status=guess src=geonames
lin springtime_N = mkN "printemps" ; -- UWN
lin sprinkle_V2 = mkV2 (mkV "saupoudrer") ; -- tocheck
lin sprinkler_N = mkN "arroseur" masculine ; -- tocheck
lin sprint_N = mkN "sprint" masculine ; -- tocheck
lin sprint_V = mkV "sprinter" ; -- UWN
lin sprinter_N = mkN "sprinter" | mkN "sprinteur" ; -- UWN
lin sprite_N = mkN "fée" | mkN "lutin" | mkN "sprite" ; -- UWN
lin sprocket_N = mkN "coyau" masculine | mkN "engrenage" masculine ; -- tocheck
lin sprout_N = mkN "pousse" feminine ; -- tocheck
lin sprout_V2 = mkV2 (mkV "germer") ; -- tocheck
lin spruce_A = mkA "fissa" | mkA "épicéa" | mkA "épinette" ; -- UWN
lin spruce_N = mkN "épicéa" ; -- tocheck
lin spud_N = mkN "patate" feminine ; -- tocheck
lin spunk_N = mkN "foutre" masculine | mkN "entrain" masculine ; -- tocheck
lin spunky_A = mkA "jeu" ; -- UWN
lin spur_N = mkN "ergot" masculine | mkN "éperon" masculine ; -- tocheck
lin spur_V2 = mkV2 (mkV "éperonner") ; -- tocheck
lin spurge_N = mkN "euphorbe" feminine ; -- tocheck
lin spurious_A = mkA "faux" ; -- tocheck
lin spurt_V = mkV (mkV "gicler") ; -- tocheck
lin sputnik_N = mkN "spoutnik" masculine ; -- tocheck
lin sputter_N = mkN "postillonner" ; -- UWN
lin sputter_V2 = mkV2 (mkV "métalliser") | mkV2 (mkV "postillonner") ; -- tocheck
lin spy_N = mkN "espion" masculine ; -- tocheck
lin spy_V2 = mkV2 (mkV "espionner") ; -- tocheck
lin spyglass_N = mkN "bouteille" | mkN "lunette" | mkN "verre" ; -- UWN
lin squab_N = mkN "pigeonneau" masculine ; -- tocheck
lin squabble_N = mkN "dispute" ; -- tocheck
lin squabble_V = mkV (reflV (mkV "chamailler")) ; -- tocheck
lin squad_N = variants {} ; --
lin squadron_N = mkN "escadron" masculine ; -- tocheck
lin squall_N = mkN "grain" masculine ; -- tocheck
lin squall_V = mkV (mkV "hurler") ; -- tocheck
lin squalor_N = mkN "misère" | mkN "saleté_repoussante" | mkN "sordidité" ; -- UWN
lin squamule_N = mkN "squamule" ; -- UWN
lin squander_V2 = mkV2 (mkV "gâcher") ; -- tocheck
lin squandering_N = mkN "dilapidation" ; -- UWN
lin square_A = mkA "carré" ; -- tocheck
lin square_Adv = mkAdv "carré" ; -- UWN
lin square_N = mkN "case" feminine | mkN "place" feminine | mkN "carré" masculine | mkN "carreau" masculine | mkN "équerre" feminine ; -- tocheck
lin square_V = variants {} ; --
lin square_V2 = variants {} ; --
lin square_off_V = mkV "décider" | mkV "déterminer" | mkV "fixer" ; -- UWN
lin squash_N = mkN "courge" feminine | mkN "squash" masculine ; -- tocheck
lin squash_V2 = mkV2 (mkV "presser") ; -- tocheck
lin squashy_A = mkA "spongieux" ; -- UWN
lin squat_A = mkA "trapu" ; -- tocheck
lin squat_N = mkN "squat" ; -- tocheck
lin squat_V = mkV (reflV (mkV "accroupir")) | mkV (mkV "squatter") ; -- tocheck
lin squatter_N = mkN "squatter" masculine ; -- tocheck
lin squaw_N = mkN "squaw" feminine ; -- tocheck
lin squawk_N = mkN "bœuf" | mkN "coup_de_pied" | mkN "garce" | mkN "viande" ; -- UWN
lin squeak_V2 = mkV2 (mkV "craquer") ; -- tocheck
lin squeaky_A = mkA "glapissant" ; -- UWN
lin squeal_N = mkN "cri" ; -- tocheck
lin squeal_V = mkV "confesser" | mkV "hurler" ; -- UWN
lin squeal_V2 = mkV2 (mkV "crier") ; -- tocheck
lin squeamish_A = mkA "aimable" ; -- UWN
lin squeegee_N = mkN "raclette" ; -- tocheck
lin squeeze_V = variants {} ; -- L.squeeze_V2 ;
lin squeeze_V2 = L.squeeze_V2 ;
lin squib_N = mkN "inflammateur" ; -- UWN
lin squid_N = mkN "seiche" ; -- tocheck
lin squiffy_A = mkA "pompette" ; -- tocheck
lin squill_N = mkN "scille" feminine ; -- tocheck
lin squinch_N = mkN "trompe" feminine ; -- tocheck
lin squint_N = mkN "strabisme" masculine ; -- tocheck
lin squint_V = mkV (mkV "loucher") ; -- tocheck
lin squire_N = mkN "écuyer" masculine | mkN "valet" masculine | mkN "cavalier" masculine | mkN "seigneur" masculine ; -- tocheck
lin squirm_N = mkN "se_tortiller" ; -- UWN
lin squirm_V = mkV (reflV (mkV "tortiller")) ; -- tocheck
lin squirrel_N = mkN "écureuil" masculine ; -- tocheck
lin squirt_N = mkN "jet" masculine | mkN "morveux" masculine ; -- tocheck
lin squirt_V2 = mkV2 (mkV "gicler") ; -- tocheck
lin stab_V = variants {} ; -- L.stab_V2 ;
lin stab_V2 = L.stab_V2 ;
lin stability_N = mkN "stabilité" | mkN "stabilité" feminine ; -- tocheck
lin stabilization_N = mkN "stabilisation" feminine ; -- tocheck
lin stabilize_V2 = mkV2 (reflV (mkV "stabiliser")) | mkV2 (mkV "stabiliser") ; -- tocheck
lin stabilizer_N = mkN "roulettes" ; -- tocheck
lin stable_A = mkA "stable" ; -- tocheck
lin stable_N = mkN "écurie" | mkN "étable" feminine | mkN "étable" ; -- tocheck
lin stable_V2 = mkV2 (mkV "établer") ; -- tocheck
lin stachyose_N = mkN "stachyose" ; -- UWN
lin stack_N = mkN "pile" feminine ; -- tocheck
lin stack_V2 = mkV2 (mkV "empiler") ; -- tocheck
lin stacker_N = mkN "gerbeur" masculine ; -- tocheck
lin stadium_N = mkN "stade" masculine ; -- tocheck
lin staff_1_N = mkN "personnel" masculine ;
lin staff_2_N = mkN "bâton" masculine ;
lin staff_N = mkN "personnel" masculine | mkN "portée" feminine | mkN "bâton" masculine ; -- tocheck
lin staff_V2 = variants {} ; --
lin stafford_PN = mkPN "Stafford" ; -- status=guess src=geonames
lin stag_N = mkN "boeuf" | mkN "cerf" masculine ; -- tocheck
lin stag_V = variants {} ; --
lin stage_N = mkN "scène" feminine | mkN "calèche" feminine | mkN "étape" feminine ; ---- split
lin stage_V = mkV "disposer" | mkV "organiser" ; -- UWN
lin stage_V2 = mkV2 (mkV "organiser") ; -- tocheck
lin stagflation_N = mkN "stagflation" feminine ; -- tocheck
lin stagger_V = mkV "chanceler" | mkV "tituber" ; -- tocheck
lin staginess_N = mkN "théâtralité" ; -- UWN
lin stagnate_V = mkV (mkV "stagner") ; -- tocheck
lin stagnation_N = mkN "stagnation" feminine ; -- tocheck
lin staid_A = mkA "terne" ; -- tocheck
lin stain_N = mkN "souillure" feminine | mkN "tache" feminine ; -- tocheck
lin stain_V = variants {} ; -- mkV2 (mkV "entacher") ; -- tocheck
lin stain_V2 = mkV2 (mkV "entacher") ; -- tocheck
lin stainable_A = mkA "salissable" ; -- UWN
lin stainless_A = mkA "immaculé" | mkA "inoxydable" | mkA "propre" | mkA "pur" ; -- UWN
lin stair_N = mkN "escalier" | mkN "marche" feminine ; -- tocheck
lin staircase_N = mkN "escalier" masculine ; -- tocheck
lin stairway_N = mkN "Escalier" | mkN "escalier" ; -- UWN
lin stake_N = mkN "pieu" masculine | mkN "enjeu" masculine ; -- tocheck
lin stake_V2 = variants {} ; --
lin stake_holder_N = mkN "plaideur" masculine | mkN "intervenant" masculine ; -- tocheck
lin stalactite_N = mkN "stalactite" masculine ; -- tocheck
lin stalagmite_N = mkN "stalagmite" masculine ; -- tocheck
lin stale_A = mkA "vieilli" ; -- tocheck
lin stalemate_N = mkN "impasse" feminine | mkN "pat" masculine ; -- tocheck
lin stalk_N = mkN "tige" feminine ; -- tocheck
lin stalk_V2 = mkV2 (mkV "traquer") | mkV2 (mkV "harceler") ; -- tocheck
lin stalker_N = mkN "rôdeur" masculine | mkN "traqueur" masculine ; -- tocheck
lin stall_N = mkN "parterre" masculine | mkN "étal" masculine | mkN "décrochage" masculine | mkN "stalle" feminine ; -- tocheck
lin stall_V2 = mkV2 (mkV "décrocher") ; -- tocheck
lin stallion_N = mkN "étalon" masculine ; -- tocheck
lin stalwart_A = mkA "robuste" ; -- tocheck
lin stalwart_N = mkN "loyaliste" ; -- UWN
lin stalybridge_PN = mkPN "Stalybridge" ; -- status=guess src=geonames
lin stamen_N = mkN "étamine" feminine ; -- tocheck
lin stamford_PN = mkPN "Stamford" ; -- status=guess src=geonames
lin stamina_N = mkN "endurance" feminine ; -- tocheck
lin stammer_N = mkN "bégaiement" masculine ; -- tocheck
lin stammer_V2 = mkV2 (mkV "balbutier") ; -- tocheck
lin stamp_N = mkN "cachet" ; -- tocheck
lin stamp_V = variants {} ; -- mkV2 (mkV "timbrer") | mkV2 (mkV "tamponner") | mkV2 (mkV "estamper") ; -- tocheck
lin stamp_V2 = mkV2 (mkV "timbrer") | mkV2 (mkV "tamponner") | mkV2 (mkV "estamper") ; -- tocheck
lin stampede_N = mkN "bousculade" feminine ; -- tocheck
lin stance_N = mkN "position" feminine ; -- tocheck
lin stanchion_N = mkN "appui" masculine ; -- tocheck
lin stand_N = mkN "socle" masculine | mkN "étal" ; -- tocheck
lin stand_V = L.stand_V | reflV (mkV "lever") ;
lin stand_V2 = mkV2 "supporter" ;
lin stand_about_V = advV OP_stand_V OP_about_Adv ; -- guess-p-verb
lin stand_around_V = advV OP_stand_V OP_around_Adv ; -- guess-p-verb
lin stand_aside_V = advV OP_stand_V OP_aside_Adv ; -- guess-p-verb
lin stand_back_V = advV OP_stand_V OP_back_Adv ; -- guess-p-verb
lin stand_by_V = advV OP_stand_V OP_by_Adv ; -- guess-p-verb
lin stand_by_V2 = prepV2 OP_stand_V OP_by_Prep ; -- guess-p-verb
lin stand_down_V = advV OP_stand_V OP_down_Adv ; -- guess-p-verb
lin stand_for_V2 = prepV2 OP_stand_V OP_for_Prep ; -- guess-p-verb
lin stand_in_N = mkN "doublure" ; -- tocheck
lin stand_in_for_V2 = prepV2 (advV OP_stand_V OP_in_Adv ) OP_for_Prep ; -- guess-p-verb
lin stand_out_V = advV OP_stand_V OP_out_Adv ; -- guess-p-verb
lin stand_up_V = mkV "défendre" | mkV "rester" ; -- UWN
lin stand_up_V2 = prepV2 OP_stand_V OP_up_Prep ; -- guess-p-verb
lin stand_up_for_V2 = prepV2 (advV OP_stand_V OP_up_Adv ) OP_for_Prep ; -- guess-p-verb
lin stand_up_to_V2 = prepV2 (advV OP_stand_V OP_up_Adv ) OP_to_Prep ; -- guess-p-verb
lin standard_A = variants {} ; --
lin standard_N = mkN "étendard" masculine | mkN "standard" masculine ; -- tocheck
lin standard_bearer_N = mkN "porte-drapeau" masculine ; -- tocheck
lin standardization_N = mkN "standardisation" feminine ; -- tocheck
lin standing_N = variants {} ; --
lin standpoint_N = mkN "point_de_vue" ; -- UWN
lin standstill_N = mkN "arrêt" masculine ; -- tocheck
lin stanford_PN = mkPN "Stanford" ; -- status=guess src=geonames
lin stanhopea_N = mkN "stanhopea" ; -- UWN
lin stanley_PN = mkPN "Port Stanley" ; -- status=guess src=geonames
lin stannic_A = mkA "stannique" ; -- tocheck
lin stanza_N = mkN "strophe" feminine ; -- tocheck
lin stapelia_N = mkN "stapelia" ; -- UWN
lin stapes_N = mkN "étrier" masculine ; -- tocheck
lin staphylococcal_A = mkA "staphylococcique" ; -- UWN
lin staphylococcus_N = mkN "staphylococcus" | mkN "staphylocoque" ; -- UWN
lin staple_N = mkN "agrafe" feminine ; -- tocheck
lin staple_V2 = mkV2 (mkV "agrafer") ; -- tocheck
lin stapler_N = mkN "agrafeuse" feminine ; -- tocheck
lin star_N = L.star_N ;
lin star_V2 = variants {} ; --
lin starboard_A = mkA "tribord" ; -- UWN
lin starboard_N = mkN "tribord" masculine ; -- tocheck
lin starch_N = mkN "amidon" masculine | mkN "apprêt" masculine | mkN "rigidité" feminine ; -- tocheck
lin starch_V2 = mkV2 (mkV "amidonner") ; -- tocheck
lin stardust_N = mkN "amas_stellaire" | mkN "poudre_magique" | mkN "stardust" | mkN "être_plein_d'illusion" ; -- UWN
lin starfish_N = mkN "astérie" | mkN "étoile_de_mer" ; -- UWN
lin starlet_N = mkN "starlette" feminine ; -- tocheck
lin starling_N = mkN "étourneau" masculine ; -- tocheck
lin starry_A = mkA "étoilé" ; -- tocheck
lin starship_N = mkN "astronef" | mkN "navire" | mkN "vaisseau_spatial" ; -- UWN
lin start_N = mkN "départ" masculine ; -- tocheck
lin start_V = mkV "commencer" ;
lin start_V2 = mkV2 (mkV "commencer") | mkV2 (mkV "démarrer") ;
lin start_ing_VV = variants {} ; -- guess-p-verb
lin start_off_V = advV OP_start_V OP_off_Adv ; -- guess-p-verb
lin start_off_V2 = prepV2 OP_start_V OP_off_Prep ; -- guess-p-verb
lin start_off_on_V2 = prepV2 (advV OP_start_V OP_off_Adv ) OP_on_Prep ; -- guess-p-verb
lin start_on_V2 = prepV2 OP_start_V OP_on_Prep ; -- guess-p-verb
lin start_on_at_V2 = prepV2 (advV OP_start_V OP_on_Adv ) OP_at_Prep ; -- guess-p-verb
lin start_out_V = advV OP_start_V OP_out_Adv ; -- guess-p-verb
lin start_out_as_V2 = prepV2 (advV OP_start_V OP_out_Adv ) OP_as_Prep ; -- guess-p-verb
lin start_out_to_V2 = prepV2 (advV OP_start_V OP_out_Adv ) OP_to_Prep ; -- guess-p-verb
lin start_over_V = advV OP_start_V OP_over_Adv ; -- guess-p-verb
lin start_to_VV = variants {} ; -- guess-p-verb
lin start_up_V = advV OP_start_V OP_up_Adv ; -- guess-p-verb
lin start_up_V2 = prepV2 OP_start_V OP_up_Prep ; -- guess-p-verb
lin starter_1_N = variants {} ; ---- sense to be split
lin starter_2_N = variants {} ; ---- sense to be split
lin starter_3_N = variants {} ; ---- sense to be split
lin starter_4_N = variants {} ; ---- sense to be split
lin starter_5_N = variants {} ; ---- sense to be split
lin starter_6_N = variants {} ; ---- sense to be split
lin starter_7_N = variants {} ; ---- sense to be split
lin startle_V2 = mkV2 (mkV I.surprendre_V2) | mkV2 (mkV "sursauter") ; -- tocheck
lin startup_N = mkN "startup" feminine ; -- tocheck
lin starvation_N = mkN "inanition" feminine ; -- tocheck
lin starve_V2 = mkV2 (mkV "affamer") ; -- tocheck
lin state_1_N = mkN "état" masculine ;
lin state_2_N = mkN "état" masculine ;
lin state_N = mkN "état" masculine ;
lin state_V2 = mkV2 (mkV "déclarer") ; -- tocheck
lin statecraft_N = mkN "diplomatie" ; -- UWN
lin stateless_A = mkA "apatride" ; -- tocheck
lin stateliness_N = mkN "majesté" ; -- UWN
lin stately_A = mkA "formel" | mkA "élégant" ; -- UWN
lin statement_N = mkN "instruction" feminine | mkN "relevé" masculine | mkN "déclaration" feminine ; -- tocheck
lin stater_N = mkN "statère" ; -- UWN
lin statesman_N = mkN "homme_d’État" | mkN "personnalité_politique" ; -- UWN
lin statesmanship_N = mkN "diplomatie" ; -- UWN
lin static_A = mkA "statique" ; -- tocheck
lin statics_N = mkN "statique" ; -- UWN
lin station_N = mkN "chaîne" feminine | mkN "station" feminine | mkN "gare" feminine ; -- tocheck
lin stationariness_N = mkN "immobilité" ; -- UWN
lin stationary_A = mkA "stationnaire" ; -- tocheck
lin stationery_N = mkN "papeterie" feminine ; -- tocheck
lin statistic_N = mkN "statistique" | mkN "statistiques" ; -- UWN
lin statistical_A = mkA "statistique" ; -- tocheck
lin statisticianFem_N = variants {} ; ---- sense to be split
lin statisticianMasc_N = variants {} ; ---- sense to be split
lin statistics_N = mkN "statistiques" feminine ; -- tocheck
lin stator_N = mkN "stator" ; -- UWN
lin statue_N = mkN "statue" feminine ; -- tocheck
lin statuesque_A = mkA "statuesque" ; -- tocheck
lin statuette_N = mkN "statuette" feminine ; -- tocheck
lin stature_N = mkN "altitude" | mkN "haut" | mkN "hauteur" | mkN "stature" | mkN "taille" ; -- UWN
lin status_N = mkN "statut" masculine ; -- tocheck
lin statute_N = mkN "statut" masculine ; -- tocheck
lin statutory_A = mkA "statutaire" ; -- tocheck
lin staunch_A = mkA "fervent" ; -- tocheck
lin staunch_V2 = mkV2 (mkV "étancher") ; -- tocheck
lin staurikosaur_N = mkN "staurikosaurus" ; -- UWN
lin stave_N = mkN "portée" feminine ; -- tocheck
lin stay_N = mkN "séjour" masculine ; -- tocheck
lin stay_V = etreV (mkV "rester") ;
lin stay_VA = mkVA (etreV (mkV "rester")) ;
lin stay_away_V = advV OP_stay_V OP_away_Adv ; -- guess-p-verb
lin stay_away_from_V2 = prepV2 (advV OP_stay_V OP_away_Adv ) OP_from_Prep ; -- guess-p-verb
lin stay_in_V = advV OP_stay_V OP_in_Adv ; -- guess-p-verb
lin stay_on_V = mkV "demeurer" | mkV "rester" ; -- UWN
lin stay_out_V = advV OP_stay_V OP_out_Adv ; -- guess-p-verb
lin stay_over_V = mkV "rester" ; -- UWN
lin stay_up_V = mkV "veiller" ; -- UWN
lin stayer_N = mkN "stayer" ; -- UWN
lin stead_N = mkN "place" ; -- UWN
lin steadfast_A = mkA "déterminé" ; -- tocheck
lin steadfastness_N = mkN "fermeté" ; -- UWN
lin steady_A = mkA "régulier" | mkA "lisse" ; -- tocheck
lin steady_N = mkN "ange" | mkN "chéri" | mkN "minou" ; -- UWN
lin steak_N = mkN "bifteck" masculine ; -- tocheck
lin steal_N = mkN "voler" ; -- UWN
lin steal_V = mkV "voler" ; -- UWN
lin steal_V2 = mkV2 (mkV "voler") ; -- tocheck
lin steal_away_V = advV OP_steal_V OP_away_Adv ; -- guess-p-verb
lin steal_out_V = advV OP_steal_V OP_out_Adv ; -- guess-p-verb
lin steal_over_V2 = prepV2 OP_steal_V OP_over_Prep ; -- guess-p-verb
lin steal_up_V = advV OP_steal_V OP_up_Adv ; -- guess-p-verb
lin steal_up_on_V2 = prepV2 (advV OP_steal_V OP_up_Adv ) OP_on_Prep ; -- guess-p-verb
lin stealth_N = mkN "furtivité" feminine ; -- tocheck
lin stealthy_A = mkA "furtif" | mkA "sournois" ; -- UWN
lin steam_N = mkN "vapeur" feminine | mkN "vapeur" masculine ; -- tocheck
lin steamer_N = mkN "bateau_à_vapeur" | mkN "vapeur" ; -- UWN
lin steamy_A = mkA "excité" ; -- UWN
lin stearin_N = mkN "stéarine" feminine ; -- tocheck
lin steatorrhea_N = mkN "stéatorrhée" ; -- UWN
lin steed_N = mkN "coursier" ; -- tocheck
lin steel_N = L.steel_N ;
lin steelmaker_N = mkN "sidérurgiste" ; -- UWN
lin steelworks_N = mkN "aciérie" feminine ; -- tocheck
lin steep_A = mkA "escarpé" ; -- tocheck
lin steep_V = mkV "infuser" ; -- UWN
lin steep_V2 = mkV2 (mkV "imprégner") | mkV2 (mkV "infuser") ; -- tocheck
lin steeple_N = mkN "clocher" masculine ; -- tocheck
lin steepness_N = mkN "escarpement" masculine ; -- tocheck
lin steer_N = mkN "boeuf" masculine ; -- tocheck
lin steer_V = variants {} ; -- mkV2 (mkV "diriger") ; -- tocheck
lin steer_V2 = mkV2 (mkV "diriger") ; -- tocheck
lin steerage_N = mkN "direction" ; -- UWN
lin steering_N = mkN "direction" feminine ; -- tocheck
lin steersman_N = mkN "Timonier" | mkN "barreur" | mkN "timonier" ; -- UWN
lin stegosaur_N = mkN "stégosaure" masculine ; -- tocheck
lin stele_N = mkN "stèle" feminine ; -- tocheck
lin stella_PN = mkPN "Stella" ; -- status=guess src=geonames
lin stellar_A = mkA "exceptionnel" | mkA "stellaire" ; -- tocheck
lin stem_N = mkN "racine" feminine | mkN "étrave" feminine | mkN "tige" feminine ; -- tocheck
lin stem_V = variants {} ; -- mkV2 (mkV "arrêter") ; -- tocheck
lin stem_V2 = mkV2 (mkV "arrêter") ; -- tocheck
lin stemmatology_N = mkN "stemmatique" ; -- UWN
lin stench_N = mkN "puanteur" feminine ; -- tocheck
lin stencil_N = mkN "pochoir" ; -- tocheck
lin stenography_N = mkN "sténographie" feminine ; -- tocheck
lin stenosis_N = mkN "sténose" ; -- tocheck
lin stent_N = mkN "stent" ; -- UWN
lin step_N = mkN "marche" feminine | mkN "pas" | mkN "pas" masculine ; -- tocheck
lin step_V = variants {} ; -- mkV2 (mkV "marcher") ; -- tocheck
lin step_V2 = mkV2 (mkV "marcher") ; -- tocheck
lin step_aside_V = advV OP_step_V OP_aside_Adv ; -- guess-p-verb
lin step_back_V = advV OP_step_V OP_back_Adv ; -- guess-p-verb
lin step_down_V = mkV "affaiblir" | mkV "croître" | mkV "diminuer" | mkV "fragiliser" | mkV "réduire" ; -- UWN
lin step_down_V2 = prepV2 OP_step_V OP_down_Prep ; -- guess-p-verb
lin step_forward_V = mkV "augmenter" | mkV "étendre" ; -- UWN
lin step_in_V = mkV "intervenir" | mkV "remplacer" | mkV "substituer" ; -- UWN
lin step_on_it_V2 = variants {} ; -- guess-p-verb
lin step_out_V = advV OP_step_V OP_out_Adv ; -- guess-p-verb
lin step_to_V2 = prepV2 OP_step_V OP_to_Prep ; -- guess-p-verb
lin step_up_V2 = prepV2 OP_step_V OP_up_Prep ; -- guess-p-verb
lin stepbrother_N = mkN "beau-frère" masculine ; -- tocheck
lin stepchild_N = mkN "bel-enfant" masculine | mkN "beau-fils" ; -- tocheck
lin stepdaughter_N = mkN "belle-fille" feminine ; -- tocheck
lin stepfather_N = mkN "beau-père" masculine ; -- tocheck
lin stephanotis_N = mkN "stephanotis" ; -- UWN
lin stepmother_N = mkN "belle-mère" feminine ; -- tocheck
lin steppe_N = mkN "steppe" feminine ; -- tocheck
lin stepsister_N = mkN "demi-sœur" ; -- UWN
lin stepson_N = mkN "beau-fils" masculine ; -- tocheck
lin steradian_N = mkN "stéradian" masculine ; -- tocheck
lin sterculia_N = mkN "sterculia" ; -- UWN
lin stereophonic_A = mkA "stéréophonique" ; -- UWN
lin stereotype_N = mkN "stéréotype" | mkN "cliché" masculine ; -- tocheck
lin stereotype_V2 = mkV2 (mkV "stéréotyper") ; -- tocheck
lin stereotypical_A = variants {} ;
lin sterile_A = mkA "stérile" ; -- tocheck
lin sterilization_N = mkN "stérilisation" feminine ; -- tocheck
lin sterilize_V2 = mkV2 (mkV "stériliser") ; -- tocheck
lin sterling_A = mkA "superlatif" ; -- UWN
lin stern_A = mkA "sévère" ; -- tocheck
lin stern_N = mkN "poupe" feminine ; -- tocheck
lin sternal_A = mkA "sternal" ; -- tocheck
lin sternocleidomastoid_N = mkN "muscle_sterno-cléido-mastoïdien" | mkN "sterno-cléido-mastoïdien" ; -- UWN
lin sternpost_N = mkN "étambot" ; -- UWN
lin sternum_N = mkN "sternum" ; -- UWN
lin steroid_N = mkN "stéroïde" masculine ; -- tocheck
lin steroidal_A = mkA "stéroïdien" ; -- UWN
lin sterol_N = mkN "stérol" ; -- UWN
lin stertorous_A = mkA "stertoreux" ; -- tocheck
lin stethoscope_N = mkN "stéthoscope" masculine ; -- tocheck
lin stevedore_N = mkN "stevedore" masculine ; -- tocheck
lin stevenage_PN = mkPN "Stevenage" ; -- status=guess src=geonames
lin stevenston_PN = mkPN "Stevenston" ; -- status=guess src=geonames
lin stevia_N = mkN "stévie" | mkN "stévia" feminine ; -- tocheck
lin stew_N = mkN "ragoût" masculine ; -- tocheck
lin stew_V2 = mkV2 (mkV "frémir") | mkV2 (mkV "transpirer") ; -- tocheck
lin steward_N = mkN "intendant" masculine ; -- tocheck
lin stewardess_N = mkN "hôtesse" | mkN "hôtesse_de_l'air" | mkN "hôtesse_de_l’air" | mkN "stewardesse" ; -- UWN
lin stewardship_N = mkN "intendant" masculine ; -- tocheck
lin steyning_PN = mkPN "Steyning" ; -- status=guess src=geonames
lin stibnite_N = mkN "antimonite" | mkN "stibine" | mkN "sulfure_d'antimoine" ; -- UWN
lin stick_N = L.stick_N ;
lin stick_V = variants {} ; -- mkV2 (mkV "coller") | mkV2 (mkV "coincer") | mkV2 (mkV "rester") | mkV2 (mkV "ficher") | mkV2 (mkV "planter") | mkV2 (mkV "bouturer") ; -- tocheck
lin stick_V2 = mkV2 (mkV "coller") | mkV2 (mkV "coincer") | mkV2 (mkV "rester") | mkV2 (mkV "ficher") | mkV2 (mkV "planter") | mkV2 (mkV "bouturer") ; -- tocheck
lin stick_around_V = advV OP_stick_V OP_around_Adv ; -- guess-p-verb
lin stick_at_V2 = prepV2 OP_stick_V OP_at_Prep ; -- guess-p-verb
lin stick_by_V2 = prepV2 OP_stick_V OP_by_Prep ; -- guess-p-verb
lin stick_down_V2 = prepV2 OP_stick_V OP_down_Prep ; -- guess-p-verb
lin stick_it_to_V2 = variants {} ; -- guess-p-verb
lin stick_out_V = mkV "accomplir" | mkV "atteindre" | mkV "continuer" | mkV "demeurer" | mkV "endurer" | mkV "observer" | mkV "porter" | mkV "prêter" | mkV "respecter" | mkV "rester" | mkV "souffrir" | mkV "soutenir" | mkV "subir" | mkV "supporter" | mkV "tolérer" ; -- UWN
lin stick_out_V2 = prepV2 OP_stick_V OP_out_Prep ; -- guess-p-verb
lin stick_out_for_V2 = prepV2 (advV OP_stick_V OP_out_Adv ) OP_for_Prep ; -- guess-p-verb
lin stick_to_V2 = prepV2 OP_stick_V OP_to_Prep ; -- guess-p-verb
lin stick_together_V = advV OP_stick_V OP_together_Adv ; -- guess-p-verb
lin stick_up_V = mkV "défendre" | mkV "rester" ; -- UWN
lin stick_up_V2 = prepV2 OP_stick_V OP_up_Prep ; -- guess-p-verb
lin stick_up_for_V2 = prepV2 (advV OP_stick_V OP_up_Adv ) OP_for_Prep ; -- guess-p-verb
lin stick_with_V2 = prepV2 OP_stick_V OP_with_Prep ; -- guess-p-verb
lin sticker_N = mkN "autocollant" masculine | mkN "baguette" ; -- tocheck
lin stickleback_N = mkN "épinoche" feminine ; -- tocheck
lin sticky_A = mkA "collant" ; -- tocheck
lin stiff_A = mkA "raide" | mkA "rigide" ; -- tocheck
lin stiff_Adv = mkAdv "rigide" ; -- UWN
lin stiff_N = mkN "macchabée" masculine ; -- tocheck
lin stiffen_V2 = mkV2 (mkV "raidir") ; -- tocheck
lin stiffener_N = mkN "raidisseur" ; -- UWN
lin stiffness_N = mkN "inflexibilité" | mkN "raideur" | mkN "rigidité" ; -- tocheck
lin stifle_N = mkN "genou" ; -- UWN
lin stifle_V = mkV "asphyxier" | mkV "suffoquer" | mkV "étouffer" ; -- UWN
lin stifle_V2 = mkV2 (mkV I.interrompre_V2) | mkV2 (mkV "réprimer") ; -- tocheck
lin stifler_N = mkN "stifler" ; -- UWN
lin stigma_N = mkN "stigma" masculine | mkN "stigmate" masculine ; -- tocheck
lin stigmata_N = mkN "stigmates" ; -- UWN
lin stigmatic_N = mkN "stigmatisé" masculine ; -- tocheck
lin stigmatism_N = mkN "stigmatisme" ; -- tocheck
lin stigmatization_N = mkN "stigmatisation" feminine ; -- tocheck
lin stile_N = mkN "échalier" masculine ; -- tocheck
lin stiletto_N = mkN "stylet" masculine ; -- tocheck
lin still_A = mkA "calme" ; -- tocheck
lin still_Adv = mkAdv "néanmoins" | mkAdv "encore" ;
lin still_N = mkN "alambic" | mkN "photogramme" masculine ; -- tocheck
lin still_V2 = mkV2 (mkV "calmer") ; -- tocheck
lin stillbirth_N = mkN "mortinaissance" feminine ; -- tocheck
lin stillborn_A = mkA "mort-né" ; -- tocheck
lin stillness_N = mkN "calme" masculine ; -- tocheck
lin stilt_N = mkN "échassier" masculine | mkN "pilotis" masculine | mkN "échasse" feminine ; -- tocheck
lin stilted_A = mkA "affété" | mkA "artificiel" | mkA "emprunté" | mkA "magnifique" | mkA "précieux" ; -- UWN
lin stimulant_A = mkA "stimulant" ; -- UWN
lin stimulant_N = mkN "excitant" masculine ; -- tocheck
lin stimulate_V2 = mkV2 (mkV "stimuler") ; -- tocheck
lin stimulating_A = mkA "stimulant" ; -- tocheck
lin stimulation_N = mkN "stimulation" feminine ; -- tocheck
lin stimulus_N = mkN "stimulus" masculine ; -- tocheck
lin sting_N = mkN "piqûre" feminine ; -- tocheck
lin sting_V2 = mkV2 (mkV "piquer") ; -- tocheck
lin stinger_N = mkN "aiguillon" masculine ; -- tocheck
lin stinginess_N = mkN "avarice" ; -- tocheck
lin stingray_N = mkN "dasyatidé" masculine ; -- tocheck
lin stingy_A = mkA "avare" | mkA "piquant" ; -- tocheck
lin stink_N = mkN "tapage" masculine | mkN "puanteur" feminine ; -- tocheck
lin stink_V2 = mkV2 (mkV "puer") ; -- tocheck
lin stint_N = mkN "tâche" ; -- UWN
lin stipe_N = mkN "tige" ; -- UWN
lin stipend_N = mkN "rente" feminine ; -- tocheck
lin stipulation_N = mkN "clause" feminine ; -- tocheck
lin stipule_N = mkN "stipule" feminine ; -- tocheck
lin stir_N = mkN "tumulte" masculine ; -- tocheck
lin stir_V = variants {} ; -- mkV2 (mkV "agiter") | mkV2 (mkV "remuer") | mkV2 (mkV "bouger") ; -- tocheck
lin stir_V2 = mkV2 (mkV "agiter") | mkV2 (mkV "remuer") | mkV2 (mkV "bouger") ; -- tocheck
lin stir_up_V2 = prepV2 OP_stir_V OP_up_Prep ; -- guess-p-verb
lin stirling_PN = mkPN "Stirling" ; -- status=guess src=geonames
lin stirrup_N = mkN "étrier" masculine ; -- tocheck
lin stitch_N = mkN "crampe" feminine | mkN "point" masculine ; -- tocheck
lin stitch_V = mkV "coudre" ; -- UWN
lin stoat_N = mkN "hermine" ; -- UWN
lin stochastic_A = mkA "stochastique" ; -- tocheck
lin stock_A = mkA "banal" | mkA "fatigué" | mkA "mineur" | mkA "trivial" ; -- UWN
lin stock_N = mkN "action" feminine | mkN "matthiole" feminine | mkN "pioche" feminine | mkN "stock" masculine | mkN "réserve" feminine ; -- tocheck
lin stockade_N = mkN "camp_de_concentration" ; -- UWN
lin stockholder_N = mkN "actionnaire" ; -- tocheck
lin stockholm_PN = mkPN "Stockholm" ; -- status=guess src=geonames
lin stocking_N = mkN "bas" masculine ; -- tocheck
lin stockist_N = mkN "stockiste" ; -- UWN
lin stockpile_N = mkN "stock" masculine ; -- tocheck
lin stockport_PN = mkPN "Stockport" ; -- status=guess src=geonames
lin stocks_N = mkN "pilori" ; -- tocheck
lin stocksbridge_PN = mkPN "Stocksbridge" ; -- status=guess src=geonames
lin stocky_A = mkA "trapu" ; -- tocheck
lin stodge_N = mkN "étouffe-chrétien" ; -- UWN
lin stoep_N = mkN "perron" ; -- UWN
lin stoic_A = mkA "stoïque" ; -- tocheck
lin stoic_N = mkN "stoïque" ; -- tocheck
lin stoical_A = mkA "stoïque" ; -- UWN
lin stoichiometric_A = mkA "stoechiométrique" ; -- tocheck
lin stoichiometry_N = mkN "stoechiométrie" feminine ; -- tocheck
lin stoicism_N = mkN "stoïcisme" masculine ; -- tocheck
lin stoke_V = mkV "chauffer" ; -- UWN
lin stoke_V2 = mkV2 (mkV "tisonner") | mkV2 (mkV "tiser") ; -- tocheck
lin stoker_N = mkN "chauffeur" masculine ; -- tocheck
lin stole_N = mkN "étole" ; -- tocheck
lin stolen_A = variants {} ; --
lin stolid_A = mkA "impassible" ; -- UWN
lin stolidity_N = mkN "stoïcisme" ; -- UWN
lin stolidness_N = mkN "stoïcisme" ; -- UWN
lin stolon_N = mkN "stolon" ; -- UWN
lin stoloniferous_A = mkA "stolonifère" ; -- UWN
lin stoma_N = mkN "stomate" masculine ; -- tocheck
lin stomach_N = mkN "ventre" masculine | mkN "estomac" masculine ; -- tocheck
lin stomach_V2 = mkV2 (mkV "digérer") ; -- tocheck
lin stomp_N = mkN "fouler" ; -- UWN
lin stomp_V2 = mkV2 (mkV "fouler") ; -- tocheck
lin stone_A = mkA "lapider" | mkA "pierre" ; -- UWN
lin stone_N = L.stone_N ;
lin stone_PN = mkPN "Stone" ; -- status=guess src=geonames
lin stone_V2 = mkV2 (mkV "défoncer") | mkV2 (mkV "lapider") | mkV2 (mkV "dénoyauter") ; -- tocheck
lin stonecrop_N = mkN "sedum" ; -- UWN
lin stonefish_N = mkN "poisson-pierre" masculine ; -- tocheck
lin stonefly_N = mkN "plecoptera" ; -- UWN
lin stonehouse_PN = mkPN "Stonehouse" ; -- status=guess src=geonames
lin stonemason_N = mkN "mason" | mkN "maçon" ; -- UWN
lin stoneware_N = mkN "grès" masculine ; -- tocheck
lin stony_A = mkA "froid" ; -- tocheck
lin stooge_N = mkN "dupe" feminine ; -- tocheck
lin stool_N = mkN "tabouret" masculine | mkN "selle" feminine ; -- tocheck
lin stoop_N = mkN "piqué" masculine | mkN "perron" masculine ; -- tocheck
lin stoop_V2 = mkV2 (reflV (mkV "pencher")) ; -- tocheck
lin stop_N = mkN "occlusive" feminine | mkN "arrêt" masculine | mkN "ammorti" masculine ; -- tocheck
lin stop_V = L.stop_V ;
lin stop_V2 = mkV2 (mkV "arrêter") | mkV2 (mkV "cesser") | mkV2 (reflV (mkV "arrêter")) ;
lin stop_VV = mkVV L.stop_V ;
lin stop_around_V = advV OP_stop_V OP_around_Adv ; -- guess-p-verb
lin stop_back_V = advV OP_stop_V OP_back_Adv ; -- guess-p-verb
lin stop_behind_V = advV OP_stop_V OP_behind_Adv ; -- guess-p-verb
lin stop_by_V2 = prepV2 OP_stop_V OP_by_Prep ; -- guess-p-verb
lin stop_in_V = advV OP_stop_V OP_in_Adv ; -- guess-p-verb
lin stop_off_V = advV OP_stop_V OP_off_Adv ; -- guess-p-verb
lin stop_out_V = advV OP_stop_V OP_out_Adv ; -- guess-p-verb
lin stop_over_V = advV OP_stop_V OP_over_Adv ; -- guess-p-verb
lin stop_up_V = mkV "boucher" | mkV "raccommoder" ; -- UWN
lin stop_up_V2 = prepV2 OP_stop_V OP_up_Prep ; -- guess-p-verb
lin stoplight_N = mkN "carrefour_à_feux" | mkN "feu" | mkN "feu_tricolore" | mkN "feux_de_circulation" | mkN "feux_tricolores" ; -- UWN
lin stopover_N = mkN "étape" feminine ; -- tocheck
lin stoppage_N = mkN "arrêt" | mkN "escale" | mkN "halte" | mkN "point" ; -- UWN
lin stopper_N = mkN "bouchon" | mkN "capsule" ; -- UWN
lin stopwatch_N = mkN "chronomètre" ; -- tocheck
lin storage_N = mkN "stockage" masculine ; -- tocheck
lin store_N = mkN "entrepôt" masculine | mkN "stock" masculine ; -- tocheck
lin store_V2 = mkV2 (mkV "stocker") | mkV2 (mkV "conserver") ; -- tocheck
lin storehouse_N = mkN "dépôt" | mkN "entrepôt" | mkN "réserve" ; -- UWN
lin storeroom_N = mkN "réserve" masculine ; -- tocheck
lin storey_N = mkN "étage" masculine ; -- tocheck
lin storied_A = mkA "célèbre" ; -- UWN
lin stork_N = mkN "cigogne" feminine ; -- tocheck
lin storksbill_N = mkN "bec-de-grue" masculine ; -- tocheck
lin storm_N = mkN "tempête" feminine | mkN "orage" masculine ; -- tocheck
lin storm_V = variants {} ; --
lin storm_V2 = variants {} ; --
lin stornoway_PN = mkPN "Stornoway" ; -- status=guess src=geonames
lin story_N = mkN "histoire" feminine | mkN "étage" masculine ; ---- split
lin storyteller_N = mkN "conteur" masculine ; -- tocheck
lin stotfold_PN = mkPN "Stotfold" ; -- status=guess src=geonames
lin stoup_N = mkN "bénitier" | mkN "perron" ; -- UWN
lin stourbridge_PN = mkPN "Stourbridge" ; -- status=guess src=geonames
lin stoutness_N = mkN "adipose" | mkN "corpulence" | mkN "surpoids" ; -- UWN
lin stove_N = L.stove_N ;
lin stovepipe_N = mkN "bièvre" | mkN "castor" | mkN "claque" | mkN "haut-de-forme" ; -- UWN
lin stowaway_N = mkN "passager_clandestin" ; -- UWN
lin stowmarket_PN = mkPN "Stowmarket" ; -- status=guess src=geonames
lin strabismus_N = mkN "strabisme" masculine ; -- tocheck
lin straddle_V2 = mkV2 (mkV "enfourcher") ; -- tocheck
lin straggler_N = mkN "traînard" masculine ; -- tocheck
lin straight_A = L.straight_A ;
lin straight_Adv = mkAdv "directement" ; -- tocheck
lin straight_N = mkN "quinte" feminine ; -- tocheck
lin straighten_V = variants {} ; --
lin straighten_V2 = variants {} ; --
lin straightforward_A = mkA "direct" ; -- tocheck
lin straightness_N = mkN "hétérosexualité" ; -- UWN
lin strain_N = mkN "hérédité" feminine | mkN "race" feminine ; -- tocheck
lin strain_V2 = variants {} ; --
lin strainer_N = mkN "filtre" masculine ; -- tocheck
lin strait_A = mkA "détroit" ; -- UWN
lin strait_N = mkN "détroit" masculine ; -- tocheck
lin straitjacket_N = mkN "camisole_de_force" ; -- UWN
lin strand_N = mkN "brin" masculine | mkN "grève" feminine ; -- tocheck
lin strand_V2 = mkV2 (mkV "abandonner") | mkV2 (mkV "échouer") ; -- tocheck
lin strange_A = mkA "inconnu" | mkA "étrange" ; -- tocheck
lin strangeness_N = mkN "étrangeté" feminine ; -- tocheck
lin stranger_N = mkN "étranger" masculine | mkN "inconnu" masculine ; -- tocheck
lin strangle_V2 = mkV2 (mkV "étrangler") ; -- tocheck
lin stranglehold_N = mkN "mainmise" | mkN "étau" ; -- UWN
lin strangler_N = mkN "étrangleur" masculine ; -- tocheck
lin strangulation_N = mkN "strangulation" | mkN "étranglement" ; -- UWN
lin stranraer_PN = mkPN "Stranraer" ; -- status=guess src=geonames
lin strap_N = mkN "bandoulière" feminine | mkN "sangle" feminine ; -- tocheck
lin strappado_N = mkN "estrapade" feminine ; -- tocheck
lin strasbourg_PN = mkPN "Strasbourg" ; -- status=guess src=geonames
lin stratagem_N = mkN "stratagème" masculine ; -- tocheck
lin strategic_A = mkA "stratégique" ; -- tocheck
lin strategical_A = mkA "stratégique" ; -- UWN
lin strategist_N = mkN "stratège" masculine ; -- tocheck
lin strategy_N = mkN "stratégie" feminine ; -- tocheck
lin strathaven_PN = mkPN "Strathaven" ; -- status=guess src=geonames
lin stratification_N = mkN "stratification" ; -- UWN
lin stratify_V = mkV "stratifier" ; -- UWN
lin stratigraphy_N = mkN "stratigraphie" feminine ; -- tocheck
lin stratosphere_N = mkN "stratosphère" feminine ; -- tocheck
lin stratum_N = mkN "couche" feminine | mkN "classe" feminine | mkN "strate" feminine ; -- tocheck
lin straw_A = mkA "paille" ; -- tocheck
lin straw_N = mkN "paille" feminine ; -- tocheck
lin strawberry_N = mkN "fraisier" masculine | mkN "fraise" feminine ; -- tocheck
lin stray_A = mkA "errant" ; -- tocheck
lin stray_N = mkN "errance" ; -- tocheck
lin stray_V = mkV (mkV "errer") ; -- tocheck
lin streak_N = mkN "mite" feminine | mkN "raie" feminine ; -- tocheck
lin streaker_N = mkN "nu-vite" masculine ; -- tocheck
lin stream_N = mkN "flot" masculine | mkN "ruisseau" masculine ; -- tocheck
lin streamer_N = mkN "fanion" masculine ; -- tocheck
lin streamlet_N = mkN "ruisselet" masculine ; -- tocheck
lin street_N = mkN "rue" feminine ; -- tocheck
lin street_PN = mkPN "Street" ; -- status=guess src=geonames
lin streetcar_N = mkN "tram" | mkN "tramway" | mkN "trolley" | mkN "trolleybus" ; -- UWN
lin streetlight_N = mkN "réverbère" feminine ; -- tocheck
lin streetwise_A = mkA "futé" ; -- UWN
lin strength_N = mkN "force" feminine ; -- tocheck
lin strengthen_V2 = mkV2 (mkV "renforcer") ; -- tocheck
lin streptobacillus_N = mkN "streptobacillus" ; -- UWN
lin streptococcal_A = mkA "streptococcique" ; -- UWN
lin streptococcus_N = mkN "streptocoque" ; -- tocheck
lin streptomyces_N = mkN "streptomyces" | mkN "streptomycètes" ; -- UWN
lin streptomycin_N = mkN "streptomycine" ; -- UWN
lin stress_N = mkN "stress" masculine | mkN "accentuation" feminine | mkN "tension" feminine ; -- tocheck
lin stress_V2 = mkV2 (mkV "stresser") | mkV2 (mkV "souligner") | mkV2 (mkV "emphaser") ; -- tocheck
lin stress_VS = variants {} ; -- mkV2 (mkV "stresser") | mkV2 (mkV "souligner") | mkV2 (mkV "emphaser") ; -- tocheck
lin stretch_N = mkN "étirement" ; -- tocheck
lin stretch_V = variants {} ; -- mkV2 (reflV (mkV I.étendre_V2)) | mkV2 (reflV (mkV "étirer")) | mkV2 (mkV I.étendre_V2) ; -- tocheck
lin stretch_V2 = mkV2 (reflV (mkV I.étendre_V2)) | mkV2 (reflV (mkV "étirer")) | mkV2 (mkV I.étendre_V2) ; -- tocheck
lin stretch_out_V = mkV "transmettre" | mkV "étendre" ; -- UWN
lin stretchable_A = mkA "étirable" ; -- UWN
lin stretcher_N = mkN "paneresse" feminine | mkN "châssis" masculine | mkN "civière" feminine ; -- tocheck
lin stretcher_bearer_N = mkN "brancardier" masculine ; -- tocheck
lin stretford_PN = mkPN "Stretford" ; -- status=guess src=geonames
lin strew_V2 = mkV2 (mkV "parsemer") ; -- tocheck
lin stria_N = mkN "banderole" ; -- UWN
lin strict_A = mkA "strict" ; -- tocheck
lin stride_V = variants {} ; --
lin strident_A = mkA "strident" ; -- tocheck
lin strider_N = mkN "randonneur" masculine ; -- tocheck
lin stridor_N = mkN "stridor" ; -- UWN
lin stridulate_V = mkV "striduler" ; -- UWN
lin stridulation_N = mkN "stridulation" ; -- UWN
lin strike_1_N = variants {} ; --
lin strike_2_N = variants {} ; --
lin strike_N = mkN "strike" masculine | mkN "coup" masculine | mkN "grève" feminine ; -- tocheck
lin strike_V = variants {} ; -- mkV2 (mkV "biffer") | mkV2 (mkV "frapper") ; -- tocheck
lin strike_V2 = mkV2 (mkV "biffer") | mkV2 (mkV "frapper") ; -- tocheck
lin strike_back_V = advV OP_strike_V OP_back_Adv ; -- guess-p-verb
lin strike_down_V = advV OP_strike_V OP_down_Adv ; -- guess-p-verb
lin strike_down_V2 = prepV2 OP_strike_V OP_down_Prep ; -- guess-p-verb
lin strike_off_V2 = prepV2 OP_strike_V OP_off_Prep ; -- guess-p-verb
lin strike_on_V2 = prepV2 OP_strike_V OP_on_Prep ; -- guess-p-verb
lin strike_out_V = advV OP_strike_V OP_out_Adv ; -- guess-p-verb
lin strike_out_V2 = prepV2 OP_strike_V OP_out_Prep ; -- guess-p-verb
lin strike_up_V = advV OP_strike_V OP_up_Adv ; -- guess-p-verb
lin strike_up_V2 = prepV2 OP_strike_V OP_up_Prep ; -- guess-p-verb
lin strike_upon_V2 = prepV2 OP_strike_V OP_upon_Prep ; -- guess-p-verb
lin strikebreaker_N = mkN "briseur_de_grève" | mkN "charbon_symptomatique" | mkN "rat" ; -- UWN
lin strikeout_N = mkN "retrait_sur_des_prises" | mkN "retrait_sur_trois_prises" ; -- UWN
lin striker_N = mkN "gréviste" ; -- tocheck
lin striking_A = mkA "dramatique" | mkA "imposant" | mkA "spectaculaire" ; -- UWN
lin string_N = mkN "suite" feminine | mkN "corde" feminine | mkN "cordes" ; -- tocheck
lin string_V2 = mkV2 (mkV "enfiler") ; -- tocheck
lin stringent_A = mkA "raide" | mkA "rigoureux" ; -- UWN
lin stringy_A = mkA "filandreux" ; -- tocheck
lin strip_N = mkN "bande" feminine ; -- tocheck
lin strip_V = variants {} ; -- mkV2 (mkV "enlever") | mkV2 (reflV (mkV "déshabiller")) ; -- tocheck
lin strip_V2 = mkV2 (mkV "enlever") | mkV2 (reflV (mkV "déshabiller")) ; -- tocheck
lin stripe_N = mkN "galon" masculine | mkN "rayure" feminine ; -- tocheck
lin striped_A = mkA "rayé" ; -- tocheck
lin stripling_N = mkN "adolescent" | mkN "adolescente" ; -- UWN
lin stripper_N = mkN "stripteaseur" masculine ; -- tocheck
lin striptease_N = mkN "striptease" masculine ; -- tocheck
lin stripy_A = mkA "rayé" | mkA "zébré" ; -- UWN
lin strive_V = mkV (reflV (mkV "efforcer")) ; -- tocheck
lin strive_VV = mkvVV "aspirer" ;
lin striver_N = mkN "bosseur" | mkN "esclave" ; -- UWN
lin striving_N = mkN "souche" | mkN "ténor" ; -- UWN
lin stroboscope_N = mkN "stroboscope" ; -- UWN
lin stroke_N = mkN "coup" masculine | mkN "trait" masculine | mkN "brasse" feminine | mkN "caresse" feminine ; -- tocheck
lin stroke_V2 = mkV2 (mkV "caresser") ; -- tocheck
lin stroll_N = mkN "promenade" feminine ; -- tocheck
lin stroll_V = mkV (mkV "flâner") ; -- tocheck
lin stroller_N = mkN "landau" masculine ; -- tocheck
lin strong_A = mkA "fort" ;
lin strong_arm_A = mkA "physique" ; -- UWN
lin strongbox_N = mkN "coffre-fort" ; -- UWN
lin stronghold_N = mkN "bastion" masculine ; -- tocheck
lin strontianite_N = mkN "strontianite" ; -- UWN
lin strontium_N = mkN "strontium" masculine ; -- tocheck
lin strop_N = mkN "lanière" feminine ; -- tocheck
lin strophanthus_N = mkN "strophanthus" ; -- UWN
lin strophe_N = mkN "strophe" ; -- UWN
lin stroud_PN = mkPN "Stroud" ; -- status=guess src=geonames
lin structural_A = mkA "structurel" ; -- tocheck
lin structuralism_N = mkN "structuralisme" masculine ; -- tocheck
lin structure_N = mkN "structure" feminine ;
lin structure_V2 = variants {} ; --
lin struggle_N = mkN "lutte" feminine ; -- tocheck
lin struggle_V = mkV (mkV "lutter") ; -- tocheck
lin struggle_VV = variants {} ; -- mkV (mkV "lutter") ; -- tocheck
lin struggle_back_V = advV OP_struggle_V OP_back_Adv ; -- guess-p-verb
lin struggler_N = mkN "lutteur" ; -- tocheck
lin strum_V2 = mkV2 (mkV "racler") ; -- tocheck
lin strumpet_N = mkN "pute" feminine ; -- tocheck
lin strut_V = mkV (mkV "parader") ; -- tocheck
lin struthiomimus_N = mkN "struthiomimus" ; -- UWN
lin strychnine_N = mkN "strychnine" feminine ; -- tocheck
lin stuart_PN = mkPN "Stuart" ; -- status=guess src=geonames
lin stub_N = mkN "souche" | mkN "moignon" masculine | mkN "ébauche" ; -- tocheck
lin stubble_N = mkN "éteule" feminine ; -- tocheck
lin stubborn_A = mkA "têtu" ; -- tocheck
lin stubbornness_N = mkN "entêtement" | mkN "obstination" | mkN "opiniâtreté" ; -- UWN
lin stucco_N = mkN "stuc" masculine ; -- tocheck
lin stud_N = mkN "clou" masculine | mkN "étalon" ; -- tocheck
lin studentFem_N = mkN "étudiante" ;
lin studentMasc_N = L.student_N ;
lin studio_N = mkN "studio" masculine ; -- tocheck
lin studious_A = mkA "studieux" ; -- tocheck
lin studley_PN = mkPN "Studley" ; -- status=guess src=geonames
lin study_N = mkN "étude" feminine ;
lin study_V = variants {} ; -- mkV2 (mkV "étudier") ; -- tocheck
lin study_V2 = mkV2 (mkV "étudier") ; -- tocheck
lin stuff_N = mkN "truc" | mkN "substance" ; -- tocheck
lin stuff_V2 = mkV2 (mkV "péter") | mkV2 (mkV "fourrer") | mkV2 (mkV I.mettre_V2) ; -- tocheck
lin stuffing_N = mkN "farce" feminine ; -- tocheck
lin stuffy_A = mkA "fâché" ; -- tocheck
lin stultification_N = mkN "constipation" ; -- UWN
lin stumble_N = mkN "chute" feminine | mkN "bourde" feminine ; -- tocheck
lin stumble_V = mkV (mkV "butter") | mkV (mkV "trébucher") ; -- tocheck
lin stumbler_N = mkN "boucher" ; -- UWN
lin stump_N = mkN "estompe" feminine | mkN "souche" feminine ; -- tocheck
lin stumper_N = mkN "autocollant" | mkN "colle" ; -- UWN
lin stun_V2S = mkV2S (mkV "étourdir") ; -- tocheck
lin stunner_N = mkN "bombe" ; -- UWN
lin stunning_A = variants {} ; --
lin stunt_N = mkN "cascade" feminine ; -- tocheck
lin stupid_A = L.stupid_A ;
lin stupid_N = mkN "idiot" | mkN "imbécile" | mkN "stupide" ; -- UWN
lin stupidity_N = mkN "stupidité" feminine ; -- tocheck
lin sturdiness_N = mkN "robustesse" ; -- tocheck
lin sturdy_A = mkA "costaud" | mkA "solide" ; -- tocheck
lin sturgeon_N = mkN "esturgeon" masculine ; -- tocheck
lin stutter_N = mkN "bégaiement" masculine ; -- tocheck
lin stutter_V2 = mkV2 (mkV "balbutier") ; -- tocheck
lin stutterer_N = mkN "bègue" ; -- tocheck
lin stuttgart_PN = mkPN "Stuttgart" ; -- status=guess src=geonames
lin sty_N = mkN "porcherie" feminine ; -- tocheck
lin stye_N = mkN "orgelet" masculine ; -- tocheck
lin style_N = mkN "modèle" masculine ; -- tocheck
lin stylish_A = mkA "élégant" ; -- tocheck
lin stylishness_N = mkN "chic" ; -- UWN
lin stylist_N = mkN "styliste" ; -- tocheck
lin stylization_N = mkN "stylisation" ; -- UWN
lin stylus_N = mkN "stylet" masculine | mkN "saphir" masculine | mkN "stylo" masculine | mkN "poinçon" ; -- tocheck
lin stymie_V2 = mkV2 (mkV "obstruer") ; -- tocheck
lin styracosaur_N = mkN "styracosaurus" ; -- UWN
lin styrax_N = mkN "benjoin" | mkN "styrax" ; -- UWN
lin styrene_N = mkN "Styrène" | mkN "styrène" ; -- UWN
lin suasion_N = mkN "persuasion" ; -- UWN
lin suave_A = mkA "lisse" ; -- UWN
lin suavity_N = mkN "suavité" ; -- UWN
lin subaltern_N = mkN "subalterne" ; -- tocheck
lin subarctic_A = mkA "subarctique" ; -- tocheck
lin subatomic_A = mkA "subatomique" ; -- tocheck
lin subclass_N = mkN "sous-classe" feminine ; -- tocheck
lin subcommittee_N = mkN "sous-comité" masculine ; -- tocheck
lin subconscious_A = mkA "subconscient" ; -- tocheck
lin subconscious_N = mkN "subconscient" masculine ; -- tocheck
lin subconsciousness_N = mkN "subconscience" feminine ; -- tocheck
lin subcontinent_N = mkN "sous-continent" masculine ; -- tocheck
lin subcontractor_N = mkN "sous-traitant" masculine ; -- tocheck
lin subculture_N = mkN "sous-culture" feminine ; -- tocheck
lin subcutaneous_A = mkA "sous-cutané" ; -- tocheck
lin subdeacon_N = mkN "sous-diacre" masculine ; -- tocheck
lin subdirectory_N = mkN "sous-répertoire" masculine ; -- tocheck
lin subdivide_V = mkV "subdiviser" ; -- UWN
lin subdominant_N = mkN "sous-dominante" ; -- UWN
lin subduction_N = mkN "subduction" ; -- UWN
lin subdue_V2 = mkV2 (mkV "assujettir") | mkV2 (mkV I.soumettre_V2) ; -- tocheck
lin subfamily_N = mkN "sous-famille" feminine ; -- tocheck
lin subgenus_N = mkN "sous-genre" | mkN "subgenus" ; -- UWN
lin subgroup_N = mkN "sous-groupe" masculine | mkN "sous-groupe" feminine ; -- tocheck
lin subjacent_A = mkA "sous-jacent" ; -- tocheck
lin subject_1_N = mkN "sujet" ;
lin subject_2_N = mkN "sujet" ;
lin subject_A = variants {} ; --
lin subject_N = mkN "sujet" masculine | mkN "matière" feminine ;
lin subject_V2 = variants {} ; --
lin subjective_A = mkA "subjectif" ; -- tocheck
lin subjectivity_N = mkN "subjectivité" feminine ; -- tocheck
lin subjugate_V2 = mkV2 (mkV "assujettir") ; -- tocheck
lin subjugation_N = mkN "assujettissement" ; -- tocheck
lin subjunctive_A = mkA "subjonctif" ; -- UWN
lin subjunctive_N = mkN "subjonctif" masculine ; -- tocheck
lin subkingdom_N = mkN "sous-règne" ; -- UWN
lin sublimate_N = mkN "sublimer" ; -- UWN
lin sublimate_V2 = mkV2 (mkV "sublimer") | mkV2 (mkV "honorer") ; -- tocheck
lin sublimation_N = mkN "sublimation" feminine ; -- tocheck
lin sublime_A = mkA "sublime" ; -- tocheck
lin sublimity_N = mkN "sublime" ; -- UWN
lin sublingual_A = mkA "sublingual" ; -- tocheck
lin submarine_A = mkA "sous-marin" ; -- tocheck
lin submarine_N = mkN "sous-marin" masculine ; -- tocheck
lin submariner_N = mkN "sous-marinier" ; -- UWN
lin submediant_N = mkN "sus-dominante" ; -- UWN
lin submerge_V = mkV "abreuver" | mkV "accabler" ; -- UWN
lin submerge_V2 = mkV2 (mkV "submerger") | mkV2 (reflV (mkV "immerger")) ; -- tocheck
lin submergence_N = mkN "immersion" ; -- UWN
lin submersible_A = mkA "submersible" ; -- tocheck
lin submersible_N = mkN "submersible" masculine ; -- tocheck
lin submersion_N = mkN "immersion" ; -- UWN
lin submission_N = mkN "soumission" feminine ; -- tocheck
lin submit_V = variants {} ; -- mkV2 (mkV "présenter") ; -- tocheck
lin submit_V2 = mkV2 (mkV "présenter") ; -- tocheck
lin suborder_N = mkN "sous-ordre" | mkN "suborder" ; -- UWN
lin subordinate_A = mkA "subordonné" ; -- tocheck
lin subordinate_N = mkN "inférieur" | mkN "sous-fifre" | mkN "subordonné" ; -- UWN
lin subordinateness_N = mkN "principe_de_subsidiarité" | mkN "subsidiarité" ; -- UWN
lin subordination_N = mkN "subordination" ; -- UWN
lin subphylum_N = mkN "subphylum" ; -- UWN
lin subpoena_N = mkN "citation" feminine ; -- tocheck
lin subscribe_V = mkV "abonner" | mkV "adhérer" | mkV "aider" | mkV "souscrire" | mkV "soutenir" ; -- UWN
lin subscribe_V2 = mkV2 (mkV "abonner") ; -- tocheck
lin subscriber_N = mkN "abonné" masculine ; -- tocheck
lin subscription_N = mkN "abonnement" masculine ; -- tocheck
lin subsection_N = mkN "sous-section" feminine ; -- tocheck
lin subsequent_A = mkA "subséquent" ; -- tocheck
lin subservience_N = mkN "soumission" feminine ; -- tocheck
lin subservient_A = mkA "servile" ; -- tocheck
lin subset_N = mkN "sous-ensemble" masculine ; -- tocheck
lin subsidiary_A = mkA "subsidiaire" ; -- tocheck
lin subsidiary_N = mkN "filiale" ; -- tocheck
lin subsidize_V2 = mkV2 (mkV "subventionner") ; -- tocheck
lin subsidy_N = mkN "subvention" ; -- tocheck
lin subsoil_N = mkN "sous-sol" masculine ; -- tocheck
lin subsonic_A = mkA "subsonique" ; -- UWN
lin subspecies_N = mkN "sous-espèce" feminine ; -- tocheck
lin substance_N = mkN "substance" feminine ; -- tocheck
lin substantial_A = mkA "substantiel" ; -- tocheck
lin substantiality_N = mkN "substantialité" ; -- UWN
lin substantive_A = mkA "direct" | mkA "substantif" ; -- tocheck
lin substantive_N = mkN "substantif" masculine ; -- tocheck
lin substitute_N = mkN "remplaçant" masculine ; -- tocheck
lin substitute_V = mkV "remplacer" | mkV "substituer" | mkV "échanger" ; -- UWN
lin substitute_V2 = variants {} ; --
lin substitution_N = mkN "remplacement" masculine ; -- tocheck
lin substrate_N = mkN "substrat" masculine ; -- tocheck
lin subsume_V2 = mkV2 (mkV "généraliser") | mkV2 (mkV "subsumer") ; -- tocheck
lin subsystem_N = mkN "sous-système" ; -- UWN
lin subtend_V2 = mkV2 (mkV "sous-tendre") ; -- tocheck
lin subterfuge_N = mkN "subterfuge" masculine ; -- tocheck
lin subterminal_A = mkA "subterminal" ; -- UWN
lin subterranean_A = mkA "souterrain" ; -- tocheck
lin subthalamus_N = mkN "subthalamus" ; -- UWN
lin subtitle_N = mkN "sous-titre" masculine ; -- tocheck
lin subtle_A = mkA "astucieux" | mkA "subtil" ; -- tocheck
lin subtlety_N = mkN "entremets" | mkN "subtilité" ; -- tocheck
lin subtonic_N = mkN "sous-tonique" ; -- UWN
lin subtotal_N = mkN "sous-total" masculine ; -- tocheck
lin subtract_V2 = mkV2 (mkV I.soustraire_V2) ; -- tocheck
lin subtraction_N = mkN "soustraction" feminine ; -- tocheck
lin subtractive_A = mkA "soustractif" ; -- UWN
lin subtrahend_N = mkN "diminuteur" masculine ; -- tocheck
lin subtropical_A = mkA "subtropical" ; -- UWN
lin subtropics_N = mkN "subtropicales" ; -- tocheck
lin suburb_N = mkN "banlieue" feminine ; -- tocheck
lin suburban_A = mkA "suburbain" ; -- tocheck
lin subversion_N = mkN "contestation" feminine ; -- tocheck
lin subversive_A = mkA "subversif" ; -- tocheck
lin subversive_N = mkN "révolutionnaire" | mkN "subversif" ; -- UWN
lin subvert_V2 = mkV2 (mkV "renverser") ; -- tocheck
lin subway_N = mkN "métro" masculine ; -- tocheck
lin subwoofer_N = mkN "subwoofer" masculine ; -- tocheck
lin succeed_V = variants {} ; -- mkV2 (mkV "succéder") | mkV2 (mkV "réussir") ; -- tocheck
lin succeed_V2 = mkV2 (mkV "succéder") | mkV2 (mkV "réussir") ; -- tocheck
lin success_N = mkN "succès" masculine ; -- tocheck
lin successful_A = variants {} ; --
lin succession_N = mkN "succession" feminine ; -- tocheck
lin successive_A = mkA "successif" ; -- tocheck
lin successor_N = mkN "successeur" masculine ; -- tocheck
lin succinct_A = mkA "succinct" | mkA "succint" ; -- tocheck
lin succinctness_N = mkN "concision" ; -- UWN
lin succinic_A = mkA "succinique" ; -- UWN
lin succotash_N = mkN "succotash" ; -- UWN
lin succour_N = mkN "relief" | mkN "secourir" ; -- UWN
lin succubus_N = mkN "succube" masculine ; -- tocheck
lin succulent_A = mkA "succulent" ; -- tocheck
lin succulent_N = mkN "succulente" feminine ; -- tocheck
lin succumb_V = mkV (mkV "succomber") ; -- tocheck
lin such_Adv = mkAdv "ainsi" | mkAdv "comme" ; -- UWN
lin suck_N = mkN "succion" | mkN "sucer" ; -- UWN
lin suck_V = variants {} ; -- L.suck_V2 ;
lin suck_V2 = L.suck_V2 ;
lin suckerFem_N = mkN "pigeonne" feminine ; -- tocheck
lin suckerMasc_N = mkN "pigeon" masculine ; -- tocheck
lin sucking_N = mkN "succion" feminine ; -- tocheck
lin suckling_N = mkN "nourrisson" masculine ; -- tocheck
lin sucrose_N = mkN "saccharose" masculine ; -- tocheck
lin suction_N = mkN "succion" feminine ; -- tocheck
lin sudan_PN = mkPN "Soudan" ; -- status=guess src=geonames
lin sudbury_PN = mkPN "Sudbury" ; -- status=guess src=geonames
lin sudden_A = mkA "soudain" ; -- tocheck
lin suddenness_N = mkN "soudaineté" ; -- tocheck
lin sudoku_N = mkN "sudoku" masculine ; -- tocheck
lin sudra_N = mkN "sudra" ; -- UWN
lin sue_V = variants {} ; --
lin sue_V2 = variants {} ; --
lin sue_V2V = variants {} ; --
lin suede_N = mkN "suède" masculine ; -- tocheck
lin suffer_V = variants {} ; -- mkV2 (mkV I.souffrir_V2) | mkV2 (mkV "endurer") ; -- tocheck
lin suffer_V2 = mkV2 (mkV I.souffrir_V2) | mkV2 (mkV "endurer") ; -- tocheck
lin sufferable_A = mkA "endurable" | mkA "supportable" | mkA "tolérable" | mkA "vivable" ; -- UWN
lin sufferer_N = variants {} ; --
lin suffering_N = mkN "souffrance" feminine ; -- tocheck
lin suffice_V2V = mkV2V (mkV I.suffire_V2) ; -- tocheck
lin sufficiency_N = mkN "suffisance" feminine ; -- tocheck
lin sufficient_A = mkA "suffisant" | mkA "autosuffisant" ; -- tocheck
lin suffix_N = mkN "suffixe" masculine ; -- tocheck
lin suffixation_N = mkN "suffixation" feminine ; -- tocheck
lin suffocate_V2 = mkV2 (mkV "suffoquer") | mkV2 (mkV "étouffer") ; -- tocheck
lin suffocation_N = mkN "suffocation" feminine ; -- tocheck
lin suffolk_PN = mkPN "Suffolk" ; -- status=guess src=geonames
lin suffrage_N = mkN "suffrage" masculine ; -- tocheck
lin suffrutescent_A = mkA "sous-frutescent" ; -- UWN
lin sugar_N = mkN "bise" feminine | mkN "sucre" masculine ; -- tocheck
lin sugar_V2 = mkV2 (mkV "sucrer") ; -- tocheck
lin sugarberry_N = mkN "micocoulier" ; -- UWN
lin sugar_cane_N = mkN "canne à sucre" ; -- UWN
lin sugary_A = mkA "sucré" ; -- UWN
lin suggest_V = (mkV "proposer") | (mkV "suggérer") ;
lin suggest_V2 = mkV2 (mkV "proposer") | mkV2 (mkV "suggérer") ;
lin suggest_VS = subjVS (mkV "proposer") | subjVS (mkV "suggérer") ;
lin suggestibility_N = mkN "suggestibilité" ; -- UWN
lin suggestible_A = mkA "suggestible" ; -- UWN
lin suggestion_N = mkN "suggestion" feminine ; -- tocheck
lin suicidal_A = mkA "suicidaire" ; -- tocheck
lin suicide_N = mkN "suicide" masculine | mkN "suicidé" masculine ; -- tocheck
lin suit_N = mkN "enseigne" feminine | mkN "procès" masculine | mkN "suite" feminine | mkN "combinaison" feminine | mkN "costard" masculine | mkN "complet" masculine ; -- tocheck
lin suit_V = variants {} ; -- mkV2 (mkV I.convenir_V2) ; -- tocheck
lin suit_V2 = mkV2 (mkV I.convenir_V2) ; -- tocheck
lin suit_up_V = advV OP_suit_V OP_up_Adv ; -- guess-p-verb
lin suitability_N = mkN "aptitude" ; -- UWN
lin suitable_A = mkA "approprié" ; -- tocheck
lin suitableness_N = mkN "aptitude" ; -- UWN
lin suitcase_N = mkN "valise" feminine ; -- tocheck
lin suite_N = mkN "suite" feminine ; -- tocheck
lin sukiyaki_N = mkN "sukiyaki" ; -- UWN
lin sulcus_N = mkN "sulcus" ; -- UWN
lin sulfanilamide_N = mkN "sulfanilamide" ; -- UWN
lin sulfate_N = mkN "sulfate" ; -- UWN
lin sulfide_N = mkN "sulfure" masculine ; -- tocheck
lin sulfonate_N = mkN "sulfonate" ; -- UWN
lin sulfonylurea_N = mkN "Sulfonylurée" | mkN "sulfonylurée" | mkN "sulfonylurées" ; -- UWN
lin sulfur_N = mkN "soufre" | mkN "soufre" masculine ; -- tocheck
lin sulk_V = mkV (mkV "bouder") ; -- tocheck
lin sulky_A = mkA "boudeur" ; -- tocheck
lin sullen_A = mkA "morne" | mkA "maussade" | mkA "lent" ; -- tocheck
lin sully_V2 = mkV2 (mkV "salir") ; -- tocheck
lin sulphate_N = mkN "sulfate" ; -- UWN
lin sulphide_N = mkN "sulfure" ; -- UWN
lin sulphur_N = variants {} ; --
lin sulphuric_A = mkA "sulfurique" ; -- UWN
lin sultan_N = mkN "sultan" masculine ; -- tocheck
lin sultanate_N = mkN "sultanat" masculine ; -- tocheck
lin sultry_A = mkA "torride" | mkA "étouffant" ; -- tocheck
lin sum_N = mkN "calcul" masculine | mkN "somme" feminine ; -- tocheck
lin sum_V = mkV "additionner" | mkV "ajouter" | mkV "totaliser" ; -- UWN
lin sum_V2 = mkV2 (mkV "additionner") ; -- tocheck
lin sumac_N = mkN "sumac" masculine ; -- tocheck
lin sumach_N = mkN "rhus" | mkN "sumac" ; -- UWN
lin summarize_V2 = mkV2 (mkV "récapituler") | mkV2 (mkV "résumer") ; -- tocheck
lin summary_A = mkA "sommaire" ; -- tocheck
lin summary_N = mkN "résumé" masculine ; -- tocheck
lin summation_N = mkN "addition" | mkN "ajout" | mkN "plus" | mkN "somme" ; -- UWN
lin summer_N = mkN "été" masculine ; -- tocheck
lin summerhouse_N = mkN "Gazébo" | mkN "gazébo" | mkN "gloriette" ; -- UWN
lin summertime_N = mkN "été" masculine ; -- tocheck
lin summery_A = mkA "d'été" ; -- tocheck
lin summit_N = mkN "sommet" masculine ; -- tocheck
lin summon_V2 = mkV2 (mkV "convoquer") ; -- tocheck
lin summons_N = mkN "processus" | mkN "procédé" ; -- UWN
lin sumo_N = mkN "sumo" masculine ; -- tocheck
lin sump_N = mkN "aisance" | mkN "fosse" | mkN "fosse_d'aisance" | mkN "évier" ; -- UWN
lin sumpter_N = mkN "bête_de_charge" | mkN "bête_de_somme" ; -- UWN
lin sumptuary_A = mkA "somptuaire" ; -- tocheck
lin sumptuous_A = mkA "luxueux" | mkA "opulent" | mkA "somptueux" ; -- UWN
lin sun_N = L.sun_N ;
lin sun_PN = mkPN "soleil" masculine ; -- tocheck
lin sunbathe_V = mkV (mkV "bronzer") ; -- tocheck
lin sunbather_N = mkN "bronzeur" masculine ; -- tocheck
lin sunblind_N = mkN "abat-jour" | mkN "abri" | mkN "auvent" | mkN "marquise" | mkN "parasol" | mkN "taud" ; -- UWN
lin sunburn_N = mkN "coup_de_soleil" ; -- UWN
lin sunderland_PN = mkPN "Sunderland" ; -- status=guess src=geonames
lin sundew_N = mkN "droséra" feminine ; -- tocheck
lin sundial_N = mkN "Cadran_solaire" | mkN "cadran" | mkN "cadran_solaire" ; -- UWN
lin sundry_A = mkA "divers" ; -- UWN
lin sunfish_N = mkN "môle" ; -- tocheck
lin sunflower_N = mkN "tournesol" masculine ; -- tocheck
lin sunlight_N = mkN "ensoleillement" | mkN "lumière_du_soleil" | mkN "soleil" ; -- UWN
lin sunny_A = mkA "ensoleillé" ; -- tocheck
lin sunroof_N = mkN "toit_ouvrant" ; -- UWN
lin sunset_N = mkN "crépuscule" masculine ; -- tocheck
lin sunshade_N = mkN "ombrelle" feminine ; -- tocheck
lin sunshine_N = mkN "soleil" masculine ; -- tocheck
lin sunspot_N = mkN "tache_solaire" ; -- UWN
lin sunstone_N = mkN "aventurine" ; -- UWN
lin sunstroke_N = mkN "insolation" feminine ; -- tocheck
lin suntan_N = mkN "bronzage" ; -- tocheck
lin sup_N = mkN "aronde" | mkN "avaler" | mkN "hirondelle" ; -- UWN
lin super_A = mkA "super" ; -- tocheck
lin superabundance_N = mkN "excès" | mkN "surabondance" ; -- UWN
lin superb_A = mkA "superbe" ;
lin supercargo_N = mkN "subrécargue" ; -- UWN
lin supercilious_A = mkA "hautain" ; -- tocheck
lin superclass_N = mkN "superclass" ; -- UWN
lin supercomputer_N = mkN "superordinateur" masculine ; -- tocheck
lin superconductivity_N = mkN "supraconductivité" feminine ; -- tocheck
lin supercritical_A = mkA "supercritique" | mkA "surcritique" ; -- UWN
lin superego_N = mkN "surmoi" masculine ; -- tocheck
lin superfamily_N = mkN "superfamily" ; -- UWN
lin superfetation_N = mkN "superfétation" feminine ; -- tocheck
lin superficial_A = mkA "superficiel" ; -- tocheck
lin superfluity_N = mkN "superfluité" feminine | mkN "superflu" masculine ; -- tocheck
lin superfluous_A = mkA "superflu" ; -- tocheck
lin supergiant_N = mkN "supergéant" masculine ; -- tocheck
lin superhuman_A = mkA "wyattjanning" ; -- tocheck
lin superimpose_V2 = mkV2 (mkV "superposer") ; -- tocheck
lin superintend_V = mkV "accompagner" | mkV "diriger" | mkV "gérer" | mkV "superviser" | mkV "surveiller" | mkV "vérifier" ; -- UWN
lin superintend_V2 = mkV2 (mkV "surveiller") ; -- tocheck
lin superintendence_N = mkN "supervision" ; -- UWN
lin superintendent_N = mkN "surintendant" masculine ; -- tocheck
lin superior_A = mkA "supérieur" ; -- tocheck
lin superior_N = mkN "supérieur" ; -- UWN
lin superiority_N = mkN "supériorité" feminine ; -- tocheck
lin superlative_A = mkA "suprême" | mkA "superlatif" ; -- tocheck
lin superlative_N = mkN "superlatif" masculine ; -- tocheck
lin superman_N = mkN "superman" masculine | mkN "surhomme" masculine ; -- tocheck
lin supermarket_N = mkN "supermarché" masculine ; -- tocheck
lin supernal_A = mkA "paradisiaque" | mkA "céleste" ; -- tocheck
lin supernatural_A = mkA "surnaturel" ; -- tocheck
lin supernatural_N = mkN "occulte" | mkN "surnaturel" ; -- UWN
lin supernova_N = mkN "supernova" feminine ; -- tocheck
lin supernumerary_N = mkN "surnuméraire" ; -- tocheck
lin superorder_N = mkN "superordre" masculine ; -- tocheck
lin superphylum_N = mkN "superphylum" ; -- UWN
lin superscript_N = mkN "supérieur" ; -- UWN
lin supersede_V2 = mkV2 (mkV "supplanter") ; -- tocheck
lin supersonic_A = mkA "supersonique" | mkA "ultrasonore" ; -- tocheck
lin superstition_N = mkN "superstition" feminine ; -- tocheck
lin superstitious_A = mkA "superstitieux" ; -- tocheck
lin superstring_N = mkN "supercorde" feminine ; -- tocheck
lin superstructure_N = mkN "Superstructure" | mkN "superstructure" ; -- UWN
lin supersymmetry_N = mkN "supersymétrie" feminine ; -- tocheck
lin supertanker_N = mkN "supertanker" ; -- UWN
lin supertitle_N = mkN "surtitre" ; -- UWN
lin supertonic_N = mkN "sus-tonique" ; -- UWN
lin supervise_V = variants {} ; -- mkV2 (mkV "superviser") ; -- tocheck
lin supervise_V2 = mkV2 (mkV "superviser") ; -- tocheck
lin supervision_N = mkN "supervision" feminine ; -- tocheck
lin supervisor_N = mkN "superviseur" masculine ; -- tocheck
lin supination_N = mkN "supination" ; -- UWN
lin supine_A = mkA "supin" ; -- UWN
lin supper_N = mkN "souper" ; -- tocheck
lin supplant_V2 = mkV2 (mkV "supplanter") | mkV2 (mkV "détrôner") ; -- tocheck
lin supplanter_N = mkN "usurpateur" ; -- UWN
lin supplanting_N = mkN "déplacement" ; -- UWN
lin supplement_N = variants {} ; --
lin supplement_V2 = variants {} ; --
lin supplementary_A = mkA "supplémentaire" ; -- tocheck
lin suppliant_A = mkA "suppliant" ; -- tocheck
lin supplier_N = mkN "fournisseur" masculine ; -- tocheck
lin supply_N = mkN "approvisionnement" ; -- tocheck
lin supply_V2 = mkV2 (mkV "fournir") ; -- tocheck
lin support_N = mkN "soutien" masculine ;
lin support_V2 = mkV2 (mkV I.soutenir_V2) ;
lin supportable_A = mkA "endurable" | mkA "supportable" | mkA "tolérable" | mkA "vivable" ; -- UWN
lin supporter_N = mkN "partisan" masculine ; -- tocheck
lin supporting_A = variants {} ; --
lin suppose_V2 = variants {} ; -- mkV2V (mkV "supposer") ; -- tocheck
lin suppose_VS = variants {} ; -- mkV2V (mkV "supposer") ; -- tocheck
lin supposed_A = variants {} ; --
lin suppository_N = mkN "suppositoire" masculine ; -- tocheck
lin suppress_V2 = mkV2 (mkV I.contenir_V2) ; -- tocheck
lin suppression_N = mkN "inhibition" ; -- UWN
lin suppurate_V = mkV (mkV "suppurer") ; -- tocheck
lin supranational_A = mkA "supranational" ; -- tocheck
lin suprasegmental_A = mkA "suprasegmental" ; -- UWN
lin supremacy_N = mkN "suprématie" feminine ; -- tocheck
lin supreme_A = mkA "suprême" ; -- tocheck
lin sura_N = mkN "sourate" feminine ; -- tocheck
lin surcharge_N = mkN "surcharge" feminine ; -- tocheck
lin surd_N = mkN "sourde" ; -- UWN
lin sure_A = mkA "sûr" ;
lin sure_Adv = variants {} ; --
lin surf_N = mkN "brisants" ; -- tocheck
lin surface_A = mkA "surface" ; -- UWN
lin surface_N = mkN "surface" feminine ; -- tocheck
lin surfacing_N = mkN "surfacing" ; -- UWN
lin surfboard_N = mkN "planche_de_surf" | mkN "surf" ; -- UWN
lin surfer_N = mkN "surfeur" masculine | mkN "internaute" ; -- tocheck
lin surfing_N = mkN "surf" masculine ; -- tocheck
lin surge_N = mkN "montée" ; -- tocheck
lin surgeon_N = mkN "chirurgien" ; -- tocheck
lin surgery_N = mkN "chirurgie" feminine ; -- tocheck
lin surgical_A = mkA "chirurgical" ; -- tocheck
lin surmise_V2 = mkV2 (mkV "suspecter") ; -- tocheck
lin surmount_V2 = mkV2 (mkV "surmonter") ; -- tocheck
lin surname_N = mkN "nom" masculine ; -- tocheck
lin surpass_V2 = mkV2 (mkV "surpasser") ; -- tocheck
lin surpassing_A = mkA "exceptionnel" ; -- UWN
lin surplice_N = mkN "surplis" ; -- tocheck
lin surplus_A = variants {} ; --
lin surplus_N = mkN "surplus" masculine | mkN "excédentaire" masculine ; -- tocheck
lin surprise_N = mkN "surprise" | mkN "surprise" feminine ; -- tocheck
lin surprise_V2 = variants {} ; -- mkV2V (mkV I.surprendre_V2) ; -- tocheck
lin surprise_V2V = mkV2V (mkV I.surprendre_V2) ; -- tocheck
lin surprised_A = variants {} ; --
lin surprising_A = mkA "surprenant" ; -- tocheck
lin surrealism_N = mkN "surréalisme" ; -- tocheck
lin surrealist_N = mkN "surréaliste" ; -- tocheck
lin surrealistic_A = mkA "surréaliste" ; -- UWN
lin surrender_N = mkN "capitulation" feminine ; -- tocheck
lin surrender_V = mkV "abandonner" | mkV "céder" | mkV "livrer" | mkV "rendre" ; -- UWN
lin surrender_V2 = mkV2 (mkV "capituler") ; -- tocheck
lin surreptitious_A = mkA "furtif" ; -- tocheck
lin surrey_N = mkN "surrey" ; -- UWN
lin surrey_PN = mkPN "Surrey" ; -- status=guess src=geonames
lin surrogate_N = mkN "substitut" masculine | mkN "remplaçant" masculine ; -- tocheck
lin surround_N = mkN "alentour" | mkN "environnement" | mkN "milieu" | mkN "voisinage" ; -- UWN
lin surround_V2 = mkV2 (mkV "entourer") | mkV2 (mkV I.enceindre_V2) ; -- tocheck
lin surrounding_A = mkA "environnant" ; -- UWN
lin surrounding_N = variants {} ; --
lin surveillance_N = mkN "surveillance" feminine ; -- tocheck
lin survey_N = mkN "enquête" feminine | mkN "reconnaissance" feminine | mkN "arpentage" masculine ; -- tocheck
lin survey_V2 = mkV2 (mkV "inspecter") ; -- tocheck
lin surveying_N = mkN "arpentage" | mkN "géomètre" ; -- UWN
lin surveyor_N = mkN "arpenteur" masculine ; -- tocheck
lin survival_N = mkN "survie" ; -- tocheck
lin survivalist_N = mkN "survivaliste" ; -- UWN
lin survive_V = variants {} ; -- mkV2 (mkV I.survivre_V2) ; -- tocheck
lin survive_V2 = mkV2 (mkV I.survivre_V2) ; -- tocheck
lin survivor_N = mkN "survivant" masculine ; -- tocheck
lin susceptibility_N = mkN "susceptibilité" ; -- UWN
lin susceptible_A = mkA "susceptible" ; -- tocheck
lin sushi_N = mkN "sushi" masculine ; -- tocheck
lin suslik_N = mkN "souslik" masculine ; -- tocheck
lin suspect_N = variants {} ; --
lin suspect_V2 = mkV2 (mkV "soupçonner") ; -- tocheck
lin suspect_VS = variants {} ; -- mkV2 (mkV "soupçonner") ; -- tocheck
lin suspend_V = mkV "suspendre" ; -- UWN
lin suspend_V2 = mkV2 (mkV I.suspendre_V2) ; -- tocheck
lin suspender_N = mkN "jarretelle" feminine | mkN "bretelles" ; -- tocheck
lin suspension_N = mkN "suspension" ; -- UWN
lin suspicion_N = mkN "suspicion" feminine | mkN "soupçon" ; -- tocheck
lin suspicious_A = mkA "suspect" | mkA "soupçonneux" ; -- tocheck
lin sussex_PN = mkPN "Sussex" ; -- status=guess src=geonames
lin sustain_V2 = mkV2 (mkV I.maintenir_V2) | mkV2 (mkV I.subvenir_V2) ; -- tocheck
lin sustainability_N = mkN "soutenabilité" feminine | mkN "durabilité" feminine ; -- tocheck
lin sustainable_A = mkA "durable" | mkA "viable" ; -- tocheck
lin susurration_N = mkN "chuchoter" | mkN "susurrer" ; -- UWN
lin sutra_N = mkN "soutra" | mkN "sûtra" | mkN "sūtra" ; -- UWN
lin sutton_PN = mkPN "Sutton" ; -- status=guess src=geonames
lin suture_N = mkN "suture" feminine ; -- tocheck
lin swab_N = mkN "serpillière" ; -- UWN
lin swaddle_V2 = mkV2 (mkV "emmailloter") ; -- tocheck
lin swadlincote_PN = mkPN "Swadlincote" ; -- status=guess src=geonames
lin swag_N = mkN "balluchon" | mkN "butin" masculine ; -- tocheck
lin swagger_A = mkA "pavaner" ; -- UWN
lin swagger_N = mkN "hâblerie" feminine ; -- tocheck
lin swagger_V = mkV (reflV (mkV "pavaner")) ; -- tocheck
lin swagman_N = mkN "pavaner" ; -- UWN
lin swain_N = mkN "ami" | mkN "chum" | mkN "copain" | mkN "homme" | mkN "mec" | mkN "petit_ami" | mkN "sigisbée" | mkN "swain" ; -- UWN
lin swallow_N = mkN "hirondelle" feminine ; -- tocheck
lin swallow_V = variants {} ; -- mkV2 (mkV "avaler") ; -- tocheck
lin swallow_V2 = mkV2 (mkV "avaler") ; -- tocheck
lin swamp_N = mkN "marécage" masculine ; -- tocheck
lin swamp_V2 = mkV2 (mkV "submerger") ; -- tocheck
lin swampy_A = mkA "boueux" | mkA "marécageux" ; -- UWN
lin swan_N = mkN "cygne" masculine ; -- tocheck
lin swan_V = mkV "affirmer" | mkV "assurer" | mkV "jurer" ; -- UWN
lin swanage_PN = mkPN "Swanage" ; -- status=guess src=geonames
lin swank_A = mkA "classe" | mkA "élégant" ; -- UWN
lin swank_N = mkN "chic" ; -- UWN
lin swanky_A = mkA "classe" ; -- tocheck
lin swanley_PN = mkPN "Swanley" ; -- status=guess src=geonames
lin swansea_PN = mkPN "Swansea" ; -- status=guess src=geonames
lin swap_N = mkN "échange" masculine ; -- tocheck
lin swap_V = mkV "échanger" ; -- UWN
lin swap_V2 = mkV2 (mkV "échanger") ; -- tocheck
lin sward_N = mkN "pelouse" feminine | mkN "gazon" masculine ; -- tocheck
lin swarm_N = mkN "nuée" feminine | mkN "essaim" ; -- tocheck
lin swarm_V2 = mkV2 (mkV "grouiller") ; -- tocheck
lin swarthy_A = mkA "basané" ; -- UWN
lin swashbuckler_N = mkN "fier-à-bras" ; -- tocheck
lin swashbuckling_A = mkA "truculent" ; -- tocheck
lin swastika_N = mkN "svastika" masculine ; -- tocheck
lin swat_V2 = mkV2 (mkV "frapper") ; -- tocheck
lin swatch_N = mkN "swatch_group" ; -- UWN
lin swath_N = mkN "ceinture" ; -- UWN
lin swathe_N = mkN "pan" ; -- UWN
lin swatter_N = mkN "tapette" | mkN "tapette_à_mouche" ; -- UWN
lin sway_N = mkN "roc" | mkN "roche" | mkN "rocher" | mkN "rock" ; -- UWN
lin sway_V = variants {} ; --
lin sway_V2 = variants {} ; --
lin swaziland_PN = mkPN "Swaziland" ; -- status=guess src=geonames
lin swear_V = variants {} ; -- mkV2V (mkV "jurer") ; -- tocheck
lin swear_V2 = variants {} ; -- mkV2V (mkV "jurer") ; -- tocheck
lin swear_VV = variants {} ; -- mkV2V (mkV "jurer") ; -- tocheck
lin swear_off_V = mkV "abjurer" ; -- UWN
lin swearing_N = mkN "serment" ; -- UWN
lin swearword_N = mkN "blasphémer" | mkN "juron" | mkN "malédiction" | mkN "serment" ; -- UWN
lin sweat_N = mkN "troufion" masculine | mkN "sueur" feminine ; -- tocheck
lin sweat_V2 = mkV2 (mkV "transpirer") ; -- tocheck
lin sweater_N = mkN "pull-over" masculine | mkN "sweater" masculine ; -- tocheck
lin sweatshirt_N = mkN "sweat-shirt" ; -- tocheck
lin sweatshop_N = mkN "Sweatshop" | mkN "sweatshop" ; -- UWN
lin sweaty_A = mkA "sudatoire" ; -- tocheck
lin swedeFem_N = variants {} ; ---- sense to be split
lin swedeMasc_N = variants {} ; ---- sense to be split
lin sweden_PN = mkPN "Suède" ; -- status=guess src=geonames
lin swedishFem_N = mkN "suédoise" ;
lin swedishMasc_N = mkN "suédois" ;
lin swedish_A = mkA "suédois" ;
lin sweep_V = mkV "balayer" ; -- UWN
lin sweep_V2 = mkV2 (mkV "balayer") ; -- tocheck
lin sweep_through_V2 = prepV2 OP_sweep_V OP_through_Prep ; -- guess-p-verb
lin sweeper_N = mkN "libéro" masculine ; -- tocheck
lin sweepstakes_N = mkN "sweepstake" ; -- UWN
lin sweet_A = mkA "génial" | mkA "sucré" | mkA "charmant" | mkA "doux" | mkA "sympathique" | mkA "frais" | mkA "suave" ; -- tocheck
lin sweet_N = mkN "friandise" feminine ; -- tocheck
lin sweetbread_N = mkN "ris" ; -- tocheck
lin sweeten_V2 = mkV2 (mkV "adoucir") ; -- tocheck
lin sweetheart_N = mkN "amante" feminine | mkN "chéri" masculine ; -- tocheck
lin sweetie_N = mkN "ange" masculine ; -- tocheck
lin sweetish_A = mkA "douçâtre" ; -- UWN
lin sweetmeat_N = mkN "friandise" ; -- UWN
lin sweetness_N = mkN "agrément" | mkN "douceur" ; -- UWN
lin sweetsop_N = mkN "attier" ; -- UWN
lin swell_A = mkA "sensass" ; -- tocheck
lin swell_N = mkN "houle" feminine ; -- tocheck
lin swell_V = L.swell_V ;
lin swell_V2 = mkV2 (mkV "gonfler") ; -- tocheck
lin swelling_N = mkN "gonflement" masculine ; -- tocheck
lin swerve_V = mkV "tourner" | mkV "virer" ; -- UWN
lin swift_A = mkA "rapide" ; -- tocheck
lin swift_N = mkN "martinet" masculine ; -- tocheck
lin swiftness_N = mkN "rapidité" | mkN "vitesse" ; -- UWN
lin swill_N = mkN "soupe" ; -- tocheck
lin swim_N = mkN "natation" feminine ; -- tocheck
lin swim_V = L.swim_V ;
lin swim_V2 = mkV2 (mkV "nager") ; -- tocheck
lin swimmer_N = mkN "nageur" masculine ; -- tocheck
lin swimming_N = mkN "natation" feminine ; -- tocheck
lin swimmingly_Adv = mkAdv "bien" ; -- UWN
lin swimsuit_N = mkN "maillot" masculine ; -- tocheck
lin swindle_N = mkN "escroquerie" feminine ; -- tocheck
lin swindle_V2 = mkV2 (mkV "escroquer") | mkV2 (mkV "entourlouper") ; -- tocheck
lin swindler_N = mkN "escroc" ; -- tocheck
lin swindon_PN = mkPN "Swindon" ; -- status=guess src=geonames
lin swine_N = mkN "porc" masculine ; -- tocheck
lin swing_N = mkN "revirement" masculine | mkN "balançoire" feminine | mkN "balancement" masculine | mkN "swing" masculine | mkN "Swing" masculine ; -- tocheck
lin swing_V = mkV "balançoire" ; -- UWN
lin swing_V2 = mkV2 (mkV "osciller") | mkV2 (mkV "swinguer") | mkV2 (reflV (mkV "balancer")) ; -- tocheck
lin swing_around_V = advV OP_swing_V OP_around_Adv ; -- guess-p-verb
lin swing_at_V2 = prepV2 OP_swing_V OP_at_Prep ; -- guess-p-verb
lin swing_by_V = advV OP_swing_V OP_by_Adv ; -- guess-p-verb
lin swing_round_V = advV OP_swing_V OP_round_Adv ; -- guess-p-verb
lin swinger_N = mkN "échangiste" ; -- tocheck
lin swinton_PN = mkPN "Swinton" ; -- status=guess src=geonames
lin swipe_N = mkN "blessure" ; -- UWN
lin swipe_V2 = mkV2 (mkV "glisser") ; -- tocheck
lin swirl_N = mkN "tourbillon" masculine ; -- tocheck
lin swirl_V2 = mkV2 (mkV "tourbillonner") ; -- tocheck
lin switch8off_V2 = L.switch8off_V2 ;
lin switch8on_V2 = L.switch8on_V2 ;
lin switch_N = mkN "commutateur" masculine | mkN "interrupteur" masculine | mkN "badine" feminine ; -- tocheck
lin switch_V = variants {} ; -- mkV2 (mkV "changer") | mkV2 (mkV "commuter") | mkV2 (mkV "échanger") ; -- tocheck
lin switch_V2 = mkV2 (mkV "changer") | mkV2 (mkV "commuter") | mkV2 (mkV "échanger") ; -- tocheck
lin switch_off_V2 = prepV2 OP_switch_V OP_off_Prep ; -- guess-p-verb
lin switch_on_V2 = prepV2 OP_switch_V OP_on_Prep ; -- guess-p-verb
lin switchboard_N = mkN "standard" masculine ; -- tocheck
lin switcher_N = mkN "locomotive_de_manœuvre" | mkN "locomotive_de_manœuvres" ; -- UWN
lin switchman_N = mkN "aiguilleur" ; -- UWN
lin switzerland_PN = mkPN "Suisse" ; -- status=guess src=geonames
lin swob_N = mkN "serpillière" ; -- UWN
lin swoon_N = mkN "s'évanouir" | mkN "syncope" ; -- UWN
lin swoon_V = mkV (reflV (mkV "évanouir")) ; -- tocheck
lin swop_N = mkN "commerce" | mkN "marque" | mkN "troc" | mkN "troquer" | mkN "échanger" ; -- UWN
lin sword_N = mkN "épée" feminine ; -- tocheck
lin swordfish_N = mkN "espadon" masculine ; -- tocheck
lin swordplay_N = mkN "jeu_d'escrime" ; -- UWN
lin swordsman_N = mkN "épéiste" ; -- tocheck
lin swot_N = mkN "boulot" masculine ; -- tocheck
lin swot_V2 = mkV2 (mkV "bûcher") ; -- tocheck
lin sybarite_N = mkN "sybarite" masculine ; -- tocheck
lin sybaritic_A = mkA "luxueux" | mkA "voluptueux" | mkA "épicurien" ; -- UWN
lin sycamore_N = mkN "platane" masculine ; -- tocheck
lin sycophancy_N = mkN "flagornerie" feminine ; -- tocheck
lin sycophant_N = mkN "flagorneur" masculine ; -- tocheck
lin sydney_PN = mkPN "Sydney" ; -- status=guess src=geonames
lin syllabary_N = mkN "syllabaire" ; -- UWN
lin syllabication_N = mkN "syllabation" | mkN "syllabification" ; -- UWN
lin syllabification_N = mkN "syllabification" feminine ; -- tocheck
lin syllable_N = mkN "syllabe" feminine ; -- tocheck
lin syllabus_N = mkN "programme" masculine ; -- tocheck
lin syllepsis_N = mkN "syllepse" feminine ; -- tocheck
lin syllogism_N = mkN "syllogisme" masculine ; -- tocheck
lin sylph_N = mkN "sylphe" ; -- tocheck
lin sylvan_A = mkA "sylvain" | mkA "sylvestre" ; -- tocheck
lin sylvanite_N = mkN "sylvanite" ; -- UWN
lin sylvite_N = mkN "sylvinite" ; -- UWN
lin symbiosis_N = mkN "symbiose" feminine ; -- tocheck
lin symbiotic_A = mkA "symbiotique" ; -- tocheck
lin symbol_N = mkN "symbole" masculine ; -- tocheck
lin symbolic_A = mkA "symbolique" ; -- tocheck
lin symbolism_N = mkN "symbolisme" masculine ; -- tocheck
lin symbolize_V2 = mkV2 (mkV "symboliser") ; -- tocheck
lin symbology_N = mkN "symbologie" feminine ; -- tocheck
lin symmetric_A = mkA "symétrique" ; -- UWN
lin symmetrical_A = mkA "symétrique" ; -- tocheck
lin symmetry_N = mkN "symétrie" feminine ; -- tocheck
lin sympathetic_A = mkA "sympathique" ; -- tocheck
lin sympathize_V = mkV (mkV "compatir") ; -- tocheck
lin sympathizer_N = mkN "compatissant" masculine ; -- tocheck
lin sympathy_N = mkN "sympathie" feminine | mkN "compassion" feminine ; -- tocheck
lin symphony_N = mkN "symphonie" feminine ; -- tocheck
lin symploce_N = mkN "symploce" ; -- UWN
lin symposium_N = mkN "symposium" masculine ; -- tocheck
lin symptom_N = mkN "symptôme" masculine ; -- tocheck
lin symptomless_A = mkA "asymptomatique" ; -- UWN
lin synagogue_N = mkN "synagogue" feminine ; -- tocheck
lin synapse_N = mkN "synapse" feminine ; -- tocheck
lin synapsid_N = mkN "Synapsida" | mkN "synapsida" | mkN "synapsides" ; -- UWN
lin synapsis_N = mkN "appariement" | mkN "synapsis" ; -- UWN
lin synaptic_A = mkA "synaptique" ; -- tocheck
lin syncarpous_A = mkA "syncarpe" ; -- UWN
lin synchrocyclotron_N = mkN "synchrocyclotron" masculine ; -- tocheck
lin synchronic_A = mkA "synchronique" ; -- tocheck
lin synchronism_N = mkN "synchronicité" | mkN "synchronie" | mkN "synchronisation" ; -- UWN
lin synchronization_N = mkN "synchronisation" feminine ; -- tocheck
lin synchronize_V = mkV "synchroniser" ; -- UWN
lin synchronize_V2 = mkV2 (mkV "synchroniser") ; -- tocheck
lin synchronous_A = mkA "synchrone" ; -- tocheck
lin synchrony_N = mkN "synchronicité" | mkN "synchronie" | mkN "synchronisation" ; -- UWN
lin synchroscope_N = mkN "synchroniseur" ; -- UWN
lin synchrotron_N = mkN "synchrotron" masculine ; -- tocheck
lin syncopate_V2 = mkV2 (mkV "syncoper") ; -- tocheck
lin syncope_N = mkN "syncope" feminine ; -- tocheck
lin syncretism_N = mkN "syncrétisme" ; -- UWN
lin syncytium_N = mkN "Syncytium" | mkN "syncitium" | mkN "syncytium" ; -- UWN
lin syndicalism_N = mkN "syndicalisme" masculine ; -- tocheck
lin syndicalistFem_N = mkN "syndicaliste" feminine ; -- tocheck
lin syndicalistMasc_N = mkN "syndicaliste" masculine ; -- tocheck
lin syndicate_N = mkN "syndicat" masculine ; -- tocheck
lin syndrome_N = mkN "syndrome" masculine ; -- tocheck
lin synecdoche_N = mkN "synecdoque" feminine ; -- tocheck
lin synechia_N = mkN "synéchie" ; -- UWN
lin synergist_N = mkN "synergiste" ; -- UWN
lin synergy_N = mkN "synergie" feminine ; -- tocheck
lin synod_N = mkN "synode" masculine ; -- tocheck
lin synonym_N = mkN "synonyme" masculine ; -- tocheck
lin synonymous_A = mkA "synonymique" ; -- UWN
lin synonymy_N = mkN "synonymie" ; -- tocheck
lin synopsis_N = mkN "abrégé" masculine ; -- tocheck
lin synoptic_A = mkA "synoptique" ; -- tocheck
lin synovia_N = mkN "synovie" feminine ; -- tocheck
lin syntactic_A = mkA "syntaxique" ; -- tocheck
lin syntagma_N = mkN "syntagme" masculine ; -- tocheck
lin syntagmatic_A = mkA "syntagmatique" ; -- UWN
lin syntax_N = mkN "syntaxe" feminine ; -- tocheck
lin synthesis_N = mkN "synthèse" feminine ; -- tocheck
lin synthesist_N = mkN "synthétiseur" ; -- UWN
lin synthesize_V2 = mkV2 (mkV "synthétiser") ; -- tocheck
lin synthesizer_N = mkN "synthétiseur" ; -- tocheck
lin synthetic_A = mkA "synthétique" ; -- tocheck
lin synthetic_N = mkN "synthétique" ; -- UWN
lin syphilis_N = mkN "syphilis" feminine ; -- tocheck
lin syracuse_PN = mkPN "Syracuse" ; -- status=guess src=geonames
lin syria_PN = mkPN "Syrie" ; -- status=guess src=geonames
lin syringe_N = mkN "seringue" feminine | mkN "poire" feminine ; -- tocheck
lin syringe_V2 = mkV2 (mkV "seringuer") ; -- tocheck
lin syrup_N = mkN "sirop" masculine ; -- tocheck
lin syrupy_A = mkA "siropeux" ; -- tocheck
lin system_N = mkN "système" masculine ;
lin systematic_A = mkA "systématique" ; -- tocheck
lin systematics_N = mkN "dans_un_certain_ordre" | mkN "systématique" ; -- UWN
lin systematization_N = mkN "rationalisation" | mkN "systématisation" ; -- UWN
lin systematize_V2 = mkV2 (mkV "systématiser") ; -- tocheck
lin systole_N = mkN "systole" ; -- UWN
lin systolic_A = mkA "systolique" ; -- tocheck
lin syston_PN = mkPN "Syston" ; -- status=guess src=geonames
lin syzygy_N = mkN "conjonction" feminine | mkN "syzygie" feminine ; -- tocheck
lin t_shirt_N = variants {} ; --
lin tab_N = mkN "tabulation" feminine | mkN "ardoise" feminine | mkN "onglet" masculine | mkN "note" feminine ; -- tocheck
lin tabard_N = mkN "tabar" | mkN "tabard" ; -- UWN
lin tabasco_N = mkN "tabasco" ; -- UWN
lin tabbouleh_N = mkN "taboule" masculine ; -- tocheck
lin tabby_A = mkA "moiré" ; -- tocheck
lin tabby_N = mkN "chat_tigré" | mkN "dame" | mkN "reine" ; -- UWN
lin tabernacle_N = mkN "tabernacle" masculine ; -- tocheck
lin tabi_N = mkN "tabi" ; -- UWN
lin tablature_N = mkN "tablature" ; -- tocheck
lin table_N = L.table_N ;
lin tablecloth_N = mkN "nappe" feminine ; -- tocheck
lin tableland_N = mkN "plateau" masculine ; -- tocheck
lin tablespoon_N = mkN "louche" feminine ; -- tocheck
lin tablespoonful_N = mkN "cuillère" ; -- UWN
lin tablet_N = variants {} ; --
lin tableware_N = mkN "couvert" masculine ; -- tocheck
lin tabloid_N = mkN "tabloïd" ; -- tocheck
lin taboo_A = mkA "tabou" ; -- tocheck
lin taboo_N = mkN "tabou" masculine ; -- tocheck
lin tabor_N = mkN "tambour" ; -- tocheck
lin taboret_N = mkN "tabouret" ; -- UWN
lin tabular_A = mkA "tabulaire" ; -- tocheck
lin tabulator_N = mkN "tabulatrice" feminine ; -- tocheck
lin tachistoscope_N = mkN "tachistoscope" ; -- UWN
lin tachycardia_N = mkN "tachycardie" feminine ; -- tocheck
lin tachymeter_N = mkN "Compte-tours" | mkN "compte-tours" ; -- UWN
lin tacit_A = mkA "tacite" ; -- tocheck
lin taciturn_A = mkA "taciturne" ; -- tocheck
lin taciturnity_N = mkN "réserve" ; -- UWN
lin tack_V2 = mkV2 (mkV "louvoyer") ; -- tocheck
lin tackle_N = mkN "tacle" ; -- tocheck
lin tackle_V = variants {} ; -- mkV2 (mkV "plaquer") | mkV2 (mkV "tacler") | mkV2 (mkV I.combattre_V2) ; -- tocheck
lin tackle_V2 = mkV2 (mkV "plaquer") | mkV2 (mkV "tacler") | mkV2 (mkV I.combattre_V2) ; -- tocheck
lin taco_N = mkN "taco" masculine ; -- tocheck
lin tact_N = mkN "tact" masculine ; -- tocheck
lin tactic_N = mkN "tactique" feminine ; -- tocheck
lin tactical_A = mkA "tactique" ; -- tocheck
lin tactician_N = mkN "tacticien" masculine ; -- tocheck
lin tactics_N = mkN "tactique" feminine ; -- tocheck
lin tactile_A = mkA "tactile" ; -- tocheck
lin tadley_PN = mkPN "Tadley" ; -- status=guess src=geonames
lin tadpole_N = mkN "têtard" masculine ; -- tocheck
lin tael_N = mkN "Tael" | mkN "tael" ; -- UWN
lin taenia_N = mkN "ténia" ; -- UWN
lin taffeta_N = mkN "taffetas" ; -- UWN
lin taffy_N = mkN "tire_d’érable" ; -- UWN
lin tag_N = mkN "balise" | mkN "chat" | mkN "étiquette" feminine ; -- tocheck
lin tagalong_N = mkN "crampon" ; -- UWN
lin tagger_N = mkN "tagueur" masculine ; -- tocheck
lin tagliatelle_N = mkN "tagliatelle" feminine ; -- tocheck
lin tahini_N = mkN "tahini" ; -- tocheck
lin tail_N = L.tail_N ;
lin tailback_N = mkN "embouteillage" feminine ; -- tocheck
lin tailless_A = mkA "anoure" ; -- UWN
lin tailor_N = mkN "tassergal" masculine | mkN "tailleur" masculine ; -- tocheck
lin tailor_V2 = mkV2 (mkV "adapter") ; -- tocheck
lin tailpiece_N = mkN "cordier" ; -- UWN
lin tailplane_N = mkN "Empennage" | mkN "empennage" ; -- UWN
lin taint_V = mkV "infecter" ; -- UWN
lin taipei_PN = mkPN "Taipei" ; -- status=guess src=geonames
lin taiwan_PN = mkPN "Taïwan" ; -- status=guess src=geonames
lin taiwaneseFem_N = variants {} ; ---- sense to be split
lin taiwaneseMasc_N = variants {} ; ---- sense to be split
lin taiyuan_PN = mkPN "Taiyuan" ; -- status=guess src=geonames
lin taka_N = mkN "taka" masculine ; -- tocheck
lin take_V2 = I.prendre_V2 ;
lin take_after_V2 = prepV2 (lin V OP_take_V2) OP_after_Prep ; -- guess-p-verb
lin take_apart_V2 = mkV2 (advV (lin V OP_take_V2) OP_apart_Adv ) ; -- guess-p-verb
lin take_aside_V2 = mkV2 (advV (lin V OP_take_V2) OP_aside_Adv ) ; -- guess-p-verb
lin take_away_V2 = mkV2 (advV (lin V OP_take_V2) OP_away_Adv ) ; -- guess-p-verb
lin take_back_V = advV (lin V OP_take_V2) OP_back_Adv ; -- guess-p-verb
lin take_back_V2 = mkV2 (advV (lin V OP_take_V2) OP_back_Adv ) ; -- guess-p-verb
lin take_down_V2 = prepV2 (lin V OP_take_V2) OP_down_Prep ; -- guess-p-verb
lin take_for_V2 = prepV2 (lin V OP_take_V2) OP_for_Prep ; -- guess-p-verb
lin take_in_V = advV (lin V OP_take_V2) OP_in_Adv ; -- guess-p-verb
lin take_in_V2 = prepV2 (lin V OP_take_V2) OP_in_Prep ; -- guess-p-verb
lin take_it_V2 = variants {} ; -- guess-p-verb
lin take_it_out_on_V2 = variants {} ; -- guess-p-verb
lin take_it_upon_yourself_V = variants {} ; -- guess-p-verb
lin take_off_N = mkN "décollage" masculine ; -- tocheck
lin take_off_V = advV (lin V OP_take_V2) OP_off_Adv ; -- guess-p-verb
lin take_off_V2 = prepV2 (lin V OP_take_V2) OP_off_Prep ; -- guess-p-verb
lin take_on_V = advV (lin V OP_take_V2) OP_on_Adv ; -- guess-p-verb
lin take_on_V2 = prepV2 (lin V OP_take_V2) OP_on_Prep ; -- guess-p-verb
lin take_out_V = advV (lin V OP_take_V2) OP_out_Adv ; -- guess-p-verb
lin take_out_V2 = prepV2 (lin V OP_take_V2) OP_out_Prep ; -- guess-p-verb
lin take_over_V = advV (lin V OP_take_V2) OP_over_Adv ; -- guess-p-verb
lin take_over_V2 = prepV2 (lin V OP_take_V2) OP_over_Prep ; -- guess-p-verb
lin take_through_V2 = prepV2 (lin V OP_take_V2) OP_through_Prep ; -- guess-p-verb
lin take_to_V2 = prepV2 (lin V OP_take_V2) OP_to_Prep ; -- guess-p-verb
lin take_up_V = advV (lin V OP_take_V2) OP_up_Adv ; -- guess-p-verb
lin take_up_V2 = prepV2 (lin V OP_take_V2) OP_up_Prep ; -- guess-p-verb
lin takeover_N = mkN "acquisition" | mkN "prise_de_pouvoir" ; -- UWN
lin talapoin_N = mkN "talapoin" masculine ; -- tocheck
lin talc_N = mkN "talc" ; -- UWN
lin tale_N = mkN "conte" masculine ; -- tocheck
lin talent_N = mkN "talent" masculine ; -- tocheck
lin talented_A = mkA "doué" ; -- tocheck
lin talisman_N = mkN "amulette" | mkN "phylactère" | mkN "talisman" ; -- UWN
lin talk_N = mkN "conversation" feminine | mkN "conférence" feminine | mkN "discours" masculine ; -- tocheck
lin talk_V = mkV "parler" ;
lin talk_V2 = mkV2 (mkV "parler") ;
lin talk_V3 = L.talk_V3 ;
lin talk_around_V2 = prepV2 OP_talk_V OP_around_Prep ; -- guess-p-verb
lin talk_at_V2 = prepV2 OP_talk_V OP_at_Prep ; -- guess-p-verb
lin talk_back_V = advV OP_talk_V OP_back_Adv ; -- guess-p-verb
lin talk_back_to_V2 = prepV2 (advV OP_talk_V OP_back_Adv ) OP_to_Prep ; -- guess-p-verb
lin talk_down_V2 = prepV2 OP_talk_V OP_down_Prep ; -- guess-p-verb
lin talk_down_to_V2 = prepV2 (advV OP_talk_V OP_down_Adv ) OP_to_Prep ; -- guess-p-verb
lin talk_into_V3 = variants {} ; -- guess-p-verb
lin talk_out_V2 = prepV2 OP_talk_V OP_out_Prep ; -- guess-p-verb
lin talk_out_of_V3 = variants {} ; -- guess-p-verb
lin talk_over_V2 = prepV2 OP_talk_V OP_over_Prep ; -- guess-p-verb
lin talk_round_V2 = prepV2 OP_talk_V OP_round_Prep ; -- guess-p-verb
lin talk_through_V3 = variants {} ; -- guess-p-verb
lin talk_up_V2 = prepV2 OP_talk_V OP_up_Prep ; -- guess-p-verb
lin talk_yourself_out_V = variants {} ; -- guess-p-verb
lin talkative_A = mkA "bavard" ; -- tocheck
lin talker_N = mkN "haut-parleur" | mkN "locuteur" | mkN "phraseur" ; -- UWN
lin talking_N = variants {} ; --
lin tall_A = mkA "haut" | mkA "grand" ; -- tocheck
lin tallow_N = mkN "suif" masculine ; -- tocheck
lin tally_N = mkN "marque" feminine | mkN "compte" masculine ; -- tocheck
lin talon_N = mkN "serre" feminine ; -- tocheck
lin talus_N = mkN "astragale" | mkN "astragales" | mkN "astragalus" ; -- UWN
lin tam_N = mkN "tam" ; -- UWN
lin tamable_A = mkA "domptable" ; -- UWN
lin tamarin_N = mkN "sagouin" | mkN "tamarin" | mkN "tamarins" ; -- UWN
lin tamarind_N = mkN "tamarin" masculine | mkN "tamarinier" masculine ; -- tocheck
lin tamarisk_N = mkN "tamaris" masculine ; -- tocheck
lin tambour_1_N = variants {} ; ---- sense to be split
lin tambour_2_N = variants {} ; ---- sense to be split
lin tambourine_N = mkN "tambour_de_basque" | mkN "tambourin" ; -- UWN
lin tame_A = mkA "apprivoisé" ; -- tocheck
lin tame_V2 = mkV2 (mkV "apprivoiser") ; -- tocheck
lin tameness_N = mkN "domestication" ; -- UWN
lin tamer_N = mkN "dresseur" masculine ; -- tocheck
lin tamper_V = mkV (mkV "altérer") ; -- tocheck
lin tampere_PN = mkPN "Tampere" ; -- status=guess src=geonames
lin tampion_N = mkN "tape_de_bouche" ; -- UWN
lin tampon_N = mkN "tampon" masculine ; -- tocheck
lin tamworth_PN = mkPN "Tamworth" ; -- status=guess src=geonames
lin tan_A = mkA "hâlé" ; -- tocheck
lin tan_N = mkN "bronzage" masculine ; -- tocheck
lin tan_V2 = mkV2 (mkV "bronzer") | mkV2 (mkV "tanner") ; -- tocheck
lin tanager_N = mkN "tangara" | mkN "thraupidae" | mkN "thraupinae" | mkN "thraupinés" ; -- UWN
lin tandem_Adv = mkAdv "tandem" ; -- UWN
lin tandem_N = mkN "tandem" masculine ; -- tocheck
lin tandoor_N = mkN "tandoor" masculine ; -- tocheck
lin tangency_N = mkN "contact" | mkN "contacter" ; -- UWN
lin tangent_N = mkN "tangente" feminine ; -- tocheck
lin tangerine_A = mkA "mandarine" ; -- tocheck
lin tangerine_N = mkN "mandarine" | mkN "tangerine" feminine | mkN "tangerinier" feminine ; -- tocheck
lin tangible_A = mkA "tangible" ; -- tocheck
lin tangle_N = mkN "dédale" | mkN "embrouille" | mkN "labyrinthe" ; -- UWN
lin tangle_V2 = mkV2 (mkV "emmêler") | mkV2 (mkV "compliquer") ; -- tocheck
lin tango_N = mkN "tango" masculine ; -- tocheck
lin tangram_N = mkN "tangram" ; -- UWN
lin tangshan_PN = mkPN "Tangshan" ; -- status=guess src=geonames
lin tangy_A = mkA "piquant" ; -- tocheck
lin tank_N = mkN "réservoir" masculine | mkN "cuve" feminine | mkN "citerne" feminine ; -- tocheck
lin tankard_N = mkN "chope" ; -- tocheck
lin tanker_N = mkN "tankiste" | mkN "navire-citerne" masculine ; -- tocheck
lin tanner_N = mkN "tanneur" ; -- tocheck
lin tannic_A = mkA "tannique" ; -- tocheck
lin tannin_N = mkN "tanin" masculine ; -- tocheck
lin tansy_N = mkN "tanaisie" feminine ; -- tocheck
lin tantalize_V2 = mkV2 (mkV "tantaliser") ; -- tocheck
lin tantalum_N = mkN "tantale" masculine ; -- tocheck
lin tantamount_A = mkA "équivalent" ; -- tocheck
lin tantrum_N = mkN "coup_de_colère" | mkN "crise" | mkN "crise_de_colère" | mkN "scène" ; -- UWN
lin tanzania_PN = mkPN "Tanzanie" ; -- status=guess src=geonames
lin tap_N = mkN "dérivation" feminine | mkN "taraud" masculine | mkN "robinet" masculine | mkN "bouchon" masculine ; -- tocheck
lin tap_V = variants {} ; -- mkV2 (mkV "taper") | mkV2 (mkV "tirer") | mkV2 (mkV "tarauder") ; -- tocheck
lin tap_V2 = mkV2 (mkV "taper") | mkV2 (mkV "tirer") | mkV2 (mkV "tarauder") ; -- tocheck
lin tap_for_V3 = variants {} ; -- guess-p-verb
lin tap_into_V2 = prepV2 OP_tap_V OP_into_Prep ; -- guess-p-verb
lin tap_off_with_V2 = prepV2 (advV OP_tap_V OP_off_Adv ) OP_with_Prep ; -- guess-p-verb
lin tap_out_V2 = prepV2 OP_tap_V OP_out_Prep ; -- guess-p-verb
lin tap_up_V2 = prepV2 OP_tap_V OP_up_Prep ; -- guess-p-verb
lin tape_N = mkN "bande" ; -- tocheck
lin tapenade_N = mkN "tapenade" ; -- UWN
lin taper_N = mkN "chandelle" feminine ; -- tocheck
lin taper_V2 = mkV2 (mkV "rétrécir") ; -- tocheck
lin tapestry_N = mkN "tapisserie" ; -- tocheck
lin tapioca_N = mkN "tapioca" masculine ; -- tocheck
lin tapir_N = mkN "tapir" masculine ; -- tocheck
lin tapping_N = mkN "Tapping" | mkN "tapping" | mkN "taraudage" ; -- UWN
lin taproom_N = mkN "bar" ; -- UWN
lin tar_N = mkN "goudron" masculine ; -- tocheck
lin tarantella_N = mkN "tarentelle" feminine ; -- tocheck
lin tarantelle_N = mkN "tarentelle" ; -- UWN
lin taranto_PN = mkPN "Tarente" ; -- status=guess src=geonames
lin tarantula_N = mkN "tarentule" feminine ; -- tocheck
lin tarboosh_N = mkN "fez" | mkN "fès" ; -- UWN
lin tardigrade_N = mkN "oursons_d'eau" | mkN "tardigrada" | mkN "tardigrade" | mkN "tardigrades" ; -- UWN
lin tardiness_N = mkN "lenteur" ; -- UWN
lin tardy_A = mkA "tardif" ; -- tocheck
lin tare_N = mkN "tare" feminine ; -- tocheck
lin target_N = mkN "cible" feminine ; -- tocheck
lin target_V2 = variants {} ; -- mkV2V (mkV "cibler") ; -- tocheck
lin target_V2V = mkV2V (mkV "cibler") ; -- tocheck
lin tariff_N = variants {} ; --
lin tarmac_N = mkN "tarmac" masculine ; -- tocheck
lin tarn_N = mkN "lac" ; -- tocheck
lin taro_N = mkN "colocase" | mkN "eddas" ; -- UWN
lin tarpaulin_N = mkN "bâche" feminine | mkN "bâche" ; -- tocheck
lin tarpon_N = mkN "tarpon" masculine ; -- tocheck
lin tarragon_N = mkN "estragon" ; -- tocheck
lin tarry_A = mkA "résineux" ; -- UWN
lin tarry_V = mkV "attarder" ; -- UWN
lin tarsal_A = mkA "tarsien" ; -- tocheck
lin tarsal_N = mkN "tarsien" ; -- UWN
lin tarsier_N = mkN "tarsier" masculine ; -- tocheck
lin tarsitis_N = mkN "tarsite" ; -- UWN
lin tarsus_N = mkN "tarse" masculine ; -- tocheck
lin tart_A = mkA "amer" ; -- tocheck
lin tart_N = mkN "tarte" | mkN "putain" | mkN "salope" ; -- tocheck
lin tartan_N = mkN "tartane" feminine | mkN "tartan" masculine ; -- tocheck
lin tartar_N = mkN "tartre" masculine ; -- tocheck
lin tartness_N = mkN "acrimonie" | mkN "acuité" | mkN "finesse" | mkN "ictère" | mkN "jaunisse" | mkN "âcreté" | mkN "âpreté" ; -- UWN
lin tartrate_N = mkN "Tartrate" | mkN "tartrate" ; -- UWN
lin tashkent_PN = mkPN "Tachkent" ; -- status=guess src=geonames
lin task_N = mkN "corvée" feminine | mkN "tâche" feminine | mkN "tâche" ; -- tocheck
lin taskmaster_N = mkN "bailli" | mkN "maître_de_corvée" ; -- UWN
lin tassel_N = mkN "console" ; -- UWN
lin tasset_N = mkN "tassette" ; -- UWN
lin taste_N = mkN "avant-goût" masculine | mkN "goût" masculine ; -- tocheck
lin taste_V = variants {} ; -- mkV2 (mkV "goûter") ; -- tocheck
lin taste_V2 = mkV2 (mkV "goûter") ; -- tocheck
lin tastebud_N = mkN "papille" feminine ; -- tocheck
lin tasteless_A = mkA "fade" ; -- tocheck
lin taster_N = mkN "goûteur" masculine ; -- tocheck
lin tasting_N = mkN "dégustation" feminine ; -- tocheck
lin tasty_A = mkA "savoureux" | mkA "élégant" ; -- tocheck
lin tatter_N = mkN "lambeau" masculine ; -- tocheck
lin tattle_N = mkN "chant" ; -- UWN
lin tattle_V2 = mkV2 (mkV "cafarder") ; -- tocheck
lin tattletale_N = mkN "cafteur" masculine ; -- tocheck
lin tattoo_N = mkN "tatouage" masculine ; -- tocheck
lin tattoo_V2 = mkV2 (mkV "tatouer") ; -- tocheck
lin tau_N = mkN "tau" masculine ; -- tocheck
lin taunt_N = mkN "sarcasme" masculine ; -- tocheck
lin taunt_V2 = mkV2 (mkV "narguer") ; -- tocheck
lin taunton_PN = mkPN "Taunton" ; -- status=guess src=geonames
lin tauon_N = mkN "tauon" masculine ; -- tocheck
lin taut_A = mkA "tendu" ; -- tocheck
lin tautness_N = mkN "étroitesse" ; -- UWN
lin tautological_A = mkA "redondant" | mkA "tautologique" ; -- UWN
lin tautology_N = mkN "tautologie" feminine ; -- tocheck
lin tavern_N = mkN "taverne" feminine ; -- tocheck
lin tavistock_PN = mkPN "Tavistock" ; -- status=guess src=geonames
lin tawdriness_N = mkN "culot" ; -- UWN
lin tawdry_A = mkA "kitsch" ; -- tocheck
lin tawny_A = mkA "fauve" ; -- UWN
lin tax_N = mkN "impôt" masculine ;
lin tax_V2 = variants {} ; --
lin tax_free_A = mkA "franc" ; -- UWN
lin taxable_A = mkA "imposable" ; -- tocheck
lin taxation_N = mkN "taxation" feminine ; -- tocheck
lin taxi_N = mkN "taxi" masculine ; -- tocheck
lin taxicab_N = mkN "fiacre" | mkN "taxi" ; -- UWN
lin taxidermist_N = mkN "taxidermiste" ; -- tocheck
lin taxidermy_N = mkN "taxidermie" feminine ; -- tocheck
lin taximeter_N = mkN "taximètre" masculine ; -- tocheck
lin taxis_N = mkN "fiscalité" | mkN "taxation" ; -- UWN
lin taxonomic_A = mkA "systématique" ; -- UWN
lin taxonomist_N = mkN "taxonomiste" ; -- UWN
lin taxonomy_N = mkN "taxinomie" feminine ; -- tocheck
lin taxpayer_N = mkN "contribuable" ; -- tocheck
lin tbilisi_PN = mkPN "Tbilissi" ; -- status=guess src=geonames
lin tea_N = mkN "thé" masculine | mkN "tisane" feminine | mkN "goûter" masculine ; -- tocheck
lin teach_V = variants {} ; -- L.teach_V2 ;
lin teach_V2 = L.teach_V2 ;
lin teach_V2V = mkV2V (mkV "guider") | mkV2V (mkV "enseigner") ; -- tocheck
lin teachable_A = mkA "obéissant" ; -- UWN
lin teacherFem_N = mkN "professeur" feminine | mkN "maîtresse" feminine ;
lin teacherMasc_N = L.teacher_N | mkN "enseignant" ;
lin teaching_N = mkN "enseignement" masculine | mkN "doctrine" feminine ; -- tocheck
lin teacup_N = mkN "tasse_à_thé" ; -- UWN
lin teahouse_N = mkN "salon_de_thé" ; -- UWN
lin teak_N = mkN "teck" masculine ; -- tocheck
lin tea_kettle_N = mkN "bouilloire" masculine ; -- tocheck
lin teal_N = mkN "sarcelle" feminine ; -- tocheck
lin team_N = mkN "équipe" feminine ;
lin teammate_N = mkN "coéquipier" masculine ; -- tocheck
lin teapot_N = mkN "théière" feminine ; -- tocheck
lin tear_N = mkN "larme" feminine ; -- tocheck
lin tear_V = variants {} ; -- mkV2 (reflV (mkV "déchirer")) | mkV2 (mkV "déchirer") | mkV2 (mkV "démolir") | mkV2 (mkV "larmoyer") ; -- tocheck
lin tear_V2 = mkV2 (reflV (mkV "déchirer")) | mkV2 (mkV "déchirer") | mkV2 (mkV "démolir") | mkV2 (mkV "larmoyer") ; -- tocheck
lin tear_apart_V2 = mkV2 (advV OP_tear_V OP_apart_Adv ) ; -- guess-p-verb
lin tear_at_V2 = prepV2 OP_tear_V OP_at_Prep ; -- guess-p-verb
lin tear_away_V2 = mkV2 (advV OP_tear_V OP_away_Adv ) ; -- guess-p-verb
lin tear_down_V2 = prepV2 OP_tear_V OP_down_Prep ; -- guess-p-verb
lin tear_into_V2 = prepV2 OP_tear_V OP_into_Prep ; -- guess-p-verb
lin tear_off_V = advV OP_tear_V OP_off_Adv ; -- guess-p-verb
lin tear_off_V2 = prepV2 OP_tear_V OP_off_Prep ; -- guess-p-verb
lin tear_out_V = advV OP_tear_V OP_out_Adv ; -- guess-p-verb
lin tear_up_V = advV OP_tear_V OP_up_Adv ; -- guess-p-verb
lin tear_up_V2 = prepV2 OP_tear_V OP_up_Prep ; -- guess-p-verb
lin tear_drop_N = mkN "larme" feminine ; -- tocheck
lin tearful_A = mkA "larmoyant" ; -- tocheck
lin tearing_N = mkN "arrosage" ; -- UWN
lin tearoom_N = mkN "salon_de_thé" ; -- UWN
lin teary_A = mkA "larmoyant" ; -- UWN
lin tease_V2 = mkV2 (mkV "taquiner") ; -- tocheck
lin teasel_N = mkN "cardère" feminine ; -- tocheck
lin teaser_N = mkN "bande-annonce" feminine ; -- tocheck
lin teashop_N = mkN "salon_de_thé" ; -- UWN
lin teasing_A = mkA "agaçant" | mkA "embêtant" | mkA "ennuyeux" | mkA "gênant" | mkA "pénible" ; -- UWN
lin teaspoonful_N = mkN "cuillère_à_café" | mkN "petite_cuillère" ; -- UWN
lin teat_N = mkN "tétine" feminine | mkN "trayon" masculine ; -- tocheck
lin teazel_N = mkN "cardère" | mkN "cardère_sauvage" ; -- UWN
lin tec_N = mkN "détective" | mkN "enquêteur" | mkN "tec" ; -- UWN
lin technetium_N = mkN "technétium" masculine ; -- tocheck
lin technical_A = variants {} ; --
lin technical_N = mkN "technique" ; -- UWN
lin technician_N = mkN "technicien" masculine ; -- tocheck
lin technicolor_N = mkN "technicolor" | mkN "technicolor_motion_picture_corporation" ; -- UWN
lin technique_N = mkN "technique" feminine ; -- tocheck
lin technobabble_N = mkN "technobabillage" masculine ; -- tocheck
lin technocracy_N = mkN "technocratie" ; -- UWN
lin technological_A = mkA "technologique" ; -- tocheck
lin technologist_N = mkN "technologue" ; -- tocheck
lin technology_N = mkN "technologie" feminine ; -- tocheck
lin technophobia_N = mkN "technophobie" feminine ; -- tocheck
lin techy_A = mkA "maussade" ; -- UWN
lin tectonic_1_A = mkA "tectonique" ; -- tocheck
lin tectonic_2_A = mkA "tectonique" ; -- tocheck
lin tectonics_N = mkN "tectonique" feminine ; -- tocheck
lin teddy_N = mkN "shimmy" ; -- UWN
lin tedious_A = mkA "fastidieux" ; -- tocheck
lin teem_V = mkV (mkV "grouiller") ; -- tocheck
lin teenage_A = mkA "adolescent" ; -- UWN
lin teenager_N = mkN "adolescent" masculine ; -- tocheck
lin teeter_V = mkV (mkV "basculer") ; -- tocheck
lin teetotal_A = mkA "sec" | mkA "sécher" ; -- UWN
lin teetotaling_N = mkN "abstème" ; -- UWN
lin teetotum_N = mkN "toupie" ; -- UWN
lin tegument_N = mkN "cuir" | mkN "peau" ; -- UWN
lin teignmouth_PN = mkPN "Teignmouth" ; -- status=guess src=geonames
lin tektite_N = mkN "tectite" masculine ; -- tocheck
lin telecommunication_N = variants {} ; --
lin telecommuting_N = mkN "travail_à_distance" | mkN "télétravail" ; -- UWN
lin teleconference_N = mkN "téléconférence" ; -- UWN
lin telegram_N = mkN "télégramme" masculine ; -- tocheck
lin telegraph_N = mkN "télégraphe" masculine ; -- tocheck
lin telegraph_V2 = mkV2 (mkV "télégraphier") ; -- tocheck
lin telegraphic_A = mkA "télégraphique" ; -- tocheck
lin telegraphy_N = mkN "télégraphie" feminine ; -- tocheck
lin telemark_N = mkN "télémark" masculine ; -- tocheck
lin telemarketing_N = mkN "télémarketing" masculine ; -- tocheck
lin telencephalon_N = mkN "télencéphale" masculine ; -- tocheck
lin teleology_N = mkN "téléologie" ; -- UWN
lin telepathic_A = mkA "télépathique" ; -- tocheck
lin telepathy_N = mkN "télépathie" feminine ; -- tocheck
lin telephone_N = mkN "téléphone" masculine ; -- tocheck
lin telephone_V = mkV "appeler" | mkV "téléphoner" ; -- UWN
lin telephone_V2 = mkV2 (mkV "téléphoner") ; -- tocheck
lin telephonistFem_N = variants {} ; ---- sense to be split
lin telephonistMasc_N = variants {} ; ---- sense to be split
lin telephony_N = mkN "téléphone" | mkN "téléphoner" | mkN "téléphonie" ; -- UWN
lin teleportation_N = mkN "téléportation" feminine ; -- tocheck
lin teleprinter_N = mkN "télex" | mkN "téléimprimeur" | mkN "téléscripteur" | mkN "télétype" ; -- UWN
lin teleprompter_N = mkN "prompteur" masculine ; -- tocheck
lin telescope_N = mkN "lunette" ; -- tocheck
lin telescopic_A = mkA "télescopique" ; -- tocheck
lin teletypewriter_N = mkN "télex" | mkN "téléimprimeur" | mkN "téléscripteur" | mkN "télétype" ; -- UWN
lin televangelism_N = mkN "Télévangélisme" | mkN "télévangélisme" | mkN "télévangéliste" ; -- UWN
lin televangelist_N = mkN "télévangéliste" ; -- tocheck
lin televise_V2 = mkV2 (mkV "téléviser") ; -- tocheck
lin television_N = L.television_N ;
lin telex_N = mkN "télex" masculine ; -- tocheck
lin telford_PN = mkPN "Telford" ; -- status=guess src=geonames
lin tell_1_V3 = variants {} ; --
lin tell_2_V3 = variants {} ; --
lin tell_V = mkV "raconter" ;
lin tell_V2 = mkV2 "raconter" ;
lin tell_V2S = mkV2S (mkV "raconter") ;
lin tell_V2V = mkV2V (mkV I.dire_V2) P.dative P.genitive ;
lin tell_V3 = mkV3 (mkV "raconter") P.accusative P.dative ;
lin tell_VS = mkVS (mkV "raconter") ;
lin tell_apart_V2 = mkV2 (advV OP_tell_V OP_apart_Adv ) ; -- guess-p-verb
lin tell_from_V3 = mkV3 (mkV "distinguer") P.accusative P.genitive ;
lin tell_off_V2 = prepV2 OP_tell_V OP_off_Prep ; -- guess-p-verb
lin tell_on_V2 = prepV2 OP_tell_V OP_on_Prep ; -- guess-p-verb
lin teller_N = mkN "caissier" masculine | mkN "diseur" masculine ; -- tocheck
lin telling_N = mkN "chant" ; -- UWN
lin telltale_N = mkN "cafteur" ; -- UWN
lin tellurian_A = mkA "terrestre" ; -- UWN
lin tellurian_N = mkN "terrien" | mkN "terrienne" ; -- UWN
lin telluric_A = mkA "terrestre" ; -- UWN
lin telluride_N = mkN "tellurure" masculine ; -- tocheck
lin tellurium_N = mkN "tellure" masculine ; -- tocheck
lin telly_N = mkN "télé" feminine ; -- tocheck
lin telomerase_N = mkN "télomérase" ; -- UWN
lin telomere_N = mkN "télomère" masculine ; -- tocheck
lin telpherage_N = mkN "téléphérage" ; -- UWN
lin temerity_N = mkN "témérité" feminine ; -- tocheck
lin temp_N = mkN "temp" ; -- UWN
lin temper_N = mkN "trempe" feminine | mkN "humeur" feminine | mkN "caractère" masculine ; -- tocheck
lin tempera_N = mkN "tempera" ; -- UWN
lin temperament_N = mkN "tempérament" masculine ; -- tocheck
lin temperance_N = mkN "sobriété" feminine | mkN "tempérance" ; -- tocheck
lin temperate_A = mkA "tempéré" ; -- tocheck
lin temperature_N = mkN "température" ; -- tocheck
lin tempest_N = mkN "tempête" feminine ; -- tocheck
lin tempestuous_A = mkA "tempétueux" ; -- tocheck
lin template_N = mkN "gabarit" masculine ; -- tocheck
lin temple_N = mkN "tempe" feminine | mkN "temple" masculine ; -- tocheck
lin temporal_A = mkA "temporaire" | mkA "temporel" ; -- tocheck
lin temporality_N = mkN "temporalité" ; -- UWN
lin temporary_A = mkA "temporaire" ; -- tocheck
lin temporize_V = mkV "temporiser" ; -- UWN
lin tempt_V2 = variants {} ; -- mkV2V (mkV "attirer") | mkV2V (mkV "tenter") ; -- tocheck
lin tempt_V2V = mkV2V (mkV "attirer") | mkV2V (mkV "tenter") ; -- tocheck
lin temptation_N = mkN "tentation" feminine ; -- tocheck
lin tempter_N = mkN "tentateur" masculine ; -- tocheck
lin temptress_N = mkN "tentatrice" feminine ; -- tocheck
lin tempura_N = mkN "tempura" masculine ; -- tocheck
lin tenability_N = mkN "modération" ; -- UWN
lin tenacious_A = mkA "tenace" ; -- tocheck
lin tenacity_N = mkN "ténacité" feminine ; -- tocheck
lin tenant_N = mkN "occupant" masculine | mkN "locataire" ; -- tocheck
lin tenant_V2 = mkV2 (mkV "louer") ; -- tocheck
lin tenby_PN = mkPN "Tenby" ; -- status=guess src=geonames
lin tench_N = mkN "tanche" ; -- tocheck
lin tend_V2 = variants {} ; --
lin tendency_N = mkN "tendance" feminine ; -- tocheck
lin tendentious_A = mkA "tendancieux" ; -- tocheck
lin tender_A = mkA "tendre" ; -- tocheck
lin tender_N = mkN "offre" feminine ; -- tocheck
lin tenderizer_N = mkN "attendrisseur" ; -- UWN
lin tenderloin_N = mkN "contre-filet" masculine ; -- tocheck
lin tenderness_N = mkN "tendresse" feminine ; -- tocheck
lin tendinitis_N = mkN "tendinite" ; -- UWN
lin tendon_N = mkN "tendon" ; -- tocheck
lin tendril_N = mkN "vrille" feminine ; -- tocheck
lin tenement_N = mkN "appartement" ; -- tocheck
lin tenet_N = mkN "dogme" masculine ; -- tocheck
lin tennis_N = mkN "tennis" masculine ; -- tocheck
lin tenon_N = mkN "tenon" masculine ; -- tocheck
lin tenor_N = mkN "ténor" masculine ; -- tocheck
lin tenrec_N = mkN "tenrec" ; -- UWN
lin tense_A = mkA "tendu" ; -- tocheck
lin tense_N = mkN "temps" masculine ; -- tocheck
lin tenseness_N = mkN "tension" ; -- tocheck
lin tension_N = mkN "tension" ; -- tocheck
lin tensity_N = mkN "tension" | mkN "tension_électrique" ; -- UWN
lin tensor_N = mkN "tenseur" ; -- UWN
lin tent_N = mkN "tente" feminine ; -- tocheck
lin tentacle_N = mkN "tentacule" masculine ; -- tocheck
lin tentative_A = mkA "provisoire" ; -- tocheck
lin tenterden_PN = mkPN "Tenterden" ; -- status=guess src=geonames
lin tenth_N = mkN "dixième" masculine | mkN "dixième" ; -- tocheck
lin tenuous_A = mkA "ténu" ; -- tocheck
lin tenure_N = mkN "tenure" feminine ; -- tocheck
lin tepal_N = mkN "tépale" masculine ; -- tocheck
lin tepee_N = mkN "Wigwam" | mkN "tipi" | mkN "wigwam" ; -- UWN
lin tepid_A = mkA "tiède" ; -- tocheck
lin tequila_N = mkN "tequila" | mkN "téquila" ; -- UWN
lin terabyte_N = mkN "téraoctet" masculine ; -- tocheck
lin teratogen_N = mkN "tératogène" masculine ; -- tocheck
lin teratogenesis_N = mkN "tératogénèse" feminine ; -- tocheck
lin teratogenic_A = mkA "tératogène" | mkA "tératogénique" ; -- tocheck
lin teratology_N = mkN "tératologie" feminine ; -- tocheck
lin teratoma_N = mkN "tératome" ; -- UWN
lin terbium_N = mkN "terbium" masculine ; -- tocheck
lin terce_N = mkN "tierce" feminine ; -- tocheck
lin tercentenary_N = mkN "triennal" ; -- UWN
lin tercentennial_N = mkN "triennal" ; -- UWN
lin teredo_N = mkN "taret" masculine ; -- tocheck
lin teresa_PN = mkPN "Teresa" ; -- status=guess src=geonames
lin tergiversate_V = mkV "tergiverser" ; -- UWN
lin tergiversation_N = mkN "apostasie" ; -- UWN
lin teriyaki_N = mkN "teriyaki" ; -- UWN
lin term_N = mkN "terme" masculine | mkN "trimestre" masculine | mkN "limite" feminine ; --- split
lin term_V2 = variants {} ; --
lin term_VS = mkvVS "appeler" | mkvVS "qualifier" ; -- UWN
lin termagant_N = mkN "musaraigne" | mkN "mégère" ; -- UWN
lin terminal_A = variants {} ; --
lin terminal_N = mkN "gare" feminine | mkN "terminal" masculine ; -- tocheck
lin terminate_V = mkV "achever" | mkV "arrêter" | mkV "finir" | mkV "terminer" ; -- UWN
lin terminate_V2 = mkV2 (mkV "terminer") ; -- tocheck
lin termination_N = mkN "fin" feminine | mkN "terminaison" feminine ; -- tocheck
lin terminative_A = mkA "cessatif" | mkA "désinentiel" ; -- UWN
lin terminological_A = mkA "terminologique" ; -- UWN
lin terminology_N = mkN "terminologie" feminine ; -- tocheck
lin termite_N = mkN "termite" masculine ; -- tocheck
lin terms_N = variants {} ; --
lin tern_N = mkN "sterne" feminine ; -- tocheck
lin ternary_A = mkA "ternaire" ; -- tocheck
lin terra_firma_N = mkN "sol" | mkN "terre" | mkN "terre_ferme" ; -- UWN
lin terra_incognita_N = mkN "inconnu" | mkN "terra_incognita" ; -- UWN
lin terrace_N = mkN "terrasse" feminine | mkN "gradins" ; -- tocheck
lin terrain_N = mkN "terrain" masculine ; -- tocheck
lin terrestrial_A = mkA "terrestre" ; -- tocheck
lin terrible_A = mkA "terrible" | mkA "épouvantable" ; -- tocheck
lin terrier_N = mkN "terrier" masculine ; -- tocheck
lin terrific_A = mkA "formidable" ; -- tocheck
lin terrify_V2 = variants {} ; --
lin terrine_N = mkN "Terrine" | mkN "terrine" ; -- UWN
lin territorial_A = mkA "territorial" ; -- tocheck
lin territory_N = mkN "territoire" masculine ; -- tocheck
lin terror_N = mkN "terreur" feminine ; -- tocheck
lin terrorism_N = mkN "terrorisme" masculine ; -- tocheck
lin terrorist_N = mkN "terroriste" ; -- tocheck
lin terry_N = mkN "terry" ; -- UWN
lin terry_PN = mkPN "Terry" ; -- status=guess src=geonames
lin terse_A = mkA "laconique" ; -- tocheck
lin tesla_N = mkN "tesla" masculine ; -- tocheck
lin tessella_N = mkN "tessella" ; -- UWN
lin tessellated_A = mkA "mosaïque" ; -- UWN
lin tessellation_N = mkN "pavage" ; -- tocheck
lin tessera_N = mkN "tesselle" ; -- UWN
lin test_N = mkN "test" masculine | mkN "épreuve" feminine ; -- tocheck
lin test_V2 = mkV2 (mkV "tester") ; -- tocheck
lin testament_N = mkN "testament" masculine ; -- tocheck
lin testicle_N = mkN "testicule" masculine ; -- tocheck
lin testicular_A = mkA "testiculaire" ; -- tocheck
lin testifier_N = mkN "déponent" ; -- UWN
lin testimony_N = mkN "témoin" masculine | mkN "témoignage" masculine ; -- tocheck
lin testing_N = variants {} ; --
lin testis_N = mkN "Testicule" | mkN "couille" | mkN "fou" | mkN "gosse" | mkN "testicule" | mkN "testicules" | mkN "œuf" ; -- UWN
lin testosterone_N = mkN "testostérone" feminine ; -- tocheck
lin testy_A = mkA "maussade" ; -- UWN
lin tetanus_N = mkN "tétanos" masculine ; -- tocheck
lin tetany_N = mkN "tétanie" feminine ; -- tocheck
lin tetchy_A = mkA "maussade" ; -- UWN
lin tether_N = mkN "longe" feminine ; -- tocheck
lin tether_V2 = mkV2 (mkV "attacher") ; -- tocheck
lin tetherball_N = mkN "swingball" | mkN "tetherball" ; -- UWN
lin tetracaine_N = mkN "tétracaïne" ; -- UWN
lin tetrachlorethylene_N = mkN "perchloroéthylène" | mkN "tétrachloroéthylène" ; -- UWN
lin tetrachloride_N = mkN "tétrachlorure" ; -- UWN
lin tetrafluoroethylene_N = mkN "tétrafluoroéthylène" ; -- UWN
lin tetragonal_A = mkA "quadratique" ; -- UWN
lin tetrahedron_N = mkN "tétraèdre" masculine ; -- tocheck
lin tetrahydrocannabinol_N = mkN "tétrahydrocannabinol" masculine ; -- tocheck
lin tetralogy_N = mkN "tétralogie" feminine ; -- tocheck
lin tetrameter_N = mkN "tétramètre" ; -- tocheck
lin tetrapod_N = mkN "Tetrapoda" | mkN "tetrapoda" | mkN "tétrapode" | mkN "tétrapodes" ; -- UWN
lin tetrode_N = mkN "tétrode" ; -- UWN
lin tetrose_N = mkN "tétrose" masculine ; -- tocheck
lin tewkesbury_PN = mkPN "Tewkesbury" ; -- status=guess src=geonames
lin text_N = mkN "texte" masculine | mkN "texto" masculine ; -- tocheck
lin textbook_N = mkN "manuel" masculine ; -- tocheck
lin textile_A = mkA "textile" ; -- UWN
lin textile_N = mkN "textile" ; -- tocheck
lin textual_A = mkA "textuel" ; -- tocheck
lin texture_N = mkN "texture" feminine | mkN "texture" masculine ; -- tocheck
lin thaiFem_N = variants {} ; ---- sense to be split
lin thaiMasc_N = variants {} ; ---- sense to be split
lin thailand_PN = mkPN "Thaïlande" ; -- status=guess src=geonames
lin thalamus_N = mkN "thalamus" masculine ; -- tocheck
lin thalassemia_N = mkN "thalassémie" feminine ; -- tocheck
lin thalidomide_N = mkN "thalidomide" ; -- tocheck
lin thallium_N = mkN "thallium" masculine ; -- tocheck
lin thallophyte_N = mkN "thallophyte" | mkN "thallophytes" ; -- UWN
lin thallus_N = mkN "thalle" ; -- UWN
lin thalweg_N = mkN "thalweg" masculine ; -- tocheck
lin thame_PN = mkPN "Thame" ; -- status=guess src=geonames
lin than_Subj = M.mkSubj Ph.elisQue ;
lin thanatology_N = mkN "thanatologie" ; -- UWN
lin thank_V2 = mkV2 (mkV "remercier") ; -- tocheck
lin thankful_A = mkA "reconnaissant" ; -- tocheck
lin thankfulness_N = mkN "reconnaissance" feminine ; -- tocheck
lin thanks_Interj = mkInterj "merci" ; -- tocheck
lin thanks_N = mkN "merci" ;
lin thanksgiving_N = mkN "action_de_grâce" | mkN "bénédiction" | mkN "grâce" | mkN "remerciement" | mkN "thanksgiving" ; -- UWN
lin that_AdA = lin AdA (ss "tellement") ;
lin that_Quant = S.that_Quant ;
lin that_Subj = S.that_Subj ;
lin thatch_N = mkN "chaume" masculine ; -- tocheck
lin thatcham_PN = mkPN "Thatcham" ; -- status=guess src=geonames
lin thatcher_N = mkN "thatcher" ; -- UWN
lin thaw_N = mkN "dégel" ; -- tocheck
lin thaw_V = mkV "dissoudre" | mkV "décongeler" | mkV "dégeler" | mkV "fondre" ; -- UWN
lin thaw_V2 = mkV2 (mkV "dégeler") ; -- tocheck
lin theanthropism_N = mkN "Anthropomorphisme" | mkN "anthropomorphisme" ; -- UWN
lin theatre_N = mkN "théâtre" ; -- UWN
lin theatrical_A = mkA "théâtral" ; -- tocheck
lin theatrical_N = mkN "histrionisme" | mkN "représentation" | mkN "théâtral" | mkN "théâtralisme" ; -- UWN
lin thebe_N = mkN "thèbes" | mkN "thébé" ; -- UWN
lin theft_N = mkN "vol" masculine ; -- tocheck
lin theism_N = mkN "théisme" masculine ; -- tocheck
lin theist_A = mkA "théiste" ; -- UWN
lin theist_N = mkN "théiste" ; -- UWN
lin theistic_A = mkA "théiste" ; -- UWN
lin theistical_A = mkA "théiste" ; -- UWN
lin thematic_A = mkA "thématique" ; -- tocheck
lin theme_N = mkN "thème" masculine ; -- tocheck
lin then_Adv = mkAdv "ensuite" | mkAdv "alors" | mkAdv "puis" ;
lin thenar_N = mkN "palmier" | mkN "paume" ; -- UWN
lin theocracy_N = mkN "théocratie" feminine ; -- tocheck
lin theocratic_A = mkA "théocratique" ; -- tocheck
lin theodicy_N = mkN "théodicée" ; -- tocheck
lin theodolite_N = mkN "théodolite" masculine ; -- tocheck
lin theodore_PN = mkPN "Theodore" ; -- status=guess src=geonames
lin theogony_N = mkN "théogonie" ; -- UWN
lin theologian_N = mkN "théologien" masculine ; -- tocheck
lin theological_A = mkA "théologique" ; -- tocheck
lin theology_N = mkN "théologie" feminine ; -- tocheck
lin theophany_N = mkN "théophanie" feminine ; -- tocheck
lin theophylline_N = mkN "théophylline" feminine ; -- tocheck
lin theorem_N = mkN "théorème" ; -- tocheck
lin theoretic_A = mkA "théorique" ; -- UWN
lin theoretical_A = mkA "théorique" ; -- tocheck
lin theoretician_N = mkN "théoricien" ; -- UWN
lin theorist_N = mkN "théoricien" masculine ; -- tocheck
lin theory_N = mkN "théorie" feminine ;
lin theosophy_N = mkN "théosophie" feminine ; -- tocheck
lin therapeutic_A = mkA "thérapeutique" ; -- tocheck
lin therapeutical_A = mkA "thérapeutique" ; -- UWN
lin therapeutics_N = mkN "thérapeutique" ; -- UWN
lin therapist_N = mkN "thérapeute" ; -- tocheck
lin therapy_N = mkN "thérapie" ; -- tocheck
lin there7from_Adv = S.there7from_Adv ;
lin there7to_Adv = S.there7to_Adv ;
lin there_Adv = S.there_Adv | mkAdv "voilà" ; ---- voila
lin thereafter_Adv = variants {} ; --
lin thereby_Adv = mkAdv "ainsi" ; -- tocheck
lin therefore_Adv = mkAdv "donc" ;
lin therefore_PConj = S.therefore_PConj ;
lin thereinafter_Adv = mkAdv "suivant" ; -- tocheck
lin theremin_N = mkN "thérémine" masculine ; -- tocheck
lin theresa_PN = mkPN "Theresa" ; -- status=guess src=geonames
lin thermal_A = mkA "thermique" ; -- tocheck
lin thermistor_N = mkN "thermistance" feminine ; -- tocheck
lin thermodynamics_N = mkN "thermodynamique" feminine ; -- tocheck
lin thermoelectric_A = mkA "thermoélectrique" ; -- tocheck
lin thermoelectricity_N = mkN "effet_thermoélectrique" | mkN "thermoélectricité" ; -- UWN
lin thermography_N = mkN "thermographie" ; -- UWN
lin thermometer_N = mkN "thermomètre" masculine ; -- tocheck
lin thermometry_N = mkN "thermométrie" ; -- UWN
lin thermonuclear_A = mkA "thermonucléaire" ; -- tocheck
lin thermoplastic_A = mkA "thermoplastique" ; -- tocheck
lin thermoplastic_N = mkN "thermoplastique" masculine ; -- tocheck
lin thermoreceptor_N = mkN "Thermorécepteur" | mkN "thermorécepteur" | mkN "thermorécepteurs" ; -- UWN
lin thermos_N = mkN "thermos" ; -- tocheck
lin thermosphere_N = mkN "thermosphère" feminine ; -- tocheck
lin thermostat_N = mkN "thermostat" ; -- tocheck
lin thermotherapy_N = mkN "thermothérapie" ; -- UWN
lin thermotropism_N = mkN "thermotropisme" ; -- tocheck
lin thesis_N = mkN "thèse" feminine ; -- tocheck
lin thespian_N = mkN "acteur" | mkN "agent" | mkN "comédien" | mkN "joueur" | mkN "musicien" | mkN "personnage" ; -- UWN
lin theta_N = mkN "thêta" masculine ; -- tocheck
lin thetford_PN = mkPN "Thetford" ; -- status=guess src=geonames
lin theyFem_Pron = E.they8fem_Pron ;
lin they_Pron = S.they_Pron ;
lin thick_A = L.thick_A ;
lin thick_Adv = mkAdv "épais" ; -- tocheck
lin thicken_V2 = mkV2 (reflV (mkV "épaissir")) | mkV2 (mkV "épaissir") ; -- tocheck
lin thickening_N = mkN "épaississement" ; -- tocheck
lin thicket_N = mkN "fourré" masculine ; -- tocheck
lin thickness_N = mkN "épaisseur" feminine ; -- tocheck
lin thief_N = mkN "voleur" masculine ; -- tocheck
lin thieve_V2 = mkV2 (mkV "voler") ; -- tocheck
lin thievery_N = mkN "vol" ; -- UWN
lin thigh_N = mkN "cuisse" feminine ; -- tocheck
lin thighbone_N = mkN "fémur" masculine ; -- tocheck
lin thimble_N = mkN "dé_à_coudre" ; -- UWN
lin thimbleful_N = mkN "dé_à_coudre" ; -- UWN
lin thin_A = L.thin_A ;
lin thin_Adv = mkAdv "mince" ; -- UWN
lin thin_skinned_A = mkA "susceptible" ; -- tocheck
lin thing_N = mkN "chose" feminine ;
lin think_N = mkN "pensée" feminine ; -- tocheck
lin think_V = L.think_V ;
lin think_V2 = mkV2 (mkV "penser") P.dative ;
lin think_VS = mkVS (mkV "penser") ;
lin think_over_V2 = prepV2 OP_think_V OP_over_Prep ; -- guess-p-verb
lin think_through_V2 = prepV2 OP_think_V OP_through_Prep ; -- guess-p-verb
lin think_up_V2 = prepV2 OP_think_V OP_up_Prep ; -- guess-p-verb
lin thinkerFem_N = mkN "intellectuelle" feminine ; -- tocheck
lin thinkerMasc_N = mkN "intellectuel" masculine ; -- tocheck
lin thinking_A = mkA "pensant" ;
lin thinking_N = mkN "pensée" ;
lin thionville_PN = mkPN "Thionville" ; -- status=guess src=geonames
lin thirsk_PN = mkPN "Thirsk" ; -- status=guess src=geonames
lin thirst_N = mkN "soif" feminine ; -- tocheck
lin thirst_V2 = mkV2 (mkV "désirer") ; -- tocheck
lin thirsty_A = mkA "assoiffé" ; -- tocheck
lin this_Quant = S.this_Quant ;
lin thistle_N = mkN "chardon" masculine ; -- tocheck
lin thither_Adv = mkAdv "là" ; -- tocheck
lin thole_N = mkN "Dame_de_nage" | mkN "dame" | mkN "dame_de_nage" | mkN "tolet" | mkN "épingle" ; -- UWN
lin tholepin_N = mkN "Dame_de_nage" | mkN "dame" | mkN "dame_de_nage" | mkN "tolet" | mkN "épingle" ; -- UWN
lin thomas_PN = mkPN "Thomas" ; -- status=guess src=geonames
lin thong_N = mkN "tongs" | mkN "lanière" feminine ; -- tocheck
lin thorax_N = mkN "thorax" masculine ; -- tocheck
lin thorium_N = mkN "thorium" masculine ; -- tocheck
lin thorn_N = mkN "thorn" masculine | mkN "épine" feminine ; -- tocheck
lin thornbury_PN = mkPN "Thornbury" ; -- status=guess src=geonames
lin thorny_A = mkA "épineux" ; -- UWN
lin thorough_A = mkA "exhaustif" | mkA "minutieux" ; -- tocheck
lin thoroughfare_N = mkN "grand-rue" feminine | mkN "passage" masculine ; -- tocheck
lin thoroughness_N = mkN "ruguosité" ; -- tocheck
lin thortveitite_N = mkN "thortveitite" ; -- UWN
lin though_Adv = mkAdv "néanmoins" ; -- tocheck
lin though_Subj = M.mkSubjSubj ("bien" + Ph.elisQue) | M.mkSubjSubj ("quoi" + Ph.elisQue) ;
lin thought_N = mkN "pensée" feminine | mkN "idée" feminine ; -- tocheck
lin thoughtful_A = mkA "attentionné" ; -- tocheck
lin thraldom_N = mkN "bondage" | mkN "esclavage" | mkN "esclave" ; -- UWN
lin thrall_N = mkN "esclave" ; -- tocheck
lin thread_N = mkN "fil" masculine ; -- tocheck
lin thread_V2 = mkV2 (mkV "filer") ; -- tocheck
lin threadbare_A = mkA "banal" | mkA "fatigué" | mkA "mineur" | mkA "trivial" ; -- UWN
lin threadfin_N = mkN "Alectis" | mkN "alectis" ; -- UWN
lin threadlike_A = mkA "filamenteux" ; -- UWN
lin threat_N = mkN "menace" feminine ; -- tocheck
lin threaten_V = variants {} ; -- mkV2 (mkV "menacer") ; -- tocheck
lin threaten_V2 = mkV2 (mkV "menacer") ; -- tocheck
lin threaten_VS = variants {} ; -- mkV2 (mkV "menacer") ; -- tocheck
lin threaten_VV = variants {} ; -- mkV2 (mkV "menacer") ; -- tocheck
lin three_dimensional_A = mkA "tridimensionnel" ; -- tocheck
lin threefold_A = mkA "triple" ; -- tocheck
lin threefold_Adv = mkAdv "triplement" ; -- tocheck
lin threesome_N = mkN "plan_à_trois" | mkN "triade" | mkN "trio" | mkN "triolisme" ; -- UWN
lin threnody_N = mkN "chant_funèbre" | mkN "requiem" | mkN "thrène" | mkN "thrénodie" ; -- UWN
lin threonine_N = mkN "thréonine" feminine ; -- tocheck
lin thresh_V2 = mkV2 (mkV I.battre_V2) ; -- tocheck
lin thresher_N = mkN "Batteuse" | mkN "batteuse" ; -- UWN
lin threshold_N = mkN "seuil" masculine | mkN "seuil" ; -- tocheck
lin thrift_N = mkN "armérie" feminine | mkN "parcimonie" feminine ; -- tocheck
lin thrifty_A = mkA "économe" ; -- tocheck
lin thrill_N = mkN "frisson" ; -- tocheck
lin thrill_V = mkV "chatouiller" | mkV "vibrer" ; -- UWN
lin thrill_V2 = mkV2 (mkV "exciter") ; -- tocheck
lin thriller_N = mkN "polar" ; -- tocheck
lin thrips_N = mkN "Thysanoptera" | mkN "thrips" | mkN "thysanoptera" | mkN "thysanoptère" | mkN "thysanoptères" ; -- UWN
lin thrive_V = mkV (mkV "prospérer") ; -- tocheck
lin throat_N = mkN "goulot" | mkN "gorge" feminine ; -- tocheck
lin throb_N = mkN "battement" masculine ; -- tocheck
lin throb_V = mkV (mkV "vibrer") | mkV (mkV I.battre_V2) ; -- tocheck
lin throe_N = mkN "agonie" feminine ; -- tocheck
lin thrombin_N = mkN "Prothrombine" | mkN "prothrombine" ; -- UWN
lin thrombocytopenia_N = mkN "thrombocytopénie" ; -- tocheck
lin thrombolysis_N = mkN "thrombolyse" ; -- UWN
lin thrombophlebitis_N = mkN "thrombose_veineuse_profonde" ; -- UWN
lin thrombosis_N = mkN "thrombose" feminine ; -- tocheck
lin thrombus_N = mkN "thrombus" masculine ; -- tocheck
lin throne_N = mkN "trône" masculine ; -- tocheck
lin throng_N = mkN "essaim" masculine ; -- tocheck
lin throttle_N = mkN "accélérateur" masculine ; -- tocheck
lin throttle_V2 = mkV2 (mkV "limiter") | mkV2 (mkV "étrangler") ; -- tocheck
lin through_Adv = variants {} ; -- S.through_Prep ;
lin through_Prep = S.through_Prep ;
lin throughout_Adv = mkAdv "partout" ; -- tocheck
lin throughout_Prep = variants {} ; --
lin throughput_N = mkN "débit" masculine | mkN "débit" ; -- tocheck
lin throw_N = mkN "jet" masculine ; -- tocheck
lin throw_V = mkV "jeter" ; -- UWN
lin throw_V2 = L.throw_V2 ;
lin throw_away_V2 = mkV2 (advV OP_throw_V OP_away_Adv ) ; -- guess-p-verb
lin throw_in_V = advV OP_throw_V OP_in_Adv ; -- guess-p-verb
lin throw_in_V2 = prepV2 OP_throw_V OP_in_Prep ; -- guess-p-verb
lin throw_off_V = advV OP_throw_V OP_off_Adv ; -- guess-p-verb
lin throw_off_V2 = prepV2 OP_throw_V OP_off_Prep ; -- guess-p-verb
lin throw_on_V2 = prepV2 OP_throw_V OP_on_Prep ; -- guess-p-verb
lin throw_out_V2 = prepV2 OP_throw_V OP_out_Prep ; -- guess-p-verb
lin throw_over_V2 = prepV2 OP_throw_V OP_over_Prep ; -- guess-p-verb
lin throw_together_V2 = mkV2 (advV OP_throw_V OP_together_Adv ) ; -- guess-p-verb
lin throw_up_V = advV OP_throw_V OP_up_Adv ; -- guess-p-verb
lin throw_up_V2 = prepV2 OP_throw_V OP_up_Prep ; -- guess-p-verb
lin throw_yourself_at_V2 = variants {} ; -- guess-p-verb
lin throw_yourself_into_V2 = variants {} ; -- guess-p-verb
lin throwback_N = mkN "atavisme" | mkN "atavus" | mkN "retour" ; -- UWN
lin thrower_N = mkN "potier" ; -- UWN
lin thrush_N = mkN "muguet" | mkN "tourd" masculine ; -- tocheck
lin thrust_N = mkN "poussée" | mkN "estocade" feminine ; -- tocheck
lin thrust_V = variants {} ; -- mkV2 (mkV "propulser") ; -- tocheck
lin thrust_V2 = mkV2 (mkV "propulser") ; -- tocheck
lin thrusterFem_N = variants {} ; ---- sense to be split
lin thrusterMasc_N = variants {} ; ---- sense to be split
lin thud_N = mkN "martèlement" masculine ; -- tocheck
lin thud_V = mkV (mkV "marteler") ; -- tocheck
lin thug_N = mkN "bandit" masculine ; -- tocheck
lin thuggee_N = mkN "thag" | mkN "thagî" | mkN "thug" ; -- UWN
lin thulium_N = mkN "thulium" masculine ; -- tocheck
lin thumb_N = mkN "pouce" masculine ; -- tocheck
lin thumb_V2 = mkV2 (mkV "feuilleter") ; -- tocheck
lin thumbnail_N = mkN "l'ongle" | mkN "croquis" masculine | mkN "aperçu" masculine ; -- tocheck
lin thumbtack_N = mkN "punaise" ; -- tocheck
lin thump_V2 = mkV2 (mkV "tambouriner") ; -- tocheck
lin thunder_N = mkN "tonnerre" masculine ; -- tocheck
lin thunder_V2 = mkV2 (mkV "foudroyer") | mkV2 (mkV "tonner") | mkV2 (mkV "tonitruer") ; -- tocheck
lin thunderbird_N = mkN "thunderbird" ; -- UWN
lin thunderstorm_N = mkN "orage" masculine ; -- tocheck
lin thunderstruck_A = mkA "stupéfié" ; -- tocheck
lin thurible_N = mkN "encens" | mkN "encensoir" ; -- UWN
lin thurifer_N = mkN "thuriféraire" masculine ; -- tocheck
lin thurso_PN = mkPN "Thurso" ; -- status=guess src=geonames
lin thus_Adv = mkAdv "ainsi" ;
lin thwack_N = mkN "blessure" ; -- UWN
lin thwart_N = mkN "banc" masculine ; -- tocheck
lin thwart_V2 = mkV2 (mkV "contrecarrer") ; -- tocheck
lin thylacine_N = mkN "thylacine" masculine ; -- tocheck
lin thyme_N = mkN "thym" masculine ; -- tocheck
lin thymine_N = mkN "thymine" feminine ; -- tocheck
lin thymol_N = mkN "thymol" masculine ; -- tocheck
lin thyroid_N = mkN "glande_thyroïde" | mkN "thyroïde" ; -- UWN
lin thyroidectomy_N = mkN "thyroïdectomie" feminine ; -- tocheck
lin thyroiditis_N = mkN "thyroïdite" ; -- UWN
lin thyroxine_N = mkN "thyroxine" feminine ; -- tocheck
lin thyrse_N = mkN "thyrse" masculine ; -- tocheck
lin ti_N = mkN "te" ; -- UWN
lin tiara_N = mkN "tiare" feminine ; -- tocheck
lin tibia_N = mkN "tibia" masculine ; -- tocheck
lin tibial_A = mkA "tibial" ; -- tocheck
lin tic_N = mkN "tic" masculine ; -- tocheck
lin tick_N = mkN "marque" feminine | mkN "crédit" masculine | mkN "tic-tac" masculine | mkN "seconde" feminine | mkN "taie" feminine | mkN "tique" feminine | mkN "graduation" feminine ; -- tocheck
lin tick_V = mkV "cocher" | mkV "marquer" ; -- UWN
lin tick_V2 = mkV2 (mkV "cocher") ; -- tocheck
lin tick_off_V = mkV "cocher" | mkV "marquer" ; -- UWN
lin ticket_N = mkN "billet" | mkN "billet" masculine | mkN "contravention" feminine ; -- tocheck
lin tickle_N = mkN "chatouiller" ; -- UWN
lin tickle_V = mkV "chatouiller" ; -- UWN
lin tickle_V2 = mkV2 (mkV "chatouiller") ; -- tocheck
lin ticklish_A = mkA "chatouilleux" ; -- tocheck
lin tidal_A = mkA "marée" | mkA "marémoteur" ; -- UWN
lin tidbit_N = mkN "friandise" ; -- UWN
lin tiddlywinks_N = mkN "jeu_de_puce" ; -- UWN
lin tide_N = mkN "marée" feminine | mkN "tendance" feminine ; -- tocheck
lin tidworth_PN = mkPN "Tidworth" ; -- status=guess src=geonames
lin tie_N = mkN "égalité" feminine ; -- tocheck
lin tie_V = variants {} ; -- L.tie_V2 ;
lin tie_V2 = L.tie_V2 ;
lin tie_back_V2 = mkV2 (advV OP_tie_V OP_back_Adv ) ; -- guess-p-verb
lin tie_down_V2 = prepV2 OP_tie_V OP_down_Prep ; -- guess-p-verb
lin tie_in_V = advV OP_tie_V OP_in_Adv ; -- guess-p-verb
lin tie_in_V2 = prepV2 OP_tie_V OP_in_Prep ; -- guess-p-verb
lin tie_in_with_V2 = prepV2 (advV OP_tie_V OP_in_Adv ) OP_with_Prep ; -- guess-p-verb
lin tie_up_V2 = prepV2 OP_tie_V OP_up_Prep ; -- guess-p-verb
lin tier_N = mkN "rang" masculine ; -- tocheck
lin tiercel_N = mkN "tiercelet" ; -- tocheck
lin tiger_N = mkN "tigre" masculine ; -- tocheck
lin tight_A = mkA "serré" | mkA "tendu" ; -- tocheck
lin tight_Adv = mkAdv "bien" ; -- tocheck
lin tighten_V = variants {} ; -- mkV2 (mkV "serrer") | mkV2 (reflV (mkV "resserrer")) ; -- tocheck
lin tighten_V2 = mkV2 (mkV "serrer") | mkV2 (reflV (mkV "resserrer")) ; -- tocheck
lin tightening_N = mkN "durcissement" ; -- UWN
lin tightness_N = mkN "étroitesse" ; -- tocheck
lin tights_N = mkN "collant" masculine ; -- tocheck
lin tiglon_N = mkN "tiglon" | mkN "tigron" ; -- UWN
lin tigress_N = mkN "tigresse" feminine ; -- tocheck
lin tilburg_PN = mkPN "Tilburg" ; -- status=guess src=geonames
lin tilbury_PN = mkPN "Tilbury" ; -- status=guess src=geonames
lin tilde_N = mkN "tilde" masculine ; -- tocheck
lin tile_N = mkN "carreau" ; -- tocheck
lin tiler_N = mkN "carreleur" masculine ; -- tocheck
lin tiling_N = mkN "carrelage" masculine ; -- tocheck
lin till_Prep = variants {} ; --
lin till_Subj = variants {} ; --
lin till_V2 = mkV2 (mkV "labourer") ; -- tocheck
lin tillage_N = mkN "labour" feminine ; -- tocheck
lin tiller_N = mkN "excavatrice" feminine | mkN "fermier" masculine ; -- tocheck
lin tilth_N = mkN "ameublissement" ; -- tocheck
lin tim_PN = mkPN "Tim" ; -- status=guess src=geonames
lin timber_N = mkN "bois" masculine ; -- tocheck
lin timbre_N = mkN "timbre" masculine ; -- tocheck
lin time_1_N = mkN "temps" masculine ;
lin time_2_N = mkN "fois" feminine ;
lin time_N = mkN "temps" masculine ;
lin time_V2 = mkV2 (mkV "chronométrer") ; -- tocheck
lin timekeeping_N = mkN "chronométrage" | mkN "contrôle" | mkN "exactitude" | mkN "pointage" | mkN "ponctualité" | mkN "présence" ; -- UWN
lin timeline_N = mkN "horaire" masculine ; -- tocheck
lin timeliness_N = mkN "ponctualité" ; -- tocheck
lin timely_A = mkA "opportun" ; -- tocheck
lin timer_N = mkN "chronométreur" masculine ; -- tocheck
lin times_N = mkN "fois" | mkN "multiplication" ; -- UWN
lin timeserving_A = mkA "opportuniste" | mkA "profiteur" ; -- UWN
lin timetable_N = mkN "horaire" ; -- tocheck
lin timid_A = mkA "timide" ; -- tocheck
lin timing_N = variants {} ; --
lin timorous_A = mkA "timoré" ; -- tocheck
lin timothy_N = mkN "fléole" feminine ; -- tocheck
lin tin_N = mkN "moule" masculine | mkN "étain" masculine ; -- tocheck
lin tin_V2 = mkV2 (mkV "étamer") ; -- tocheck
lin tinamou_N = mkN "tinamou" masculine ; -- tocheck
lin tinder_N = mkN "amadou" masculine ; -- tocheck
lin tinderbox_N = mkN "poudrière" feminine ; -- tocheck
lin tine_N = mkN "andouiller" masculine | mkN "dent" masculine ; -- tocheck
lin tinge_N = mkN "teinte" feminine | mkN "nuance" feminine ; -- tocheck
lin tinge_V2 = mkV2 (mkV I.teindre_V2) ; -- tocheck
lin tingle_N = mkN "picotement" masculine ; -- tocheck
lin tinker_V = mkV (mkV "bricoler") ; -- tocheck
lin tinkerer_N = mkN "bricoler" | mkN "bricoleur" ; -- UWN
lin tinnitus_N = mkN "acouphène" masculine ; -- tocheck
lin tinsel_N = mkN "clinquant" masculine ; -- tocheck
lin tinsmith_N = mkN "ferblantier" masculine ; -- tocheck
lin tintinnabulation_N = mkN "tintement" masculine ; -- tocheck
lin tiny_A = mkA "minuscule" ; -- tocheck
lin tip_N = mkN "décharge" feminine | mkN "tuyau" masculine | mkN "pourboire" masculine | mkN "bout" masculine ; -- tocheck
lin tip_V = mkV "pourboire" ; -- UWN
lin tip_V2 = variants {} ; --
lin tipper_N = mkN "Tombereau" | mkN "benne" | mkN "motobasculeur" | mkN "tombereau" ; -- UWN
lin tipperary_PN = mkPN "Tipperary" ; -- status=guess src=geonames
lin tipple_N = mkN "carreau" | mkN "verre" ; -- tocheck
lin tipster_N = mkN "racoler" ; -- UWN
lin tipsy_A = mkA "éméché" ; -- tocheck
lin tirade_N = mkN "diatribe" feminine ; -- tocheck
lin tiramisu_N = mkN "tiramisu" masculine ; -- tocheck
lin tire_N = mkN "pneu" | mkN "pneumatique" | mkN "tyr" ; -- UWN
lin tired_A = variants {} ; --
lin tiredness_N = mkN "fatigue" feminine ; -- tocheck
lin tireless_A = mkA "inlassable" ; -- tocheck
lin tiresome_A = mkA "ennuyeux" ; -- tocheck
lin tissue_N = mkN "tissu" masculine ; -- tocheck
lin tit_N = mkN "mésange" feminine | mkN "nichon" masculine ; -- tocheck
lin titan_N = mkN "titan" masculine ; -- tocheck
lin titanic_A = mkA "titanesque" ; -- tocheck
lin titanium_N = mkN "titane" masculine ; -- tocheck
lin titanosaur_N = mkN "Titanosauridae" | mkN "titanosauridae" ; -- UWN
lin titbit_N = mkN "friandise" ; -- UWN
lin tithe_N = mkN "dixième" masculine | mkN "dîme" feminine ; -- tocheck
lin titillation_N = mkN "chatouiller" ; -- UWN
lin titivate_V2 = mkV2 (mkV "pomponner") ; -- tocheck
lin titlark_N = mkN "alouette" | mkN "pipit" | mkN "pipits" ; -- UWN
lin title_N = mkN "titre" masculine | mkN "intitulé" masculine ; -- tocheck
lin titmouse_N = mkN "mésange" ; -- UWN
lin titration_N = mkN "titrage" | mkN "titrimétrie" ; -- UWN
lin tiverton_PN = mkPN "Tiverton" ; -- status=guess src=geonames
lin to_Adv = variants {} ; -- S.to_Prep ;
lin to_Prep = S.to_Prep ;
lin toad_N = mkN "crapaud" masculine ; -- tocheck
lin toadflax_N = mkN "linaire" feminine ; -- tocheck
lin toadstool_N = mkN "champignon" | mkN "champignon_vénéneux" | mkN "vénéneux" ; -- UWN
lin toady_N = mkN "flagorneur" masculine ; -- tocheck
lin toast_N = mkN "toast" masculine ; -- tocheck
lin toast_V2 = mkV2 (mkV "griller") ; -- tocheck
lin toaster_N = mkN "grille-pain" masculine ; -- tocheck
lin toasting_N = mkN "browning" ; -- UWN
lin tobacco_N = mkN "tabac" masculine ; -- tocheck
lin tobacconist_N = mkN "buraliste" masculine ; -- tocheck
lin toboggan_N = mkN "toboggan" masculine ; -- tocheck
lin toccata_N = mkN "toccata" feminine ; -- tocheck
lin today_Adv = L.today_Adv ;
lin today_N = mkN "aujourd'hui" masculine ; -- tocheck
lin toddler_N = mkN "plot" masculine | mkN "bambin" masculine ; -- tocheck
lin todmorden_PN = mkPN "Todmorden" ; -- status=guess src=geonames
lin tody_N = mkN "todidae" | mkN "todidés" | mkN "todiers" ; -- UWN
lin toe_N = mkN "orteil" masculine ; -- tocheck
lin toed_A = mkA "doigt" | mkA "orteil" ; -- UWN
lin toehold_N = mkN "prise" feminine ; -- tocheck
lin toffee_N = mkN "fragile" ; -- UWN
lin together_A = mkA "ensemble" ; -- UWN
lin together_Adv = mkAdv "ensemble" ;
lin toggle_N = mkN "cabillot" masculine ; -- tocheck
lin togo_PN = mkPN "Togo" ; -- status=guess src=geonames
lin toil_V2V = mkV2V (mkV "travailler") ; -- tocheck
lin toil_VV = mkvVV "peiner" ; -- UWN
lin toilet_N = mkN "toilettes" feminine | mkN "toilettes" | mkN "toilette" feminine ; -- tocheck
lin tokamak_N = mkN "tokamak" ; -- UWN
lin tokay_N = mkN "tokay" masculine ; -- tocheck
lin toke_N = mkN "fumette" ; -- UWN
lin token_N = mkN "jeton" masculine | mkN "symbole" masculine ; -- tocheck
lin tokyo_PN = mkPN "Tokyo" ; -- status=guess src=geonames
lin tole_N = mkN "tole" ; -- UWN
lin tolerable_A = mkA "tolérable" ; -- tocheck
lin tolerance_N = mkN "tolérance" feminine ; -- tocheck
lin tolerant_A = mkA "tolérant" ; -- tocheck
lin tolerate_V2 = mkV2 (mkV "tolérer") ; -- tocheck
lin toll_N = mkN "péage" masculine ; -- tocheck
lin toll_V2 = mkV2 (mkV "sonner") ; -- tocheck
lin toller_N = mkN "péagiste" ; -- UWN
lin tollkeeper_N = mkN "péagiste" ; -- UWN
lin toluene_N = mkN "toluène" masculine ; -- tocheck
lin tom_N = mkN "mâle" masculine | mkN "matou" ; -- tocheck
lin tomahawk_N = mkN "tomahawk" masculine ; -- tocheck
lin tomato_N = mkN "tomate" feminine ; -- tocheck
lin tomb_N = mkN "tombe" feminine ; -- tocheck
lin tombac_N = mkN "tombac" | mkN "tombak" ; -- UWN
lin tombola_N = mkN "tombola" ; -- UWN
lin tomboy_N = mkN "garçon_manqué" | mkN "garçonne" ; -- UWN
lin tombstone_N = mkN "faire-part_de_clôture" | mkN "pierre" | mkN "pierre_tombale" | mkN "tombale" ; -- UWN
lin tomcat_N = mkN "chat" | mkN "matou" ; -- UWN
lin tome_N = mkN "tome" masculine ; -- tocheck
lin tomfoolery_N = mkN "pitrerie" feminine ; -- tocheck
lin tomorrow_Adv = mkAdv "demain" ; -- tocheck
lin tomorrow_N = mkN "demain" ; -- tocheck
lin ton_N = mkN "tas" masculine | mkN "tonne" feminine ; -- tocheck
lin tonality_N = mkN "tonalité" feminine ; -- tocheck
lin tonbridge_PN = mkPN "Tonbridge" ; -- status=guess src=geonames
lin tone_N = mkN "ton" masculine | mkN "ton" ; -- tocheck
lin tone_V = mkV "conforter" | mkV "consolider" ; -- UWN
lin toner_N = mkN "toner" masculine ; -- tocheck
lin tonga_PN = mkPN "Tonga" ; -- status=guess src=geonames
lin tongs_N = mkN "pinces" ; -- tocheck
lin tongue_N = L.tongue_N ;
lin tongue_in_cheek_A = mkA "facétieux" ; -- UWN
lin tongue_twister_N = mkN "virelangue" masculine ; -- tocheck
lin tonguefish_N = mkN "Cynoglossidae" | mkN "cynoglossidae" ; -- UWN
lin tonicity_N = mkN "tonus" ; -- UWN
lin tonight_Adv = variants {} ; --
lin tonnage_N = mkN "tonnage" | mkN "volume" ; -- UWN
lin tonne_N = mkN "tonne" feminine ; -- tocheck
lin tonsil_N = mkN "amygdale" feminine ; -- tocheck
lin tonsillectomy_N = mkN "amygdalectomie" | mkN "tonsillectomie" ; -- UWN
lin tonsillitis_N = mkN "amygdalite" feminine ; -- tocheck
lin tonsure_N = mkN "tonsure" feminine ; -- tocheck
lin tonyrefail_PN = mkPN "Tonyrefail" ; -- status=guess src=geonames
lin too_AdA = S.too_AdA ;
lin too_Adv = mkAdv "aussi" ;
lin tool_N = mkN "outil" masculine | mkN "mouton" masculine ; -- tocheck
lin tool_V2 = mkV2 (mkV "façonner") ; -- tocheck
lin toolbox_N = mkN "toolbox" feminine ; -- tocheck
lin toot_N = mkN "prout" ; -- tocheck
lin toot_V = mkV "klaxonner" ; -- UWN
lin tooth_N = L.tooth_N ;
lin toothache_N = mkN "odontalgie" ; -- UWN
lin toothbrush_N = mkN "brosse_à_dents" ; -- UWN
lin toothless_A = mkA "édenté" ; -- tocheck
lin toothpaste_N = mkN "dentifrice" masculine ; -- tocheck
lin toothpick_N = mkN "cure-dent" masculine ; -- tocheck
lin toothsome_A = mkA "délicieuse" | mkA "délicieux" | mkA "savoureux" | mkA "succulent" ; -- UWN
lin top_N = mkN "toupie" feminine | mkN "couvercle" masculine | mkN "hune" feminine | mkN "dessus" masculine ; -- tocheck
lin top_V2 = variants {} ; --
lin topaz_N = mkN "topaze" feminine ; -- tocheck
lin tope_V2 = mkV2 (mkV "chopiner") ; -- tocheck
lin toper_N = mkN "buveur" | mkN "presse-agrumes" ; -- UWN
lin tophus_N = mkN "pie" | mkN "tartre" | mkN "tartre_dentaire" ; -- UWN
lin topiary_N = mkN "topiaire" ; -- tocheck
lin topic_N = mkN "sujet" masculine ; -- tocheck
lin topical_A = mkA "d'actualité" ; -- tocheck
lin topicality_N = mkN "actualité" ; -- UWN
lin topicalization_N = mkN "thématisation" ; -- UWN
lin topless_A = mkA "topless" ; -- tocheck
lin topographical_A = mkA "topographique" ; -- UWN
lin topography_N = mkN "topographie" feminine ; -- tocheck
lin topological_A = mkA "topologique" ; -- tocheck
lin topology_N = mkN "topologie" feminine ; -- tocheck
lin toponymy_N = mkN "toponymie" feminine ; -- tocheck
lin topos_N = mkN "topos" ; -- UWN
lin topper_N = mkN "bièvre" | mkN "castor" | mkN "claque" | mkN "haut-de-forme" ; -- UWN
lin topple_V = mkV "pourboire" ; -- UWN
lin topsail_N = mkN "hunier" masculine ; -- tocheck
lin topspin_N = mkN "Topspin" | mkN "topspin" ; -- UWN
lin toque_N = mkN "toque" feminine | mkN "tuque" feminine ; -- tocheck
lin torbay_PN = mkPN "Torbay" ; -- status=guess src=geonames
lin torch_1_N = mkN "torche" feminine ; -- tocheck
lin torch_2_N = mkN "torche" feminine ; -- tocheck
lin torch_3_N = mkN "torche" feminine ; -- tocheck
lin toreador_N = mkN "toréador" masculine ; -- tocheck
lin torero_N = mkN "toréro" ; -- UWN
lin torment_N = mkN "tourment" masculine ; -- tocheck
lin tornado_N = mkN "tornade" feminine ; -- tocheck
lin toroid_N = mkN "tore" ; -- UWN
lin toronto_PN = mkPN "Toronto" ; -- status=guess src=geonames
lin torpedo_N = mkN "torpille" feminine ; -- tocheck
lin torpedo_V2 = mkV2 (mkV "torpiller") ; -- tocheck
lin torpidness_N = mkN "torpeur" ; -- UWN
lin torpor_N = mkN "torpeur" feminine ; -- tocheck
lin torque_N = mkN "torque" masculine | mkN "couple" masculine ; -- tocheck
lin torr_N = mkN "millimètre_de_mercure" | mkN "torr" ; -- UWN
lin torrent_N = mkN "torrent" masculine ; -- tocheck
lin torrential_A = mkA "diluvien" ; -- tocheck
lin torrid_A = mkA "torride" ; -- tocheck
lin torso_N = mkN "torse" masculine ; -- tocheck
lin tort_N = mkN "extra-contractuelle" | mkN "quasi-délictuelle" | mkN "responsabilité_délictuelle" | mkN "responsabilité_extra_contractuelle_en_france" ; -- UWN
lin tortellini_N = mkN "tortellini" ; -- UWN
lin tortilla_N = mkN "tortilla" ; -- UWN
lin tortoise_N = mkN "testudinidae" | mkN "testudinidés" | mkN "tortue" ; -- UWN
lin tortuosity_N = mkN "contorsion" ; -- UWN
lin torture_N = mkN "torture" feminine ; -- tocheck
lin torture_V2 = mkV2 (mkV "torturer") ; -- tocheck
lin torturer_N = mkN "tortionnaire" masculine ; -- tocheck
lin torus_N = mkN "tore" masculine ; -- tocheck
lin toss_V = variants {} ; -- mkV2 (mkV "mélanger") ; -- tocheck
lin toss_V2 = mkV2 (mkV "mélanger") ; -- tocheck
lin tosser_N = mkN "branleur" ; -- tocheck
lin total_A = mkA "total" | mkA "entier" ; -- tocheck
lin total_N = mkN "somme" feminine | mkN "total" masculine ; -- tocheck
lin total_V = variants {} ; -- mkV2 (mkV "totaliser") ; -- tocheck
lin total_V2 = mkV2 (mkV "totaliser") ; -- tocheck
lin totalitarianism_N = mkN "totalitarisme" masculine ; -- tocheck
lin totality_N = mkN "totalité" feminine ; -- tocheck
lin tote_N = mkN "fourre-tout" ; -- UWN
lin totem_N = mkN "totem" masculine ; -- tocheck
lin totipotency_N = mkN "totipotence" ; -- UWN
lin totipotent_A = mkA "totipotent" ; -- tocheck
lin totnes_PN = mkPN "Totnes" ; -- status=guess src=geonames
lin toucan_N = mkN "toucan" masculine ; -- tocheck
lin touch_N = mkN "toucher" masculine | mkN "toucher" ; -- tocheck
lin touch_V = variants {} ; -- mkV2 (mkV "toucher") ; -- tocheck
lin touch_V2 = mkV2 (mkV "toucher") ; -- tocheck
lin touch_down_V = mkV "atterrir" ; -- UWN
lin touch_for_V3 = variants {} ; -- guess-p-verb
lin touch_off_V2 = prepV2 OP_touch_V OP_off_Prep ; -- guess-p-verb
lin touch_on_V2 = prepV2 OP_touch_V OP_on_Prep ; -- guess-p-verb
lin touch_type_V = variants {} ; -- guess-p-verb
lin touch_up_V2 = prepV2 OP_touch_V OP_up_Prep ; -- guess-p-verb
lin touch_upon_V2 = prepV2 OP_touch_V OP_upon_Prep ; -- guess-p-verb
lin touchable_A = mkA "touchable" ; -- tocheck
lin touchdown_N = mkN "touchdown" ; -- tocheck
lin touching_A = mkA "touchant" ; -- tocheck
lin touchstone_N = mkN "touchau" ; -- tocheck
lin touchy_A = mkA "susceptible" ; -- tocheck
lin tough_A = variants {} ; --
lin toughen_V = mkV "durcir" | mkV "tremper" ; -- UWN
lin toughie_N = mkN "autocollant" | mkN "colle" ; -- UWN
lin toughness_N = mkN "difficulté" ; -- UWN
lin toulon_PN = mkPN "Toulon" ; -- status=guess src=geonames
lin toulouse_PN = mkPN "Toulouse" ; -- status=guess src=geonames
lin toupee_N = mkN "toupet" masculine ; -- tocheck
lin tour_N = mkN "excursion" masculine | mkN "tournée" feminine ; -- tocheck
lin tour_V = variants {} ; -- mkV2 (mkV "tourner") ; -- tocheck
lin tour_V2 = mkV2 (mkV "tourner") ; -- tocheck
lin touraco_N = mkN "musophagidae" | mkN "musophagidés" | mkN "touracos" ; -- UWN
lin tourism_N = mkN "tourisme" masculine ; -- tocheck
lin tourist_N = mkN "touriste" masculine ; -- tocheck
lin touristed_A = mkA "touristique" ; -- UWN
lin tourmaline_N = mkN "tourmaline" ; -- tocheck
lin tournament_N = mkN "tournoi" masculine ; -- tocheck
lin tourney_N = mkN "tournoi" ; -- UWN
lin tourniquet_N = mkN "garrot" masculine ; -- tocheck
lin tours_PN = mkPN "Tours" ; -- status=guess src=geonames
lin tout_N = mkN "racoleur" masculine ; -- tocheck
lin tout_V2 = mkV2 (mkV "racoler") ; -- tocheck
lin tow_N = mkN "remorquage" masculine | mkN "étoupe" feminine ; -- tocheck
lin tow_V2 = mkV2 (mkV "tracter") ; -- tocheck
lin toward_Prep = mkPrep "envers" ; ---- sense
lin towards_Prep = mkPrep "vers" ;
lin towel_N = mkN "serviette" feminine ; -- tocheck
lin tower_N = mkN "tour" feminine ; -- tocheck
lin towhee_N = mkN "pipilo" ; -- UWN
lin town_N = mkN "ville" feminine ;
lin township_N = mkN "canton" | mkN "commune" | mkN "hameau" | mkN "municipalité" | mkN "ville" ; -- UWN
lin townsman_N = mkN "citadin" masculine ; -- tocheck
lin towpath_N = mkN "halage" ; -- UWN
lin toxic_A = mkA "toxique" ; -- tocheck
lin toxicity_N = mkN "toxicité" feminine ; -- tocheck
lin toxicologist_N = mkN "toxicologue" ; -- tocheck
lin toxicology_N = mkN "toxicologie" feminine ; -- tocheck
lin toxin_N = mkN "toxine" feminine ; -- tocheck
lin toxoplasmosis_N = mkN "toxoplasmose" feminine ; -- tocheck
lin toy_N = mkN "jouet" masculine ; -- tocheck
lin trace_N = mkN "trace" feminine ; -- tocheck
lin trace_V = variants {} ; -- mkV2 (mkV "calquer") ; -- tocheck
lin trace_V2 = mkV2 (mkV "calquer") ; -- tocheck
lin traceable_A = mkA "traçable" ; -- UWN
lin tracer_N = mkN "marqueur" masculine ; -- tocheck
lin tracery_N = mkN "tracerie" ; -- UWN
lin trachea_N = mkN "trachée" feminine ; -- tocheck
lin tracheid_N = mkN "trachéide" | mkN "trachéides" ; -- UWN
lin tracheitis_N = mkN "trachéite" ; -- UWN
lin trachoma_N = mkN "trachome" masculine ; -- tocheck
lin track_N = mkN "sentier" masculine | mkN "chemin" masculine | mkN "voie" feminine | mkN "empreinte" feminine | mkN "piste" feminine | mkN "sillon" masculine | mkN "trace" feminine ; -- tocheck
lin track_V = variants {} ; --
lin track_V2 = variants {} ; --
lin trackball_N = mkN "trackball" masculine ; -- tocheck
lin tracker_N = mkN "pisteur" masculine | mkN "poursuivant" ; -- tocheck
lin tract_N = mkN "appareil" masculine ; -- tocheck
lin tractability_N = mkN "docilité" | mkN "flexibilité" | mkN "obéissance" | mkN "souplesse" ; -- UWN
lin tractable_A = mkA "malléable" | mkA "docile" ; -- tocheck
lin traction_N = mkN "traction" ; -- UWN
lin tractor_N = mkN "tracteur" masculine ; -- tocheck
lin tracy_PN = mkPN "Tracy" ; -- status=guess src=geonames
lin trade_N = mkN "commerce" masculine ;
lin trade_V = variants {} ; -- mkV2 (mkV "échanger") ; -- tocheck
lin trade_V2 = mkV2 (mkV "échanger") ; -- tocheck
lin trade_away_V = advV OP_trade_V OP_away_Adv ; -- guess-p-verb
lin trade_down_V = advV OP_trade_V OP_down_Adv ; -- guess-p-verb
lin trade_in_V2 = prepV2 OP_trade_V OP_in_Prep ; -- guess-p-verb
lin trade_off_V2 = prepV2 OP_trade_V OP_off_Prep ; -- guess-p-verb
lin trade_on_V2 = prepV2 OP_trade_V OP_on_Prep ; -- guess-p-verb
lin trade_up_V = advV OP_trade_V OP_up_Adv ; -- guess-p-verb
lin trade_upon_V2 = prepV2 OP_trade_V OP_upon_Prep ; -- guess-p-verb
lin trademark_N = mkN "marque_commerciale" | mkN "poinçon" ; -- UWN
lin tradeoff_N = mkN "compromis" ; -- tocheck
lin trader_N = mkN "commerçant" masculine ; -- tocheck
lin tradesman_N = mkN "artisan" masculine ; -- tocheck
lin trading_A = variants {} ; --
lin trading_N = mkN "commerce" | mkN "commercial" | mkN "quota" | mkN "échange" ; -- UWN
lin tradition_N = mkN "tradition" feminine ; -- tocheck
lin traditional_A = mkA "traditionnel" ; -- tocheck
lin traduce_V2 = mkV2 (mkV "calomnier") | mkV2 (mkV I.traduire_V2) ; -- tocheck
lin traducer_N = mkN "traducteur" ; -- tocheck
lin traffic_N = mkN "traite" feminine | mkN "circulation" feminine ; -- tocheck
lin trafficator_N = mkN "clignotant" ; -- UWN
lin trafficker_N = mkN "adjudicateur" | mkN "colporteur" | mkN "commerçant" | mkN "marchand" | mkN "mercaticien" | mkN "trafiquant" | mkN "vendeur" ; -- UWN
lin tragacanth_N = mkN "gomme_adragante" | mkN "gomme_de_dragon" | mkN "tragacanthe" ; -- UWN
lin tragedy_N = mkN "tragédie" feminine ; -- tocheck
lin tragic_A = mkA "tragique" ; -- tocheck
lin tragicomedy_N = mkN "tragicomédie" feminine ; -- tocheck
lin tragicomic_A = mkA "tragicomique" ; -- tocheck
lin tragopan_N = mkN "tragopan" ; -- UWN
lin tragus_N = mkN "tragus" ; -- UWN
lin trail_N = mkN "piste" feminine ; -- tocheck
lin trail_V = variants {} ; -- mkV2 (mkV "traîner") | mkV2 (mkV "pister") ; -- tocheck
lin trail_V2 = mkV2 (mkV "traîner") | mkV2 (mkV "pister") ; -- tocheck
lin trailer_N = mkN "roulotte" | mkN "bande-annonce" feminine | mkN "remorque" feminine ; -- tocheck
lin trailing_N = mkN "alignement_des_pales" | mkN "pistage" | mkN "poursuite" ; -- UWN
lin train_N = L.train_N ;
lin train_V = variants {} ; -- mkV2V (reflV (mkV "exercer")) | mkV2V (mkV "pointer") | mkV2V (reflV (mkV "entraîner")) | mkV2V (mkV "former") ; -- tocheck
lin train_V2 = variants {} ; -- mkV2V (reflV (mkV "exercer")) | mkV2V (mkV "pointer") | mkV2V (reflV (mkV "entraîner")) | mkV2V (mkV "former") ; -- tocheck
lin train_V2V = mkV2V (reflV (mkV "exercer")) | mkV2V (mkV "pointer") | mkV2V (reflV (mkV "entraîner")) | mkV2V (mkV "former") ; -- tocheck
lin train_up_V2 = prepV2 OP_train_V OP_up_Prep ; -- guess-p-verb
lin trained_A = variants {} ; --
lin traineeFem_N = mkN "stagiaire" ; -- tocheck
lin traineeMasc_N = mkN "stagiaire" ; -- tocheck
lin traineeship_N = mkN "stage_de_formation" ; -- UWN
lin trainer_N = mkN "basket" feminine | mkN "entraîneur" masculine ; -- tocheck
lin training_N = mkN "entraînement" masculine ; -- tocheck
lin trainman_N = mkN "cheminot" ; -- UWN
lin traipse_V = mkV (mkV "crapahuter") ; -- tocheck
lin trait_N = mkN "trait" masculine ; -- tocheck
lin traitor_N = mkN "traître" masculine ; -- tocheck
lin trajectory_N = mkN "trajectoire" feminine ; -- tocheck
lin tralee_PN = mkPN "Tralee" ; -- status=guess src=geonames
lin tram_N = mkN "tramway" masculine ; -- tocheck
lin tram_car_N = mkN "tram" | mkN "tramway" | mkN "trolley" | mkN "trolleybus" ; -- UWN
lin trammel_N = mkN "crémaillère" feminine ; -- tocheck
lin tramontane_A = mkA "transmontain" ; -- UWN
lin tramp_N = mkN "garce" feminine | mkN "vagabond" masculine ; -- tocheck
lin trample_N = mkN "piétiner" ; -- UWN
lin trample_V2 = mkV2 (mkV "piétiner") ; -- tocheck
lin trampoline_N = mkN "trampoline" ; -- tocheck
lin tranche_N = mkN "tranche" ; -- tocheck
lin tranent_PN = mkPN "Tranent" ; -- status=guess src=geonames
lin tranquil_A = mkA "tranquille" ; -- tocheck
lin tranquillity_N = mkN "tranquillité" feminine ; -- tocheck
lin tranquillizer_N = mkN "tranquillisant" masculine ; -- tocheck
lin transaction_N = variants {} ; --
lin transalpine_A = mkA "transalpin" ; -- tocheck
lin transalpine_N = mkN "transalpin" ; -- UWN
lin transaminase_N = mkN "aminotransférase" | mkN "transaminase" ; -- UWN
lin transatlantic_A = mkA "transatlantique" ; -- tocheck
lin transcend_V2 = mkV2 (mkV "transcender") ; -- tocheck
lin transcendentalism_N = mkN "transcendantalisme" ; -- UWN
lin transcontinental_A = mkA "transcontinental" ; -- tocheck
lin transcribe_V2 = mkV2 (mkV I.transcrire_V2) ; -- tocheck
lin transcriber_N = mkN "adaptateur" | mkN "arrangeur" ; -- UWN
lin transcript_N = mkN "transcription" feminine ; -- tocheck
lin transcription_N = mkN "transcription" feminine ; -- tocheck
lin transdermal_A = mkA "percutané" ; -- UWN
lin transducer_N = mkN "transducteur" masculine ; -- tocheck
lin transept_N = mkN "transept" ; -- tocheck
lin transfer_N = mkN "transfert" masculine ; -- tocheck
lin transfer_V = variants {} ; -- mkV2 (mkV "transférer") ; -- tocheck
lin transferable_A = mkA "transférable" ; -- tocheck
lin transferase_N = mkN "transférase" feminine ; -- tocheck
lin transferee_N = mkN "transfert" ; -- UWN
lin transference_N = mkN "transférence" feminine ; -- tocheck
lin transform_V2 = mkV2 (mkV "transformer") ; -- tocheck
lin transformable_A = mkA "décapotable" | mkA "traduisible" | mkA "transformable" ; -- UWN
lin transformation_N = mkN "transformation" feminine ; -- tocheck
lin transformer_N = mkN "transformateur" masculine ; -- tocheck
lin transfusion_N = mkN "transfusion" ; -- UWN
lin transgender_A = mkA "transgenre" ; -- tocheck
lin transgress_V2 = mkV2 (mkV "transgresser") ; -- tocheck
lin transgression_N = mkN "transgression" feminine ; -- tocheck
lin transience_N = mkN "brièveté" | mkN "concision" | mkN "finitude" ; -- UWN
lin transiency_N = mkN "finitude" ; -- UWN
lin transient_A = mkA "passager" | mkA "bref" ; -- tocheck
lin transient_N = mkN "clochard" | mkN "itinérant" ; -- tocheck
lin transistor_N = mkN "transistor" masculine ; -- tocheck
lin transit_N = mkN "transit" masculine ; -- tocheck
lin transition_N = variants {} ; --
lin transitional_A = mkA "transitoire" | mkA "provisoire" ; -- tocheck
lin transitive_A = mkA "transitif" ; -- tocheck
lin transitivity_N = mkN "transitivité" feminine ; -- tocheck
lin transitory_A = mkA "passager" ; -- tocheck
lin translatable_A = mkA "traduisible" ; -- tocheck
lin translate_V = mkV I.traduire_V2 ;
lin translate_V2 = mkV2 (mkV I.traduire_V2) ;
lin translation_N = mkN "traduction" feminine ;
lin translator_N = mkN "traducteur" masculine ; -- tocheck
lin transliterate_V2 = mkV2 (mkV "translittérer") ; -- tocheck
lin transliteration_N = mkN "transcription" feminine ; -- tocheck
lin translucence_N = mkN "translucidité" ; -- UWN
lin translucency_N = mkN "translucidité" ; -- UWN
lin translucent_A = mkA "translucide" ; -- tocheck
lin transmission_N = mkN "transmission" feminine ; -- tocheck
lin transmit_V2 = variants {} ; --
lin transmittance_N = mkN "transmission" | mkN "transmittance" ; -- UWN
lin transmitter_N = mkN "transmetteur" masculine ; -- tocheck
lin transmutable_A = mkA "décapotable" | mkA "traduisible" | mkA "transformable" ; -- UWN
lin transmute_V2 = mkV2 (mkV "transmuer") ; -- tocheck
lin transom_N = mkN "imposte" feminine ; -- tocheck
lin transparence_N = mkN "transparence" feminine ; -- tocheck
lin transparency_N = mkN "transparence" feminine ; -- tocheck
lin transparent_A = mkA "transparent" ; -- tocheck
lin transpiration_N = mkN "transpiration" feminine ; -- tocheck
lin transpire_V = mkV "transpirer" ; -- UWN
lin transplant_N = mkN "transplantation" feminine | mkN "greffon" masculine ; -- tocheck
lin transplant_V = mkV "remuer" | mkV "transférer" | mkV "transplanter" | mkV "transposer" ; -- UWN
lin transplant_V2 = mkV2 (mkV "greffer") | mkV2 (mkV "transplanter") ; -- tocheck
lin transplantation_N = mkN "transplantation" feminine ; -- tocheck
lin transponder_N = mkN "transpondeur" masculine ; -- tocheck
lin transport_N = mkN "transport" masculine | mkN "transport" ; -- tocheck
lin transport_V2 = mkV2 (mkV "reporter") ; -- tocheck
lin transportable_A = mkA "transportable" ; -- tocheck
lin transportation_N = mkN "transport" masculine | mkN "transportation" feminine ; -- tocheck
lin transporter_N = mkN "bande_transporteuse" | mkN "convoyeur" ; -- UWN
lin transposable_A = mkA "transposable" ; -- tocheck
lin transpose_N = mkN "transposée" feminine | mkN "transposer" ; -- tocheck
lin transposition_N = mkN "transposition" ; -- UWN
lin transposon_N = mkN "transposon" | mkN "élément_transposable" ; -- UWN
lin transsexual_N = mkN "transsexuel" masculine ; -- tocheck
lin transsexualism_N = mkN "Transsexualisme" | mkN "transsexualisme" ; -- UWN
lin transubstantiation_N = mkN "transmutation" ; -- UWN
lin transvestic_A = mkA "travesti" ; -- UWN
lin transvestism_N = mkN "travestissement" ; -- tocheck
lin transvestite_N = mkN "travesti" ; -- tocheck
lin trap_N = mkN "siphon" masculine | mkN "trappe" feminine | mkN "gueule" feminine | mkN "piège" masculine ; -- tocheck
lin trap_V = variants {} ; -- mkV2 (mkV "intercepter") | mkV2 (mkV "piéger") ; -- tocheck
lin trap_V2 = mkV2 (mkV "intercepter") | mkV2 (mkV "piéger") ; -- tocheck
lin trapeze_N = mkN "trapèze" ; -- UWN
lin trapezium_N = mkN "trapèze" masculine | mkN "trapézoïde" masculine ; -- tocheck
lin trapezohedron_N = mkN "antidiamant" ; -- UWN
lin trapezoid_N = mkN "trapézoïde" masculine | mkN "trapèze" masculine ; -- tocheck
lin trash_N = mkN "corbeille" feminine | mkN "déchet" masculine ; -- tocheck
lin trauma_N = mkN "traumatisme" ; -- tocheck
lin traumatic_A = mkA "traumatique" ; -- tocheck
lin traumatology_N = mkN "traumatologie" feminine ; -- tocheck
lin trave_N = mkN "trave" ; -- UWN
lin travel_N = mkN "voyage" masculine ; -- tocheck
lin travel_V = L.travel_V ;
lin travel_V2 = mkV2 (mkV "voyager") | mkV2 (mkV I.transmettre_V2) ; -- tocheck
lin traveler_N = mkN "voyageur" ; -- UWN
lin traveller_N = mkN "voyageur" masculine ; -- tocheck
lin travelling_N = mkN "voyage" ; -- UWN
lin traversable_A = mkA "traversable" ; -- UWN
lin traverse_V2 = mkV2 (mkV "franchir") ; -- tocheck
lin travesty_N = mkN "pamphlet" | mkN "parodie" | mkN "parodier" ; -- UWN
lin trawl_N = mkN "chalut" ; -- UWN
lin trawl_V2 = mkV2 (mkV "chaluter") ; -- tocheck
lin trawler_N = mkN "chalutier" masculine ; -- tocheck
lin tray_N = mkN "plateau" masculine ; -- tocheck
lin treacherous_A = mkA "traître" ; -- tocheck
lin treachery_N = mkN "traîtrise" feminine ; -- tocheck
lin treacle_N = mkN "mélasse" feminine ; -- tocheck
lin tread_N = mkN "marche" feminine ; -- tocheck
lin tread_V = variants {} ; -- mkV2 (mkV "fouler") | mkV2 (mkV "piétiner") ; -- tocheck
lin tread_V2 = mkV2 (mkV "fouler") | mkV2 (mkV "piétiner") ; -- tocheck
lin treason_N = mkN "trahison" feminine ; -- tocheck
lin treasure_N = mkN "trésor" masculine ; -- tocheck
lin treasurer_N = mkN "trésorier" masculine ; -- tocheck
lin treasury_N = mkN "trésorerie" feminine ; -- tocheck
lin treat_N = variants {} ; --
lin treat_V = variants {} ; -- mkV2 (mkV "négocier") | mkV2 (mkV "traiter") ; -- tocheck
lin treat_V2 = mkV2 (mkV "négocier") | mkV2 (mkV "traiter") ; -- tocheck
lin treatise_N = mkN "traité" masculine ; -- tocheck
lin treatment_N = mkN "traitement" masculine ; -- tocheck
lin treaty_N = mkN "traité" masculine ; -- tocheck
lin treble_A = mkA "soprano" ; -- UWN
lin treble_N = mkN "soprano" ; -- UWN
lin treble_V = mkV "tripler" ; -- UWN
lin treble_V2 = mkV2 (mkV "tripler") ; -- tocheck
lin tredegar_PN = mkPN "Tredegar" ; -- status=guess src=geonames
lin tree_N = L.tree_N ;
lin treehopper_N = mkN "membracidae" ; -- UWN
lin trefoil_N = mkN "trèfle" masculine ; -- tocheck
lin trekker_N = mkN "trekkeur" ; -- UWN
lin trellis_N = mkN "treille" masculine | mkN "treillage" masculine ; -- tocheck
lin tremble_N = mkN "tremblement" masculine ; -- tocheck
lin tremble_V = mkV (mkV "trembler") ; -- tocheck
lin tremendous_A = mkA "formidable" | mkA "énorme" ; -- tocheck
lin tremolite_N = mkN "trémolite" ; -- UWN
lin tremor_N = mkN "trémulation" feminine ; -- tocheck
lin trench_N = mkN "tranchée" ; -- tocheck
lin trenchant_A = mkA "tranchant" ; -- tocheck
lin trend_N = mkN "tendance" feminine | mkN "penchant" feminine ; -- tocheck
lin trend_V = mkV "tourner" | mkV "virer" ; -- UWN
lin trendy_A = mkA "branché" ; -- UWN
lin trepan_N = mkN "trépan" masculine ; -- tocheck
lin trephination_N = mkN "trépanation" ; -- UWN
lin trephine_N = mkN "trépan" masculine ; -- tocheck
lin trepidation_N = mkN "inquiétude" feminine ; -- tocheck
lin treponema_N = mkN "treponema" | mkN "treponema_pallidum" | mkN "tréponème" ; -- UWN
lin trespass_N = mkN "trespas" ; -- tocheck
lin trespass_V = mkV (mkV I.enfreindre_V2) ; -- tocheck
lin tress_N = mkN "tresse" feminine ; -- tocheck
lin trestle_N = mkN "tréteau" | mkN "tréteau" masculine ; -- tocheck
lin triad_N = mkN "triade" feminine ; -- tocheck
lin trial_N = mkN "procès" masculine | mkN "essai" masculine | mkN "épreuve" feminine ; -- tocheck
lin triangle_N = mkN "triangle" masculine ; -- tocheck
lin triangulate_A = mkA "trianguler" ; -- UWN
lin tribal_A = mkA "tribal" ; -- UWN
lin tribe_N = mkN "tribu" feminine ; -- tocheck
lin tribology_N = mkN "tribologie" ; -- tocheck
lin tribulation_N = mkN "tribulation" feminine ; -- tocheck
lin tribunal_N = mkN "tribunal" masculine ; -- tocheck
lin tribune_N = mkN "tribune" feminine ; -- tocheck
lin tributary_A = mkA "favorable" ; -- UWN
lin tribute_N = mkN "hommage" masculine | mkN "tribut" masculine ; -- tocheck
lin triceps_N = mkN "triceps" masculine ; -- tocheck
lin triceratops_N = mkN "triceratops" | mkN "tricératops" ; -- UWN
lin trichinosis_N = mkN "trichinellose" | mkN "trichinose" ; -- UWN
lin trichloride_N = mkN "trichlorure" ; -- UWN
lin trichodesmium_N = mkN "trichodesmium" ; -- UWN
lin trichotillomania_N = mkN "trichotillomanie" feminine ; -- tocheck
lin trichotomy_N = mkN "trichotomie" feminine ; -- tocheck
lin trichuriasis_N = mkN "trichiurose" | mkN "trichocéphalose" ; -- UWN
lin trick_N = mkN "truc" masculine | mkN "tour" masculine | mkN "pli" masculine ; -- tocheck
lin trick_V2 = mkV2 (mkV "duper") ; -- tocheck
lin trickery_N = mkN "tricherie" feminine ; -- tocheck
lin trickle_N = mkN "goutter" ; -- UWN
lin tricky_A = mkA "rusé" | mkA "épineux" ; -- tocheck
lin triclinic_A = mkA "triclinique" ; -- tocheck
lin tricolor_N = mkN "drapeau_tricolore" | mkN "tricolore" ; -- UWN
lin tricolour_N = mkN "tricolore" masculine ; -- tocheck
lin tricorn_N = mkN "tricorne" ; -- UWN
lin tricot_N = mkN "maille" | mkN "tricot" ; -- UWN
lin tricycle_N = mkN "tricycle" masculine ; -- tocheck
lin trident_N = mkN "trident" masculine ; -- tocheck
lin tridymite_N = mkN "tridymite" ; -- UWN
lin triennial_A = mkA "triennal" ; -- tocheck
lin triennial_N = mkN "triennal" ; -- UWN
lin trieste_PN = mkPN "Trieste" ; -- status=guess src=geonames
lin trifle_N = mkN "broutille" feminine | mkN "babiole" feminine | mkN "bagatelle" feminine ; -- tocheck
lin trifler_N = mkN "baguenaudier" ; -- UWN
lin trigeminal_N = mkN "nerf_trijumeau" ; -- UWN
lin trigger_N = mkN "gâchette" | mkN "gâchette" feminine ; -- tocheck
lin trigger_V2 = variants {} ; --
lin triggerfish_N = mkN "baliste" masculine ; -- tocheck
lin triglyceride_N = mkN "Triglycéride" | mkN "triglycéride" ; -- UWN
lin trigonometric_A = mkA "trigonométrique" ; -- tocheck
lin trigonometry_N = mkN "trigonométrie" feminine ; -- tocheck
lin trilateral_A = mkA "triangulaire" ; -- UWN
lin trilingual_A = mkA "trilingue" ; -- tocheck
lin trill_N = mkN "trille" masculine ; -- tocheck
lin trillium_N = mkN "trilles" | mkN "trillium" ; -- UWN
lin trilobite_N = mkN "trilobite" masculine ; -- tocheck
lin trilogy_N = mkN "trilogie" feminine ; -- tocheck
lin trim_N = mkN "assiette" feminine ; -- tocheck
lin trim_V2 = mkV2 (mkV "tailler") ; -- tocheck
lin trimaran_N = mkN "trimaran" masculine ; -- tocheck
lin trimester_N = mkN "trimestre" ; -- tocheck
lin tring_PN = mkPN "Tring" ; -- status=guess src=geonames
lin trinidad_PN = mkPN "Trinidad" ; -- status=guess src=geonames
lin trinitrotoluene_N = mkN "trinitrotoluène" masculine ; -- tocheck
lin trinity_N = mkN "triade" feminine ; -- tocheck
lin trinket_N = mkN "babiole" feminine | mkN "colifichet" masculine ; -- tocheck
lin trio_N = mkN "trio" masculine ; -- tocheck
lin triode_N = mkN "triode" feminine ; -- tocheck
lin triose_N = mkN "triose" ; -- UWN
lin trioxide_N = mkN "trioxyde" ; -- UWN
lin trip_N = mkN "trip" masculine ; -- tocheck
lin trip_V = mkV "descendre" | mkV "donner" ; -- UWN
lin trip_out_V = mkV "descendre" | mkV "donner" ; -- UWN
lin tripartite_A = mkA "triparti" ; -- tocheck
lin tripe_N = mkN "tripe" feminine | mkN "bêtise" feminine | mkN "tripes" ; -- tocheck
lin triple_A = mkA "triple" ; -- tocheck
lin triple_N = mkN "triple" masculine ; -- tocheck
lin triple_V = mkV "tripler" ; -- UWN
lin triple_V2 = mkV2 (mkV "tripler") ; -- tocheck
lin triplet_N = mkN "triplet" | mkN "triolet" masculine | mkN "triplé" ; -- tocheck
lin tripletail_N = mkN "lobotidae" ; -- UWN
lin triplex_A = mkA "tripler" ; -- UWN
lin triploid_A = mkA "triploïde" ; -- tocheck
lin tripod_N = mkN "trépied" masculine ; -- tocheck
lin triptych_N = mkN "triptyque" ; -- UWN
lin triquetral_N = mkN "os_cunéiforme" | mkN "os_triquetrum" ; -- UWN
lin trireme_N = mkN "trirème" feminine ; -- tocheck
lin triskaidekaphobia_N = mkN "triskaidékaphobie" ; -- tocheck
lin trismus_N = mkN "trismus" ; -- UWN
lin trisomy_N = mkN "trisomie" feminine ; -- tocheck
lin trite_A = mkA "banal" ; -- tocheck
lin tritheism_N = mkN "trithéisme" masculine ; -- tocheck
lin tritium_N = mkN "tritium" ; -- UWN
lin triton_N = mkN "triton" masculine ; -- tocheck
lin triumph_N = mkN "triomphe" masculine ; -- tocheck
lin triumph_V = mkV (mkV "triompher") ; -- tocheck
lin triumphal_A = mkA "triomphal" ; -- tocheck
lin triumphant_A = mkA "triomphal" ; -- tocheck
lin triumvirate_N = mkN "triumvirat" masculine ; -- tocheck
lin trivet_N = mkN "dessous-de-plat" masculine | mkN "trépied" ; -- tocheck
lin trivial_A = mkA "banal" | mkA "trivial" ; -- tocheck
lin trochaic_A = mkA "trochaïque" ; -- tocheck
lin trochee_N = mkN "trochée" masculine ; -- tocheck
lin troglodyte_N = mkN "troglodyte" | mkN "troglodyte" masculine ; -- tocheck
lin trogon_N = mkN "trogon" | mkN "trogonidae" | mkN "trogonidés" ; -- UWN
lin troika_N = mkN "troïka" feminine ; -- tocheck
lin trojan_A = mkA "troyen" ; -- tocheck
lin trojan_N = mkN "cheval_de_troie" | mkN "troyen" ; -- UWN
lin troll_N = mkN "troll" masculine ; -- tocheck
lin trolley_N = mkN "charriot" masculine ; -- tocheck
lin trolleybus_N = mkN "trolley" | mkN "trolleybus" ; -- UWN
lin trollop_N = mkN "pute" feminine ; -- tocheck
lin trombone_N = mkN "trombone" masculine ; -- tocheck
lin trombonist_N = mkN "tromboniste" masculine ; -- tocheck
lin troon_PN = mkPN "Troon" ; -- status=guess src=geonames
lin troop_N = variants {} ; --
lin trooper_N = mkN "cavalier" ; -- UWN
lin trope_N = mkN "trope" masculine ; -- tocheck
lin trophy_N = mkN "trophée" feminine ; -- tocheck
lin tropic_N = mkN "tropique" masculine ; -- tocheck
lin tropical_A = mkA "tropical" ; -- tocheck
lin tropism_N = mkN "tropisme" masculine ; -- tocheck
lin troponym_N = mkN "troponyme" ; -- UWN
lin tropopause_N = mkN "tropopause" feminine ; -- tocheck
lin troposphere_N = mkN "troposphère" feminine ; -- tocheck
lin trot_V = mkV "courir" | mkV "jogger" | mkV "trotter" ; -- UWN
lin troth_N = mkN "sort" | mkN "souffrance" ; -- UWN
lin troubadour_N = mkN "troubadour" masculine ; -- tocheck
lin trouble_N = mkN "peine" feminine ; -- tocheck
lin trouble_V2 = mkV2 (mkV "troubler") ; -- tocheck
lin troublesome_A = mkA "gênant" ; -- tocheck
lin trough_N = mkN "gouttière" | mkN "thalweg" masculine | mkN "creux" masculine | mkN "auge" ; -- tocheck
lin troupe_N = mkN "troupe" feminine ; -- tocheck
lin trouser_N = variants {} ; --
lin trout_N = mkN "truite" feminine ; -- tocheck
lin trove_N = mkN "trésor" ; -- UWN
lin trowbridge_PN = mkPN "Trowbridge" ; -- status=guess src=geonames
lin trowel_N = mkN "déplantoir" masculine | mkN "truelle" feminine | mkN "gâche" feminine ; -- tocheck
lin truancy_N = mkN "absentéisme" | mkN "faire_l'école_buissonière" ; -- UWN
lin truce_N = mkN "trêve" feminine ; -- tocheck
lin truck_N = mkN "camion" masculine ; -- tocheck
lin truculent_A = mkA "agressif" ; -- tocheck
lin true_A = mkA "vrai" ;
lin true_N = mkN "vrai" ; -- UWN
lin truelove_N = mkN "ange" | mkN "chéri" | mkN "minou" ; -- UWN
lin truffle_N = mkN "truffe" feminine ; -- tocheck
lin truism_N = mkN "lapalissade" feminine ; -- tocheck
lin trump_N = mkN "atout" | mkN "atout" masculine ; -- tocheck
lin trump_V2 = mkV2 (mkV "couper") ; -- tocheck
lin trumpet_N = mkN "barrissement" | mkN "trompettiste" | mkN "trompette" feminine ; -- tocheck
lin trumpet_V2 = mkV2 (mkV "baréter") ; -- tocheck
lin trumpeter_N = mkN "trompettiste" ; -- tocheck
lin truncate_A = mkA "tronqué" ; -- tocheck
lin truncate_V2 = mkV2 (mkV "tronquer") ; -- tocheck
lin truncheon_N = mkN "matraque" ; -- UWN
lin trunk_N = mkN "trompe" feminine | mkN "malle" | mkN "coffre" | mkN "tronc" ; -- tocheck
lin truro_PN = mkPN "Truro" ; -- status=guess src=geonames
lin truss_N = mkN "treillis" ; -- tocheck
lin trust_N = mkN "confiance" feminine ; -- tocheck
lin trust_V2 = variants {} ; --
lin trust_VS = variants {} ; --
lin trustee_N = mkN "administrateur" | mkN "dépositaire" | mkN "régent" ; -- UWN
lin trustworthiness_N = mkN "fiabilité" ; -- tocheck
lin trusty_A = mkA "confiance" | mkA "droit" | mkA "fiable" | mkA "honnête" | mkA "sûr" | mkA "véritable" ; -- UWN
lin truth_N = mkN "vérité" feminine | mkN "vérité" ; -- tocheck
lin truthfulness_N = mkN "véracité" feminine ; -- tocheck
lin try_N = mkN "tentative" feminine | mkN "essai" masculine | mkN "essai" ; -- tocheck
lin try_V = mkV "essayer" ;
lin try_V2 = mkV2 "essayer" ;
lin try_VV = deVV (mkV "essayer") ;
lin try_back_V = advV OP_try_V OP_back_Adv ; -- guess-p-verb
lin try_for_V2 = prepV2 OP_try_V OP_for_Prep ; -- guess-p-verb
lin try_it_on_V = variants {} ; -- guess-p-verb
lin try_on_V2 = prepV2 OP_try_V OP_on_Prep ; -- guess-p-verb
lin try_out_V = mkV "essayer" | mkV "tester" | mkV "vérifier" ; -- UWN
lin try_out_V2 = prepV2 OP_try_V OP_out_Prep ; -- guess-p-verb
lin try_out_for_V2 = prepV2 (advV OP_try_V OP_out_Adv ) OP_for_Prep ; -- guess-p-verb
lin trypsin_N = mkN "trypsine" ; -- UWN
lin tryptophan_N = mkN "tryptophane" masculine ; -- tocheck
lin tryst_N = mkN "rendez-vous" masculine ; -- tocheck
lin tsar_N = mkN "tsar" masculine ; -- tocheck
lin tsarina_N = mkN "tsarine" feminine ; -- tocheck
lin tsetse_N = mkN "tsé-tsé" feminine ; -- tocheck
lin tsunami_N = mkN "tsunami" masculine ; -- tocheck
lin tsuris_N = mkN "histoires" ; -- tocheck
lin tuatara_N = mkN "sphénodon" masculine ; -- tocheck
lin tub_N = mkN "rafiot" feminine | mkN "bassine" feminine ; -- tocheck
lin tuba_N = mkN "tuba" masculine ; -- tocheck
lin tubby_A = mkA "dodu" ; -- tocheck
lin tube_N = mkN "tuyau" masculine ; -- tocheck
lin tuberculin_N = mkN "tuberculine" ; -- UWN
lin tuberculosis_N = mkN "tuberculose" feminine ; -- tocheck
lin tuberosity_N = mkN "éminence" ; -- UWN
lin tubocurarine_N = mkN "curare" | mkN "tubocurarine" ; -- UWN
lin tubular_A = mkA "cylindrique" ; -- UWN
lin tuck_N = mkN "Rapière" | mkN "rapière" ; -- UWN
lin tuck_V = variants {} ; --
lin tuck_V2 = variants {} ; --
lin tuck_in_V = mkV "mettre" ; -- UWN
lin tufa_N = mkN "tuffeau" masculine ; -- tocheck
lin tuft_N = mkN "touffe" feminine ; -- tocheck
lin tug_N = mkN "tirement" ; -- tocheck
lin tug_V = mkV "remorquer" | mkV "tirer" ; -- UWN
lin tug_V2 = mkV2 (mkV "remorquer") ; -- tocheck
lin tugboat_N = mkN "remorqueur" masculine ; -- tocheck
lin tugrik_N = mkN "tugrik" masculine ; -- tocheck
lin tuition_N = mkN "cours" ; -- tocheck
lin tularemia_N = mkN "tularémie" feminine ; -- tocheck
lin tulip_N = mkN "tulipe" feminine ; -- tocheck
lin tulle_N = mkN "tulle" ; -- UWN
lin tumble_V = variants {} ; -- mkV2 (mkV "dégringoler") ; -- tocheck
lin tumble_V2 = mkV2 (mkV "dégringoler") ; -- tocheck
lin tumbler_N = mkN "tumbler" masculine ; -- tocheck
lin tumbril_N = mkN "charrette" feminine ; -- tocheck
lin tumescence_N = mkN "tumescence" ; -- UWN
lin tumescent_A = mkA "tumescent" ; -- tocheck
lin tummy_N = mkN "bidon" masculine ; -- tocheck
lin tumor_N = mkN "tumeur" feminine ; -- tocheck
lin tumour_N = mkN "néoplasme" | mkN "tubercule" | mkN "tumeur" ; -- UWN
lin tumult_N = mkN "bagarre" feminine | mkN "barouf" masculine ; -- tocheck
lin tumultuous_A = mkA "disruptif" | mkA "dérangeant" | mkA "inquiet" | mkA "perturbant" ; -- UWN
lin tumulus_N = mkN "Tumulus" | mkN "brouette" | mkN "tumulus" ; -- UWN
lin tuna_N = mkN "thon" masculine ; -- tocheck
lin tundra_N = mkN "toundra" feminine ; -- tocheck
lin tune_N = mkN "tube" | mkN "mélodie" feminine ; -- tocheck
lin tune_V = variants {} ; --
lin tune_V2 = variants {} ; --
lin tuneful_A = mkA "mélodieux" ; -- UWN
lin tuner_N = mkN "accordeur" masculine ; -- tocheck
lin tungstate_N = mkN "tungstate" masculine ; -- tocheck
lin tungsten_N = mkN "tungstène" masculine ; -- tocheck
lin tunic_N = mkN "tunique" feminine ; -- tocheck
lin tunicate_N = mkN "Urochordata" | mkN "tunicata" | mkN "tunicates" | mkN "tunicier" | mkN "tuniciers" | mkN "urochordata" | mkN "urochordés" | mkN "urocordés" ; -- UWN
lin tuning_N = mkN "paramétrage" masculine | mkN "accordage" masculine | mkN "réglage" masculine ; -- tocheck
lin tunis_PN = mkPN "Tunis" ; -- status=guess src=geonames
lin tunisia_PN = mkPN "Tunisie" ; -- status=guess src=geonames
lin tunnel_N = mkN "tunnel" masculine ; -- tocheck
lin tup_N = mkN "bélier" ; -- UWN
lin turban_N = mkN "turban" masculine ; -- tocheck
lin turbaned_A = mkA "enturbanné" ; -- UWN
lin turbid_A = mkA "boueux" | mkA "nuageux" | mkA "touffu" ; -- UWN
lin turbidity_N = mkN "turbidité" ; -- UWN
lin turbidness_N = mkN "turbidité" ; -- UWN
lin turbine_N = mkN "turbine" feminine ; -- tocheck
lin turbojet_N = mkN "turboréacteur" masculine ; -- tocheck
lin turboprop_N = mkN "turbopropulseur" masculine ; -- tocheck
lin turbot_N = mkN "turbot" masculine ; -- tocheck
lin turbulence_N = mkN "turbulence" feminine ; -- tocheck
lin turd_N = mkN "étron" masculine ; -- tocheck
lin tureen_N = mkN "soupière" feminine ; -- tocheck
lin turf_N = mkN "gazon" masculine | mkN "hippodrome" masculine ; -- tocheck
lin turf_V2 = mkV2 (mkV "gazonner") ; -- tocheck
lin turgid_A = mkA "tumescent" ; -- UWN
lin turgidity_N = mkN "flatulence" ; -- UWN
lin turin_PN = mkPN "Turin" ; -- status=guess src=geonames
lin turkey_N = mkN "dinde" feminine ; -- tocheck
lin turkey_PN = mkPN "estroict de Sibyle" ; -- status=guess src=geonames
lin turkishFem_N = variants {} ; ---- sense to be split
lin turkishMasc_N = variants {} ; ---- sense to be split
lin turku_PN = mkPN "Turku" ; -- status=guess src=geonames
lin turmeric_N = mkN "curcuma" masculine ; -- tocheck
lin turmoil_N = mkN "chaos" ; -- tocheck
lin turn_N = mkN "tour" masculine ; -- tocheck
lin turn_V = L.turn_V ;
lin turn_V2 = mkV2 "tourner" ;
lin turn_VA = mkVA (mkV I.devenir_V) ;
lin turn_against_V2 = prepV2 OP_turn_V OP_against_Prep ; -- guess-p-verb
lin turn_around_V2 = prepV2 OP_turn_V OP_around_Prep ; -- guess-p-verb
lin turn_away_V = advV OP_turn_V OP_away_Adv ; -- guess-p-verb
lin turn_away_V2 = mkV2 (advV OP_turn_V OP_away_Adv ) ; -- guess-p-verb
lin turn_back_V = advV OP_turn_V OP_back_Adv ; -- guess-p-verb
lin turn_down_V2 = prepV2 OP_turn_V OP_down_Prep ; -- guess-p-verb
lin turn_in_V = advV OP_turn_V OP_in_Adv ; -- guess-p-verb
lin turn_in_V2 = prepV2 OP_turn_V OP_in_Prep ; -- guess-p-verb
lin turn_into_V2 = prepV2 OP_turn_V OP_into_Prep ; -- guess-p-verb
lin turn_off_V2 = prepV2 OP_turn_V OP_off_Prep ; -- guess-p-verb
lin turn_on_V = mkV "donner" | mkV "ouvrir" ; -- UWN
lin turn_on_V2 = prepV2 OP_turn_V OP_on_Prep ; -- guess-p-verb
lin turn_out_V = advV OP_turn_V OP_out_Adv ; -- guess-p-verb
lin turn_out_V2 = prepV2 OP_turn_V OP_out_Prep ; -- guess-p-verb
lin turn_over_V = advV OP_turn_V OP_over_Adv ; -- guess-p-verb
lin turn_over_V2 = prepV2 OP_turn_V OP_over_Prep ; -- guess-p-verb
lin turn_to_V2 = prepV2 OP_turn_V OP_to_Prep ; -- guess-p-verb
lin turn_up_V = advV OP_turn_V OP_up_Adv ; -- guess-p-verb
lin turn_up_V2 = prepV2 OP_turn_V OP_up_Prep ; -- guess-p-verb
lin turncoat_N = mkN "girouette" ; -- tocheck
lin turner_N = mkN "tourneur" masculine ; -- tocheck
lin turnip_N = mkN "navet" masculine ; -- tocheck
lin turnkey_N = mkN "guichetier" masculine ; -- tocheck
lin turnover_N = mkN "chausson" masculine | mkN "renverser" ; -- tocheck
lin turnstile_N = mkN "tourniquet" masculine ; -- tocheck
lin turnstone_N = mkN "tournepierre" ; -- UWN
lin turpitude_N = mkN "turpitude" feminine ; -- tocheck
lin turps_N = mkN "essence_de_térébenthine" ; -- UWN
lin turquoise_N = mkN "turquoise" feminine ; -- tocheck
lin turret_N = mkN "tourelle" ; -- UWN
lin turtle_N = mkN "tortue" ; -- tocheck
lin tussock_N = mkN "tussack" ; -- tocheck
lin tutelage_N = mkN "tutelle" ; -- tocheck
lin tutelary_A = mkA "tutélaire" ; -- tocheck
lin tutor_N = mkN "autobus" | mkN "car" | mkN "entraîneur" | mkN "répétiteur" ; -- UWN
lin tutorial_A = mkA "tutoriel" ; -- UWN
lin tutorial_N = mkN "didacticiel" masculine ; -- tocheck
lin tutorship_N = mkN "cours" | mkN "enseignement" | mkN "tutelle" ; -- UWN
lin tutu_N = mkN "tutu" masculine ; -- tocheck
lin tuxedo_N = mkN "smoking" masculine ; -- tocheck
lin twaddle_N = mkN "fadaise" feminine ; -- tocheck
lin twain_N = mkN "apparier" | mkN "duo" | mkN "dyade" | mkN "joug" | mkN "paire" | mkN "twain" ; -- UWN
lin tweak_N = mkN "retouche" feminine ; -- tocheck
lin tweak_V2 = mkV2 (mkV I.tordre_V2) | mkV2 (mkV "retoucher") ; -- tocheck
lin tweed_N = mkN "tweed" masculine ; -- tocheck
lin tweet_N = mkN "tweet" masculine | mkN "gazouillis" masculine ; -- tocheck
lin tweet_V = mkV (mkV "twitter") ; -- tocheck
lin tweeter_N = mkN "haut-parleur_d'aigus" | mkN "tweeter" ; -- UWN
lin twelvemonth_N = mkN "an" | mkN "année" ; -- UWN
lin twice_Adv = mkAdv "deux" ; -- UWN
lin twiddle_V2 = mkV2 (mkV "tripoter") ; -- tocheck
lin twig_N = mkN "brindille" feminine ; -- tocheck
lin twig_V2 = mkV2 (mkV "entraver") ; -- tocheck
lin twilight_N = mkN "pénombre" feminine | mkN "crépuscule" masculine | mkN "demi-jour" masculine ; -- tocheck
lin twilit_A = mkA "crépuscule" ; -- UWN
lin twill_N = mkN "armure" ; -- tocheck
lin twin_N = mkN "jumeau" masculine ; -- tocheck
lin twine_N = mkN "torsion" feminine | mkN "ficelle" feminine ; -- tocheck
lin twine_V = mkV "enrouler" ; -- UWN
lin twinjet_N = mkN "biréacteur" ; -- UWN
lin twinkle_V = mkV (mkV "cligner") | mkV (mkV "briller") | mkV (mkV "virevolter") ; -- tocheck
lin twirl_V = mkV "tourbillonner" ; -- UWN
lin twirl_V2 = mkV2 (mkV "tourbillonner") ; -- tocheck
lin twist_N = mkN "torsion" feminine | mkN "twist" masculine ; -- tocheck
lin twist_V2 = mkV2 (mkV "entortiller") ; -- tocheck
lin twisty_A = mkA "tortueux" ; -- UWN
lin twit_N = mkN "crétin" masculine | mkN "crétine" feminine ; -- tocheck
lin twitch_N = mkN "tic" masculine ; -- tocheck
lin twitch_V2 = mkV2 (mkV "spasmer") ; -- tocheck
lin two_faced_A = mkA "fourbe" ; -- tocheck
lin twofold_A = mkA "double" | mkA "normal" ; -- UWN
lin tycoon_N = mkN "magnat" masculine ; -- tocheck
lin tying_N = mkN "fixation" | mkN "ligature" ; -- UWN
lin tyke_N = mkN "bâtard" masculine ; -- tocheck
lin tympanoplasty_N = mkN "tympanoplastie" ; -- UWN
lin tympanum_N = mkN "bouilloire" | mkN "chaudière" | mkN "timbale" | mkN "timbales" ; -- UWN
lin tynemouth_PN = mkPN "Tynemouth" ; -- status=guess src=geonames
lin type_N = mkN "type" masculine | mkN "caractère" masculine ;
lin type_V2 = mkV2 (mkV "taper") ; -- tocheck
lin typeface_N = mkN "caractère" | mkN "face" | mkN "fonte" | mkN "fonte_de_caractères" | mkN "police" | mkN "police_d'écriture" | mkN "police_de_caractères" | mkN "source" | mkN "visage" ; -- UWN
lin typescript_N = mkN "tapuscrit" masculine ; -- tocheck
lin typesetter_N = mkN "typographe" ; -- tocheck
lin typewriter_N = mkN "dactylo" ; -- tocheck
lin typewritten_A = mkA "dactylographié" ; -- tocheck
lin typhoid_N = mkN "Fièvre_typhoïde" | mkN "fièvre_typhoïde" ; -- UWN
lin typhoon_N = mkN "typhon" ; -- tocheck
lin typhus_N = mkN "typhus" masculine ; -- tocheck
lin typical_1_A = variants {} ; --
lin typical_2_A = variants {} ; --
lin typical_3_A = variants {} ; --
lin typical_A = variants {} ; --
lin typing_N = mkN "typage" masculine | mkN "dactylographie" feminine ; -- tocheck
lin typist_N = mkN "dactylo" ; -- tocheck
lin typographer_N = mkN "compositeur" | mkN "typographe" ; -- UWN
lin typographic_A = mkA "typographique" ; -- UWN
lin typography_N = mkN "typographie" feminine ; -- tocheck
lin typology_N = mkN "typologie" ; -- UWN
lin tyramine_N = mkN "Tyramine" | mkN "tyramine" ; -- UWN
lin tyrannicide_N = mkN "tyrannicide" masculine ; -- tocheck
lin tyrannosaur_N = mkN "tyrannosaure" masculine ; -- tocheck
lin tyrannous_A = mkA "tyrannique" ; -- UWN
lin tyranny_N = mkN "tyrannie" feminine ; -- tocheck
lin tyrant_N = mkN "tyran" masculine ; -- tocheck
lin tyre_N = mkN "pneu" masculine ; -- tocheck
lin tyrone_PN = mkPN "Tyrone" ; -- status=guess src=geonames
lin tyrosine_N = mkN "tyrosine" feminine ; -- tocheck
lin tzar_N = mkN "tsar" | mkN "tzar" ; -- UWN
lin tzarina_N = mkN "tsarine" | mkN "tzarine" ; -- UWN
lin uakari_N = mkN "ouakari" ; -- UWN
lin ubiquitous_A = mkA "ubiquiste" ; -- tocheck
lin ubiquity_N = mkN "ubiquité" feminine ; -- tocheck
lin udder_N = mkN "pis" masculine ; -- tocheck
lin uddingston_PN = mkPN "Uddingston" ; -- status=guess src=geonames
lin udi_PN = mkPN "Udi" ; -- status=guess src=geonames
lin udine_PN = mkPN "Udine" ; -- status=guess src=geonames
lin ufa_PN = mkPN "Oufa" ; -- status=guess src=geonames
lin uganda_PN = mkPN "Ouganda" ; -- status=guess src=geonames
lin ugliness_N = mkN "laideur" feminine | mkN "laideur" ; -- tocheck
lin ugly_A = L.ugly_A ;
lin uh_Interj = mkInterj "euh" ; -- tocheck
lin ukase_N = mkN "oukase" ; -- tocheck
lin uke_N = mkN "ukulélé" ; -- UWN
lin ukulele_N = mkN "ukulélé" ; -- UWN
lin ulcer_N = mkN "ulcère" masculine ; -- tocheck
lin ulcerous_A = mkA "ulcéreux" ; -- tocheck
lin ulema_N = mkN "ouléma" | mkN "uléma" ; -- UWN
lin ulna_N = mkN "cubitus" | mkN "os_ulna" | mkN "ulna" ; -- UWN
lin ulnar_A = mkA "ulnaire" ; -- UWN
lin ulster_N = mkN "ulster" ; -- UWN
lin ultimate_A = mkA "dernier" | mkA "ultime" ; -- tocheck
lin ultimatum_N = mkN "ultimatum" masculine ; -- tocheck
lin ultracentrifugation_N = mkN "ultracentrifugation" ; -- UWN
lin ultramarine_A = mkA "outremer" ; -- tocheck
lin ultramarine_N = mkN "outremer" masculine ; -- tocheck
lin ultramontanism_N = mkN "ultramontanisme" ; -- UWN
lin ultrasonic_A = mkA "ultrasonique" ; -- tocheck
lin ultrasound_N = mkN "ultrason" masculine ; -- tocheck
lin ultraviolet_A = mkA "ultraviolet" ; -- tocheck
lin ululation_N = mkN "hurlement" | mkN "youyou" ; -- UWN
lin ulverston_PN = mkPN "Ulverston" ; -- status=guess src=geonames
lin umbel_N = mkN "ombelle" feminine ; -- tocheck
lin umbellifer_N = mkN "ombellifère" feminine ; -- tocheck
lin umbelliferous_A = mkA "ombellifère" ; -- tocheck
lin umber_N = mkN "café" | mkN "chocolat" | mkN "chocolatier" ; -- UWN
lin umbilical_A = mkA "ombilical" ; -- tocheck
lin umbra_N = mkN "ombre" feminine ; -- tocheck
lin umbrage_N = mkN "injure" | mkN "offense" | mkN "ombrage" ; -- UWN
lin umbrella_A = mkA "ombrelle" | mkA "parapluie" ; -- UWN
lin umbrella_N = mkN "parapluie" masculine | mkN "ombrelle" feminine ; -- tocheck
lin umlaut_N = mkN "tréma" ; -- tocheck
lin umpire_N = mkN "arbitre" ; -- UWN
lin umpire_V2 = mkV2 (mkV "arbitrer") ; -- tocheck
lin unable_A = mkA "incapable" ; -- tocheck
lin unacceptable_A = mkA "inacceptable" ; -- tocheck
lin unadulterated_A = mkA "entier" | mkA "parfait" | mkA "pur" ; -- UWN
lin unadvised_A = mkA "malavisé" ; -- tocheck
lin unalienable_A = mkA "inaliénable" ; -- UWN
lin unalike_A = mkA "différent" ; -- UWN
lin unanimity_N = mkN "unanimité" ; -- tocheck
lin unanimous_A = mkA "unanime" ; -- tocheck
lin unapologetic_A = mkA "impénitent" ; -- tocheck
lin unary_A = mkA "unaire" ; -- UWN
lin unashamed_A = mkA "éhonté" ; -- tocheck
lin unassailable_A = mkA "inébranlable" | mkA "pare-balle" | mkA "pare-balles" ; -- UWN
lin unassuming_A = mkA "modeste" ; -- UWN
lin unavailable_A = mkA "indisponible" ; -- tocheck
lin unavoidable_A = mkA "inévitable" ; -- tocheck
lin unaware_A = variants {} ; --
lin unawares_Adv = mkAdv "court" | mkAdv "deçà" ; -- UWN
lin unbearable_A = mkA "invivable" ; -- tocheck
lin unbeatable_A = mkA "imbattable" ; -- tocheck
lin unbelief_N = mkN "incrédulité" feminine ; -- tocheck
lin unbelievable_A = mkA "incroyable" ; -- tocheck
lin unbeliever_N = mkN "incroyant" | mkN "incrédule" ; -- UWN
lin unbelieving_A = mkA "incrédule" ; -- tocheck
lin unbind_V2 = mkV2 (mkV "détacher") ; -- tocheck
lin unbleached_A = mkA "écru" ; -- UWN
lin unblinking_A = mkA "courageux" | mkA "ferme" | mkA "hardi" | mkA "vaillant" ; -- UWN
lin unblushing_A = mkA "effronté" | mkA "impudique" | mkA "éhonté" ; -- UWN
lin unbreakable_A = mkA "incassable" ; -- UWN
lin unbridled_A = mkA "débordant" | mkA "débridé" | mkA "effréné" | mkA "libre" | mkA "échevelé" ; -- UWN
lin unbroken_A = mkA "continu" | mkA "entier" ; -- tocheck
lin uncanny_A = mkA "déroutant" ; -- tocheck
lin uncertain_A = L.uncertain_A ;
lin uncertainty_N = mkN "doute" | mkN "incertitude" ; -- UWN
lin uncertified_A = mkA "incertifié" ; -- UWN
lin unchain_V2 = mkV2 (mkV "déchainer") ; -- tocheck
lin unchanged_A = variants {} ; --
lin unchecked_A = mkA "débordant" | mkA "débridé" | mkA "effréné" | mkA "libre" | mkA "échevelé" ; -- UWN
lin unchristian_A = mkA "inchrétien" ; -- UWN
lin uncivilized_A = mkA "incivilisé" ; -- tocheck
lin uncle_N = mkN "oncle" masculine ; -- tocheck
lin unclear_A = mkA "flou" ; -- tocheck
lin uncolored_A = mkA "incolore" ; -- UWN
lin uncoloured_A = mkA "incolore" ; -- UWN
lin uncomfortable_A = mkA "inconfortable" ; -- tocheck
lin uncompensated_A = mkA "incompensé" ; -- UWN
lin uncomplicated_A = mkA "facile" | mkA "primaire" | mkA "pur" | mkA "simple" | mkA "élémentaire" ; -- UWN
lin uncompromising_A = mkA "impitoyable" ; -- UWN
lin unconditional_A = mkA "inconditionnel" ; -- tocheck
lin unconditioned_A = mkA "inconditionnel" ; -- UWN
lin uncongenial_A = mkA "incompatible" ; -- UWN
lin unconscious_A = mkA "inconscient" ; -- tocheck
lin unconscious_N = mkN "inconscient" ; -- UWN
lin unconsciousness_N = mkN "inconscience" ; -- tocheck
lin unconstitutional_A = mkA "anticonstitutionnel" ; -- tocheck
lin uncontested_A = mkA "incontesté" ; -- UWN
lin uncontrollable_A = mkA "incontrôlable" ; -- tocheck
lin unconvinced_A = mkA "inconvaincu" ; -- UWN
lin uncork_V2 = mkV2 (mkV "déboucher") ; -- tocheck
lin uncouth_A = mkA "rustre" ; -- tocheck
lin uncover_V2 = variants {} ; --
lin uncrannied_A = mkA "lisse" ; -- UWN
lin unction_N = mkN "onction" feminine ; -- tocheck
lin unctuous_A = mkA "huileux" | mkA "obséquieux" | mkA "oléagineux" | mkA "onctueux" ; -- UWN
lin undecagon_N = mkN "undécagone" masculine ; -- tocheck
lin undefended_A = mkA "ouvert" | mkA "ouvrir" ; -- UWN
lin undefined_A = mkA "indéfini" ; -- tocheck
lin undeniable_A = mkA "indéniable" ; -- tocheck
lin undependability_N = mkN "manque_de_fiabilité" | mkN "manque_de_sérieux" ; -- UWN
lin under_Adv = mkAdv "moins" | mkAdv "dessous" ; -- tocheck
lin under_Prep = S.under_Prep ;
lin underage_A = mkA "mineur" ; -- tocheck
lin underbrush_N = mkN "sous-bois" masculine ; -- tocheck
lin undercarriage_N = mkN "atterrisseur" | mkN "train_d'atterrissage" ; -- UWN
lin underclothing_N = mkN "dessous" | mkN "sous-vêtement" ; -- UWN
lin undercoat_N = mkN "sous-couche" feminine ; -- tocheck
lin undercover_A = mkA "secret" | mkA "clandestin" ; -- tocheck
lin underdeveloped_A = mkA "sous-développé" ; -- UWN
lin underdevelopment_N = mkN "sous-développement" ; -- UWN
lin underdog_N = mkN "outsider" masculine ; -- tocheck
lin underdone_A = mkA "bleu" ; -- UWN
lin underestimate_N = mkN "sous-estimation" | mkN "sous-estimer" | mkN "sous-évaluation" ; -- UWN
lin underestimate_V2 = mkV2 (mkV "sous-estimer") ; -- tocheck
lin underestimation_N = mkN "sous-estimation" | mkN "sous-estimer" | mkN "sous-évaluation" ; -- UWN
lin underevaluation_N = mkN "sous-évaluation" ; -- UWN
lin underexpose_V2 = mkV2 (mkV "sous-exposer") ; -- tocheck
lin undergarment_N = mkN "sous-vêtement" masculine ; -- tocheck
lin undergo_V2 = mkV2 (mkV "subir") ; -- tocheck
lin undergraduate_N = mkN "étudiant" ; -- UWN
lin underground_A = mkA "souterrain" | mkA "underground" ; -- tocheck
lin underground_N = mkN "underground" masculine | mkN "résistance" feminine ; -- tocheck
lin undergrowth_N = mkN "broussailles" feminine ; -- tocheck
lin underhand_A = mkA "sournois" ; -- tocheck
lin underline_N = mkN "soulignement" ; -- tocheck
lin underline_V2 = mkV2 (mkV "souligner") ; -- tocheck
lin underling_N = mkN "subordonné" masculine ; -- tocheck
lin underlying_A = mkA "sous-jacent" ; -- tocheck
lin undermentioned_A = mkA "après" | mkA "prochain" | mkA "suivant" ; -- UWN
lin undermine_V2 = mkV2 (mkV "saper") ; -- tocheck
lin underneath_Adv = mkAdv "dessous" ; -- tocheck
lin underneath_Prep = variants {} ; --
lin undernourishment_N = mkN "sous-alimentation" ; -- UWN
lin underpants_N = mkN "caleçon" ; -- tocheck
lin underpass_N = mkN "métro" ; -- UWN
lin underprivileged_A = mkA "défavorisé" ; -- tocheck
lin underproduction_N = mkN "production_déficitaire" | mkN "sous-production" ; -- UWN
lin underrate_V2 = mkV2 (mkV "sous-estimer") ; -- tocheck
lin underscore_N = mkN "exergue" | mkN "souligner" | mkN "évidence" ; -- UWN
lin underscore_V2 = mkV2 (mkV "souligner") ; -- tocheck
lin underside_N = mkN "bas" | mkN "derrière" | mkN "fond" ; -- UWN
lin underskirt_N = mkN "combinaison" | mkN "cotillon" | mkN "jupon" | mkN "sous-jupe" ; -- UWN
lin understand_V = mkV L.understand_V2 ;
lin understand_V2 = L.understand_V2 ;
lin understand_VS = mkVS (mkV L.understand_V2) ;
lin understandable_A = mkA "compréhensible" ; -- tocheck
lin understanding_N = mkN "compréhension" feminine ; -- tocheck
lin understatement_N = mkN "litote" ; -- tocheck
lin understudyFem_N = mkN "doublure" feminine ; -- tocheck ---- sense to be split
lin understudyMasc_N = mkN "doublure" feminine ; -- tocheck ---- sense to be split
lin understudy_N = mkN "doublure" feminine ; -- tocheck
lin understudy_V2 = mkV2 (mkV "doubler") ; -- tocheck
lin undersurface_N = mkN "bas" | mkN "derrière" | mkN "fond" ; -- UWN
lin undertake_V2 = mkV2 (mkV I.entreprendre_V2) ; -- tocheck
lin undertaker_N = mkN "croque-mort" ; -- tocheck
lin undertaking_N = mkN "entreprise" | mkN "projet" ; -- UWN
lin undertone_N = mkN "nuance" feminine | mkN "sous-entendu" feminine ; -- tocheck
lin undertow_N = mkN "ressac" ; -- UWN
lin underwear_N = mkN "sous-vêtement" masculine ; -- tocheck
lin underweight_A = mkA "maigre" ; -- UWN
lin underworld_N = mkN "pègre" feminine | mkN "au-delà" masculine ; -- tocheck
lin underwriter_N = mkN "assureur" | mkN "compagnie_d'assurances" | mkN "société_d'assurance" ; -- UWN
lin undesirable_A = mkA "indésirable" ; -- tocheck
lin undetermined_A = mkA "indéterminé" ; -- UWN
lin undifferentiated_A = mkA "uniforme" ; -- UWN
lin undiluted_A = mkA "pur" ; -- tocheck
lin undine_N = mkN "ondine" ; -- UWN
lin undiscovered_A = mkA "inexploré" ; -- UWN
lin undo_V2 = mkV2 (mkV "annuler") | mkV2 (mkV I.défaire_V2) ; -- tocheck
lin undoer_N = mkN "défaiseur" masculine ; -- tocheck
lin undoubted_A = variants {} ;
lin undress_N = mkN "déshabiller" ; -- UWN
lin undress_V2 = mkV2 (reflV (mkV "déshabiller")) | mkV2 (mkV "déshabiller") ; -- tocheck
lin undrinkable_A = mkA "imbuvable" ; -- tocheck
lin undulate_V = mkV (mkV "onduler") ; -- tocheck
lin unearth_V2 = mkV2 (mkV "déterrer") | mkV2 (mkV I.découvrir_V2) ; -- tocheck
lin unearthly_A = mkA "bizarre" | mkA "déroutant" ; -- UWN
lin unease_N = mkN "inquiétude" ; -- UWN
lin uneasiness_N = mkN "malaise" ; -- tocheck
lin uneasy_A = variants {} ; --
lin uneducated_A = mkA "inculte" ; -- tocheck
lin unemployed_A = variants {} ; --
lin unemployment_N = mkN "chômage" masculine ; -- tocheck
lin unending_A = mkA "permanent" | mkA "perpétuel" | mkA "éternel" ; -- UWN
lin unexampled_A = mkA "autre" | mkA "neuf" | mkA "nouveau" ; -- UWN
lin unexpected_A = mkA "inattendu" ; -- tocheck
lin unexplored_A = mkA "inexploré" ; -- UWN
lin unfair_A = mkA "injuste" ; -- tocheck
lin unfairness_N = mkN "inéquité" | mkN "injustice" feminine ; -- tocheck
lin unfaithfulness_N = mkN "inexactitude" | mkN "infidélité" ; -- UWN
lin unfaltering_A = mkA "déterminé" | mkA "inébranlable" ; -- UWN
lin unfamiliar_A = mkA "inconnu" ; -- tocheck
lin unfamiliarity_N = mkN "étrangeté" ; -- UWN
lin unfashionable_A = mkA "quétaine" ; -- tocheck
lin unfasten_V2 = mkV2 (mkV I.défaire_V2) ; -- tocheck
lin unfathomable_A = mkA "incompréhensible" ; -- tocheck
lin unfathomed_A = mkA "profond" ; -- UWN
lin unfavorable_A = mkA "défavorable" ; -- tocheck
lin unfeelingness_N = mkN "callosité" | mkN "dureté" ; -- UWN
lin unfeigned_A = mkA "authentique" | mkA "réel" | mkA "vrai" ; -- UWN
lin unfermented_A = mkA "doux" | mkA "frais" ; -- UWN
lin unfinished_A = mkA "inachevé" ; -- tocheck
lin unfledged_A = mkA "immature" ; -- UWN
lin unflinching_A = mkA "courageux" | mkA "ferme" | mkA "hardi" | mkA "vaillant" ; -- UWN
lin unfold_V2 = mkV2 (mkV "dérouler") ; -- tocheck
lin unfolding_N = mkN "dépliage" | mkN "déploiement" | mkN "déroulement" ; -- UWN
lin unforbearing_A = mkA "court" ; -- UWN
lin unforeseeable_A = mkA "imprévisibile" ; -- tocheck
lin unforeseen_A = mkA "imprévu" ; -- tocheck
lin unforfeitable_A = mkA "inaliénable" ; -- UWN
lin unforgettable_A = mkA "inoubliable" ; -- tocheck
lin unforgivable_A = mkA "impardonnable" ; -- tocheck
lin unfortunate_A = mkA "malencontreux" | mkA "infortuné" ; -- tocheck
lin unfortunate_N = mkN "infortuné" ; -- UWN
lin unfortunately_Adv = adjAdv unfortunate_A ; -- -- derived
lin unfounded_A = mkA "gratuit" ; -- UWN
lin unfrequented_A = mkA "seul" ; -- UWN
lin unfruitful_A = mkA "infructueux" ; -- tocheck
lin unfulfilled_A = mkA "inaccompli" ; -- UWN
lin unfurl_V = mkV "déferler" | mkV "larguer" | mkV "étendre" ; -- UWN
lin ungainly_A = mkA "maladroit" ; -- UWN
lin ungrammatical_A = mkA "agrammaticale" ; -- tocheck
lin ungrateful_A = mkA "ingrat" ; -- UWN
lin ungratefulness_N = mkN "ingratitude" ; -- UWN
lin unguent_N = mkN "onguent" masculine ; -- tocheck
lin unhappy_A = mkA "malheureux" | mkA "mécontent" ; -- tocheck
lin unharmed_A = mkA "indemne" | mkA "intact" ; -- UWN
lin unheard_of_A = mkA "inouï" ; -- tocheck
lin unhinge_V2 = mkV2 (mkV "déséquilibrer") ; -- tocheck
lin unhorse_V2 = mkV2 (mkV "désarçonner") ; -- tocheck
lin unhurt_A = mkA "indemne" ; -- tocheck
lin unhygienic_A = mkA "antihygiénique" ; -- UWN
lin unicameral_A = mkA "monocaméral" | mkA "unicaméral" ; -- UWN
lin unicellular_A = mkA "unicellulaire" ; -- tocheck
lin unicorn_N = mkN "licorne" feminine ; -- tocheck
lin unicycle_N = mkN "monocycle" masculine ; -- tocheck
lin unicyclist_N = mkN "unicycliste" ; -- tocheck
lin unidirectional_A = mkA "unidirectionnel" ; -- tocheck
lin unification_N = mkN "unification" feminine ; -- tocheck
lin unifoliate_A = mkA "monophylle" ; -- tocheck
lin uniform_A = mkA "uniforme" ; -- tocheck
lin uniform_N = mkN "uniforme" masculine ; -- tocheck
lin uniformity_N = mkN "uniformité" ; -- tocheck
lin unify_V2 = mkV2 (mkV "unifier") ; -- tocheck
lin unilateral_A = mkA "unilatéral" ; -- tocheck
lin unilateralism_N = mkN "unilatéralisme" ; -- tocheck
lin unimaginative_A = mkA "stéréotypé" ; -- UWN
lin unimportant_A = mkA "mineur" ; -- UWN
lin uninfected_A = mkA "nettoyer" | mkA "propre" | mkA "pur" ; -- UWN
lin uninflected_A = mkA "analytique" ; -- UWN
lin uninhabitable_A = mkA "inhabitable" ; -- tocheck
lin uninhabited_A = mkA "inhabité" ; -- tocheck
lin unintelligent_A = mkA "inintelligent" ; -- tocheck
lin unintelligible_A = mkA "inintelligible" ; -- tocheck
lin unintended_A = mkA "involontaire" ; -- tocheck
lin uninterrupted_A = mkA "continu" | mkA "continuel" | mkA "continuous" | mkA "permanent" ; -- UWN
lin union_A = mkA "union" ; -- UWN
lin union_N = mkN "union" feminine | mkN "réunion" feminine ;
lin unionism_N = mkN "syndicalisme" ; -- UWN
lin unionist_N = mkN "syndicaliste" ; -- UWN
lin unipolar_A = mkA "unipolaire" ; -- tocheck
lin unique_A = mkA "unique" ; -- tocheck
lin uniqueness_N = mkN "de_fuite" | mkN "point" | mkN "singularité" | mkN "unicité" ; -- UWN
lin unisex_A = mkA "unisexe" ; -- tocheck
lin unisexual_A = mkA "unisexe" ; -- tocheck
lin unison_N = mkN "unisson" masculine ; -- tocheck
lin unit_1_N = mkN "unité" feminine ; ----
lin unit_2_N = mkN "unité" feminine ; ----
lin unit_3_N = mkN "unité" feminine ; ----
lin unit_4_N = mkN "unité" feminine ; ----
lin unit_5_N = mkN "unité" feminine ; ----
lin unit_6_N = mkN "unité" feminine ; ----
lin unit_N = mkN "unité" feminine ;
lin unitary_A = mkA "unitaire" ; -- tocheck
lin unite_V = variants {} ; -- mkV2 (mkV "unir") ; -- tocheck
lin unite_V2 = mkV2 (mkV "unir") ; -- tocheck
lin united_A = variants {} ; --
lin unity_N = mkN "unité" feminine ; -- tocheck
lin univalent_A = mkA "monovalent" | mkA "univalent" ; -- UWN
lin universal_A = mkA "universel" ; -- tocheck
lin universal_N = mkN "universel" ; -- UWN
lin universalism_N = mkN "mondialisme" ; -- UWN
lin universality_N = mkN "universalité" feminine ; -- tocheck
lin universe_N = mkN "univers" masculine | mkN "Univers" masculine ; -- tocheck
lin university_N = L.university_N ;
lin unjust_A = mkA "injuste" ; -- tocheck
lin unjustified_A = mkA "injustifié" ; -- tocheck
lin unknowable_A = mkA "inconnaissable" ; -- UWN
lin unknowing_A = mkA "ignare" ; -- UWN
lin unknown_A = mkA "inconnu" ; -- tocheck
lin unknown_N = mkN "inconnu" masculine | mkN "inconnue" feminine ; -- tocheck
lin unlawful_A = mkA "illégal" ; -- tocheck
lin unleash_V2 = mkV2 (mkV "déchaîner") ; -- tocheck
lin unleavened_A = mkA "azyme" ; -- UWN
lin unless_Subj = variants {} ; --
lin unlike_A = variants {} ; --
lin unlike_Prep = variants {} ; --
lin unlikelihood_N = mkN "invraisemblance" ; -- UWN
lin unlikely_A = variants {} ; --
lin unlikeness_N = mkN "dissimilitude" ; -- UWN
lin unlimited_A = mkA "illimité" ; -- tocheck
lin unload_V2 = mkV2 (mkV "décharger") ; -- tocheck
lin unlock_V = mkV "ouvrir" ; -- UWN
lin unlock_V2 = mkV2 (mkV "déverrouiller") ; -- tocheck
lin unlucky_A = mkA "malchanceux" ; -- UWN
lin unmanageable_A = mkA "ingérable" ; -- tocheck
lin unmarried_A = mkA "célibataire" ; -- tocheck
lin unmask_V2 = mkV2 (mkV "démasquer") | mkV2 (mkV "révéler") | mkV2 (reflV (mkV "démasquer")) ; -- tocheck
lin unmatched_A = mkA "inégalable" | mkA "un" ; -- UWN
lin unmerciful_A = mkA "impitoyable" ; -- UWN
lin unmingled_A = mkA "clair" | mkA "plaine" ; -- UWN
lin unnatural_A = mkA "artificiel" ; -- tocheck
lin unnecessary_A = mkA "inutile" ; -- tocheck
lin unnerve_V2 = mkV2 (mkV "énerver") ; -- tocheck
lin unobjectionable_A = mkA "nettoyer" | mkA "propre" | mkA "pur" ; -- UWN
lin unobjective_A = mkA "incontrôlable" ; -- UWN
lin unobtainable_A = mkA "introuvable" ; -- tocheck
lin unoccupied_A = mkA "inoccupé" ; -- tocheck
lin unofficial_A = mkA "officieux" ; -- tocheck
lin unopen_A = mkA "clos" | mkA "fermer" | mkA "fermé" ; -- UWN
lin unpack_V = mkV "déballer" ; -- UWN
lin unpack_V2 = mkV2 (mkV "déballer") ; -- tocheck
lin unpalatable_A = mkA "degoutant" ; -- tocheck
lin unpardonable_A = mkA "impardonnable" ; -- tocheck
lin unpatriotic_A = mkA "déloyal" ; -- UWN
lin unpleasant_A = mkA "déplaisant" ; -- tocheck
lin unplug_V2 = mkV2 (mkV "débrancher") ; -- tocheck
lin unplumbed_A = mkA "profond" ; -- UWN
lin unpopular_A = mkA "impopulaire" ; -- UWN
lin unpopularity_N = mkN "impopularité" feminine ; -- tocheck
lin unprecedented_A = variants {} ; --
lin unpredictability_N = mkN "imprévisibilité" ; -- UWN
lin unpredictable_A = mkA "imprévisible" ; -- tocheck
lin unprejudiced_A = mkA "impartial" ; -- UWN
lin unprepossessing_A = mkA "monotone" ; -- tocheck
lin unproductive_A = mkA "improductif" ; -- tocheck
lin unpublished_A = mkA "inédit" ; -- tocheck
lin unquestionable_A = mkA "indiscutable" ; -- tocheck
lin unquestioning_A = mkA "absolu" | mkA "implicite" ; -- UWN
lin unravel_V = mkV "courir" ; -- UWN
lin unravel_V2 = mkV2 (mkV "dénouer") ; -- tocheck
lin unreadable_A = mkA "illisible" ; -- tocheck
lin unreal_A = mkA "irréel" ; -- tocheck
lin unrealistic_A = mkA "irréaliste" ; -- tocheck
lin unrealized_A = mkA "inaccompli" ; -- UWN
lin unreasonable_A = mkA "déraisonnable" | mkA "excessif" ; -- UWN
lin unreasoning_A = mkA "aveugle" ; -- UWN
lin unreassuring_A = mkA "anxiogène" ; -- UWN
lin unrecognizable_A = mkA "méconnaissable" ; -- tocheck
lin unrecoverable_A = mkA "irrécouvrable" | mkA "irrécupérable" ; -- UWN
lin unreformable_A = mkA "obstiné" | mkA "têtu" ; -- UWN
lin unremarkable_A = mkA "acratopège" ; -- tocheck
lin unremitting_A = mkA "inlassable" ; -- tocheck
lin unrequested_A = mkA "spontané" | mkA "volontaire" ; -- UWN
lin unresisting_A = mkA "supin" ; -- UWN
lin unrest_N = mkN "agitation" ; -- tocheck
lin unrighteous_A = mkA "injuste" ; -- UWN
lin unripened_A = mkA "immature" | mkA "vert" ; -- UWN
lin unroll_V = mkV "déferler" | mkV "larguer" | mkV "étendre" ; -- UWN
lin unruffled_A = mkA "calme" | mkA "paisible" | mkA "tranquille" ; -- UWN
lin unruly_A = mkA "indiscipliné" ; -- tocheck
lin unsalable_A = mkA "invendable" ; -- UWN
lin unsaleable_A = mkA "invendable" ; -- UWN
lin unsatisfactory_A = mkA "insatisfaisant" ; -- tocheck
lin unsatisfying_A = mkA "insatisfaisant" ; -- tocheck
lin unsaturated_A = mkA "insaturé" ; -- tocheck
lin unscathed_A = mkA "indemne" | mkA "intact" ; -- UWN
lin unseasoned_A = mkA "nature" ; -- tocheck
lin unselfish_A = mkA "généreux" ; -- tocheck
lin unshakable_A = mkA "inébranlable" | mkA "pare-balle" | mkA "pare-balles" ; -- UWN
lin unshrinking_A = mkA "courageux" | mkA "ferme" | mkA "hardi" | mkA "vaillant" ; -- UWN
lin unsighted_A = mkA "aveugle" ; -- UWN
lin unsightly_A = mkA "disgracieux" ; -- tocheck
lin unsigned_A = mkA "non-signé" ; -- tocheck
lin unsinkable_A = mkA "insubmersible" ; -- tocheck
lin unsociable_A = mkA "insociable" ; -- UWN
lin unsolicited_A = mkA "volontaire" ; -- tocheck
lin unsolvability_N = mkN "insolubilité" ; -- UWN
lin unsophisticated_A = mkA "plouc" ; -- UWN
lin unspeakable_A = mkA "indicible" ; -- tocheck
lin unspecific_A = mkA "général" ; -- UWN
lin unspoilt_A = mkA "bon" | mkA "meilleur" ; -- UWN
lin unspoken_A = mkA "non-dit" ; -- tocheck
lin unstable_A = mkA "instable" ; -- tocheck
lin unsteady_A = mkA "instable" ; -- tocheck
lin unstintingly_Adv = mkAdv "abondamment" | mkAdv "copieusement" | mkAdv "généreusement" ; -- UWN
lin unstoppable_A = mkA "inarrêtable" ; -- tocheck
lin unstressed_A = mkA "inaccentué" ; -- tocheck
lin unsuccessful_A = mkA "infructueux" ; -- tocheck
lin unsuited_A = mkA "incompatible" ; -- UWN
lin unsure_A = mkA "incertain" ; -- tocheck
lin unsurmountable_A = mkA "infranchissable" | mkA "insurmontable" ; -- UWN
lin unsusceptibility_N = mkN "immunité" | mkN "insensible" ; -- UWN
lin unswerving_A = mkA "droit" | mkA "permanent" ; -- UWN
lin unsympathetic_A = mkA "antipathique" ; -- tocheck
lin unsympathizing_A = mkA "incompréhensif" ; -- UWN
lin untainted_A = mkA "immaculé" | mkA "inoxydable" | mkA "propre" | mkA "pur" ; -- UWN
lin untapped_A = mkA "inexploité" ; -- tocheck
lin untarnished_A = mkA "immaculé" | mkA "inoxydable" | mkA "propre" | mkA "pur" ; -- UWN
lin untaxed_A = mkA "franc" ; -- UWN
lin untenable_A = mkA "intenable" ; -- tocheck
lin untested_A = mkA "nature" ; -- UWN
lin unthinkable_A = mkA "inconcevable" | mkA "incroyable" ; -- tocheck
lin untidy_A = mkA "débraillé" | mkA "désordonné" ; -- tocheck
lin untie_V2 = mkV2 (mkV "détacher") ; -- tocheck
lin until_Prep = mkPrep ("jusqu'à ce" ++ Ph.elisQue) ;
lin until_Subj = M.mkSubjSubj ("jusqu'à ce" ++ Ph.elisQue) ;
lin untimely_A = mkA "prématuré" ; -- UWN
lin untiring_A = mkA "assidu" | mkA "bosseur" | mkA "diligent" | mkA "industrieux" | mkA "inlassable" | mkA "laborieux" ; -- UWN
lin untouchable_A = mkA "intouchable" ; -- tocheck
lin untoward_A = mkA "désavantagieuxnocif" | mkA "irrégulierennuyeux" | mkA "inopportundéplacé" ; -- tocheck
lin untranslatable_A = mkA "intraduisible" ; -- tocheck
lin untried_A = mkA "nature" ; -- UWN
lin untrue_A = mkA "faux" ; -- UWN
lin untrustworthy_A = mkA "douteux" ; -- UWN
lin untruth_N = mkN "mensonge" masculine ; -- tocheck
lin untruthful_A = mkA "malhonnête" | mkA "menteur" ; -- tocheck
lin ununbium_N = mkN "ununbium" masculine ; -- tocheck
lin ununhexium_N = mkN "ununhexium" masculine ; -- tocheck
lin ununpentium_N = mkN "ununpentium" masculine ; -- tocheck
lin ununquadium_N = mkN "ununquadium" masculine ; -- tocheck
lin ununtrium_N = mkN "ununtrium" masculine ; -- tocheck
lin unused_A = mkA "inutilisé" ; -- tocheck
lin unusual_A = mkA "inhabituel" ; -- tocheck
lin unvarnished_A = mkA "plaine" ; -- UWN
lin unvarying_A = mkA "uniforme" ; -- UWN
lin unveil_V2 = mkV2 (reflV (mkV "dévoiler")) | mkV2 (mkV "dévoiler") ; -- tocheck
lin unveiling_N = mkN "accès" | mkN "baptême" | mkN "début" | mkN "entrée" | mkN "introduction" | mkN "mise" | mkN "présentation" | mkN "élément" ; -- UWN
lin unwanted_A = variants {} ; --
lin unwavering_A = mkA "inébranlable" ; -- tocheck
lin unwelcome_A = mkA "malvenu" ; -- tocheck
lin unwholesomeness_N = mkN "morbidité" ; -- UWN
lin unwieldy_A = mkA "encombrant" ; -- tocheck
lin unwilling_A = variants {} ; --
lin unwillingness_N = mkN "réticence" | mkN "volonté" ; -- UWN
lin unwind_V = mkV "débander" | mkV "relâcher" ; -- UWN
lin unwind_V2 = mkV2 (mkV "dérouler") | mkV2 (reflV (mkV I.défaire_V2)) | mkV2 (mkV "démêler") | mkV2 (mkV "décompresser") ; -- tocheck
lin unworkable_A = mkA "impraticable" | mkA "infaisable" ; -- UWN
lin unworthy_A = mkA "indigne" ; -- tocheck
lin unwrap_V = mkV "dire" | mkV "divulguer" | mkV "exposer" | mkV "révéler" ; -- UWN
lin unwrap_V2 = mkV2 (mkV "déballer") ; -- tocheck
lin unyielding_A = mkA "inflexible" ; -- tocheck
lin unzip_V2 = mkV2 (mkV "décompresser") ; -- tocheck
lin up_A = mkA "debout" | mkA "partant" ; -- tocheck
lin up_Adv = mkAdv "en haut" ;
lin up_Prep = mkPrep "en haut" ; ----
lin up_to_date_A = variants {} ; --
lin upbraid_V2 = mkV2 (mkV "gronder") ; -- tocheck
lin upbringing_N = mkN "élevage" ; -- UWN
lin update_N = mkN "mettre_à_jour" | mkN "mise_à_jour" ; -- UWN
lin update_V2 = variants {} ; --
lin upgrade_V2 = variants {} ; --
lin upheaval_N = mkN "soulèvement" masculine | mkN "bouleversement" masculine ; -- tocheck
lin uphold_V2 = mkV2 (mkV I.soutenir_V2) ; -- tocheck
lin upholder_N = mkN "moteur_de_croisière" ; -- UWN
lin upholsterer_N = mkN "tapissier" masculine ; -- tocheck
lin upholstery_N = mkN "tapisserie" ; -- tocheck
lin upkeep_N = mkN "entretien" masculine ; -- tocheck
lin uplift_N = mkN "balconnet" | mkN "soulèvement" ; -- tocheck
lin uplift_V2 = mkV2 (mkV "élever") ; -- tocheck
lin upon_Prep = mkPrep "sur" ;
lin upper_A = mkA "supérieur" ; -- tocheck
lin upper_N = mkN "amphétamine" | mkN "rapidité" | mkN "vitesse" ; -- UWN
lin uppercase_A = mkA "majuscule" ; -- UWN
lin uppercut_N = mkN "uppercut" masculine ; -- tocheck
lin uppity_A = mkA "arrogant" ; -- tocheck
lin upright_A = mkA "droit" | mkA "vertical" ; -- UWN
lin upright_N = mkN "piano_droit" ; -- UWN
lin uprightness_N = mkN "aplomb" masculine | mkN "droiture" feminine ; -- tocheck
lin uprising_N = mkN "révolte" feminine ; -- tocheck
lin uproar_N = mkN "clameur" feminine ; -- tocheck
lin upset_A = variants {} ; --
lin upset_N = mkN "renverser" ; -- UWN
lin upset_V = variants {} ; -- mkV2 (mkV "bouleverser") | mkV2 (mkV "énerver") | mkV2 (mkV "renverser") ; -- tocheck
lin upset_V2 = mkV2 (mkV "bouleverser") | mkV2 (mkV "énerver") | mkV2 (mkV "renverser") ; -- tocheck
lin upshot_N = mkN "cause" | mkN "conséquence" | mkN "effet" | mkN "incidence" | mkN "résultat" | mkN "suite" ; -- UWN
lin upsilon_N = mkN "upsilon" masculine ; -- tocheck
lin upstairs_Adv = variants {} ; --
lin upstairs_N = variants {} ; --
lin upstart_A = mkA "parvenu" ; -- UWN
lin upstart_N = mkN "parvenu" masculine ; -- tocheck
lin upstream_A = mkA "amont" ; -- tocheck
lin uptight_A = mkA "coincé" | mkA "nerveux" | mkA "rétif" | mkA "suspens" ; -- UWN
lin uptime_N = mkN "uptime" ; -- UWN
lin upton_PN = mkPN "Upton" ; -- status=guess src=geonames
lin upwards_Adv = variants {} ; --
lin uraninite_N = mkN "uraninite" feminine ; -- tocheck
lin uranium_N = mkN "uranium" masculine ; -- tocheck
lin uranyl_N = mkN "uranyle" masculine ; -- tocheck
lin urban_A = mkA "urbain" ; -- tocheck
lin urbane_A = mkA "urbain" ; -- tocheck
lin urbanity_N = mkN "urbanité" feminine ; -- tocheck
lin urbanization_N = mkN "urbanisation" feminine ; -- tocheck
lin urchin_N = mkN "hérisson" | mkN "gamin" masculine | mkN "garnement" masculine ; -- tocheck
lin urea_N = mkN "urée" feminine ; -- tocheck
lin uremia_N = mkN "urémie" feminine ; -- tocheck
lin ureter_N = mkN "uretère" masculine ; -- tocheck
lin urethra_N = mkN "urètre" masculine ; -- tocheck
lin urge_N = mkN "pulsion" feminine ; -- tocheck
lin urge_V2 = variants {} ; -- mkV2V (mkV "insister") | mkV2V (mkV "pousser") | mkV2V (mkV "inciter") | mkV2V (mkV "provoquer") ; -- tocheck
lin urge_V2V = mkV2V (mkV "insister") | mkV2V (mkV "pousser") | mkV2V (mkV "inciter") | mkV2V (mkV "provoquer") ; -- tocheck
lin urge_VS = variants {} ; -- mkV2V (mkV "insister") | mkV2V (mkV "pousser") | mkV2V (mkV "inciter") | mkV2V (mkV "provoquer") ; -- tocheck
lin urge_on_V2 = prepV2 (lin V OP_urge_V2) OP_on_Prep ; -- guess-p-verb
lin urge_upon_V2 = prepV2 (lin V OP_urge_V2) OP_upon_Prep ; -- guess-p-verb
lin urgency_N = mkN "urgence" feminine ; -- tocheck
lin urgent_A = mkA "urgent" ; -- tocheck
lin uric_A = mkA "urique" ; -- tocheck
lin urinal_N = mkN "urinoir" ; -- tocheck
lin urinary_A = mkA "urinaire" ; -- tocheck
lin urinate_V = mkV (mkV "uriner") ; -- tocheck
lin urine_N = mkN "urine" feminine ; -- tocheck
lin urn_N = mkN "urne" feminine ; -- tocheck
lin urologist_N = mkN "urologue" ; -- tocheck
lin urology_N = mkN "urologie" feminine ; -- tocheck
lin ursinia_N = mkN "ursinia" ; -- UWN
lin uruguay_PN = mkPN "Uruguay" ; -- status=guess src=geonames
lin usable_A = mkA "utilisable" ; -- tocheck
lin usage_N = mkN "coutume" feminine | mkN "usage" masculine ; -- tocheck
lin usance_N = mkN "coutume" | mkN "habitude" | mkN "usage" ; -- UWN
lin use_N = mkN "usage" masculine | mkN "utilité" feminine ; --- split
lin use_V = mkV "utiliser" ;
lin use_V2 = mkV2 "utiliser" ;
lin use_VV = mkVV (mkV "pratiguer") ; ---- what does this mean?
lin use_up_V = mkV "arroser" | mkV "consommer" | mkV "consumer" | mkV "dévorer" | mkV "vider" | mkV "épuiser" ; -- UWN
lin use_up_V2 = prepV2 OP_use_V OP_up_Prep ; -- guess-p-verb
lin useable_A = mkA "disponible" | mkA "utilisable" ; -- UWN
lin used_A = variants {} ; --
lin useful_A = mkA "utile" ; -- tocheck
lin usefulness_N = mkN "utilité" feminine ; -- tocheck
lin useless_A = mkA "inutile" ; -- tocheck
lin uselessness_N = mkN "inutilité" feminine ; -- tocheck
lin userFem_N = variants {} ; ---- sense to be split
lin userMasc_N = mkN "utulisateur" ;
lin usher_N = mkN "huissier" | mkN "escorte" feminine | mkN "ouvreuse" feminine ; -- tocheck
lin usher_V2 = mkV2 (mkV "escorter") ; -- tocheck
lin usherette_N = mkN "ouvreuse" feminine ; -- tocheck
lin usual_A = mkA "habituel/habituelle" ; -- tocheck
lin usufruct_N = mkN "usufruit" ; -- UWN
lin usurer_N = mkN "usurier" masculine ; -- tocheck
lin usurious_A = mkA "usuraire" ; -- tocheck
lin usurp_V2 = mkV2 (mkV "usurper") ; -- tocheck
lin usurpation_N = mkN "usurpation" feminine ; -- tocheck
lin usurper_N = mkN "usurpateur" masculine ; -- tocheck
lin usury_N = mkN "usure" feminine ; -- tocheck
lin utahraptor_N = mkN "utahraptor" ; -- UWN
lin utensil_N = mkN "ustensile" ; -- tocheck
lin uterine_A = mkA "utérin" ; -- tocheck
lin uterus_N = mkN "entrailles" | mkN "matrice" | mkN "moule" | mkN "utérus" | mkN "ventre" ; -- UWN
lin utilitarian_A = mkA "utilitaire" ; -- tocheck
lin utilitarian_N = mkN "utilitariste" ; -- tocheck
lin utilitarianism_N = mkN "utilitarisme" masculine ; -- tocheck
lin utility_N = mkN "utilité" feminine | mkN "utilitaire" masculine ; -- tocheck
lin utilizable_A = mkA "utilisable" ; -- tocheck
lin utmost_N = mkN "maximum" masculine ; -- tocheck
lin utopia_N = mkN "utopie" feminine ; -- tocheck
lin utrecht_PN = mkPN "Utrecht" ; -- status=guess src=geonames
lin utter_A = mkA "absolu" ; -- tocheck
lin utter_V2 = mkV2 (mkV "proférer") | mkV2 (mkV "prononcer") | mkV2 (mkV I.émettre_V2) ; -- tocheck
lin utterance_N = mkN "énoncé" masculine ; -- tocheck
lin utterer_N = mkN "haut-parleur" | mkN "locuteur" | mkN "phraseur" ; -- UWN
lin uttermost_N = mkN "extrême" | mkN "maximum" | mkN "plafond" ; -- UWN
lin uttoxeter_PN = mkPN "Uttoxeter" ; -- status=guess src=geonames
lin uveitis_N = mkN "uvéite" feminine ; -- tocheck
lin uvula_N = mkN "luette" feminine ; -- tocheck
lin uvular_A = mkA "uvulaire" ; -- tocheck
lin uxoricide_N = mkN "uxoricide" ; -- tocheck
lin vacancy_N = mkN "vacance" feminine ; -- tocheck
lin vacant_A = mkA "vide" | mkA "niais" ; -- tocheck
lin vacate_V2 = mkV2 (mkV "vider") ; -- tocheck
lin vacation_N = mkN "vacances" | mkN "vacances" feminine ; -- tocheck
lin vacationer_N = mkN "vacancier" ; -- UWN
lin vacationist_N = mkN "vacancier" ; -- UWN
lin vaccinate_V2 = mkV2 (mkV "vacciner") ; -- tocheck
lin vaccination_N = mkN "vaccination" feminine ; -- tocheck
lin vaccine_N = mkN "vaccin" masculine ; -- tocheck
lin vaccinia_N = mkN "vaccine" ; -- UWN
lin vacillate_V = mkV (mkV "hésiter") | mkV (mkV "vaciller") ; -- tocheck
lin vacuity_N = mkN "imprudence" | mkN "inanité" ; -- UWN
lin vacuole_N = mkN "vacuole" ; -- UWN
lin vacuous_A = mkA "niais" ; -- tocheck
lin vacuum_N = mkN "vide" masculine ; -- tocheck
lin vagabond_N = mkN "vagabond" masculine ; -- tocheck
lin vagile_A = mkA "vagile" ; -- UWN
lin vagina_N = mkN "vagin" masculine ; -- tocheck
lin vaginal_A = mkA "vaginal" ; -- tocheck
lin vaginismus_N = mkN "vaginisme" masculine ; -- tocheck
lin vaginitis_N = mkN "Vaginite" | mkN "vaginite" ; -- UWN
lin vagrancy_N = mkN "vagabondage" masculine ; -- tocheck
lin vagrant_A = mkA "vagabond" ; -- UWN
lin vagrant_N = mkN "erratique" | mkN "vagabond" masculine ; -- tocheck
lin vague_A = mkA "vague" ; -- tocheck
lin vagus_N = mkN "nerf_vague" ; -- UWN
lin vain_A = mkA "frivole" | mkA "vain" | mkA "vaniteux." ; -- tocheck
lin vainglorious_A = mkA "orgueilleux" ; -- tocheck
lin vainglory_N = mkN "orgueil" ; -- UWN
lin valance_N = mkN "corniche" ; -- UWN
lin vale_N = mkN "val" | mkN "vallée" ; -- UWN
lin valediction_N = mkN "adieux" | mkN "adieu" ; -- tocheck
lin valedictorian_N = mkN "major" masculine ; -- tocheck
lin valence_N = mkN "valence" feminine ; -- tocheck
lin valencia_PN = mkPN ("Valencia" | "Valence") ;
lin valenciennes_PN = mkPN "Valenciennes" ; -- status=guess src=geonames
lin valentine_N = mkN "Valentine" ; -- tocheck
lin valerian_N = mkN "valériane" feminine ; -- tocheck
lin valet_N = mkN "valet" | mkN "valet" masculine ; -- tocheck
lin valetudinarian_A = mkA "valétudinaire" ; -- tocheck
lin valetudinarian_N = mkN "hypocondriaque" masculine ; -- tocheck
lin valiant_A = mkA "vaillant" ; -- tocheck
lin valid_A = mkA "valide" ; -- tocheck
lin validate_V2 = mkV2 (mkV "valider") ; -- tocheck
lin validation_N = mkN "corroboration" | mkN "preuve" | mkN "validation" ; -- UWN
lin validity_N = mkN "validité" ; -- tocheck
lin valine_N = mkN "valine" feminine ; -- tocheck
lin valise_N = mkN "valise" feminine ; -- tocheck
lin valladolid_PN = mkPN "Valladolid" ; -- status=guess src=geonames
lin valley_N = mkN "vallée" feminine ; -- tocheck
lin valour_N = mkN "héroïsme" masculine ; -- tocheck
lin valuable_A = mkA "précieux" ; -- tocheck
lin valuable_N = mkN "valeur" ; -- tocheck
lin valuation_N = mkN "notation" | mkN "note" | mkN "évaluation" ; -- UWN
lin value_N = mkN "valeur" feminine ;
lin value_V = variants {} ; --
lin value_V2 = variants {} ; --
lin valve_N = mkN "clapet" masculine ; -- tocheck
lin vampire_N = mkN "vampire" masculine ; -- tocheck
lin van_N = mkN "fourgon" masculine ; -- tocheck
lin vanadinite_N = mkN "vanadinite" ; -- tocheck
lin vanadium_N = mkN "vanadium" masculine ; -- tocheck
lin vancouver_PN = mkPN "Vancouver" ; -- status=guess src=geonames
lin vandal_N = mkN "vandale" masculine ; -- tocheck
lin vandalism_N = mkN "vandalisme" masculine ; -- tocheck
lin vane_N = mkN "pale" feminine ; -- tocheck
lin vanguard_N = mkN "avant-garde" feminine ; -- tocheck
lin vanilla_N = mkN "vanille" feminine ; -- tocheck
lin vanillin_N = mkN "vanilline" feminine ; -- tocheck
lin vanish_V = mkV (mkV I.disparaître_V2) ; -- tocheck
lin vanisher_N = mkN "le_vanisher" | mkN "vanisher" ; -- UWN
lin vanity_N = mkN "vanité" feminine ; -- tocheck
lin vanquish_V2 = mkV2 (mkV I.vaincre_V2) ; -- tocheck
lin vantage_N = mkN "avantage" ; -- UWN
lin vapid_A = mkA "insipide" | mkA "amorphe" ; -- tocheck
lin vapor_N = mkN "vapeur" feminine ; -- tocheck
lin vaporize_V2 = mkV2 (mkV "vaporiser") ; -- tocheck
lin vapour_N = mkN "vapeur" feminine ; -- tocheck
lin varanasi_PN = mkPN "Vârânasî" ; -- status=guess src=geonames
lin variability_N = mkN "variabilité" | mkN "variance" ; -- UWN
lin variable_A = mkA "variable" ; -- tocheck
lin variable_N = mkN "variable" feminine ; -- tocheck
lin variableness_N = mkN "variabilité" | mkN "variance" ; -- UWN
lin variance_N = mkN "variance" feminine ; -- tocheck
lin variant_N = mkN "variante" feminine ; -- tocheck
lin variation_N = mkN "variation" feminine ; -- tocheck
lin varicocele_N = mkN "varicocèle" ; -- UWN
lin varicolored_A = mkA "bigarré" | mkA "multicolore" | mkA "pie" ; -- UWN
lin varicoloured_A = mkA "bigarré" | mkA "multicolore" | mkA "pie" ; -- UWN
lin varied_A = variants {} ; --
lin variegated_A = mkA "bigarré" ; -- tocheck
lin variegation_N = mkN "diversification" ; -- UWN
lin variety_1_N = variants {} ; --
lin variety_2_N = mkN "forme" | mkN "genre" | mkN "sorte" | mkN "type" ; -- UWN
lin variety_N = mkN "variété" feminine ; -- tocheck
lin various_A = mkA "divers" ; -- tocheck
lin varlet_N = mkN "page" ; -- UWN
lin varmint_N = mkN "peste" feminine | mkN "nuisible" masculine ; -- tocheck
lin varna_N = mkN "varna" feminine ; -- tocheck
lin varnish_N = mkN "vernis" masculine | mkN "vernis" ; -- tocheck
lin varnish_V2 = mkV2 (mkV "vernir") ; -- tocheck
lin vary_V = variants {} ; -- mkV2 (mkV "varier") ; -- tocheck
lin vary_V2 = mkV2 (mkV "varier") ; -- tocheck
lin varying_A = variants {} ; --
lin vasculitis_N = mkN "Vascularite" | mkN "vascularite" | mkN "vascularites" ; -- UWN
lin vase_N = mkN "vase" masculine ; -- tocheck
lin vasectomy_N = mkN "vasectomie" ; -- tocheck
lin vaseline_N = mkN "vaseline" feminine ; -- tocheck
lin vasoconstriction_N = mkN "vasoconstricteur" | mkN "vasoconstriction" ; -- UWN
lin vasoconstrictor_N = mkN "vasoconstricteur" ; -- UWN
lin vasodilation_N = mkN "vasodilatation" ; -- UWN
lin vasodilator_N = mkN "vasodilatateur" masculine ; -- tocheck
lin vasovasostomy_N = mkN "vasovasostomie" ; -- UWN
lin vassal_N = mkN "vassal" masculine ; -- tocheck
lin vassalage_N = mkN "servage" ; -- UWN
lin vast_A = mkA "vaste" ; -- tocheck
lin vastness_N = mkN "immensité" ; -- tocheck
lin vat_N = mkN "cuve" feminine ; -- tocheck
lin vaudeville_N = mkN "vaudeville" masculine ; -- tocheck
lin vault_N = mkN "voûte" | mkN "voûte" feminine ; -- tocheck
lin vault_V2 = mkV2 (mkV "bondir") ; -- tocheck
lin vaulter_N = mkN "perchiste" ; -- UWN
lin vaunt_N = mkN "vantardise" feminine ; -- tocheck
lin vaunter_N = mkN "console" | mkN "vantard" ; -- UWN
lin vauntingly_Adv = mkAdv "grand" | mkAdv "gros" ; -- UWN
lin veal_N = mkN "veau" masculine ; -- tocheck
lin vector_N = mkN "vecteur" masculine ; -- tocheck
lin veer_V = mkV (mkV "tourner") ; -- tocheck
lin vegan_N = mkN "végan" masculine ; -- tocheck
lin vegetable_A = mkA "végétal" | mkA "légumier" ; -- tocheck
lin vegetable_N = mkN "légume" masculine | mkN "végétal" masculine ; -- tocheck
lin vegetarianFem_N = mkN "végétarienne" feminine | mkN "herbivore" feminine ; -- tocheck
lin vegetarianMasc_N = mkN "végétarien" masculine | mkN "herbivore" masculine ; -- tocheck
lin vegetarianism_N = mkN "végétarisme" masculine ; -- tocheck
lin vegetation_N = mkN "végétation" feminine ; -- tocheck
lin vehemence_N = mkN "accent" | mkN "véhémence" ; -- UWN
lin vehement_A = mkA "véhément" ; -- tocheck
lin vehicle_N = mkN "véhicule" masculine ; -- tocheck
lin veil_N = mkN "voile" masculine ; -- tocheck
lin veil_V2 = mkV2 (mkV "voiler") ; -- tocheck
lin veiling_N = mkN "gaze" | mkN "voilage" ; -- UWN
lin vein_N = mkN "veine" feminine ; -- tocheck
lin velar_N = mkN "vélaire" feminine ; -- tocheck
lin vellum_N = mkN "vélin" masculine ; -- tocheck
lin velocipede_N = mkN "vélocipèd" | mkN "vélocipède" masculine ; -- tocheck
lin velociraptor_N = mkN "vélociraptor" masculine ; -- tocheck
lin velocity_N = mkN "vitesse" feminine ; -- tocheck
lin velodrome_N = mkN "vélodrome" masculine ; -- tocheck
lin velour_N = mkN "velours" masculine ; -- tocheck
lin velvet_N = mkN "velours" masculine ; -- tocheck
lin venal_A = mkA "vénal" ; -- tocheck
lin vendee_N = mkN "acheteur" | mkN "acquéreur" | mkN "client" | mkN "possesseur" ; -- UWN
lin vender_N = mkN "adjudicateur" | mkN "colporteur" | mkN "commerçant" | mkN "marchand" | mkN "mercaticien" | mkN "trafiquant" | mkN "vendeur" ; -- UWN
lin vendetta_N = mkN "vendetta" feminine ; -- tocheck
lin vending_N = mkN "distribution_automatique" ; -- UWN
lin vendor_N = mkN "vendeur" ; -- tocheck
lin veneer_N = mkN "vernis" masculine | mkN "placage" masculine ; -- tocheck
lin veneer_V2 = mkV2 (mkV "vernir") ; -- tocheck
lin venerate_V2 = mkV2 (mkV "vénérer") ; -- tocheck
lin veneration_N = mkN "vénération" feminine ; -- tocheck
lin venereal_A = mkA "vénérien" ; -- tocheck
lin venereologistFem_N = variants {} ; ---- sense to be split
lin venereologistMasc_N = variants {} ; ---- sense to be split
lin venezuela_PN = mkPN "Venezuela" ; -- status=guess src=geonames
lin vengeance_N = mkN "vengeance" feminine ; -- tocheck
lin vengeful_A = mkA "vindicatif" ; -- tocheck
lin venice_PN = mkPN "Venise" ; -- status=guess src=geonames
lin venipuncture_N = mkN "prélèvement_sanguin" ; -- UWN
lin venom_N = mkN "venin" masculine ; -- tocheck
lin venomous_A = mkA "vénéneux" ; -- tocheck
lin vent_N = mkN "cloaque" | mkN "cheminée" ; -- tocheck
lin vent_V2 = mkV2 (mkV "ventiler") ; -- tocheck
lin ventilation_N = mkN "aération" feminine ; -- tocheck
lin ventilator_N = mkN "ventilateur" masculine | mkN "respirateur" masculine ; -- tocheck
lin ventnor_PN = mkPN "Ventnor" ; -- status=guess src=geonames
lin ventral_A = mkA "ventral" ; -- tocheck
lin ventriloquism_N = mkN "ventriloquie" feminine ; -- tocheck
lin ventriloquist_N = mkN "ventriloque" ; -- tocheck
lin venture_N = variants {} ; --
lin venture_V = mkV "embarquer" ; -- UWN
lin venture_V2 = mkV2 (reflV (mkV "aventurer")) ; -- tocheck
lin venture_VS = mkvVS "embarquer" ; -- UWN
lin venturesome_A = mkA "audacieux" | mkA "courageux" | mkA "hardi" | mkA "vaillant" ; -- UWN
lin venturous_A = mkA "audacieux" | mkA "courageux" | mkA "hardi" | mkA "vaillant" ; -- UWN
lin venue_N = mkN "lieu" masculine ; -- tocheck
lin venus_PN = mkPN "Venus" ; -- status=guess src=geonames
lin vera_PN = mkPN "Vera" ; -- status=guess src=geonames
lin veracity_N = mkN "véracité" feminine ; -- tocheck
lin veranda_N = mkN "véranda" feminine ; -- tocheck
lin verandah_N = mkN "galerie" | mkN "véranda" ; -- UWN
lin verb_N = mkN "verbe" masculine ; -- tocheck
lin verbal_A = mkA "oral" | mkA "verbal" ; -- tocheck
lin verbatim_Adv = mkAdv "mot_pour_mot" | mkAdv "mot_à_mot" | mkAdv "texto" ; -- UWN
lin verbena_N = mkN "verveine" feminine ; -- tocheck
lin verbiage_N = mkN "verbiage" ; -- tocheck
lin verbose_A = mkA "verbeux" ; -- tocheck
lin verdant_A = mkA "vert" ; -- tocheck
lin verdict_N = variants {} ; --
lin verdigris_N = mkN "vert-de-gris" masculine ; -- tocheck
lin verger_N = mkN "appariteur" | mkN "bedeau" ; -- UWN
lin veridical_A = mkA "réel" ; -- UWN
lin verifiable_A = mkA "vérifiable" ; -- tocheck
lin verification_N = mkN "vérification" feminine ; -- tocheck
lin verisimilitude_N = mkN "verisimilitude" feminine ; -- tocheck
lin vermicelli_N = mkN "vermicelle" feminine ; -- tocheck
lin vermicular_A = mkA "vermiculé" ; -- tocheck
lin vermiculate_A = mkA "vermiculé" ; -- tocheck
lin vermilion_A = mkA "vermillon" | mkA "vermeil" ; -- tocheck
lin vermilion_N = mkN "vermeil" | mkN "écarlate" ; -- UWN
lin vermin_N = mkN "vermine" feminine ; -- tocheck
lin vermouth_N = mkN "vermouth" masculine ; -- tocheck
lin vernacular_A = mkA "commun" | mkA "dialecte" | mkA "vulgaire" ; -- UWN
lin vernacular_N = mkN "vernaculaire" masculine | mkN "dialecte" masculine ; -- tocheck
lin vernal_A = mkA "vernal" ; -- tocheck
lin vernation_N = mkN "vernation" ; -- UWN
lin vernon_PN = mkPN "Vernon" ; -- status=guess src=geonames
lin verona_PN = mkPN "Vérone" ; -- status=guess src=geonames
lin veronica_N = mkN "véronique" feminine ; -- tocheck
lin verruca_N = mkN "verrue" feminine ; -- tocheck
lin verrucose_A = mkA "verruqueux" ; -- UWN
lin versatile_A = mkA "versatile" | mkA "polyvalent" ; -- tocheck
lin versatility_N = mkN "polyvalent" ; -- tocheck
lin verse_N = mkN "verset" masculine | mkN "couplet" masculine | mkN "vers" masculine ; -- tocheck
lin versed_A = mkA "intime" | mkA "savant" ; -- UWN
lin versify_V = mkV "versifier" ; -- UWN
lin version_N = mkN "version" feminine ; -- tocheck
lin verso_N = mkN "verso" masculine ; -- tocheck
lin verst_N = mkN "verste" feminine ; -- tocheck
lin versus_Prep = variants {} ; --
lin vertebra_N = mkN "vertèbre" masculine ; -- tocheck
lin vertebrate_A = mkA "vertébré" ; -- tocheck
lin vertebrate_N = mkN "vertébré" masculine ; -- tocheck
lin vertex_N = mkN "sommet" | mkN "sommet" masculine ; -- tocheck
lin vertical_A = mkA "vertical" ; -- tocheck
lin vertical_N = mkN "vertical" ; -- UWN
lin verticil_N = mkN "verticille" ; -- UWN
lin vertiginous_A = mkA "vertigineux" ; -- tocheck
lin vertigo_N = mkN "vertige" masculine ; -- tocheck
lin very_A = mkA "identique" | mkA "même" | mkA "très" ; -- UWN
lin very_AdA = S.very_AdA ;
lin vesicular_A = mkA "vésiculaire" ; -- UWN
lin vespers_N = mkN "vêpres" ; -- UWN
lin vessel_N = mkN "récipient" masculine | mkN "vaisseau" masculine ; -- tocheck
lin vest_N = mkN "gilet" masculine ; -- tocheck
lin vestibule_N = mkN "vestibule" masculine ; -- tocheck
lin vestige_N = mkN "vestige" masculine ; -- tocheck
lin vestigial_A = mkA "vestigial" ; -- tocheck
lin vestment_N = mkN "paramentique" ; -- UWN
lin vestry_N = mkN "sacristie" ; -- UWN
lin vesture_N = mkN "habillement" | mkN "tenue" | mkN "vêtement" ; -- UWN
lin vesuvianite_N = mkN "vésuvianite" ; -- UWN
lin vet_N = mkN "veto" masculine ; -- tocheck
lin vet_V2 = mkV2 (mkV "vérifier") ; -- tocheck
lin vetch_N = mkN "vesce" feminine ; -- tocheck
lin veteran_N = mkN "vétéran" masculine ; -- tocheck
lin veterinarian_N = mkN "vétérinaire" ; -- tocheck
lin veterinary_A = mkA "vétérinaire" ; -- UWN
lin veto_N = mkN "veto" masculine ; -- tocheck
lin veto_V = mkV "interdire" | mkV "prohiber" ; -- UWN
lin vex_V2V = mkV2V (mkV "vexer") | mkV2V (mkV "ennuyer") ; -- tocheck
lin vexation_N = mkN "agacement" | mkN "embêtant" | mkN "irritation" ; -- UWN
lin vexatious_A = mkA "agaçant" | mkA "embêtant" | mkA "ennuyeux" | mkA "gênant" | mkA "pénible" ; -- UWN
lin via_Prep = variants {} ; --
lin via_media_N = mkN "compromis" ; -- UWN
lin viable_A = mkA "viable" ; -- tocheck
lin viaduct_N = mkN "viaduc" masculine ; -- tocheck
lin vial_N = mkN "fiole" feminine ; -- tocheck
lin vibraphone_N = mkN "vibraphone" ; -- tocheck
lin vibrate_V2 = mkV2 (mkV "vibrer") ; -- tocheck
lin vibration_N = mkN "daniel" ; -- tocheck
lin vibrato_N = mkN "vibrato" ; -- tocheck
lin vibrator_N = mkN "vibromasseur" masculine | mkN "vibreur" masculine ; -- tocheck
lin vibrio_N = mkN "vibrio" ; -- UWN
lin vic_PN = mkPN "Vic" ; -- status=guess src=geonames
lin vicar_N = mkN "vicaire" masculine ; -- tocheck
lin vicarage_N = mkN "presbytère" ; -- UWN
lin vicarious_A = mkA "indirect" ; -- tocheck
lin vice_N = mkN "vice" masculine ; -- tocheck
lin vice_president_N = variants {} ; --
lin vicenza_PN = mkPN "Vicence" ; -- status=guess src=geonames
lin vicereine_N = mkN "vice-roi" ; -- UWN
lin viceroy_N = mkN "vice-roi" masculine ; -- tocheck
lin viceroyalty_N = mkN "vice-royauté" ; -- UWN
lin vicinal_A = mkA "vicinal" ; -- tocheck
lin vicinity_N = mkN "vicinité" feminine | mkN "voisinage" masculine ; -- tocheck
lin vicious_A = mkA "empoisonnant" | mkA "venimeux" | mkA "vicieux" ; -- UWN
lin viciousness_N = mkN "brutalité" | mkN "fureur" ; -- UWN
lin vicissitude_N = mkN "vicissitude" feminine ; -- tocheck
lin victim_N = mkN "victime" feminine | mkN "victime" ; -- tocheck
lin victimization_N = mkN "exploitation" ; -- UWN
lin victimize_V2 = mkV2 (mkV "victimer") ; -- tocheck
lin victor_N = mkN "capitaine" | mkN "commandant" | mkN "maître" | mkN "supérieur" ; -- UWN
lin victor_PN = mkPN "Victor" ; -- status=guess src=geonames
lin victoria_PN = mkPN "Victoria" ; -- status=guess src=geonames
lin victorious_A = mkA "victorieux" ; -- tocheck
lin victory_N = mkN "victoire" feminine ; -- tocheck
lin victual_N = mkN "comestible" ; -- UWN
lin vicuna_N = mkN "vigogne" masculine ; -- tocheck
lin videlicet_Adv = mkAdv "c'est-à-dire" | mkAdv "est-à-dire" | mkAdv "nommément" ; -- UWN
lin video_N = mkN "vidéo" feminine ; -- tocheck
lin video_taped_A = variants {} ; --
lin videocassette_N = mkN "vidéocassette" feminine ; -- tocheck
lin videotape_N = mkN "bande_vidéo" ; -- UWN
lin vie_V = mkV (mkV I.concourir_V2) ; -- tocheck
lin vienna_PN = mkPN "Vienne" ; -- status=guess src=geonames
lin vietnam_PN = mkPN "Vietnam" ; -- status=guess src=geonames
lin view_1_N = mkN "vue" ;
lin view_2_N = mkN "vue" ;
lin view_N = mkN "vue" feminine ;
lin view_V2 = mkV2 (mkV "regarder") ; -- tocheck
lin viewer_N = mkN "visionneur" masculine | mkN "spectateur" masculine | mkN "téléspectateur" masculine ; -- tocheck
lin viewfinder_N = mkN "viseur" masculine ; -- tocheck
lin viewpoint_N = mkN "point_de_vue" ; -- UWN
lin vigil_N = mkN "garde" | mkN "montre" | mkN "observation" ; -- UWN
lin vigilance_N = mkN "vigilance" feminine ; -- tocheck
lin vigilant_A = mkA "vigilant" ; -- tocheck
lin vigilante_N = mkN "vigilante" masculine ; -- tocheck
lin vigo_PN = mkPN "Vigo" ; -- status=guess src=geonames
lin vigorous_A = mkA "actif" ; -- UWN
lin vigour_N = mkN "force" feminine | mkN "vigueur" feminine ; -- tocheck
lin vile_A = mkA "vil" ; -- tocheck
lin vilify_V2 = mkV2 (mkV "calomnier") ; -- tocheck
lin villa_N = mkN "villa" feminine ; -- tocheck
lin village_N = L.village_N ;
lin villager_N = mkN "villageois" masculine ; -- tocheck
lin villain_N = mkN "vilain" masculine | mkN "méchant" masculine | mkN "scélérat" ; -- tocheck
lin villainous_A = mkA "malfaisant" | mkA "scélérat" ; -- UWN
lin villein_N = mkN "esclave" | mkN "serf" ; -- UWN
lin vinaceous_A = mkA "vineux" ; -- UWN
lin vinaigrette_N = mkN "vinaigrette" feminine ; -- tocheck
lin vincent_PN = mkPN "Vincent" ; -- status=guess src=geonames
lin vindicate_V2 = mkV2 (mkV "revendiquer") | mkV2 (mkV "blanchir") | mkV2 (mkV I.défendre_V2) | mkV2 (mkV "justifier") ; -- tocheck
lin vindication_N = mkN "justification" ; -- tocheck
lin vindictive_A = mkA "vindicatif" ; -- tocheck
lin vine_N = mkN "vigne" feminine ; -- tocheck
lin vinegar_N = mkN "vinaigre" masculine ; -- tocheck
lin vinery_N = mkN "vigne" | mkN "vignoble" ; -- UWN
lin vineyard_N = mkN "vignoble" masculine ; -- tocheck
lin vinification_N = mkN "vinification" ; -- UWN
lin vinous_A = mkA "vineux" ; -- UWN
lin vintage_N = mkN "récolte" feminine ; -- tocheck
lin vintner_N = mkN "vinificateur" masculine ; -- tocheck
lin vinyl_N = mkN "vinyle" masculine ; -- tocheck
lin viol_N = mkN "viole" | mkN "viole_de_gambe" ; -- UWN
lin viola_N = mkN "alto" ; -- tocheck
lin viola_PN = mkPN "Viola" ; -- status=guess src=geonames
lin violate_V2 = mkV2 (mkV "violer") ; -- tocheck
lin violation_N = mkN "infraction" feminine ; -- tocheck
lin violence_N = mkN "violence" feminine ; -- tocheck
lin violent_A = mkA "vif" | mkA "violent" ; -- tocheck
lin violet_N = mkN "violette" feminine | mkN "violet" ; -- tocheck
lin violet_PN = mkPN "Violet" ; -- status=guess src=geonames
lin violin_N = mkN "violon" masculine ; -- tocheck
lin violinistFem_N = mkN "violoniste" feminine ; -- tocheck
lin violinistMasc_N = mkN "violoniste" masculine ; -- tocheck
lin violistFem_N = mkN "altiste" ; -- UWN
lin violistMasc_N = mkN "altiste" ; -- UWN
lin viper_N = mkN "vipère" feminine ; -- tocheck
lin virago_N = mkN "amazone" ; -- UWN
lin viral_A = mkA "viral" ; -- UWN
lin vireo_N = mkN "viréo" masculine ; -- tocheck
lin virga_N = mkN "virga" ; -- UWN
lin virgin_A = mkA "propre" | mkA "pur" | mkA "vertueux" | mkA "vierge" ; -- UWN
lin virgin_N = mkN "vierge" feminine ; -- tocheck
lin virginal_A = mkA "virginal" ; -- tocheck
lin virginal_N = mkN "virginal" masculine ; -- tocheck
lin virginia_PN = mkPN "Virginia" ; -- status=guess src=geonames
lin virginity_N = mkN "virginité" feminine ; -- tocheck
lin virgule_N = mkN "accident_vasculaire_cérébral" | mkN "barre_oblique" | mkN "coup" | mkN "diagonale" ; -- UWN
lin virile_A = mkA "viril" ; -- tocheck
lin virility_N = mkN "virilité" feminine ; -- tocheck
lin virion_N = mkN "virion" masculine ; -- tocheck
lin viroid_N = mkN "Viroïde" | mkN "viroid" | mkN "viroïde" | mkN "viroïdes" ; -- UWN
lin virologist_N = mkN "virologue" ; -- tocheck
lin virology_N = mkN "virologie" feminine ; -- tocheck
lin virtual_A = mkA "virtuel" ; -- tocheck
lin virtue_N = mkN "vertu" feminine ; -- tocheck
lin virtuoso_N = mkN "virtuose" ; -- tocheck
lin virtuous_A = mkA "vertueux" ; -- tocheck
lin virulent_A = mkA "virulent" ; -- tocheck
lin virus_N = mkN "virus" masculine ; -- tocheck
lin visa_N = mkN "visa" masculine ; -- tocheck
lin viscoelastic_A = mkA "viscoélastique" ; -- tocheck
lin viscometer_N = mkN "viscosimètre" masculine ; -- tocheck
lin viscosity_N = mkN "viscosité" feminine ; -- tocheck
lin viscount_N = mkN "vicomte" masculine ; -- tocheck
lin viscous_A = mkA "visqueux" ; -- tocheck
lin vise_N = mkN "étau" masculine ; -- tocheck
lin visibility_N = mkN "visibilité" feminine ; -- tocheck
lin visible_A = mkA "visible" ; -- tocheck
lin vision_N = mkN "vision" feminine | mkN "aspiration" feminine ; -- tocheck
lin visionary_N = mkN "Pleasanton" | mkN "prophète" | mkN "voyant" ; -- UWN
lin visit_N = mkN "consultation" feminine | mkN "visite" feminine ; -- tocheck
lin visit_V = variants {} ; -- mkV2V (mkV "visiter") ; -- tocheck
lin visit_V2 = variants {} ; -- mkV2V (mkV "visiter") ; -- tocheck
lin visitant_N = mkN "visiteur" ; -- UWN
lin visitor_N = mkN "invité" masculine | mkN "visiteur" masculine ; -- tocheck
lin visor_N = mkN "visière" feminine ; -- tocheck
lin vista_N = mkN "vue" feminine ; -- tocheck
lin visual_A = mkA "visuel" ; -- tocheck
lin visualization_N = mkN "visualisation" feminine ; -- tocheck
lin vital_A = mkA "vital" ; -- tocheck
lin vitalism_N = mkN "vitalisme" ; -- UWN
lin vitality_N = mkN "vitalité" feminine ; -- tocheck
lin vitamin_N = mkN "vitamine" feminine ; -- tocheck
lin viticulture_N = mkN "viticulture" feminine ; -- tocheck
lin vitiligo_N = mkN "vitiligo" ; -- UWN
lin vitreous_A = mkA "vitreux" ; -- tocheck
lin vitrify_V2 = mkV2 (mkV "vitrifier") ; -- tocheck
lin vitriolic_A = mkA "corrosif" ; -- UWN
lin vituperation_N = mkN "désapprobation" feminine ; -- tocheck
lin vituperative_A = mkA "acerbe" | mkA "cinglant" ; -- UWN
lin viva_N = mkN "oral" ; -- UWN
lin viva_voce_N = mkN "oral" ; -- UWN
lin vivacious_A = mkA "vivace" ; -- tocheck
lin vivacity_N = mkN "vivacité" feminine ; -- tocheck
lin vivarium_N = mkN "vivarium" masculine ; -- tocheck
lin vivian_PN = mkPN "Vivian" ; -- status=guess src=geonames
lin vivid_A = mkA "vivide" ; -- tocheck
lin vividness_N = mkN "intensité" | mkN "saturation" ; -- UWN
lin vivification_N = mkN "animation" ; -- UWN
lin viviparous_A = mkA "vivipare" ; -- tocheck
lin vivisection_N = mkN "vivisection" feminine ; -- tocheck
lin vixen_N = mkN "renarde" feminine | mkN "chipie" feminine ; -- tocheck
lin vizier_N = mkN "vizir" ; -- tocheck
lin vocable_N = mkN "spoken_word" ; -- UWN
lin vocabulary_N = mkN "vocabulaire" masculine | mkN "lexique" feminine ; -- tocheck
lin vocal_A = mkA "vocal" ; -- tocheck
lin vocalist_N = mkN "chanteur" | mkN "chanteuse" | mkN "singer" ; -- UWN
lin vocation_N = mkN "vocation" feminine ; -- tocheck
lin vocational_A = variants {} ; --
lin vocative_A = mkA "vocatif" | mkA "vocationnel" ; -- tocheck
lin vocative_N = mkN "vocatif" ; -- UWN
lin vociferate_V = mkV "clamer" | mkV "crier" | mkV "hurler" | mkV "vociférer" ; -- UWN
lin vociferation_N = mkN "vocifération" feminine ; -- tocheck
lin vodka_N = mkN "vodka" feminine ; -- tocheck
lin vogue_N = mkN "vogue" feminine ; -- tocheck
lin voice_N = mkN "voix" feminine ;
lin voice_V2 = mkV2 (mkV "exprimer") ; -- tocheck
lin voiceless_A = mkA "sourd" ; -- tocheck
lin voicing_N = mkN "voisement" ; -- UWN
lin void_A = mkA "nul" ; -- tocheck
lin void_N = mkN "vide" masculine ; -- tocheck
lin void_V2 = mkV2 (mkV "annuler") ; -- tocheck
lin volatile_A = mkA "volatil" ; -- tocheck
lin volcanic_A = mkA "volcanique" ; -- tocheck
lin volcanism_N = mkN "volcanisme" masculine ; -- tocheck
lin volcano_N = mkN "volcan" masculine ; -- tocheck
lin volcanology_N = mkN "volcanologie" feminine ; -- tocheck
lin vole_N = mkN "campagnol" masculine ; -- tocheck
lin volgograd_PN = mkPN "Volgograd" ; -- status=guess src=geonames
lin volitional_A = mkA "volitionnel" ; -- UWN
lin volley_N = mkN "volée" feminine ; -- tocheck
lin volleyball_N = mkN "volley-ball" ; -- tocheck
lin volt_N = mkN "volt" masculine ; -- tocheck
lin voltage_N = mkN "tension" feminine ; -- tocheck
lin voltmeter_N = mkN "voltmètre" masculine ; -- tocheck
lin volubility_N = mkN "bagou" ; -- UWN
lin volume_N = mkN "volume" masculine ; -- tocheck
lin voluminous_A = mkA "abondant" | mkA "ample" | mkA "copieux" | mkA "large" | mkA "plantureux" | mkA "profus" | mkA "étendu" ; -- UWN
lin voluntary_A = mkA "volontaire" | mkA "bénévole" ; -- tocheck
lin voluntary_N = mkN "volontaire" ; -- UWN
lin volunteerFem_N = mkN "volontaire" feminine ; -- tocheck
lin volunteerMasc_N = mkN "volontaire" masculine ;
lin volunteer_V = variants {} ; --
lin volunteer_V2 = variants {} ; --
lin voluptuary_N = mkN "sybarite" ; -- UWN
lin voluptuous_A = mkA "sensuel" ; -- tocheck
lin volva_N = mkN "volve" ; -- UWN
lin volvulus_N = mkN "Volvulus" | mkN "volvulus" ; -- UWN
lin vomit_N = mkN "vomi" masculine ; -- tocheck
lin vomit_V = L.vomit_V ;
lin vomit_V2 = mkV2 (mkV "vomir") ; -- tocheck
lin voodoo_N = mkN "vaudou" ; -- tocheck
lin voodooism_N = mkN "vaudou" ; -- UWN
lin voracious_A = mkA "vorace" ; -- tocheck
lin voronezh_PN = mkPN "Voronej" ; -- status=guess src=geonames
lin vortex_N = mkN "tourbillon" | mkN "vortex" ; -- UWN
lin vote_N = mkN "vote" masculine | mkN "voix" feminine ; -- tocheck
lin vote_V = variants {} ; -- mkV2 (mkV "voter") ; -- tocheck
lin vote_V2 = mkV2 (mkV "voter") ; -- tocheck
lin vote_V3 = variants {} ; -- mkV2 (mkV "voter") ; -- tocheck
lin vote_VV = variants {} ; -- mkV2 (mkV "voter") ; -- tocheck
lin vote_down_V = advV OP_vote_V OP_down_Adv ; -- guess-p-verb
lin voteless_A = mkA "défavorisé" ; -- UWN
lin voter_N = mkN "votant" ; -- tocheck
lin votive_A = mkA "votif" ; -- tocheck
lin vouch_V = mkV (mkV "attester") | mkV (mkV "entériner") ; -- tocheck
lin voucher_N = mkN "coupon" | mkN "récépissé" masculine ; -- tocheck
lin vow_N = mkN "voeu" masculine ; -- tocheck
lin vow_V2 = mkV2 (mkV "jurer") ; -- tocheck
lin vowel_N = mkN "voyelle" feminine ; -- tocheck
lin vox_N = mkN "phonation" | mkN "voix" ; -- UWN
lin vox_populi_N = mkN "avis" | mkN "opinion" | mkN "opinion_publique" | mkN "vox_populi" ; -- UWN
lin voyage_N = mkN "voyage" masculine ; -- tocheck
lin voyeur_N = mkN "voyeur" masculine ; -- tocheck
lin voyeurism_N = mkN "voyeurisme" masculine ; -- tocheck
lin vulcanite_N = mkN "ébonite" ; -- UWN
lin vulcanization_N = mkN "vulcanisation" feminine ; -- tocheck
lin vulcanize_V2 = mkV2 (mkV "vulcaniser") ; -- tocheck
lin vulgar_A = mkA "vulgaire" ; -- tocheck
lin vulgarity_N = mkN "grossièreté" feminine | mkN "vulgarité" feminine ; -- tocheck
lin vulgarizer_N = mkN "vulgarisateur" ; -- UWN
lin vulnerability_N = mkN "vulnérabilité" ; -- tocheck
lin vulnerable_A = mkA "vulnérable" ; -- tocheck
lin vulpine_A = mkA "vulpin" ; -- tocheck
lin vulture_N = mkN "charognard" masculine | mkN "vautour" masculine ; -- tocheck
lin vulva_N = mkN "vulve" feminine ; -- tocheck
lin vulvar_A = mkA "vulvaire" ; -- UWN
lin vulvectomy_N = mkN "vulvectomie" feminine ; -- tocheck
lin vulvitis_N = mkN "vulvite" feminine ; -- tocheck
lin wad_N = mkN "tampon" masculine | mkN "décharge" feminine | mkN "bourre" feminine | mkN "paquet" masculine ; -- tocheck
lin wadding_N = mkN "conditionnement" | mkN "emballage" ; -- UWN
lin waddle_V = mkV (reflV (mkV "dandiner")) ; -- tocheck
lin wade_V2 = mkV2 (mkV "patauger") ; -- tocheck
lin wadi_N = mkN "oued" masculine ; -- tocheck
lin wafer_N = mkN "wafer" feminine | mkN "hostie" feminine | mkN "gaufre" feminine ; -- tocheck
lin waffle_N = mkN "gaufre" feminine ; -- tocheck
lin waffle_V2 = mkV2 (mkV "gaufre") ; -- tocheck
lin waft_N = mkN "fanion" ; -- UWN
lin wag_N = mkN "agiter" | mkN "remuer" | mkN "secouer" ; -- UWN
lin wag_V2 = mkV2 (mkV "sécher") | mkV2 (mkV "frétiller") ; -- tocheck
lin wage_N = mkN "salaire" masculine ; -- tocheck
lin wage_V2 = mkV2 (mkV "mener") ; -- tocheck
lin wager_N = mkN "pari" masculine | mkN "mise" feminine ; -- tocheck
lin wager_V2 = mkV2 (mkV "parier") ; -- tocheck
lin wages_N = mkN "gaine" | mkN "récompenser" | mkN "salaire" ; -- UWN
lin waggoner_N = mkN "wagoner" ; -- UWN
lin wagon_N = mkN "charrette" feminine ; -- tocheck
lin wagoner_N = mkN "wagoner" ; -- UWN
lin wagtail_N = mkN "hochequeue" masculine ; -- tocheck
lin waif_N = mkN "môme" ; -- UWN
lin wail_V2 = mkV2 (mkV "vagir") ; -- tocheck
lin wainscot_N = mkN "panneau" ; -- UWN
lin wainscoting_N = mkN "panneau" ; -- UWN
lin waist_N = mkN "taille" feminine ; -- tocheck
lin waistband_N = mkN "élastique" masculine ; -- tocheck
lin waistcoat_N = mkN "gilet" masculine ; -- tocheck
lin waistline_N = mkN "ceinture" | mkN "taille" ; -- UWN
lin wait_N = mkN "attente" feminine ; -- tocheck
lin wait_V = mkV "attendre" ;
lin wait_V2 = L.wait_V2 ;
lin wait_VV = deVV (reflV (mkV "attendre")) ;
lin wait_about_V = advV OP_wait_V OP_about_Adv ; -- guess-p-verb
lin wait_around_V = advV OP_wait_V OP_around_Adv ; -- guess-p-verb
lin wait_behind_V = advV OP_wait_V OP_behind_Adv ; -- guess-p-verb
lin wait_in_V = advV OP_wait_V OP_in_Adv ; -- guess-p-verb
lin wait_on_V2 = prepV2 OP_wait_V OP_on_Prep ; -- guess-p-verb
lin wait_out_V2 = prepV2 OP_wait_V OP_out_Prep ; -- guess-p-verb
lin wait_up_V = advV OP_wait_V OP_up_Adv ; -- guess-p-verb
lin wait_up_for_V2 = prepV2 (advV OP_wait_V OP_up_Adv ) OP_for_Prep ; -- guess-p-verb
lin wait_upon_V2 = prepV2 OP_wait_V OP_upon_Prep ; -- guess-p-verb
lin waiter_N = mkN "serveur" masculine ; -- tocheck
lin waiting_A = variants {} ; --
lin waiting_N = variants {} ; --
lin waitress_N = mkN "serveuse" feminine ; -- tocheck
lin waiver_N = mkN "dérogation" | mkN "exemption" | mkN "renonciation" ; -- UWN
lin wake_N = mkN "sillage" masculine ; -- tocheck
lin wake_V = variants {} ; -- mkV2 (mkV "réveiller") | mkV2 (reflV (mkV "réveiller")) ; -- tocheck
lin wake_V2 = mkV2 (mkV "réveiller") | mkV2 (reflV (mkV "réveiller")) ; -- tocheck
lin wake_up_V = advV OP_wake_V OP_up_Adv ; -- guess-p-verb
lin wake_up_V2 = prepV2 OP_wake_V OP_up_Prep ; -- guess-p-verb
lin wakefield_PN = mkPN "Wakefield" ; -- status=guess src=geonames
lin wale_N = mkN "côte" feminine ; -- tocheck
lin wales_PN = mkPN "Wales" ; -- status=guess src=geonames
lin walk_N = mkN "promenade" feminine ; -- tocheck
lin walk_V = L.walk_V ;
lin walk_V2 = mkV2 (mkV "marcher") ; ---- faire marcher
lin walk_away_from_V2 = prepV2 (advV OP_walk_V OP_away_Adv ) OP_from_Prep ; -- guess-p-verb
lin walk_away_with_V2 = prepV2 (advV OP_walk_V OP_away_Adv ) OP_with_Prep ; -- guess-p-verb
lin walk_back_from_V2 = prepV2 (advV OP_walk_V OP_back_Adv ) OP_from_Prep ; -- guess-p-verb
lin walk_by_V = advV OP_walk_V OP_by_Adv ; -- guess-p-verb
lin walk_in_V = advV OP_walk_V OP_in_Adv ; -- guess-p-verb
lin walk_in_on_V2 = prepV2 (advV OP_walk_V OP_in_Adv ) OP_on_Prep ; -- guess-p-verb
lin walk_into_V2 = prepV2 OP_walk_V OP_into_Prep ; -- guess-p-verb
lin walk_off_V2 = prepV2 OP_walk_V OP_off_Prep ; -- guess-p-verb
lin walk_off_with_V2 = prepV2 (advV OP_walk_V OP_off_Adv ) OP_with_Prep ; -- guess-p-verb
lin walk_on_V = advV OP_walk_V OP_on_Adv ; -- guess-p-verb
lin walk_out_V = advV OP_walk_V OP_out_Adv ; -- guess-p-verb
lin walk_out_on_V2 = prepV2 (advV OP_walk_V OP_out_Adv ) OP_on_Prep ; -- guess-p-verb
lin walk_through_V3 = variants {} ; -- guess-p-verb
lin walk_up_V = advV OP_walk_V OP_up_Adv ; -- guess-p-verb
lin walkaway_N = mkN "fuyard" ; -- UWN
lin walker_N = mkN "marcheur" ; -- tocheck
lin walkie_talkie_N = mkN "talkie-walkie" masculine ; -- tocheck
lin walking_A = variants {} ; --
lin walking_N = mkN "marche" feminine ; -- tocheck
lin wall_N = mkN "mur" masculine | mkN "paroi" masculine ;
lin wall_V2 = mkV2 (mkV "emmurer") ; -- tocheck
lin wallaby_N = mkN "wallaby" masculine ; -- tocheck
lin wallace_PN = mkPN "Wallace" ; -- status=guess src=geonames
lin wallasey_PN = mkPN "Wallasey" ; -- status=guess src=geonames
lin wallet_N = mkN "portefeuille" masculine ; -- tocheck
lin wallflower_N = mkN "vélar" masculine ; -- tocheck
lin wallingford_PN = mkPN "Wallingford" ; -- status=guess src=geonames
lin wallow_V = mkV (reflV (mkV I.complaire_V2)) | mkV (reflV (mkV "vautrer")) ; -- tocheck
lin wallpaper_N = mkN "papier_peint" ; -- UWN
lin wallsend_PN = mkPN "Wallsend" ; -- status=guess src=geonames
lin walnut_N = mkN "noix" feminine | mkN "noyer" masculine ; -- tocheck
lin walrus_N = mkN "morse" masculine ; -- tocheck
lin walsall_PN = mkPN "Walsall" ; -- status=guess src=geonames
lin walton_PN = mkPN "Walton" ; -- status=guess src=geonames
lin waltz_N = mkN "valse" feminine ; -- tocheck
lin waltz_V2 = mkV2 (mkV "valser") ; -- tocheck
lin wan_A = mkA "blafard" | mkA "blême" ; -- tocheck
lin wand_N = mkN "baguette" feminine ; -- tocheck
lin wander_V = variants {} ; -- mkV2 (mkV "errer") ; -- tocheck
lin wander_off_V = advV OP_wander_V OP_off_Adv ; -- guess-p-verb
lin wanderer_N = mkN "araignée" ; -- UWN
lin wanderlust_N = mkN "bougeotte" feminine ; -- tocheck
lin wandsworth_PN = mkPN "District londonien de Wandsworth" ; -- status=guess src=geonames
lin wane_N = mkN "marée_basse" ; -- UWN
lin wangle_V2 = mkV2 (mkV "truander") ; -- tocheck
lin waning_N = mkN "décroissance" feminine ; -- tocheck
lin wank_N = mkN "branlage" feminine ; -- tocheck
lin wank_V = mkV (mkV "branler") | mkV (reflV (mkV "branler")) ; -- tocheck
lin wanness_N = mkN "pâleur" ; -- UWN
lin want_N = mkN "besoin" masculine | mkN "manque" masculine | mkN "pauvreté" feminine ; -- tocheck
lin want_V = mkV I.vouloir_V2 ;
lin want_V2 = I.vouloir_V2 ;
lin want_V2V = mkV2V (mkV I.vouloir_V2) ;
lin want_VV = S.want_VV ;
lin want_in_V = advV OP_want_V OP_in_Adv ; -- guess-p-verb
lin want_out_V = advV OP_want_V OP_out_Adv ; -- guess-p-verb
lin wantage_PN = mkPN "Wantage" ; -- status=guess src=geonames
lin wanton_A = mkA "lascif" | mkA "indiscipliné" ; -- tocheck
lin wapiti_N = mkN "wapiti" masculine ; -- tocheck
lin war_N = L.war_N ;
lin warble_N = mkN "varron" ; -- tocheck
lin warbler_N = mkN "fauvette" feminine ; -- tocheck
lin ward_N = mkN "arrondissement" | mkN "cour" feminine | mkN "garde" feminine | mkN "salle" feminine | mkN "pupille" | mkN "quartier" masculine | mkN "garde" ; -- tocheck
lin warden_N = mkN "garde" | mkN "gardien" | mkN "warder" ; -- UWN
lin wardrobe_N = mkN "garde-robe" feminine ; -- tocheck
lin ware_PN = mkPN "Ware" ; -- status=guess src=geonames
lin warehouse_N = mkN "entrepôt" masculine ; -- tocheck
lin warehouser_N = mkN "magasinier" ; -- UWN
lin warehousing_N = mkN "entreposage" | mkN "stockage" ; -- UWN
lin warfare_N = mkN "guerre" feminine ; -- tocheck
lin warhead_N = mkN "fret" | mkN "ogive" ; -- UWN
lin wariness_N = mkN "prudence" ; -- tocheck
lin warlike_A = mkA "belliqueux" ; -- tocheck
lin warlock_N = mkN "Sorcier" | mkN "sorcier" ; -- UWN
lin warm_A = L.warm_A ;
lin warm_V = variants {} ; -- mkV2 (mkV "chauffer") ; -- tocheck
lin warm_V2 = mkV2 (mkV "chauffer") ; -- tocheck
lin warm_blooded_A = mkA "homéotherme" ; -- tocheck
lin warminster_PN = mkPN "Warminster" ; -- status=guess src=geonames
lin warmonger_N = mkN "belliciste" ; -- tocheck
lin warmongering_N = mkN "belliciste" ; -- UWN
lin warmth_N = mkN "chaleur" feminine ; -- tocheck
lin warn_V = variants {} ; -- mkV2V (mkV "avertir") ; -- tocheck
lin warn_V2 = variants {} ; -- mkV2V (mkV "avertir") ; -- tocheck
lin warn_V2V = mkV2V (mkV "avertir") ; -- tocheck
lin warn_VS = variants {} ; -- mkV2V (mkV "avertir") ; -- tocheck
lin warner_N = mkN "warner" ; -- UWN
lin warning_N = mkN "avertir" masculine | mkN "avertissement" masculine ; -- tocheck
lin warp_N = mkN "déformation" | mkN "trame" feminine ; -- tocheck
lin warp_V2 = mkV2 (mkV "déformer") ; -- tocheck
lin warrant_N = mkN "mandat" masculine ; -- tocheck
lin warrant_VS = mkvVS "assurer" | mkvVS "cautionner" | mkvVS "garantir" ; -- UWN
lin warrantor_N = mkN "caution" | mkN "garant" ; -- UWN
lin warranty_N = mkN "garantie" feminine ; -- tocheck
lin warren_N = mkN "garenne" ; -- tocheck
lin warrington_PN = mkPN "Warrington" ; -- status=guess src=geonames
lin warrior_N = mkN "guerrier" masculine ; -- tocheck
lin warsaw_PN = mkPN "Varsovie" ; -- status=guess src=geonames
lin warship_N = mkN "Navire_de_guerre" | mkN "bâtiment" | mkN "navire" | mkN "navire_de_guerre" ; -- UWN
lin warsop_PN = mkPN "Warsop" ; -- status=guess src=geonames
lin wart_N = mkN "verrue" feminine ; -- tocheck
lin warthog_N = mkN "phacochère" masculine ; -- tocheck
lin wartime_N = variants {} ; --
lin warwick_PN = mkPN "Warwick" ; -- status=guess src=geonames
lin wary_A = mkA "circonspect" | mkA "méfiant" ; -- tocheck
lin wash_N = mkN "machine" feminine | mkN "lavage" masculine | mkN "oeud" ; -- tocheck
lin wash_V = mkV "laver" ; -- UWN
lin wash_V2 = L.wash_V2 ;
lin wash_away_V2 = mkV2 (advV OP_wash_V OP_away_Adv ) ; -- guess-p-verb
lin wash_down_V2 = prepV2 OP_wash_V OP_down_Prep ; -- guess-p-verb
lin wash_out_V2 = prepV2 OP_wash_V OP_out_Prep ; -- guess-p-verb
lin wash_over_V2 = prepV2 OP_wash_V OP_over_Prep ; -- guess-p-verb
lin wash_up_V = advV OP_wash_V OP_up_Adv ; -- guess-p-verb
lin wash_up_V2 = prepV2 OP_wash_V OP_up_Prep ; -- guess-p-verb
lin washable_A = mkA "lavable" ; -- tocheck
lin washbasin_N = mkN "lavabo" masculine ; -- tocheck
lin washcloth_N = mkN "flanelle" | mkN "gant_de_toilette" ; -- UWN
lin washer_N = mkN "rondelle" feminine | mkN "laveur" masculine ; -- tocheck
lin washerwoman_N = mkN "blanchisseuse" ; -- UWN
lin washing_N = mkN "linge" masculine | mkN "lavage" masculine ; -- tocheck
lin washington_PN = mkPN "Washington" ; -- status=guess src=geonames
lin washtub_N = mkN "lavoir" ; -- UWN
lin wasp_N = mkN "guêpe" feminine ; -- tocheck
lin waspish_A = mkA "grincheux" ; -- tocheck
lin wassailer_N = mkN "grille-pain" | mkN "toasteur" ; -- UWN
lin wastage_N = mkN "gaspillage" | mkN "perte" ; -- UWN
lin waste_A = mkA "désert" | mkA "déserter" | mkA "sauvage" ; -- UWN
lin waste_N = mkN "dégradation" feminine | mkN "fèces" | mkN "ordures" | mkN "gaspillage" masculine ; -- tocheck
lin waste_V = mkV "pourrir" ; -- UWN
lin waste_V2 = mkV2 (mkV I.détruire_V2) | mkV2 (mkV "tuer") | mkV2 (mkV "gaspiller") | mkV2 (mkV "dépérir") ; -- tocheck
lin waste_away_V = advV OP_waste_V OP_away_Adv ; -- guess-p-verb
lin wasteland_N = mkN "désert" masculine ; -- tocheck
lin waster_N = mkN "contre-torpilleur" | mkN "destroyer" | mkN "destructeur" ; -- UWN
lin watch_1_V2 = mkV2 (mkV "regarder") ;
lin watch_2_V2 = mkV2 (mkV "surveiller") ;
lin watch_N = mkN "garde" | mkN "montre" feminine ; -- tocheck
lin watch_V = mkV L.watch_V2 ;
lin watch_V2 = L.watch_V2 ;
lin watch_V2V = mkV2V (mkV "surveiller") | mkV2V (mkV "regarder") ; -- tocheck
lin watch_VS = mkVS (mkV "regarder") ;
lin watch_out_V = advV OP_watch_V OP_out_Adv ; -- guess-p-verb
lin watch_out_for_V2 = prepV2 (advV OP_watch_V OP_out_Adv ) OP_for_Prep ; -- guess-p-verb
lin watch_over_V2 = prepV2 OP_watch_V OP_over_Prep ; -- guess-p-verb
lin watchband_N = mkN "bracelet" | mkN "manchette" ; -- UWN
lin watchdog_N = mkN "mâtin" masculine ; -- tocheck
lin watcherFem_N = mkN "spectateur" | mkN "téléspectateur" | mkN "témoin" | mkN "visionneur" ; -- UWN
lin watcherMasc_N = mkN "spectateur" | mkN "téléspectateur" | mkN "témoin" | mkN "visionneur" ; -- UWN
lin watchful_A = mkA "attentif" ; -- tocheck
lin watchmaker_N = mkN "horlogerie" feminine ; -- tocheck
lin watchman_N = mkN "guetteur" masculine ; -- tocheck
lin watchtower_N = mkN "mirador" ; -- UWN
lin watchword_N = mkN "mdp" | mkN "mot" | mkN "mot_de_passe" | mkN "parole" ; -- UWN
lin water_N = L.water_N ;
lin water_V2 = mkV2 (mkV "pleurer") | mkV2 (mkV "arroser") | mkV2 (mkV "abreuver") ; -- tocheck
lin waterbird_N = mkN "aquatique" | mkN "oiseau" | mkN "oiseau_aquatique" ; -- UWN
lin waterbuck_N = mkN "antilope_sing-sing" | mkN "kobus_ellipsiprymnus" | mkN "waterbuck" ; -- UWN
lin watercannon_N = mkN "canon_à_eau" ; -- UWN
lin watercolorist_N = mkN "aquarelliste" ; -- UWN
lin watercolour_N = mkN "aquarelle" feminine ; -- tocheck
lin watercolourist_N = mkN "aquarelliste" ; -- UWN
lin watercraft_N = mkN "bateau" | mkN "navire" | mkN "vaisseau" ; -- UWN
lin waterfall_N = mkN "cascade" feminine ; -- tocheck
lin waterford_PN = mkPN "Waterford" ; -- status=guess src=geonames
lin waterfowl_N = mkN "aquatique" | mkN "oiseau" | mkN "oiseau_aquatique" ; -- UWN
lin waterfront_N = mkN "berge" ; -- UWN
lin watering_N = mkN "arrosage" ; -- UWN
lin waterless_A = mkA "anhydre" | mkA "aride" | mkA "sec" ; -- UWN
lin water_line_N = mkN "ligne_de_flottaison" ; -- UWN
lin waterlogged_A = mkA "boueux" | mkA "marécageux" ; -- UWN
lin waterloo_PN = mkPN "Waterloo" ; -- status=guess src=geonames
lin waterman_N = mkN "canotier" | mkN "waterman" ; -- UWN
lin watermark_N = mkN "filigrane" masculine ; -- tocheck
lin watermelon_N = mkN "pastèque" feminine ; -- tocheck
lin waterproof_A = mkA "waterproof" ; -- tocheck
lin waterproof_V2 = mkV2 (mkV "étanchéifier") ; -- tocheck
lin waterproofing_N = mkN "scellage" ; -- UWN
lin watershed_N = mkN "tournant" ; -- UWN
lin waterspout_N = mkN "trombe" feminine ; -- tocheck
lin watertight_A = mkA "étanche" ; -- tocheck
lin waterweed_N = mkN "élodée" ; -- UWN
lin watery_A = mkA "aqueux" ; -- tocheck
lin watford_PN = mkPN "Watford" ; -- status=guess src=geonames
lin watt_N = mkN "watt" masculine ; -- tocheck
lin wattle_N = mkN "claie" feminine ; -- tocheck
lin wattmeter_N = mkN "wattmètre" masculine ; -- tocheck
lin wave_N = mkN "vague" ; -- tocheck
lin wave_V = variants {} ; -- mkV2 (mkV "onduler") | mkV2 (mkV "saluer") ; -- tocheck
lin wave_V2 = mkV2 (mkV "onduler") | mkV2 (mkV "saluer") ; -- tocheck
lin wave_aside_V2 = mkV2 (advV OP_wave_V OP_aside_Adv ) ; -- guess-p-verb
lin wave_away_V = advV OP_wave_V OP_away_Adv ; -- guess-p-verb
lin wave_down_V2 = prepV2 OP_wave_V OP_down_Prep ; -- guess-p-verb
lin wave_off_V2 = prepV2 OP_wave_V OP_off_Prep ; -- guess-p-verb
lin wave_on_V2 = prepV2 OP_wave_V OP_on_Prep ; -- guess-p-verb
lin wavelength_N = mkN "longueur_d'onde" ; -- UWN
lin waver_V = mkV (mkV "waver") ; -- tocheck
lin wavy_A = mkA "ondulant" | mkA "ondulé" ; -- tocheck
lin wax_N = mkN "cire" feminine ; -- tocheck
lin wax_V = mkV "augmenter" | mkV "monter" | mkV "élever" ; -- UWN
lin wax_V2 = mkV2 (mkV "cirer") | mkV2 (mkV I.croître_V) | mkV2 (mkV I.devenir_V) ; -- tocheck
lin waxy_A = mkA "cireux" ; -- tocheck
lin way_1_N = mkN "route" ;
lin way_2_N = mkN "manière" feminine | mkN "façon" feminine ;
lin way_Adv = mkAdv "très" ; -- tocheck
lin way_N = mkN "manière" feminine | mkN "façon" feminine ;
lin waybill_N = mkN "bon_de_livraison" | mkN "connaissement" ; -- UWN
lin wayfarer_N = mkN "voyageur" masculine ; -- tocheck
lin waylay_V2 = mkV2 (mkV "comploter") ; -- tocheck
lin wayne_PN = mkPN "Wayne" ; -- status=guess src=geonames
lin ways_N = mkN "Slipway" | mkN "slip" | mkN "slipway" ; -- UWN
lin wayward_A = mkA "obstiné" | mkA "rebelle" | mkA "égaré" ; -- UWN
lin weFem_Pron = E.we8fem_Pron ;
lin we_Pron = S.we_Pron ;
lin weak_A = mkA "faible" ; -- tocheck
lin weaken_V = variants {} ; -- mkV2 (reflV (mkV "affaiblir")) | mkV2 (mkV "affaiblir") ; -- tocheck
lin weaken_V2 = mkV2 (reflV (mkV "affaiblir")) | mkV2 (mkV "affaiblir") ; -- tocheck
lin weakling_N = mkN "gringalet" masculine ; -- tocheck
lin weakness_N = mkN "faiblesse" feminine | mkN "faible" masculine ; -- tocheck
lin weal_N = mkN "prospérité" ; -- UWN
lin wealth_N = mkN "profusion" feminine | mkN "richesse" feminine ; -- tocheck
lin wealthy_A = mkA "riche" ; -- tocheck
lin wean_V2 = mkV2 (mkV "sevrer") ; -- tocheck
lin weaning_N = mkN "sevrage" ; -- UWN
lin weapon_N = mkN "arme" feminine ; -- tocheck
lin weaponry_N = mkN "armement" masculine ; -- tocheck
lin wear_N = mkN "usure" feminine ; -- tocheck
lin wear_V = mkV "casser" ; -- UWN
lin wear_V2 = mkV2 (mkV "user") | mkV2 (mkV "porter") ; -- tocheck
lin wear_away_V2 = mkV2 (advV OP_wear_V OP_away_Adv ) ; -- guess-p-verb
lin wear_down_V2 = prepV2 OP_wear_V OP_down_Prep ; -- guess-p-verb
lin wear_off_V = mkV "user" ; -- UWN
lin wear_out_V = mkV "fatiguer" | mkV "user" ; -- UWN
lin wear_out_V2 = prepV2 OP_wear_V OP_out_Prep ; -- guess-p-verb
lin wearable_A = mkA "mettable" ; -- tocheck
lin weary_A = mkA "las" | mkA "fatigué" ; -- tocheck
lin weary_V2 = mkV2 (reflV (mkV "lasser")) | mkV2 (mkV "lasser") ; -- tocheck
lin weasel_N = mkN "belette" feminine ; -- tocheck
lin weather_N = mkN "temps" masculine | mkN "intempéries" feminine ; -- tocheck
lin weathercock_N = mkN "girouette" feminine ; -- tocheck
lin weatherman_N = mkN "météorologue" ; -- tocheck
lin weather_vane_N = mkN "girouette" ; -- UWN
lin weave_N = mkN "armure" feminine ; -- tocheck
lin weave_V = variants {} ; -- mkV2 (mkV "tisser") | mkV2 (reflV (mkV "faufiler")) ; -- tocheck
lin weave_V2 = mkV2 (mkV "tisser") | mkV2 (reflV (mkV "faufiler")) ; -- tocheck
lin weaverFem_N = mkN "tisserin" masculine | mkN "tisserand" masculine ; -- tocheck ---- sense to be split
lin weaverMasc_N = mkN "tisserin" masculine | mkN "tisserand" masculine ; -- tocheck ---- sense to be split
lin weaver_N = mkN "tisserin" masculine | mkN "tisserand" masculine ; -- tocheck
lin weaverbird_N = mkN "tisserand" | mkN "tisserin" ; -- UWN
lin web_1_N = mkN "bobine" feminine | mkN "palmure" feminine | mkN "bande" feminine | mkN "réseau" masculine | mkN "âme" feminine | mkN "panier" masculine | mkN "âme" | mkN "Web" masculine ; -- tocheck ---- sense to be split
lin web_2_N = mkN "bobine" feminine | mkN "palmure" feminine | mkN "bande" feminine | mkN "réseau" masculine | mkN "âme" feminine | mkN "panier" masculine | mkN "âme" | mkN "Web" masculine ; -- tocheck ---- sense to be split
lin web_N = mkN "bobine" feminine | mkN "palmure" feminine | mkN "bande" feminine | mkN "réseau" masculine | mkN "âme" feminine | mkN "panier" masculine | mkN "âme" | mkN "Web" masculine ; -- tocheck
lin webbed_A = mkA "palmé" ; -- tocheck
lin webcam_N = mkN "webcam" feminine ; -- tocheck
lin weber_N = mkN "weber" masculine ; -- tocheck
lin webmaster_N = mkN "webmestre" ; -- tocheck
lin wed_A = mkA "marier" ; -- UWN
lin wed_V2 = mkV2 (mkV "marier") | mkV2 (mkV "épouser") ; -- tocheck
lin wedding_N = mkN "mariage" masculine ; -- tocheck
lin wedge_N = mkN "cale" feminine | mkN "part" masculine | mkN "coin" ; -- tocheck
lin wedlock_N = mkN "mariage" | mkN "union" ; -- UWN
lin wee_A = mkA "petit" ; -- tocheck
lin wee_N = mkN "pipi" masculine ; -- tocheck
lin wee_wee_N = mkN "pipi" masculine ; -- tocheck
lin weed_N = mkN "herbe" ; -- tocheck
lin weed_V2 = mkV2 (mkV "désherber") ; -- tocheck
lin weedkiller_N = mkN "herbicide" ; -- UWN
lin week_N = mkN "semaine" feminine ;
lin weekend_N = mkN "fin_de_semaine" | mkN "week-end" ; -- UWN
lin weekly_A = mkA "hebdomadaire" ; -- tocheck
lin weekly_Adv = mkAdv "hebdomadairement" ; -- tocheck
lin weekly_N = mkN "hebdomadaire" ; -- UWN
lin weep_V = variants {} ; -- mkV2 (mkV "pleurer") ; -- tocheck
lin weep_V2 = mkV2 (mkV "pleurer") ; -- tocheck
lin weevil_N = mkN "Curculionoidea" | mkN "charançon" | mkN "coccinelle" | mkN "curculionoidea" ; -- UWN
lin weft_N = mkN "chaîne" feminine ; -- tocheck
lin weigh_V = variants {} ; -- mkV2 (mkV "peser") ; -- tocheck
lin weigh_V2 = mkV2 (mkV "peser") ; -- tocheck
lin weighbridge_N = mkN "pont-bascule" masculine ; -- tocheck
lin weight_N = mkN "poids" | mkN "masse" | mkN "poids" masculine ; -- tocheck
lin weight_V2 = mkV2 (mkV "alourdir") | mkV2 (mkV "pondérer") ; -- tocheck
lin weightiness_N = mkN "pesanteur" ; -- UWN
lin weightlessness_N = mkN "impesanteur" masculine ; -- tocheck
lin weightlift_N = mkN "haltérophilie" ; -- UWN
lin weightlifter_N = mkN "haltérophile" masculine ; -- tocheck
lin weightlifting_N = mkN "musculation" feminine | mkN "haltérophilie" feminine ; -- tocheck
lin weird_A = mkA "bizarre" ; -- tocheck
lin weirdness_N = mkN "bizarrerie" ; -- UWN
lin welcome_A = mkA "bienvenu" ; -- tocheck
lin welcome_N = mkN "bienvenue" feminine | mkN "bienvenue" ; -- tocheck
lin welcome_V2 = mkV2 (mkV I.accueillir_V2) ; -- tocheck
lin welcoming_A = mkA "accueillant" ; -- tocheck
lin weld_N = mkN "gaude" feminine ; -- tocheck
lin weld_V2 = mkV2 (mkV "braser") ; -- tocheck
lin welder_N = mkN "soudeur" masculine ; -- tocheck
lin welding_N = mkN "soudage" | mkN "soudure" ; -- UWN
lin welfare_N = mkN "bien-être" masculine ; -- tocheck
lin welkin_N = mkN "sphère_céleste" ; -- UWN
lin well_A = variants {} ; --
lin well_Interj = mkInterj "bien" | mkInterj "tiens" ;
lin well_N = mkN "puits" masculine | mkN "source" ; -- tocheck
lin well_being_N = mkN "bien-être" masculine ; -- tocheck
lin well_groomed_A = mkA "soigné" ; -- tocheck
lin well_heeled_A = mkA "riche" ; -- tocheck
lin well_known_A = variants {} ; --
lin well_read_A = mkA "lettré" ; -- tocheck
lin well_timed_A = mkA "utile" ; -- UWN
lin well_to_do_A = mkA "riche" ; -- tocheck
lin well_up_V = mkV "émaner" ; -- UWN
lin wellbeing_N = mkN "bien-être" ; -- UWN
lin wellingborough_PN = mkPN "Wellingborough" ; -- status=guess src=geonames
lin wellington_PN = mkPN "Wellington" ; -- status=guess src=geonames
lin wells_PN = mkPN "Wells" ; -- status=guess src=geonames
lin welshpool_PN = mkPN "Welshpool" ; -- status=guess src=geonames
lin welter_A = mkA "welter" ; -- tocheck
lin welter_N = mkN "embrouillamini" | mkN "welter" ; -- UWN
lin welter_V = mkV "welter" ; -- UWN
lin welwyn_PN = mkPN "Welwyn" ; -- status=guess src=geonames
lin wen_N = mkN "loupe" feminine ; -- tocheck
lin wendover_PN = mkPN "Wendover" ; -- status=guess src=geonames
lin werewolf_N = mkN "loup-garou" ; -- tocheck
lin west_A = mkA "occidental" ; -- tocheck
lin west_N = mkN "ouest" masculine ; -- tocheck
lin westbury_PN = mkPN "Westbury" ; -- status=guess src=geonames
lin westerly_A = variants {} ;
lin westerly_Adv = adjAdv westerly_A ; -- derived -- derived
lin western_A = mkA "occidental" ; -- tocheck
lin western_N = mkN "western" masculine ; -- tocheck
lin westerner_N = mkN "occidental" ; -- tocheck
lin westernization_N = mkN "occidentalisation" feminine ; -- tocheck
lin westernize_V2 = mkV2 (mkV "occidentaliser") ; -- tocheck
lin westhoughton_PN = mkPN "Westhoughton" ; -- status=guess src=geonames
lin westminster_PN = mkPN "Westminster" ; -- status=guess src=geonames
lin westmoreland_PN = mkPN "Westmoreland" ; -- status=guess src=geonames
lin wet_A = L.wet_A ;
lin wet_N = mkN "humidité" | mkN "mouillé" ; -- UWN
lin wet_V2 = mkV2 (reflV (mkV "mouiller")) | mkV2 (mkV "mouiller") ; -- tocheck
lin wet_nurse_N = mkN "Assistante_maternelle" | mkN "assistante_maternelle" | mkN "mère_nourricière" | mkN "nourrice" ; -- UWN
lin wetherby_PN = mkPN "Wetherby" ; -- status=guess src=geonames
lin wetland_N = mkN "marais" ; -- UWN
lin wetter_N = mkN "pisse-au-lit" ; -- UWN
lin weymouth_PN = mkPN "Weymouth" ; -- status=guess src=geonames
lin whack_N = mkN "coup" feminine ; -- tocheck
lin whack_V2 = mkV2 (mkV "frapper") ; -- tocheck
lin whacking_N = mkN "fessée" | mkN "raclée" ; -- UWN
lin whale_N = mkN "baleine" feminine ; -- tocheck
lin whaleboat_N = mkN "baleinière" ; -- UWN
lin whalebone_N = mkN "Fanon" | mkN "baleine" | mkN "fanon" | mkN "fanons" ; -- UWN
lin whaler_N = mkN "baleinier" masculine ; -- tocheck
lin whang_N = mkN "ceinture" | mkN "coup" | mkN "frapper" ; -- UWN
lin wharf_N = mkN "quai" masculine ; -- tocheck
lin whatPl_IP = S.whatPl_IP ;
lin whatSg_IP = S.whatSg_IP | E.QueestcequeIP ;
lin whatever_Det = variants {} ; --
lin whatnot_N = mkN "bric-à-brac" ; -- UWN
lin whatsoever_Adv = variants {} ; --
lin wheat_N = mkN "blé" masculine ; -- tocheck
lin wheatear_N = mkN "traquet" masculine ; -- tocheck
lin wheel_N = mkN "volant" masculine | mkN "roue" | mkN "roue" feminine ; -- tocheck
lin wheel_V = mkV "rouler" ; -- UWN
lin wheelbarrow_N = mkN "brouette" feminine ; -- tocheck
lin wheelbase_N = mkN "empattement" masculine ; -- tocheck
lin wheeling_N = mkN "rayonnage" | mkN "wheeling" ; -- UWN
lin wheelwright_N = mkN "charron" ; -- UWN
lin wheeziness_N = mkN "asthme" ; -- UWN
lin wheezy_A = mkA "asthmatique" ; -- tocheck
lin whelk_N = mkN "buccin" masculine ; -- tocheck
lin whelp_N = mkN "chiot" ; -- tocheck
lin when_IAdv = S.when_IAdv ;
lin when_Subj = S.when_Subj | M.mkSubj ("lors" + Ph.elisQue) ;
lin whence_Adv = mkAdv "d'où" ; -- tocheck
lin whenever_Adv = mkAdv "quand" ; -- tocheck
lin where_IAdv = S.where_IAdv ;
lin where_Subj = M.mkSubj "où" ;
lin whereas_Subj = variants {} ; --
lin whereby_Adv = variants {} ; --
lin whereto_Adv = mkAdv "auquel" ; -- tocheck
lin wherever_Adv = variants {} ; --
lin whether_Subj = M.mkSubj "si" ; ---- s'il
lin whey_N = mkN "petit-lait" masculine ; -- tocheck
lin which_IQuant = S.which_IQuant ;
lin whichever_Quant = variants {} ; --
lin whiff_N = mkN "effluve" masculine | mkN "bouffée" | mkN "souffle" masculine ; -- tocheck
lin while_N = mkN "moment" masculine ; -- tocheck
lin while_Subj = M.mkSubj ("pendant" ++ Ph.elisQue) ;
lin whilst_Subj = variants {} ; --
lin whim_N = mkN "caprice" masculine ; -- tocheck
lin whimper_V2 = mkV2 (mkV "gémir") ; -- tocheck
lin whimsical_A = mkA "capricieux" ; -- tocheck
lin whine_N = mkN "pleurnicherie" feminine ; -- tocheck
lin whine_V2 = mkV2 (mkV "pleurnicher") | mkV2 (mkV "couiner") ; -- tocheck
lin whiner_N = mkN "pleureur" | mkN "quérulent" ; -- UWN
lin whinny_N = mkN "crier" | mkN "hennir" | mkN "hennissement" ; -- UWN
lin whinny_V = mkV "hennir" ; -- UWN
lin whip_N = mkN "fouet" masculine ; -- tocheck
lin whip_V = variants {} ; -- mkV2 (mkV I.défaire_V2) | mkV2 (mkV "fouetter") | mkV2 (mkV I.battre_V2) ; -- tocheck
lin whip_V2 = mkV2 (mkV I.défaire_V2) | mkV2 (mkV "fouetter") | mkV2 (mkV I.battre_V2) ; -- tocheck
lin whipping_N = mkN "Flagellation" | mkN "flagellation" ; -- UWN
lin whippoorwill_N = mkN "bois-pourri" ; -- tocheck
lin whippy_A = mkA "flexible" | mkA "souple" ; -- UWN
lin whir_V = mkV "ronronner" ; -- UWN
lin whirl_V2 = mkV2 (mkV "tourbillonner") ; -- tocheck
lin whirligig_N = mkN "carrefour_giratoire" | mkN "carrousel" | mkN "manège" ; -- UWN
lin whirlpool_N = mkN "tourbillon" masculine ; -- tocheck
lin whirlwind_N = mkN "cyclone" masculine ; -- tocheck
lin whisk_N = mkN "fouet" masculine | mkN "balayette" feminine ; -- tocheck
lin whisk_V2 = mkV2 (mkV "fouetter") ; -- tocheck
lin whisker_N = mkN "moustache" feminine | mkN "favoris" ; -- tocheck
lin whiskered_A = mkA "barbu" ; -- UWN
lin whiskey_N = mkN "whiskey" masculine | mkN "whisky" ; -- UWN
lin whisper_N = mkN "chuchotement" masculine ; -- tocheck
lin whisper_V = mkV "chuchoter" | mkV "susurrer" ; -- UWN
lin whisper_V2 = mkV2 (mkV "chuchoter") ; -- tocheck
lin whisperer_N = mkN "chuchoteur" masculine ; -- tocheck
lin whispering_N = mkN "chuchoter" | mkN "susurrer" ; -- UWN
lin whistle_N = mkN "sifflet" masculine | mkN "sifflement" masculine | mkN "sifflet" ; -- tocheck
lin whistle_V2 = mkV2 (mkV "siffler") ; -- tocheck
lin whitburn_PN = mkPN "Whitburn" ; -- status=guess src=geonames
lin whitby_PN = mkPN "Whitby" ; -- status=guess src=geonames
lin whitchurch_PN = mkPN "Whitchurch" ; -- status=guess src=geonames
lin white_A = L.white_A ;
lin white_N = mkN "blanc" masculine ; -- tocheck
lin whitebait_N = mkN "blanchaille" ; -- tocheck
lin whitefly_N = mkN "Aleyrodoidea" | mkN "aleyrodoidea" | mkN "mouche_blanche" ; -- UWN
lin whitehall_PN = mkPN "Whitehall" ; -- status=guess src=geonames
lin whitehaven_PN = mkPN "Whitehaven" ; -- status=guess src=geonames
lin whitehead_N = mkN "milium" | mkN "whitehead" ; -- UWN
lin whiten_V2 = mkV2 (mkV "blanchir") ; -- tocheck
lin whiteness_N = mkN "blancheur" feminine ; -- tocheck
lin whitening_N = mkN "blanchissement" ; -- UWN
lin whiteout_N = mkN "blanco" masculine ; -- tocheck
lin whitewash_V2 = mkV2 (mkV "blanchir") | mkV2 (mkV "badigeonner") ; -- tocheck
lin whiting_N = mkN "merlan" masculine ; -- tocheck
lin whitish_A = mkA "blanchâtre" ; -- UWN
lin whitstable_PN = mkPN "Whitstable" ; -- status=guess src=geonames
lin whittle_V2 = mkV2 (mkV "tailler") ; -- tocheck
lin whittlesey_PN = mkPN "Whittlesey" ; -- status=guess src=geonames
lin whitworth_PN = mkPN "Whitworth" ; -- status=guess src=geonames
lin whiz_V = mkV "ronronner" ; -- UWN
lin whoPl_IP = S.whoPl_IP ;
lin whoSg_IP = S.whoSg_IP | E.QuiestcequeIP ;
lin who_PN = mkPN "OMS" ;
lin whodunit_N = mkN "mystère" | mkN "whodunit" | mkN "whodunnit" ; -- UWN
lin whoever_NP = variants {} ; --
lin whole_A = mkA "entier" ; ---- up to this checked by AR
lin whole_N = mkN "ensemble" masculine ; -- tocheck
lin wholesaler_N = mkN "grossiste" ; -- tocheck
lin whoopee_Interj = mkInterj "youpi" ; -- tocheck
lin whopping_A = mkA "immense" ; -- tocheck
lin whore_N = mkN "putain" feminine | mkN "salope" feminine ; -- tocheck
lin whorehouse_N = mkN "Lupanar" | mkN "bordel" | mkN "claque" | mkN "lupanar" | mkN "maison_close" | mkN "maison_de_tolérance" | mkN "privé" ; -- UWN
lin whorl_N = mkN "hélice" | mkN "spirale" ; -- UWN
lin why_IAdv = S.why_IAdv ;
lin why_N = mkN "pourquoi" | mkN "raison" ; -- UWN
lin wick_N = mkN "mèche" masculine ; -- tocheck
lin wick_PN = mkPN "Wick" ; -- status=guess src=geonames
lin wicked_A = mkA "génial" | mkA "méchant" ; -- tocheck
lin wicker_N = mkN "osier" masculine ; -- tocheck
lin wickerwork_N = mkN "vannerie" ; -- tocheck
lin wicket_N = variants {} ; --
lin wickford_PN = mkPN "Wickford" ; -- status=guess src=geonames
lin wicklow_PN = mkPN "Wicklow" ; -- status=guess src=geonames
lin wide_A = L.wide_A ;
lin wide_Adv = mkAdv "ample" | mkAdv "large" | mkAdv "largement" ; -- UWN
lin widen_V2 = mkV2 (reflV (mkV "élargir")) | mkV2 (mkV "élargir") ; -- tocheck
lin wideness_N = mkN "immensité" | mkN "largeur" | mkN "énormité" ; -- UWN
lin widespread_A = mkA "répandu" ; -- tocheck
lin widnes_PN = mkPN "Widnes" ; -- status=guess src=geonames
lin widow_N = mkN "veuve" feminine ; -- tocheck
lin widower_N = mkN "veuf" masculine ; -- tocheck
lin widowhood_N = mkN "veuvage" masculine ; -- tocheck
lin width_N = mkN "largeur" feminine ; -- tocheck
lin wiesbaden_PN = mkPN "Wiesbaden" ; -- status=guess src=geonames
lin wife_N = L.wife_N ;
lin wig_N = mkN "perruque" feminine ; -- tocheck
lin wigan_PN = mkPN "Wigan" ; -- status=guess src=geonames
lin wigging_N = mkN "perruque" ; -- UWN
lin wiggle_N = mkN "se_tortiller" ; -- UWN
lin wiggle_V2 = mkV2 (mkV "frétiller") ; -- tocheck
lin wigwam_N = mkN "wigwam" ; -- UWN
lin wild_A = mkA "sauvage" ; -- tocheck
lin wild_Adv = mkAdv "sauvage" ; -- UWN
lin wildcat_N = mkN "chat_sauvage" ; -- UWN
lin wildebeest_N = mkN "gnou" | mkN "gnous" ; -- UWN
lin wilderness_N = mkN "naturalité" ; -- tocheck
lin wildlife_N = mkN "nature" feminine ; -- tocheck
lin wile_N = mkN "ruse" feminine ; -- tocheck
lin wilhelmshaven_PN = mkPN "Wilhelmshaven" ; -- status=guess src=geonames
lin will_N = mkN "testament" masculine | mkN "volonté" feminine ; -- tocheck
lin will_V = variants {} ; -- mkV2 (mkV "léguer") | mkV2 (mkV I.vouloir_V2) ; -- tocheck
lin will_V2 = mkV2 (mkV "léguer") | mkV2 (mkV I.vouloir_V2) ; -- tocheck
lin willing_A = mkA "volontaire" ; -- tocheck
lin willingness_N = mkN "gré" | mkN "volonté" ; -- UWN
lin willington_PN = mkPN "Willington" ; -- status=guess src=geonames
lin willow_N = mkN "saule" masculine ; -- tocheck
lin willowherb_N = mkN "épilobe" masculine ; -- tocheck
lin willowy_A = mkA "svelte" ; -- tocheck
lin willpower_N = mkN "volonté" feminine ; -- tocheck
lin wilmslow_PN = mkPN "Wilmslow" ; -- status=guess src=geonames
lin wily_A = mkA "rusé" ; -- tocheck
lin wimp_N = mkN "mauviette" feminine ; -- tocheck
lin win_N = mkN "gain" masculine ; -- tocheck
lin win_V = mkV I.vaincre_V2 ;
lin win_V2 = L.win_V2 ;
lin win_back_V = mkV "rattraper" | mkV "regagner" ; -- UWN
lin win_down_V = advV OP_win_V OP_down_Adv ; -- guess-p-verb
lin win_over_V = mkV "abattre" | mkV "convaincre" | mkV "convertir" | mkV "inspirer" | mkV "surmonter" | mkV "vaincre" ; -- UWN
lin win_up_V = advV OP_win_V OP_up_Adv ; -- guess-p-verb
lin winch_N = mkN "treuil" masculine ; -- tocheck
lin winch_V2 = mkV2 (mkV "treuiller") ; -- tocheck
lin winchester_PN = mkPN "Winchester" ; -- status=guess src=geonames
lin wind_N = L.wind_N ;
lin wind_V = mkV "hisser" | mkV "élever" ; -- UWN
lin wind_down_V = advV OP_wind_V OP_down_Adv ; -- guess-p-verb
lin wind_down_V2 = prepV2 OP_wind_V OP_down_Prep ; -- guess-p-verb
lin wind_on_V = advV OP_wind_V OP_on_Adv ; -- guess-p-verb
lin wind_up_V = advV OP_wind_V OP_up_Adv ; -- guess-p-verb
lin wind_up_V2 = prepV2 OP_wind_V OP_up_Prep ; -- guess-p-verb
lin windbreak_N = mkN "abrivent" ; -- UWN
lin windbreaker_N = mkN "K-way" masculine ; -- tocheck
lin windcheater_N = mkN "anorak" | mkN "blouson" ; -- UWN
lin windermere_PN = mkPN "Windermere" ; -- status=guess src=geonames
lin windfall_N = mkN "aubaine" feminine ; -- tocheck
lin windflower_N = mkN "anémone" ; -- UWN
lin windlass_N = mkN "winch" ; -- UWN
lin windmill_N = mkN "moulin_à_vent" ; -- UWN
lin window_N = L.window_N ;
lin windowpane_N = mkN "vitre" feminine ; -- tocheck
lin windpipe_N = mkN "trachée" feminine ; -- tocheck
lin windscreen_N = mkN "pare-brise" | mkN "parebrise" | mkN "voorruit" ; -- UWN
lin windshield_N = mkN "pare-brise" masculine ; -- tocheck
lin windsock_N = mkN "bas" | mkN "biroute" | mkN "chaussette" | mkN "manche_à_air" ; -- UWN
lin windsor_PN = mkPN "Windsor" ; -- status=guess src=geonames
lin windy_A = mkA "venteux" ; -- tocheck
lin wine_N = L.wine_N ;
lin wine_V2 = mkV2 (mkV "arroser") ; -- tocheck
lin winemaking_N = mkN "vinification" feminine ; -- tocheck
lin winery_N = mkN "vinerie" feminine ; -- tocheck
lin wing_N = L.wing_N ;
lin wing_V = mkV "voler" ; -- UWN
lin wingate_PN = mkPN "Wingate" ; -- status=guess src=geonames
lin winger_N = mkN "ailier" masculine ; -- tocheck
lin wink_V = mkV "ciller" ; -- UWN
lin winker_N = mkN "œillère" ; -- UWN
lin winkle_N = mkN "zizi" masculine ; -- tocheck
lin winner_N = mkN "gagnant" masculine ; -- tocheck
lin winnie_PN = mkPN "Winnie" ; -- status=guess src=geonames
lin winning_A = variants {} ; --
lin winning_N = mkN "gagnant" ; -- UWN
lin winnings_N = mkN "gagner" ; -- UWN
lin winnipeg_PN = mkPN "Winnipeg" ; -- status=guess src=geonames
lin winnow_N = mkN "van" ; -- UWN
lin winnow_V2 = mkV2 (mkV "vanner") ; -- tocheck
lin winsford_PN = mkPN "Winsford" ; -- status=guess src=geonames
lin winsome_A = mkA "affriolant" | mkA "alléchant" | mkA "attachant" | mkA "attirant" | mkA "attrayant" | mkA "gentil" | mkA "mignon" | mkA "ravissant" ; -- UWN
lin winter_N = mkN "hiver" masculine ; -- tocheck
lin winter_V = mkV (mkV "hiverner") ; -- tocheck
lin wintergreen_N = mkN "pirole" feminine ; -- tocheck
lin wintry_A = mkA "hivernal" ; -- tocheck
lin wipe_N = mkN "frotter" ; -- UWN
lin wipe_V = variants {} ; -- L.wipe_V2 ;
lin wipe_V2 = L.wipe_V2 ;
lin wipe_out_V = mkV "annihiler" | mkV "anéantir" | mkV "décimer" | mkV "exterminer" | mkV "supprimer" | mkV "éradiquer" ; -- UWN
lin wipe_out_V2 = prepV2 OP_wipe_V OP_out_Prep ; -- guess-p-verb
lin wipeout_N = mkN "gamelle" feminine ; -- tocheck
lin wiper_N = mkN "essuie-glace" | mkN "essuyeur" ; -- UWN
lin wire_N = mkN "fil" masculine ; -- tocheck
lin wire_V = mkV "électrifier" ; -- UWN
lin wiretap_N = mkN "mouchard" masculine | mkN "pose" ; -- tocheck
lin wisbech_PN = mkPN "Wisbech" ; -- status=guess src=geonames
lin wisdom_N = mkN "sagesse" feminine ; -- tocheck
lin wise_A = mkA "sage" ; -- tocheck
lin wiseacre_N = mkN "plaisantin" ; -- UWN
lin wish_N = mkN "souhait" ; -- tocheck
lin wish_V = mkV "espérer" ;
lin wish_V2 = mkV2 (mkV "souhaiter") ;
lin wish_V2V = mkV2V (mkV "souhaiter") ;
lin wish_VS = mkVS (mkV "espérer") | mkVS (mkV "souhaiter") ;
lin wish_VV = deVV (mkV "espérer") ;
lin wishbone_N = mkN "lunette" feminine | mkN "wishbone" masculine ; -- tocheck
lin wishy_washy_A = mkA "lavasse" | mkA "molasse" ; -- tocheck
lin wisp_N = mkN "brin" masculine ; -- tocheck
lin wispy_A = mkA "faible" | mkA "flou" | mkA "sombre" | mkA "touffu" ; -- UWN
lin wisteria_N = mkN "glycine" feminine ; -- tocheck
lin wistful_A = mkA "nostalgique" ; -- tocheck
lin wit_N = variants {} ; --
lin witch_N = mkN "sorcière" feminine ; -- tocheck
lin witchcraft_N = mkN "sorcellerie" feminine ; -- tocheck
lin witchery_N = mkN "ensorcellement" | mkN "sorcellerie" | mkN "sorcière" ; -- UWN
lin with_Prep = S.with_Prep ;
lin witham_PN = mkPN "Witham" ; -- status=guess src=geonames
lin withdraw_V = variants {} ; -- mkV2 (mkV "retirer") | mkV2 (reflV (mkV "retirer")) | mkV2 (mkV "tirer") ; -- tocheck
lin withdraw_V2 = mkV2 (mkV "retirer") | mkV2 (reflV (mkV "retirer")) | mkV2 (mkV "tirer") ; -- tocheck
lin withdrawal_N = mkN "retrait" masculine | mkN "sevrage" ; -- tocheck
lin wither_V = mkV "diminuer" ; -- UWN
lin wither_V2 = mkV2 (mkV "flétrir") ; -- tocheck
lin withernsea_PN = mkPN "Withernsea" ; -- status=guess src=geonames
lin withers_N = mkN "garrot" ; -- UWN
lin withhold_V2 = mkV2 (mkV I.retenir_V2) ; -- tocheck
lin within_Adv = variants {} ; -- mkPrep "dans" ;
lin within_Prep = mkPrep "dans" ;
lin without_Prep = S.without_Prep ;
lin withstand_V2 = mkV2 (mkV "résister") ; -- tocheck
lin witness_N = mkN "témoin" masculine | mkN "preuve" feminine | mkN "témoignage" masculine ; -- tocheck
lin witness_V = variants {} ; -- mkV2 (mkV "témoigner") ; -- tocheck
lin witness_V2 = mkV2 (mkV "témoigner") ; -- tocheck
lin witney_PN = mkPN "Witney" ; -- status=guess src=geonames
lin wits_N = mkN "sagesse" ; -- UWN
lin witticism_N = mkN "humeur" | mkN "mot_d'esprit" ; -- UWN
lin witty_A = mkA "fin" ; -- tocheck
lin wizard_N = mkN "assistant" masculine | mkN "mage" masculine ; -- tocheck
lin wizardry_N = mkN "génie" | mkN "wizardry" ; -- UWN
lin wizened_A = mkA "ratatiné" ; -- tocheck
lin woad_N = mkN "guède" ; -- UWN
lin wobble_N = mkN "vacillement" masculine ; -- tocheck
lin wobble_V2 = mkV2 (mkV "osciller") | mkV2 (mkV "vaciller") ; -- tocheck
lin wobbly_A = mkA "vacillant" ; -- tocheck
lin woburn_PN = mkPN "Woburn" ; -- status=guess src=geonames
lin woe_N = mkN "tristesse" feminine ; -- tocheck
lin wok_N = mkN "wok" masculine ; -- tocheck
lin wokingham_PN = mkPN "Wokingham" ; -- status=guess src=geonames
lin wolf_N = mkN "loup" masculine ; -- tocheck
lin wolf_V2 = mkV2 (mkV "dévorer") ; -- tocheck
lin wolframite_N = mkN "wolframite" masculine ; -- tocheck
lin wolfsbane_N = mkN "aconit" masculine ; -- tocheck
lin wollastonite_N = mkN "wollastonite" ; -- tocheck
lin wolverhampton_PN = mkPN "Wolverhampton" ; -- status=guess src=geonames
lin wolverine_N = mkN "glouton" masculine ; -- tocheck
lin woman_N = L.woman_N ;
lin womanhood_N = mkN "féminité" ; -- tocheck
lin womanish_A = mkA "efféminé" ; -- UWN
lin womanize_V = mkV "féminiser" ; -- UWN
lin womanizer_N = mkN "coureur" masculine ; -- tocheck
lin womanly_A = mkA "féminin" ; -- tocheck
lin womb_N = mkN "moule" masculine | mkN "utérus" masculine ; -- tocheck
lin wombat_N = mkN "wombat" masculine ; -- tocheck
lin wonder_N = mkN "merveille" feminine ; -- tocheck
lin wonder_V = variants {} ; -- mkV2 (reflV (mkV "demander")) ; -- tocheck
lin wonder_VQ = L.wonder_VQ ;
lin wonderful_A = mkA "merveilleux" ; -- tocheck
lin wondrous_Adv = mkAdv "admirablement" | mkAdv "excellemment" | mkAdv "formidablement" | mkAdv "merveilleusement" | mkAdv "splendidement" | mkAdv "épatamment" ; -- UWN
lin wonky_A = mkA "bancal" | mkA "boiteux" | mkA "branlant" | mkA "caduc" | mkA "chambranlant" | mkA "chancelant" | mkA "délabré" | mkA "vacillant" | mkA "vieux" ; -- UWN
lin wont_A = mkA "habitué" ; -- tocheck
lin wont_N = mkN "habitude" feminine ; -- tocheck
lin wonted_A = mkA "habituel" | mkA "usuel" ; -- UWN
lin woo_V2 = mkV2 (mkV "courtiser") ; -- tocheck
lin wood_N = L.wood_N ;
lin woodbridge_PN = mkPN "Woodbridge" ; -- status=guess src=geonames
lin woodcock_N = mkN "bécasse" feminine ; -- tocheck
lin woodcut_N = mkN "wood-block" ; -- UWN
lin wooded_A = mkA "boisé" | mkA "sylvestre" ; -- UWN
lin wooden_A = variants {} ; --
lin woodhewer_N = mkN "dendrocolaptidae" | mkN "dendrocolaptidés" | mkN "grimpars" ; -- UWN
lin woodland_N = mkN "bois" masculine ; -- tocheck
lin woodlouse_N = mkN "cloporte" masculine ; -- tocheck
lin woodpecker_N = mkN "pic" ; -- tocheck
lin woodsia_N = mkN "woodsia" ; -- UWN
lin woodwind_N = mkN "bois" ; -- tocheck
lin woodwork_N = mkN "charpenterie" feminine ; -- tocheck
lin woof_N = mkN "chaîne" feminine | mkN "ouaf" ; -- tocheck
lin woofer_N = mkN "woofer" masculine ; -- tocheck
lin wool_N = mkN "laine" feminine ; -- tocheck
lin woolgathering_A = mkA "rêveur" ; -- UWN
lin woolly_A = mkA "laineux" ; -- tocheck
lin worcester_PN = mkPN "Worcester" ; -- status=guess src=geonames
lin word_N = mkN "mot" masculine ;
lin wording_N = mkN "formulation" feminine ; -- tocheck
lin words_N = mkN "mots" ; -- tocheck
lin wordy_A = mkA "verbeux" ; -- tocheck
lin work_1_V = mkV "travailler" ;
lin work_2_V = mkV "fonctionner" ;
lin work_N = mkN "travail" masculine ;
lin work_V = mkV "travailler" ;
lin work_V2 = mkV2 (mkV "travailler") ;
lin work_off_V2 = prepV2 OP_work_V OP_off_Prep ; -- guess-p-verb
lin work_on_V2 = prepV2 OP_work_V OP_on_Prep ; -- guess-p-verb
lin work_out_V = advV OP_work_V OP_out_Adv ; -- guess-p-verb
lin work_out_V2 = prepV2 OP_work_V OP_out_Prep ; -- guess-p-verb
lin work_over_V2 = prepV2 OP_work_V OP_over_Prep ; -- guess-p-verb
lin work_through_V2 = prepV2 OP_work_V OP_through_Prep ; -- guess-p-verb
lin work_together_V = advV OP_work_V OP_together_Adv ; -- guess-p-verb
lin work_up_V = advV OP_work_V OP_up_Adv ; -- guess-p-verb
lin workable_A = mkA "exécutable" | mkA "faisable" | mkA "possible" | mkA "viable" ; -- UWN
lin workaholic_N = mkN "workaholique" ; -- tocheck
lin workbench_N = mkN "établi" masculine ; -- tocheck
lin worker_N = mkN "ouvrier" masculine ;
lin workforce_N = variants {} ; --
lin working_A = variants {} ; --
lin working_N = mkN "fonctionnement" masculine ; -- tocheck
lin working_class_A = variants {} ; --
lin workington_PN = mkPN "Workington" ; -- status=guess src=geonames
lin workman_N = mkN "ouvrier" | mkN "workman" ; -- UWN
lin workpiece_N = mkN "morceau" ; -- UWN
lin workplace_N = mkN "lieu_de_travail" ; -- UWN
lin works_N = variants {} ; --
lin workshop_N = mkN "atelier" masculine ; -- tocheck
lin worksop_PN = mkPN "Worksop" ; -- status=guess src=geonames
lin workstation_N = mkN "station_de_travail" ; -- UWN
lin workweek_N = mkN "semaine" ; -- UWN
lin world_N = mkN "monde" masculine ;
lin worldling_N = mkN "terrien" | mkN "terrienne" ; -- UWN
lin worldwide_A = mkA "mondial" ; -- tocheck
lin worldwide_Adv = variants {} ; --
lin worm_N = L.worm_N ;
lin worm_V2 = mkV2 (mkV "vermifuger") | mkV2 (mkV "infiltrer") | mkV2 (mkV "ramper") ; -- tocheck
lin worm_eaten_A = mkA "teigneux" ; -- tocheck
lin wormhole_N = mkN "Trou_de_ver" | mkN "trou_de_ver" ; -- UWN
lin wormwood_N = mkN "fiel" masculine | mkN "armoise" feminine ; -- tocheck
lin worried_A = mkA "inquiet" "inquiète" ;
lin worrier_N = mkN "chipoteur" ; -- UWN
lin worrisome_A = mkA "anxiogène" ; -- tocheck
lin worry_N = mkN "souci" masculine ; -- tocheck
lin worry_V = variants {} ; -- mkV2 (reflV (mkV "inquiéter")) | mkV2 (mkV "inquiéter") | mkV2 (mkV "harceler") ; -- tocheck
lin worry_V2 = mkV2 (reflV (mkV "inquiéter")) | mkV2 (mkV "inquiéter") | mkV2 (mkV "harceler") ; -- tocheck
lin worrying_A = variants {} ; --
lin worse_A = mkA "pire" ; -- tocheck
lin worse_Adv = mkAdv "pire" | mkAdv "pis" ; -- UWN
lin worse_N = mkN "pire" ; -- UWN
lin worsen_V2 = mkV2 (mkV "empirer") ; -- tocheck
lin worsening_N = mkN "aggravation" feminine ; -- tocheck
lin worship_N = mkN "culte" masculine ; -- tocheck
lin worship_V2 = mkV2 (mkV "vénérer") ; -- tocheck
lin worshiper_N = mkN "croyant" ; -- UWN
lin worshipful_A = mkA "honorable" | mkA "pieux" ; -- UWN
lin worshipper_N = mkN "fidèle" ; -- tocheck
lin worth_N = mkN "valeur" masculine ; -- tocheck
lin worth_Prep = variants {} ; --
lin worthing_PN = mkPN "Worthing" ; -- status=guess src=geonames
lin worthwhile_A = variants {} ; --
lin worthy_A = mkA "honorable" | mkA "digne" ; -- tocheck
lin worthy_N = mkN "devoir" | mkN "mérite" ; -- UWN
lin wound_N = mkN "blessure" feminine ; -- tocheck
lin wound_V2 = mkV2 (mkV "blesser") ; -- tocheck
lin wow_Interj = mkInterj "ouah!" | mkInterj "oh!" | mkInterj "waouh" ; -- tocheck
lin wow_N = mkN "crier" | mkN "émeute" ; -- UWN
lin wpm_N = mkN "mot_par_minute" ; -- UWN
lin wrack_N = mkN "goémon" | mkN "varech" ; -- UWN
lin wraith_N = mkN "fantôme" masculine ; -- tocheck
lin wrangle_V = mkV (mkV "quereller") ; -- tocheck
lin wrap_N = mkN "crêpe" feminine ; -- tocheck
lin wrap_V = variants {} ; -- mkV2 (mkV "envelopper") ; -- tocheck
lin wrap_V2 = mkV2 (mkV "envelopper") ; -- tocheck
lin wrap_up_V = mkV "couvrir" ; -- UWN
lin wrapper_N = mkN "emballeur" masculine | mkN "enveloppe" feminine ; -- tocheck
lin wrasse_N = mkN "Labridae" | mkN "labridae" | mkN "labridés" ; -- UWN
lin wrath_N = mkN "fureur" feminine | mkN "courroux" masculine ; -- tocheck
lin wrathful_A = mkA "courroucé" | mkA "furieux" ; -- UWN
lin wreath_N = mkN "guirlande" | mkN "couronne" feminine ; -- tocheck
lin wreck_N = mkN "accident" masculine | mkN "épave" feminine | mkN "carcasse" feminine ; -- tocheck
lin wreckage_N = mkN "décombres" ; -- tocheck
lin wrecker_N = mkN "camion_de_remorquage" | mkN "dépanneuse" ; -- UWN
lin wren_N = mkN "roitelet" ; -- tocheck
lin wrench_V2 = mkV2 (mkV "arracher") ; -- tocheck
lin wrestle_V2 = mkV2 (mkV "lutter") ; -- tocheck
lin wrestler_N = mkN "lutteur" ; -- tocheck
lin wrestling_N = mkN "lutte" feminine | mkN "catch" masculine ; -- tocheck
lin wretch_N = mkN "malheureux" masculine ; -- tocheck
lin wrexham_PN = mkPN "Wrexham" ; -- status=guess src=geonames
lin wriggle_N = mkN "se_tortiller" ; -- UWN
lin wriggle_V2 = mkV2 (mkV "remuer") ; -- tocheck
lin wright_N = mkN "wright" ; -- UWN
lin wring_V2 = mkV2 (mkV "essorer") | mkV2 (mkV I.tordre_V2) ; -- tocheck
lin wrinkle_N = mkN "aspérité" feminine | mkN "ride" feminine ; -- tocheck
lin wrinkle_V = mkV "chiffonner" | mkV "froisser" ; -- UWN
lin wrinkle_V2 = mkV2 (mkV "froisser") ; -- tocheck
lin wrist_N = mkN "poignet" masculine ; -- tocheck
lin wristband_N = mkN "bracelet" masculine | mkN "manchette" feminine ; -- tocheck
lin wristlet_N = mkN "bracelet" | mkN "manchette" ; -- UWN
lin wristwatch_N = mkN "montre" ; -- tocheck
lin writ_large_A = variants {} ;
lin write_V = mkV L.write_V2 ;
lin write_V2 = L.write_V2 ;
lin write_VS = mkVS (mkV I.écrire_V2) ;
lin write_down_V2 = prepV2 OP_write_V OP_down_Prep ; -- guess-p-verb
lin write_in_V = advV OP_write_V OP_in_Adv ; -- guess-p-verb
lin write_off_V2 = prepV2 OP_write_V OP_off_Prep ; -- guess-p-verb
lin write_out_V2 = prepV2 OP_write_V OP_out_Prep ; -- guess-p-verb
lin write_up_V2 = prepV2 OP_write_V OP_up_Prep ; -- guess-p-verb
lin writer_N = mkN "écrivain" masculine ; -- tocheck
lin writing_N = mkN "écriture" feminine | mkN "oeuvre" feminine ; -- tocheck
lin written_A = variants {} ; --
lin writtle_PN = mkPN "Writtle" ; -- status=guess src=geonames
lin wrong_A = mkA "immoral" | mkA "impropre" | mkA "faux" ; -- tocheck
lin wrong_Adv = variants {} ; --
lin wrong_N = mkN "crime" masculine ; -- tocheck
lin wrong_V2 = mkV2 (mkV "léser") | mkV2 (mkV I.nuire_V2) ; -- tocheck
lin wrongdoer_N = mkN "malfaiteur" masculine ; -- tocheck
lin wroth_A = mkA "courroucé" | mkA "furieux" ; -- UWN
lin wroughton_PN = mkPN "Wroughton" ; -- status=guess src=geonames
lin wry_A = mkA "ironique" | mkA "sec" | mkA "sécher" ; -- UWN
lin wuhan_PN = mkPN "Wuhan" ; -- status=guess src=geonames
lin wulfenite_N = mkN "wulfénite" ; -- UWN
lin wuppertal_PN = mkPN "Wuppertal" ; -- status=guess src=geonames
lin wymondham_PN = mkPN "Wymondham" ; -- status=guess src=geonames
lin wyoming_PN = mkPN "Wyoming" ; -- status=guess src=geonames
lin wyvern_N = mkN "vouivre" ; -- tocheck
lin x_ray_N = variants {} ; --
lin xanthelasma_N = mkN "xanthelasma" | mkN "xanthélasma" ; -- UWN
lin xanthoma_N = mkN "xanthome" ; -- UWN
lin xanthophyll_N = mkN "Xanthophylle" | mkN "lutéine" | mkN "xanthophylle" | mkN "xanthophylles" ; -- UWN
lin xanthopsia_N = mkN "xanthopsie" ; -- UWN
lin xenolith_N = mkN "xénolite" | mkN "xénolithe" ; -- UWN
lin xenon_N = mkN "xénon" masculine ; -- tocheck
lin xenophobia_N = mkN "xénophobie" ; -- tocheck
lin xenophobic_A = mkA "xénophobe" ; -- tocheck
lin xeranthemum_N = mkN "xeranthemum" ; -- UWN
lin xeroderma_N = mkN "xeroderma" | mkN "xérodermie" ; -- UWN
lin xerography_N = mkN "xérographie" feminine ; -- tocheck
lin xerophthalmia_N = mkN "xérophtalmie" feminine ; -- tocheck
lin xerophytic_A = mkA "xérophytique" ; -- UWN
lin xerostomia_N = mkN "xérostomie" ; -- UWN
lin xi_N = mkN "xi" masculine ; -- tocheck
lin xylem_N = mkN "tissu_xylémique" | mkN "xylème" ; -- UWN
lin xylene_N = mkN "xylène" masculine ; -- tocheck
lin xylophone_N = mkN "xylophone" masculine ; -- tocheck
lin yacht_N = mkN "yacht" masculine ; -- tocheck
lin yachting_N = mkN "yachting" ; -- UWN
lin yachtsman_N = mkN "yachtsman" masculine ; -- tocheck
lin yak_N = mkN "yack" masculine ; -- tocheck
lin yam_N = mkN "igname" feminine ; -- tocheck
lin yammer_V = mkV "pleurnicher" ; -- UWN
lin yang_N = mkN "yang" ; -- UWN
lin yap_V = mkV (mkV "japper") ; -- tocheck
lin yard_N = mkN "cour" feminine | mkN "verge" feminine | mkN "yard" masculine ; -- tocheck
lin yardie_N = mkN "yardie" ; -- UWN
lin yarmouth_PN = mkPN "Yarmouth" ; -- status=guess src=geonames
lin yarmulke_N = mkN "kippa" feminine ; -- tocheck
lin yarn_N = mkN "fil" masculine | mkN "corde" feminine ; -- tocheck
lin yarrow_N = mkN "achillée" feminine ; -- tocheck
lin yashmak_N = mkN "litham" masculine ; -- tocheck
lin yataghan_N = mkN "yatagan" masculine ; -- tocheck
lin yate_PN = mkPN "Yate" ; -- status=guess src=geonames
lin yateley_PN = mkPN "Yateley" ; -- status=guess src=geonames
lin yaw_N = mkN "lacet" masculine ; -- tocheck
lin yawl_N = mkN "yole" ; -- UWN
lin yawn_N = mkN "bâillement" masculine ; -- tocheck
lin yawn_V = mkV (mkV "bâiller") ; -- tocheck
lin yaws_N = mkN "pian" ; -- UWN
lin yea_Adv = mkAdv "ouais" | mkAdv "oui" ; -- UWN
lin yeah_Interj = mkInterj "oui" ; ----
lin year_N = mkN "an" | mkN "année" ; ---- split
lin yearbook_N = mkN "annuaire" masculine ; -- tocheck
lin yearly_A = mkA "annuel" ; -- tocheck
lin yearly_Adv = mkAdv "annuellement" | adjAdv yearly_A ; -- tocheck -- derived
lin yearn_V = mkV (mkV "languir") ; -- tocheck
lin yearning_N = mkN "aspiration" feminine ; -- tocheck
lin yearningly_Adv = mkAdv "impatiemment" ; -- UWN
lin yeast_N = mkN "levure" feminine | mkN "écume" feminine ; -- tocheck
lin yell_V = variants {} ; -- mkV2 (mkV "crier") ; -- tocheck
lin yell_V2 = mkV2 (mkV "crier") ; -- tocheck
lin yellow_A = L.yellow_A ;
lin yellow_N = mkN "jaune" masculine ; -- tocheck
lin yellow_V2 = mkV2 (mkV "jaunir") ; -- tocheck
lin yellowness_N = mkN "jaune" ; -- UWN
lin yelp_V = mkV (mkV "japper") ; -- tocheck
lin yemen_PN = mkPN "Yémen" ; -- status=guess src=geonames
lin yeovil_PN = mkPN "Yeovil" ; -- status=guess src=geonames
lin yep_Interj = variants {} ; --
lin yerevan_PN = mkPN "Erevan" ; -- status=guess src=geonames
lin yes_Interj = mkInterj "oui" ;
lin yes_Utt = S.yes_Utt ;
lin yeshiva_N = mkN "yechiva" feminine ; -- tocheck
lin yesterday_Adv = mkAdv "hier" ;
lin yesterday_N = mkN "hier" ; -- tocheck
lin yet_1_Adv = mkAdv "encore" ;
lin yet_2_Adv = mkAdv "pourtant" ;
lin yet_AdV = mkAdV "encore" | mkAdV "même" ; -- UWN
lin yet_Adv = mkAdv "encore" ;
lin yeti_N = mkN "yéti" masculine ; -- tocheck
lin yew_N = mkN "if" masculine | mkN "if" ; -- tocheck
lin yield_N = mkN "rendement" ; -- tocheck
lin yield_V2 = mkV2 (reflV (mkV I.rendre_V2)) | mkV2 (mkV "céder") | mkV2 (mkV "retourner") | mkV2 (mkV "rapporter") ; -- tocheck
lin yin_N = mkN "yin" ; -- UWN
lin yips_N = mkN "yips" ; -- UWN
lin ylem_N = mkN "ylem" ; -- UWN
lin yo_yo_N = mkN "yo-yo" masculine ; -- tocheck
lin yob_N = mkN "voyou" ; -- tocheck
lin yodel_N = mkN "yodel" masculine ; -- tocheck
lin yodel_V2 = mkV2 (mkV "iodler") ; -- tocheck
lin yoga_N = mkN "yoga" masculine ; -- tocheck
lin yoghourt_N = mkN "yaourt" | mkN "yoghourt" | mkN "yogourt" ; -- UWN
lin yogi_N = mkN "yogi" masculine ; -- tocheck
lin yogistic_A = mkA "yogique" ; -- UWN
lin yoke_N = mkN "joug" masculine ; -- tocheck
lin yokel_N = mkN "cul-terreux" | mkN "laboureur" | mkN "paquet" | mkN "plouc" | mkN "péquenaud" ; -- UWN
lin yokohama_PN = mkPN "Yokohama" ; -- status=guess src=geonames
lin yonder_Adv = mkAdv "là-bas" ; -- tocheck
lin yore_N = mkN "jadis" ; -- tocheck
lin york_PN = mkPN "York" ; -- status=guess src=geonames
lin yorkshire_PN = mkPN "Yorkshire" ; -- status=guess src=geonames
lin youPlFem_Pron = E.youPl8fem_Pron ;
lin youPl_Pron = S.youPl_Pron ;
lin youPolFem_Pron = E.youPol8fem_Pron ;
lin youPol_Pron = S.youPol_Pron ;
lin youSgFem_Pron = E.youSg8fem_Pron ;
lin youSg_Pron = S.youSg_Pron ;
lin young_A = L.young_A ;
lin young_N = mkN "petit" masculine | mkN "jeune" masculine ; -- tocheck
lin younger_A = mkA "minime" | mkA "petit" ; -- UWN
lin youngish_A = mkA "jeunot" ; -- UWN
lin youngster_N = variants {} ; --
lin youth_N = mkN "jeunesse" feminine | mkN "jeune" masculine | mkN "jeune" feminine ; -- tocheck
lin youthful_A = mkA "juvénile" ; -- tocheck
lin youthfulness_N = mkN "jeune" | mkN "jeunesse" | mkN "jouvence" ; -- UWN
lin yr_N = mkN "an" | mkN "année" ; -- UWN
lin ystradgynlais_PN = mkPN "Ystradgynlais" ; -- status=guess src=geonames
lin ytterbium_N = mkN "ytterbium" masculine ; -- tocheck
lin yttrium_N = mkN "yttrium" masculine ; -- tocheck
lin yuan_N = mkN "yuan" masculine ; -- tocheck
lin yucca_N = mkN "yucca" ; -- UWN
lin yukon_PN = mkPN "Yukon" ; -- status=guess src=geonames
lin yuppie_N = mkN "yuppie" ; -- UWN
lin yurt_N = mkN "yourte" feminine ; -- tocheck
lin zabaglione_N = mkN "sabayon" masculine ; -- tocheck
lin zagreb_PN = mkPN "Zagreb" ; -- status=guess src=geonames
lin zaire_N = mkN "zaïre" masculine ; -- tocheck
lin zakat_N = mkN "zakah" | mkN "zakat" | mkN "zakât" ; -- UWN
lin zambia_PN = mkPN "Zambie" ; -- status=guess src=geonames
lin zamia_N = mkN "zamia" ; -- UWN
lin zany_A = mkA "loufoque" ; -- tocheck
lin zap_V2 = mkV2 (mkV "zapper") ; -- tocheck
lin zaragoza_PN = mkPN "Saragosse" ; -- status=guess src=geonames
lin zeal_N = mkN "zèle" masculine ; -- tocheck
lin zealotFem_N = mkN "zélote" feminine ; -- tocheck
lin zealotMasc_N = mkN "zélote" masculine ; -- tocheck
lin zealous_A = mkA "zélé" ; -- tocheck
lin zeaxanthin_N = mkN "Zéaxanthine" | mkN "zéaxanthine" | mkN "zéaxantine" ; -- UWN
lin zebra_N = mkN "zèbre" masculine ; -- tocheck
lin zebu_N = mkN "zébu" masculine ; -- tocheck
lin zenith_N = mkN "zénith" masculine ; -- tocheck
lin zeolite_N = mkN "zéolite" | mkN "zéolithe" ; -- UWN
lin zephyr_N = mkN "zéphyr" masculine ; -- tocheck
lin zeppelin_N = mkN "zeppelin" masculine ; -- tocheck
lin zero_A = mkA "zéro" ; -- UWN
lin zero_N = mkN "zéro" masculine ; -- tocheck
lin zeroth_A = mkA "zérotième" | mkA "zeroième" ; -- tocheck
lin zeta_N = mkN "zéta" masculine ; -- tocheck
lin zeugma_N = mkN "zeugma" | mkN "zeugme" ; -- UWN
lin ziggurat_N = mkN "ziggourat" feminine ; -- tocheck
lin zigzag_Adv = mkAdv "zigzag" ; -- UWN
lin zigzag_N = mkN "zigzag" masculine ; -- tocheck
lin zigzag_V = mkV (mkV "zigzaguer") ; -- tocheck
lin zimbabwe_PN = mkPN "Zimbabwe" ; -- status=guess src=geonames
lin zinc_N = mkN "zinc" masculine ; -- tocheck
lin zinfandel_N = mkN "zinfandel" ; -- UWN
lin zing_N = mkN "sève" ; -- tocheck
lin zinkenite_N = mkN "zinkénite" ; -- UWN
lin zinnia_N = mkN "zinnia" ; -- UWN
lin zinnwaldite_N = mkN "zinnwaldite" ; -- UWN
lin zip_N = mkN "fermeture_Éclair" | mkN "fermeture_à_glissière" | mkN "fermeture_éclair" ; -- UWN
lin zipper_N = mkN "fermeture_Éclair" | mkN "fermeture_à_glissière" | mkN "fermeture_éclair" ; -- UWN
lin zircon_N = mkN "zircon" masculine ; -- tocheck
lin zirconium_N = mkN "zirconium" masculine ; -- tocheck
lin zither_N = mkN "cithare" feminine ; -- tocheck
lin zloty_N = mkN "zloty" masculine ; -- tocheck
lin zoanthropy_N = mkN "zoanthropie" ; -- UWN
lin zodiac_N = mkN "zodiaque" masculine ; -- tocheck
lin zombie_N = mkN "zombi" ; -- tocheck
lin zone_N = mkN "zone" feminine ; -- tocheck
lin zoning_N = mkN "zonage" ; -- UWN
lin zoo_N = mkN "zoo" masculine ; -- tocheck
lin zooid_N = mkN "zooïde" ; -- UWN
lin zoological_A = mkA "zoologique" ; -- tocheck
lin zoologist_N = mkN "zoologiste" ; -- tocheck
lin zoology_N = mkN "zoologie" feminine ; -- tocheck
lin zoomorphism_N = mkN "zoomorphisme" masculine ; -- tocheck
lin zoonosis_N = mkN "zoonose" feminine ; -- tocheck
lin zoophilia_N = mkN "zoophilie" feminine ; -- tocheck
lin zoophobia_N = mkN "zoophobie" feminine ; -- tocheck
lin zoophyte_N = mkN "Zoophyte" | mkN "zoophyte" ; -- UWN
lin zooplankton_N = mkN "zooplancton" ; -- UWN
lin zoysia_N = mkN "zoysia" ; -- UWN
lin zydeco_N = mkN "zydeco" ; -- UWN
lin zygomatic_A = mkA "zygomatique" ; -- tocheck
lin zygomorphic_A = mkA "zygomorphe" ; -- UWN
lin zygote_N = mkN "zygote" masculine ; -- tocheck
lin zymase_N = mkN "zymase" feminine ; -- tocheck
oper OP_by_Prep : Prep = mkPrep "par" ;
oper OP_for_Prep : Prep = S.for_Prep ;
oper OP_on_Prep : Prep = S.on_Prep ;
oper OP_out_Prep : Prep = variants {} ; --
oper OP_upon_Prep : Prep = mkPrep "sur" ;
oper OP_up_Prep : Prep = mkPrep "en haut" ; ----
oper OP_to_Prep : Prep = S.to_Prep ;
oper OP_with_Prep : Prep = S.with_Prep ;
oper OP_at_Prep : Prep = ParadigmsFre.dative | mkPrep "chez" ; ---- split
oper OP_of_Prep : Prep = ParadigmsFre.genitive ;
oper OP_down_Prep : Prep = variants {} ; --
oper OP_about_Prep : Prep = mkPrep "sur" ;
oper OP_after_Prep : Prep = S.after_Prep ;
oper OP_around_Prep : Prep = mkPrep "environ" ; ---- split: autour de
oper OP_in_Prep : Prep = mkPrep "dans" | mkPrep "en" | complDat ;
oper OP_over_Prep : Prep = lin Prep {s = "à travers" ; c = CPrep P_de ; isDir = False} ; --- split sense
oper OP_round_Prep : Prep = variants {} ; --
oper OP_off_Prep : Prep = P.mkPrep ("à part") P.genitive ;
oper OP_into_Prep : Prep = mkPrep "dans" ;
oper OP_under_Prep : Prep = S.under_Prep ;
oper OP_through_Prep : Prep = S.through_Prep ;
oper OP_along_Prep : Prep = variants {} ; --
oper OP_across_Prep : Prep = mkPrep "à travers" P.genitive ; ----
oper OP_before_Prep : Prep = S.before_Prep ;
oper OP_from_Prep : Prep = S.from_Prep ;
oper OP_against_Prep : Prep = mkPrep "contre" ;
oper OP_among_Prep : Prep = mkPrep "parmi" ;
oper OP_towards_Prep : Prep = mkPrep "vers" ;
oper OP_as_Prep : Prep = mkPrep "comme" ;
oper OP_onto_Prep : Prep = variants {} ; --
oper OP_above_Prep : Prep = S.above_Prep ;
oper OP_behind_Prep : Prep = S.behind_Prep ;
oper OP_past_Prep : Prep = variants {} ; --
oper OP_without_Prep : Prep = S.without_Prep ;
oper OP_toward_Prep : Prep = mkPrep "envers" ; ---- sense
oper OP_up_Adv : Adv = mkAdv "en haut" ;
oper OP_in_Adv : Adv = mkAdv "dedans" ;
oper OP_on_Adv : Adv = mkAdv "là-dessus" ; ----
oper OP_back_Adv : Adv = mkAdv "en retour" ; ----
oper OP_around_Adv : Adv = mkAdv "en ronde" ; ----
oper OP_away_Adv : Adv = mkAdv "loin" ; ----
oper OP_down_Adv : Adv = mkAdv "en bas" ;
oper OP_off_Adv : Adv = mkAdv "dehors" ; ----
oper OP_out_Adv : Adv = mkAdv "dehors" ;
oper OP_about_Adv : Adv = mkAdv "environ" ;
oper OP_over_Adv : Adv = mkAdv "fini" ; --- split sense:
oper OP_apart_Adv : Adv = mkAdv "séparé" ; -- tocheck
oper OP_along_Adv : Adv = mkAdv "accompagné" ; -- tocheck
oper OP_forth_Adv : Adv = variants {} ; --
oper OP_forward_Adv : Adv = variants {} ; --
oper OP_aside_Adv : Adv = variants {} ; --
oper OP_under_Adv : Adv = mkAdv "moins" | mkAdv "dessous" ; -- tocheck
oper OP_round_Adv : Adv = mkAdv "rond" ; -- UWN
oper OP_together_Adv : Adv = mkAdv "ensemble" ;
oper OP_across_Adv : Adv = mkAdv "à travers" ; ----
oper OP_by_Adv : Adv = mkAdv "loin" ; -- UWN
oper OP_through_Adv : Adv = variants {} ; -- S.through_Prep ;
oper OP_to_Adv : Adv = variants {} ; -- S.to_Prep ;
oper OP_even_Adv : Adv = mkAdv "même" ;
oper OP_clean_Adv : Adv = mkAdv "nettoyer" | mkAdv "prune" | mkAdv "prunier" ; -- UWN
oper OP_behind_Adv : Adv = variants {} ; -- S.behind_Prep ;
oper OP_ahead_Adv : Adv = variants {} ; --
oper OP_way_Adv : Adv = mkAdv "très" ; -- tocheck
oper OP_before_Adv : Adv = mkAdv "avant" ; -- tocheck
oper OP_below_Adv : Adv = mkAdv "ci-dessous" ; -- tocheck
oper OP_for_Adv : Adv = mkAdv "pour" ;
oper OP_open_Adv : Adv = variants {} ; --
oper OP_after_Adv : Adv = mkAdv "après" ; -- tocheck
oper OP_clear_Adv : Adv = mkAdv "clairement" ; -- UWN
oper OP_account_V : V = variants {} ; --
oper OP_act_V : V = mkV "agir" ;
oper OP_add_V : V = mkV "additionner" ;
oper OP_agree_V : V = reflV (mkV "accorder") ; --- être d'accord ??
oper OP_aim_V : V = variants {} ; -- mkV2 (mkV "cibler") | mkV2 (mkV "viser") ; -- tocheck
oper OP_answer_V : V = variants {} ; -- mkV2 (mkV I.répondre_V2) ; -- tocheck
oper OP_apply_V : V = reflV (mkV "appliquer") ; ----
oper OP_argue_V : V = variants {} ; -- mkV2 (mkV "affirmer") | mkV2 (mkV "arguer") ; -- tocheck
oper OP_ask_V : V = mkV "demander" ;
oper OP_back_V : V = variants {} ; -- mkV2 (mkV I.soutenir_V2) ; -- tocheck
oper OP_bear_V : V = mkV "porter" ; ----
oper OP_beat_V : V = variants {} ; -- mkV2 (mkV I.battre_V2) | mkV2 (mkV I.vaincre_V2) ; -- tocheck
oper OP_bend_V : V = mkV "déformer" | mkV "tordre" ; -- UWN
oper OP_blow_V : V = L.blow_V ;
oper OP_break_V : V = mkV L.break_V2 ;
oper OP_build_V : V = mkV "bâtir" | mkV I.construire_V2 ;
oper OP_burn_V : V = L.burn_V ;
oper OP_burst_V : V = mkV "exploser" ; -- UWN
oper OP_buy_V : V = mkV L.buy_V2 ;
oper OP_call_V : V = mkV "appeler" ;
oper OP_care_V : V = mkV (reflV (mkV "soucier")) | mkV (mkV "soigner") ; -- tocheck
oper OP_carry_V : V = mkV "porter" ;
oper OP_cast_V : V = variants {} ; -- mkV2 (mkV "jeter") | mkV2 (mkV "sonder") | mkV2 (mkV "couler") ; -- tocheck
oper OP_change_V : V = reflV (mkV "changer") ;
oper OP_charge_V : V = variants {} ; -- mkV2 (mkV "charger") | mkV2 (mkV "accuser") | mkV2 (mkV "armer") ; -- tocheck
oper OP_check_V : V = mkV "vérifier" ; -- UWN
oper OP_clean_V : V = variants {} ; -- mkV2 (mkV "nettoyer") | mkV2 (mkV "ranger") ; -- tocheck
oper OP_clear_V : V = variants {} ; -- mkV2V (mkV "débarrasser") | mkV2V (reflV (mkV "éclaircir")) | mkV2V (mkV "clarifier") ; -- tocheck
oper OP_climb_V : V = variants {} ; -- mkV2 (mkV "grimper") | mkV2 (mkV "escalader") ; -- tocheck
oper OP_close_V : V = variants {} ; -- L.close_V2 ;
oper OP_come_V : V = L.come_V ;
oper OP_continue_V : V = mkV "continuer" ;
oper OP_cost_V : V = mkV "coûter" ;
oper OP_count_V : V = variants {} ; -- L.count_V2 ;
oper OP_crash_V : V = variants {} ; -- mkV2 (mkV "planter") | mkV2 (reflV (mkV "écraser")) | mkV2 (mkV "pieuter") ; -- tocheck
oper OP_cross_V : V = variants {} ; -- mkV2 (mkV "contrecarrer") | mkV2 (mkV "traverser") | mkV2 (mkV "croiser") ; -- tocheck
oper OP_cry_V : V = variants {} ; -- mkV2 (mkV "crier") | mkV2 (mkV "pleurer") ; -- tocheck
oper OP_cut_V : V = mkV L.cut_V2 ;
oper OP_decide_V : V = mkV "décider" ;
oper OP_die_V : V = L.die_V ;
oper OP_dig_V : V = L.dig_V ;
oper OP_divide_V : V = variants {} ; -- mkV2 (mkV "diviser") | mkV2 (reflV (mkV "diviser")) | mkV2 (mkV "partager") ; -- tocheck
oper OP_double_V : V = variants {} ; -- mkV2 (mkV "doubler") ; -- tocheck
oper OP_drag_V : V = variants {} ; -- mkV2 (mkV "traîner") ; -- tocheck
oper OP_draw_V : V = mkV "dessiner" ;
oper OP_dream_V : V = variants {} ; -- mkV2 (mkV "rêver") | mkV2 (mkV "rêvasser") ; -- tocheck
oper OP_dress_V : V = variants {} ; -- mkV2 (mkV "panser") | mkV2 (reflV (mkV "habiller")) | mkV2 (mkV "habiller") ; -- tocheck
oper OP_drink_V : V = mkV L.drink_V2 ;
oper OP_drive_V : V = I.conduire_V2 | mkV "piloter" ; ---- END edits AR
oper OP_drop_V : V = variants {} ; -- mkV2 (mkV "tomber") ; -- tocheck
oper OP_dry_V : V = variants {} ; -- mkV2 (mkV "sécher") ; -- tocheck
oper OP_ease_V : V = variants {} ; --
oper OP_eat_V : V = variants {} ; -- L.eat_V2 ;
oper OP_end_V : V = mkV "achever" | mkV "arrêter" | mkV "finir" | mkV "terminer" ; -- UWN
oper OP_enter_V : V = variants {} ; -- mkV2 (mkV "entrer") | mkV2 (mkV "taper") ; -- tocheck
oper OP_face_V : V = mkV "affronter" ;
oper OP_fall_V : V = etreV (mkV "tomber") ;
oper OP_feed_V : V = variants {} ; -- mkV2 (mkV "nourrir") | mkV2 (mkV "manger") ; -- tocheck
oper OP_feel_V : V = (mkV I.sentir_V2) ;
oper OP_fight_V : V = mkV "batailler" | mkV "combattre" | mkV "lutter" ; -- UWN
oper OP_figure_V : V = mkV "comprendre" | mkV "imaginer" | mkV "prévoir" | mkV "visualiser" | mkV "voir" ; -- UWN
oper OP_file_V : V = mkV "fichier" ; -- UWN
oper OP_fill_V : V = mkV "combler" ; -- UWN
oper OP_find_V : V = mkV "trouver" ;
oper OP_finish_V : V = mkV "achever" | mkV "finir" ; -- UWN
oper OP_fire_V : V = variants {} ; -- mkV2 (mkV "tirer") | mkV2 (mkV I.cuire_V2) | mkV2 (mkV "licencier") ; -- tocheck
oper OP_fit_V : V = variants {} ; -- mkV2 (mkV I.convenir_V2) | mkV2 (mkV "ajuster") ; -- tocheck
oper OP_fix_V : V = variants {} ; -- mkV2 (mkV "fixer") | mkV2 (mkV "réparer") ; -- tocheck
oper OP_fly_V : V = L.fly_V ;
oper OP_focus_V : V = mkV "centrer" | mkV "concentrer" ; -- UWN
oper OP_follow_V : V = mkV I.suivre_V2 ;
oper OP_force_V : V = variants {} ; -- mkV2V (mkV "forcer") ; -- tocheck
oper OP_gain_V : V = mkV "acquérir" | mkV "gagner" | mkV "obtenir" ; -- UWN
oper OP_give_V : V = mkV "donner" ;
oper OP_go_V : V = L.go_V ;
oper OP_grow_V : V = I.croître_V | mkV "pousser" | mkV "grandir" ;
oper OP_hang_V : V = variants {} ; -- mkV2 (mkV I.pendre_V2) | mkV2 (mkV "rôder") | mkV2 (mkV "orner") | mkV2 (mkV "exposer") | mkV2 (mkV "peser") | mkV2 (mkV "baisser") | mkV2 (mkV "accrocher") ; -- tocheck
oper OP_have_V : V = mkV S.have_V2 ;
oper OP_head_V : V = variants {} ; -- mkV2 (mkV "commander") ; -- tocheck
oper OP_hear_V : V = mkV I.entendre_V2 ;
oper OP_help_V : V = mkV "aider" ;
oper OP_hide_V : V = variants {} ; -- mkV2 (mkV "cacher") | mkV2 (reflV (mkV "cacher")) ; -- tocheck
oper OP_hit_V : V = variants {} ; -- L.hit_V2 ;
oper OP_hold_V : V = mkV I.tenir_V2 ;
oper OP_issue_V : V = variants {} ; --
oper OP_join_V : V = reflV (mkV I.joindre_V2) ;
oper OP_jump_V : V = L.jump_V ;
oper OP_keep_V : V = mkV "rester" ; ----
oper OP_kick_V : V = mkV (mkV "donner") "un coup de pied" ;
oper OP_kill_V : V = variants {} ; -- L.kill_V2 ;
oper OP_knock_V : V = mkV "frapper" ; -- UWN
oper OP_land_V : V = variants {} ; -- mkV2 (mkV "poser") | mkV2 (reflV (mkV "poser")) ; -- tocheck
oper OP_laugh_V : V = L.laugh_V ;
oper OP_lay_V : V = variants {} ; -- mkV2 (mkV "coucher") | mkV2 (mkV I.pondre_V2) ; -- tocheck
oper OP_lead_V : V = mkV "diriger" ;
oper OP_lean_V : V = variants {} ; -- mkV2 (reflV (mkV "pencher")) | mkV2 (reflV (mkV "presser")) ; -- tocheck
oper OP_leave_V : V = I.partir_V | mkV "quitter" ;
oper OP_lie_V : V = L.lie_V ;
oper OP_lift_V : V = variants {} ; -- mkV2 (mkV "lever") ; -- tocheck
oper OP_light_V : V = mkV "illuminer" ; -- UWN
oper OP_link_V : V = variants {} ; -- mkV2 (mkV "relier") ; -- tocheck
oper OP_listen_V : V = mkV (mkV "écouter") ; -- tocheck
oper OP_live_V : V = L.live_V ; --- split
oper OP_lock_V : V = variants {} ; -- mkV2 (mkV "fermer") ; -- tocheck
oper OP_look_V : V = mkV "regarder" ;
oper OP_lose_V : V = mkV L.lose_V2 ;
oper OP_make_V : V = mkV I.faire_V2 ;
oper OP_marry_V : V = mkV "marier" | mkV "épouser" ; -- UWN
oper OP_measure_V : V = variants {} ; -- mkV2 (mkV "mesurer") ; -- tocheck
oper OP_meet_V : V = reflV (mkV I.voir_V2) ;
oper OP_miss_V : V = mkV "manquer" ; -- UWN
oper OP_mix_V : V = variants {} ; -- mkV2 (mkV "mélanger") | mkV2 (mkV "mixer") ; -- tocheck
oper OP_mount_V : V = variants {} ; -- mkV2 (mkV "chevaucher") ; -- tocheck
oper OP_move_V : V = reflV (mkV I.mouvoir_V2) | reflV (mkV "bouger") ;
oper OP_nod_V : V = variants {} ; --
oper OP_note_V : V = variants {} ; -- mkV2 (mkV "noter") ; -- tocheck
oper OP_occur_V : V = mkV (reflV (mkV I.produire_V2)) | mkV (mkV "arriver") | mkV (reflV (mkV "retrouver")) ; -- tocheck
oper OP_open_V : V = mkV L.open_V2 ;
oper OP_operate_V : V = variants {} ; -- mkV2 (mkV "opérer") ; -- tocheck
oper OP_pack_V : V = variants {} ; -- mkV2 (mkV "emballer") ; -- tocheck
oper OP_pass_V : V = mkV "passer" ;
oper OP_pay_V : V = reflV (mkV "payer") ;
oper OP_pick_V : V = mkV "cueillir" ; -- UWN
oper OP_play_V : V = mkV "jouer" ;
oper OP_point_V : V = variants {} ; -- mkV2 (mkV "pointer") ; -- tocheck
oper OP_pour_V : V = mkV "affluer" ; -- UWN
oper OP_press_V : V = variants {} ; -- mkV2V (mkV "appuyer") | mkV2V (mkV "presser") ; -- tocheck
oper OP_print_V : V = mkV "carrer" | mkV "deviner" | mkV "imaginer" | mkV "imprimer" | mkV "publier" | mkV "rétorquer" | mkV "éditer" ; -- UWN
oper OP_pull_V : V = variants {} ; -- L.pull_V2 ;
oper OP_push_V : V = variants {} ; -- L.push_V2 ;
oper OP_race_V : V = variants {} ; -- mkV2V (reflV (mkV "élancer")) ; -- tocheck
oper OP_reach_V : V = mkV I.atteindre_V2 ;
oper OP_read_V : V = mkV L.read_V2 ;
oper OP_rely_V : V = variants {} ; --
oper OP_report_V : V = mkV "rapporter" ;
oper OP_ride_V : V = variants {} ; -- mkV2 (mkV "rouler") ; -- tocheck
oper OP_ring_V : V = mkV "résonner" ; -- UWN
oper OP_roll_V : V = variants {} ; -- mkV2 (mkV "rouler") ; -- tocheck
oper OP_rule_V : V = variants {} ; -- mkV2 (mkV "gouverner") ; -- tocheck
oper OP_run_V : V = L.run_V ;
oper OP_rush_V : V = variants {} ; -- mkV2V (reflV (mkV "dépêcher")) ; -- tocheck
oper OP_sail_V : V = variants {} ; -- mkV2 (mkV "voler") ; -- tocheck
oper OP_save_V : V = variants {} ; -- mkV2 (mkV "épargner") | mkV2 (mkV "économiser") | mkV2 (mkV "sauver") | mkV2 (mkV "sauvegarder") ; -- tocheck
oper OP_see_V : V = mkV I.voir_V2 ;
oper OP_seize_V : V = variants {} ; -- mkV2 (mkV "saisir") ; -- tocheck
oper OP_sell_V : V = mkV I.vendre_V2 ;
oper OP_send_V : V = I.envoyer_V2 ;
oper OP_settle_V : V = variants {} ; -- mkV2 (reflV (mkV "installer")) ; -- tocheck
oper OP_shake_V : V = variants {} ; -- mkV2 (mkV "secouer") | mkV2 (reflV (mkV "secouer")) ; -- tocheck
oper OP_shape_V : V = variants {} ; --
oper OP_share_V : V = variants {} ; -- mkV2 (mkV "partager") ; -- tocheck
oper OP_shoot_V : V = variants {} ; -- mkV2 (mkV "tirer") ; -- tocheck
oper OP_shout_V : V = variants {} ; -- mkV2 (mkV "crier") ; -- tocheck
oper OP_show_V : V = reflV (mkV "montrer") ;
oper OP_sign_V : V = mkV "abonner" | mkV "signer" | mkV "souscrire" ; -- UWN
oper OP_sing_V : V = L.sing_V ;
oper OP_sink_V : V = variants {} ; -- mkV2 (mkV "couler") | mkV2 (reflV (mkV "enfoncer")) ; -- tocheck
oper OP_sit_V : V = L.sit_V ;
oper OP_sleep_V : V = L.sleep_V ;
oper OP_slip_V : V = mkV "déraper" | mkV "glisser" ; -- UWN
oper OP_smoke_V : V = mkV "fumer" ; -- UWN
oper OP_snap_V : V = mkV "claquer" ; -- UWN
oper OP_sort_V : V = variants {} ; -- mkV2 (mkV "trier") ; -- tocheck
oper OP_sound_V : V = variants {} ; -- mkV2 (mkV "exprimer") | mkV2 (mkV "sonder") | mkV2 (mkV "sonner") | mkV2 (mkV "prononcer") | mkV2 (mkV "tester") ; -- tocheck
oper OP_speak_V : V = mkV L.speak_V2 ;
oper OP_split_V : V = mkV "exploser" ; -- UWN
oper OP_spread_V : V = variants {} ; -- mkV2V (mkV I.étendre_V2) | mkV2V (mkV "écarter") | mkV2V (mkV "disperser") | mkV2V (mkV "étaler") | mkV2V (mkV I.répandre_V2) ; -- tocheck
oper OP_stand_V : V = L.stand_V | reflV (mkV "lever") ;
oper OP_start_V : V = mkV "commencer" ;
oper OP_stay_V : V = etreV (mkV "rester") ;
oper OP_steal_V : V = mkV "voler" ; -- UWN
oper OP_step_V : V = variants {} ; -- mkV2 (mkV "marcher") ; -- tocheck
oper OP_stick_V : V = variants {} ; -- mkV2 (mkV "coller") | mkV2 (mkV "coincer") | mkV2 (mkV "rester") | mkV2 (mkV "ficher") | mkV2 (mkV "planter") | mkV2 (mkV "bouturer") ; -- tocheck
oper OP_stir_V : V = variants {} ; -- mkV2 (mkV "agiter") | mkV2 (mkV "remuer") | mkV2 (mkV "bouger") ; -- tocheck
oper OP_stop_V : V = L.stop_V ;
oper OP_stretch_V : V = variants {} ; -- mkV2 (reflV (mkV I.étendre_V2)) | mkV2 (reflV (mkV "étirer")) | mkV2 (mkV I.étendre_V2) ; -- tocheck
oper OP_strike_V : V = variants {} ; -- mkV2 (mkV "biffer") | mkV2 (mkV "frapper") ; -- tocheck
oper OP_struggle_V : V = mkV (mkV "lutter") ; -- tocheck
oper OP_suit_V : V = variants {} ; -- mkV2 (mkV I.convenir_V2) ; -- tocheck
oper OP_sweep_V : V = mkV "balayer" ; -- UWN
oper OP_swing_V : V = mkV "balançoire" ; -- UWN
oper OP_switch_V : V = variants {} ; -- mkV2 (mkV "changer") | mkV2 (mkV "commuter") | mkV2 (mkV "échanger") ; -- tocheck
oper OP_talk_V : V = mkV "parler" ;
oper OP_tap_V : V = variants {} ; -- mkV2 (mkV "taper") | mkV2 (mkV "tirer") | mkV2 (mkV "tarauder") ; -- tocheck
oper OP_tear_V : V = variants {} ; -- mkV2 (reflV (mkV "déchirer")) | mkV2 (mkV "déchirer") | mkV2 (mkV "démolir") | mkV2 (mkV "larmoyer") ; -- tocheck
oper OP_tell_V : V = mkV "raconter" ;
oper OP_think_V : V = L.think_V ;
oper OP_throw_V : V = mkV "jeter" ; -- UWN
oper OP_tie_V : V = variants {} ; -- L.tie_V2 ;
oper OP_touch_V : V = variants {} ; -- mkV2 (mkV "toucher") ; -- tocheck
oper OP_trade_V : V = variants {} ; -- mkV2 (mkV "échanger") ; -- tocheck
oper OP_train_V : V = variants {} ; -- mkV2V (reflV (mkV "exercer")) | mkV2V (mkV "pointer") | mkV2V (reflV (mkV "entraîner")) | mkV2V (mkV "former") ; -- tocheck
oper OP_try_V : V = mkV "essayer" ;
oper OP_turn_V : V = L.turn_V ;
oper OP_use_V : V = mkV "utiliser" ;
oper OP_vote_V : V = variants {} ; -- mkV2 (mkV "voter") ; -- tocheck
oper OP_wait_V : V = mkV "attendre" ;
oper OP_wake_V : V = variants {} ; -- mkV2 (mkV "réveiller") | mkV2 (reflV (mkV "réveiller")) ; -- tocheck
oper OP_walk_V : V = L.walk_V ;
oper OP_wander_V : V = variants {} ; -- mkV2 (mkV "errer") ; -- tocheck
oper OP_want_V : V = mkV I.vouloir_V2 ;
oper OP_wash_V : V = mkV "laver" ; -- UWN
oper OP_waste_V : V = mkV "pourrir" ; -- UWN
oper OP_watch_V : V = mkV L.watch_V2 ;
oper OP_wave_V : V = variants {} ; -- mkV2 (mkV "onduler") | mkV2 (mkV "saluer") ; -- tocheck
oper OP_wear_V : V = mkV "casser" ; -- UWN
oper OP_win_V : V = mkV I.vaincre_V2 ;
oper OP_wind_V : V = mkV "hisser" | mkV "élever" ; -- UWN
oper OP_wipe_V : V = variants {} ; -- L.wipe_V2 ;
oper OP_work_V : V = mkV "travailler" ;
oper OP_write_V : V = mkV L.write_V2 ;
oper OP_allow_V2 : V2 = mkV2 (mkV "laisser") | I.permettre_V2 ;
oper OP_block_V2 : V2 = mkV2 (mkV "boucher") | mkV2 (mkV "contrer") | mkV2 (mkV "bloquer") ; -- tocheck
oper OP_bring_V2 : V2 = mkV2 "apporter" ;
oper OP_catch_V2 : V2 = mkV2 (mkV "attraper") ; -- tocheck
oper OP_choose_V2 : V2 = mkV2 (mkV "choisir") | mkV2 (mkV "sélectionner") | mkV2 (mkV I.élire_V2) ;
oper OP_cover_V2 : V2 = mkV2 (mkV I.couvrir_V2) ;
oper OP_explain_V2 : V2 = mkV2 (mkV "expliquer") ;
oper OP_free_V2 : V2 = variants {} ; -- mkV2V (mkV "libérer") ; -- tocheck
oper OP_frighten_V2 : V2 = mkV2 (mkV "effrayer") ; -- tocheck
oper OP_get_V2 : V2 = I.recevoir_V2 ;
oper OP_hand_V2 : V2 = mkV2 (mkV "donner") ; -- tocheck
oper OP_hate_V2 : V2 = L.hate_V2 ;
oper OP_invite_V2 : V2 = variants {} ; -- mkV2V (mkV "inviter") ; -- tocheck
oper OP_kiss_V2 : V2 = mkV2 (mkV "embrasser") | mkV2 (reflV (mkV "embrasser")) | mkV2 (mkV "effleurer") ; -- tocheck
oper OP_mark_V2 : V2 = variants {} ; -- mkV3 (mkV "tacher") | mkV3 (mkV "corriger") | mkV3 (mkV "marquer") | mkV3 (mkV "noter") ; -- tocheck
oper OP_match_V2 : V2 = mkV2 (mkV "combiner") | mkV2 (mkV "concorder") ; -- tocheck
oper OP_offer_V2 : V2 = I.offrir_V2 ;
oper OP_own_V2 : V2 = mkV2 (mkV "posséder") ; -- tocheck
oper OP_plant_V2 : V2 = mkV2 (mkV "planter") ; -- tocheck
oper OP_put_V2 : V2 = L.put_V2 ;
oper OP_seek_V2 : V2 = L.seek_V2 ;
oper OP_set_V2 : V2 = mkV2 (mkV I.mettre_V2) ;
oper OP_shrug_V2 : V2 = variants {} ; --
oper OP_shut_V2 : V2 = mkV2 (mkV "fermer") ; -- tocheck
oper OP_take_V2 : V2 = I.prendre_V2 ;
oper OP_urge_V2 : V2 = variants {} ; -- mkV2V (mkV "insister") | mkV2V (mkV "pousser") | mkV2V (mkV "inciter") | mkV2V (mkV "provoquer") ; -- tocheck
}
